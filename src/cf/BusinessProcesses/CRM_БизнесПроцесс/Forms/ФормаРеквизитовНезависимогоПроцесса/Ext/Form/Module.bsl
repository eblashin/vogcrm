
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Создан новый партнер" Тогда
		Если ТипЗнч(Источник) = Тип("УправляемаяФорма") Тогда
			Попытка
				бФормаОткрытаИзФормыЭтогоСобытия = (Источник.ВладелецФормы = ЭтотОбъект);
			Исключение
				бФормаОткрытаИзФормыЭтогоСобытия = Ложь;
			КонецПопытки;
		Иначе
			бФормаОткрытаИзФормыЭтогоСобытия = Ложь;
		КонецЕсли;
		Если бФормаОткрытаИзФормыЭтогоСобытия Тогда
			Если ТипЗнч(Параметр) = Тип("СправочникСсылка.Партнеры") Тогда
				ОбновитьПартнераБизнесПроцесса(БизнесПроцессСсылка, Параметр);
				Оповестить("ИзменениеПартнераВБизнесПроцессе", БизнесПроцессСсылка);
			ИначеЕсли ТипЗнч(Параметр) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				ОбновитьПартнераБизнесПроцесса(БизнесПроцессСсылка, CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(Параметр, "Владелец"));
				Оповестить("ИзменениеПартнераВБизнесПроцессе", БизнесПроцессСсылка);
			КонецЕсли;
			Партнер = CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(БизнесПроцессСсылка, "Партнер");
			ВидимостьГрупп();	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьПартнераБизнесПроцесса(БизнесПроцессСсылка, Партнер)
	БПОбъект = БизнесПроцессСсылка.ПолучитьОбъект();
	БПОбъект.Партнер = Партнер;
	БПОбъект.Записать();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	БизнесПроцессСсылка = Параметры.БизнесПроцессСсылка;
	Автор = Параметры.Автор;
	Важность = Параметры.Важность;
	Дата = Параметры.Дата;
	ДатаЗавершения = Параметры.ДатаЗавершения;
	КартаМаршрута = Параметры.КартаМаршрута;
	КонтактноеЛицо = Параметры.КонтактноеЛицо;
	Наименование = Параметры.Наименование;
	Номер = Параметры.Номер;
	Описание = Параметры.Описание;
	Организация = Параметры.Организация;
	Ответственный = Параметры.Ответственный;
	Партнер = Параметры.Партнер;
	ПланируемаяДатаЗавершения = Параметры.ПланируемаяДатаЗавершения;
	Подразделение = Параметры.Подразделение;
	Проект = Параметры.Проект;
	Сумма = Параметры.Сумма;
	Предмет = Параметры.Предмет;
	
	ЗадачаВремяОкончание = Параметры.ЗадачаВремяОкончание;
	ЗадачаДатаОкончание = Параметры.ЗадачаДатаОкончание;
	CRM_ОсновнаяКатегория = Параметры.CRM_ОсновнаяКатегория;
	Исполнитель = Параметры.Исполнитель;
	
	ВалютаДокумента = Строка(Константы.ВалютаУправленческогоУчета.Получить());
	
	Элементы.НадписьСостояниеБизнесПроцесса.Заголовок = Параметры.СостояниеБизнесПроцесса.СтрокаСостояния;
	Элементы.НадписьСостояниеБизнесПроцесса.Высота = Параметры.СостояниеБизнесПроцесса.Высота;
	
	ПредметПредставление 	= CRM_ОбщегоНазначенияСервер.ПолучитьПредставлениеПредметаДокумента(Предмет);
	Элементы.ПредметПредставление.Видимость = ЗначениеЗаполнено(Предмет);
	
	СписокКатегорий.ЗагрузитьЗначения(Параметры.МассивКатегорий);
	
	ОтрисоватьКатегорииНаФорме();
	
	ИмяТекущейГруппыСвернутьРазвернуть = "Информация";
	
	Элементы.ЗавершитьБизнесПроцессДосрочно.Видимость = КартаМаршрута.РазрешеноДосрочноеЗавершение;
	Элементы.ФормаПередвинутьЭтап.Видимость	= КартаМаршрута.РазрешитьПеремещатьТекущийЭтап;
	
	ВидимостьГрупп();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
		ДополнительныеПараметры.Вставить("Объект", БизнесПроцессСсылка);
		МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("CRM_УправлениеСвойствами");
		МодульУправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоПросмотр") Тогда
		ТолькоПросмотр = Параметры.ТолькоПросмотр;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВидимостьГрупп()
	Если ЗначениеЗаполнено(БизнесПроцессСсылка.Партнер) Тогда
		Элементы.ГруппаЗаголовокДанныеКлиента.Видимость = Истина;
		Элементы.ГруппаЗаголовокДанныеПотенциальногоКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеКлиента.Видимость = Истина;
		Элементы.СворачиваемаяГруппаДанныеПотенциальногоКлиента.Видимость = Ложь;
	ИначеЕсли ЗначениеЗаполнено(БизнесПроцессСсылка.ПотенциальныйКлиент) Тогда
		Элементы.ГруппаЗаголовокДанныеПотенциальногоКлиента.Видимость = Истина;
		Элементы.ГруппаЗаголовокДанныеКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеПотенциальногоКлиента.Видимость = Истина;
	Иначе
		Элементы.ГруппаЗаголовокДанныеПотенциальногоКлиента.Видимость = Ложь;
		Элементы.ГруппаЗаголовокДанныеКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеКлиента.Видимость = Ложь;
		Элементы.СворачиваемаяГруппаДанныеПотенциальногоКлиента.Видимость = Ложь;
	КонецЕсли;
	Элементы.ГруппаДатыВажность1.Доступность = БизнесПроцессСсылка.КартаМаршрута.РедактироватьСрокВыполненияЗадач;
КонецПроцедуры

&НаСервере
Функция ВернутьОсновноеКонтактноеЛицо(ВыбранныйПартнер)
	
	Возврат ВыбранныйПартнер.CRM_ОсновноеКонтактноеЛицо;
	
КонецФункции

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Партнер) Тогда
		КонтактноеЛицо = ВернутьОсновноеКонтактноеЛицо(Партнер);
	КонецЕсли;
	
	ИзмененБизнесПроцесс = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланируемаяДатаЗавершенияПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ПланируемаяДатаЗавершения) Тогда
		Если НачалоДня(ПланируемаяДатаЗавершения) < НачалоДня(Дата) Тогда
			СтрокаСообщения = Нстр("ru = 'Планируемая дата завершения не может быть меньше даты создания, она будет скорректирована.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения,,"ПланируемаяДатаЗавершения");
			ПланируемаяДатаЗавершения = Дата;
		КонецЕсли;
	КонецЕсли;
	
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтветственногоПодразделение()
	
	Ответственный = БизнесПроцессСсылка.Ответственный;
	Подразделение = БизнесПроцессСсылка.Подразделение;
	
КонецПроцедуры

&НаКлиенте
Процедура Перенаправить(Команда)
	
	МассивЗадач = Новый Массив;
	МассивЗадач.Добавить(БизнесПроцессСсылка);
	CRM_БизнесПроцессыИЗадачиКлиент.ОбработкаКомандыПеренаправить(МассивЗадач, Новый Структура("Источник",ЭтотОбъект));
	
	ОбновитьОтветственногоПодразделение();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВыбратьГруппуНажатие(Элемент)
	
	МассивКатегорий = СписокКатегорий.ВыгрузитьЗначения();
	
	СтруктураОписаниеКатегорий = Новый Структура("МассивКатегорий,ОсновнаяКатегория,Владелец", МассивКатегорий, CRM_ОсновнаяКатегория, Исполнитель);
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияВыбратьГруппуНажатиеЗавершение", ЭтотОбъект);
	ОткрытьФорму("Задача.ЗадачаИсполнителя.Форма.CRM_ФормаВыборКатегорий", Новый Структура("ОписаниеКатегорий", СтруктураОписаниеКатегорий),
		ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ДекорацияВыбратьГруппуНажатиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Модифицированность = Истина;
		ИзмененаЗадача = Истина;
		
		СписокКатегорий.Очистить();
		Для Каждого СтрокаКатегория Из Результат.СписокВыбранныеКатегории Цикл
			СписокКатегорий.Добавить(СтрокаКатегория.Значение);
		КонецЦикла;
		
		CRM_ОсновнаяКатегория = Результат.ОсновнаяКатегория;
		
		ОтрисоватьКатегорииНаФорме();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтрисоватьКатегорииНаФорме()
	ПрефиксРеквизита = "ПолеВводаКатегория";
	МассивУдаляемыхРеквизитов = Новый Массив();
	нИндекс = 1;
	Пока Истина Цикл
		ИмяРеквизита = ПрефиксРеквизита + Формат(нИндекс, "ЧДЦ=0; ЧН=0; ЧГ=");
		Попытка
			ТестовыйРеквизит = ЭтотОбъект[ИмяРеквизита];
			МассивУдаляемыхРеквизитов.Добавить(ИмяРеквизита);
			нИндекс = нИндекс + 1;
		Исключение
			Прервать;
		КонецПопытки;
	КонецЦикла;
	
	МассивКатегорий = Новый Массив();
	Если ЗначениеЗаполнено(CRM_ОсновнаяКатегория) Тогда
		МассивКатегорий.Добавить(CRM_ОсновнаяКатегория);
	КонецЕсли;
	
	Для Каждого СтрокаКатегория Из СписокКатегорий Цикл
		Если МассивКатегорий.Найти(СтрокаКатегория.Значение) = Неопределено Тогда
			МассивКатегорий.Добавить(СтрокаКатегория.Значение);
		КонецЕсли;
	КонецЦикла;
	
	МассивДобавляемыхРеквизитов = Новый Массив();
	нИндекс = 1;
	ОписаниеТиповКатегория = Новый ОписаниеТипов("СправочникСсылка.CRM_КатегорииПользователей");
	Для Каждого ДобавляемаяКатегория Из МассивКатегорий Цикл
		ИмяРеквизита = ПрефиксРеквизита + Формат(нИндекс, "ЧДЦ=0; ЧН=0; ЧГ=");
		
		РеквизитКатегория = Новый РеквизитФормы(ИмяРеквизита, ОписаниеТиповКатегория);
		МассивДобавляемыхРеквизитов.Добавить(РеквизитКатегория);
		
		нИндекс = нИндекс + 1;
	КонецЦикла;
	
	Для Каждого УдаляемыйЭлемент Из МассивУдаляемыхРеквизитов Цикл
		Попытка Элементы.Удалить(Элементы[УдаляемыйЭлемент]);
		Исключение КонецПопытки;
	КонецЦикла;
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, МассивУдаляемыхРеквизитов);
	
	нИндекс = 1;
	Для Каждого ДобавляемаяКатегория Из МассивКатегорий Цикл
		ИмяРеквизита = ПрефиксРеквизита + Формат(нИндекс, "ЧДЦ=0; ЧН=0; ЧГ=");
		
		ЭтотОбъект[ИмяРеквизита] = ДобавляемаяКатегория;
		
		ЭлементКатегория = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Элементы.ГруппаКатегории);
		ЭлементКатегория.Вид					= ВидПоляФормы.ПолеВвода;
		ЭлементКатегория.ПоложениеЗаголовка		= ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементКатегория.ПутьКДанным			= ИмяРеквизита;
		ЭлементКатегория.РедактированиеТекста	= Ложь;
		ЭлементКатегория.КнопкаСпискаВыбора		= Ложь;
		ЭлементКатегория.КнопкаВыбора			= Ложь;
		ЭлементКатегория.КнопкаОчистки			= Ложь;
		ЭлементКатегория.КнопкаРегулирования	= Ложь;
		ЭлементКатегория.КнопкаОткрытия			= Ложь;
		ЭлементКатегория.КнопкаВыпадающегоСписка= Ложь;
		ЭлементКатегория.БыстрыйВыбор = Ложь;
		ЭлементКатегория.ИсторияВыбораПриВводе = ИсторияВыбораПриВводе.НеИспользовать;
		ЭлементКатегория.ВыбиратьТип = Ложь;
		ЭлементКатегория.КнопкаСоздания = Ложь;
				
		ЦветКатегории = Новый Цвет(ДобавляемаяКатегория.ЦветКрасный, ДобавляемаяКатегория.ЦветЗеленый, ДобавляемаяКатегория.ЦветСиний);
		ЭлементКатегория.ЦветФона = ЦветКатегории;
		ЭлементКатегория.ЦветТекста = CRM_ОбщегоНазначенияКлиентСервер.ПолучитьКонтрастныйЦвет(ЦветКатегории);
		
		Если нИндекс = 1 Тогда
			ЭлементКатегория.Шрифт = Новый Шрифт(ЭлементКатегория.Шрифт,,, Истина);
		КонецЕсли;
		
		ЭлементКатегория.УстановитьДействие("НачалоВыбора",	"Подключаемый_ПолеВводаИгнорироватьОбработчикНачалоВыбора");
		ЭлементКатегория.УстановитьДействие("Очистка",		"Подключаемый_ПолеВводаИгнорироватьОбработчикОчистка");
		ЭлементКатегория.УстановитьДействие("Открытие",		"Подключаемый_ПолеВводаИгнорироватьОбработчикОткрытие");
		
		нИндекс = нИндекс + 1;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеВводаИгнорироватьОбработчикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеВводаИгнорироватьОбработчикОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПолеВводаИгнорироватьОбработчикОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Функция ПодготовитьСтруктуруДанных()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Важность", Важность);
	СтруктураДанных.Вставить("КонтактноеЛицо", КонтактноеЛицо);
	СтруктураДанных.Вставить("Наименование", Наименование);
	СтруктураДанных.Вставить("Описание", Описание);
	СтруктураДанных.Вставить("Организация", Организация);
	СтруктураДанных.Вставить("Партнер", Партнер);
	СтруктураДанных.Вставить("ПланируемаяДатаЗавершения", ПланируемаяДатаЗавершения);
	СтруктураДанных.Вставить("Подразделение", Подразделение);
	СтруктураДанных.Вставить("Сумма", Сумма);
	СтруктураДанных.Вставить("ВремяОкончание", ЗадачаВремяОкончание);
	СтруктураДанных.Вставить("ДатаОкончание", ЗадачаДатаОкончание);
	СтруктураДанных.Вставить("МассивКатегорий", СписокКатегорий.ВыгрузитьЗначения());
	СтруктураДанных.Вставить("CRM_ОсновнаяКатегория", CRM_ОсновнаяКатегория);
	СтруктураДанных.Вставить("ИзмененБизнесПроцесс", ИзмененБизнесПроцесс);
	СтруктураДанных.Вставить("ИзмененаЗадача", ИзмененаЗадача);
	
	Возврат СтруктураДанных;
	
КонецФункции

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Закрыть(ПодготовитьСтруктуруДанных());
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	
	Закрыть();
	
КонецПроцедуры


&НаКлиенте
Процедура КонтактноеЛицоПриИзменении(Элемент)
	
	ИзмененБизнесПроцесс = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	ИзмененБизнесПроцесс = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ВажностьПриИзменении(Элемент)
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры


&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ИзмененБизнесПроцесс = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ДатаОкончаниеПриИзменении(Элемент)
	ИзмененаЗадача = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ВремяОкончаниеПриИзменении(Элемент)
	ИзмененаЗадача = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Элемент", Элемент);
	Дополнительно.Вставить("Данные", "ЗадачаВремяОкончание");
	Дополнительно.Вставить("ПриоритетДатыНачала", Ложь);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОповещенияВыбранногоВремени", ЭтотОбъект, Дополнительно);
	CRM_ОбщегоНазначенияКлиентСервер.ВыбратьВремяИзСписка(ЭтотОбъект, ЗадачаВремяОкончание, Элемент,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
// Процедура обработки выбора времени из списка.
//
Процедура ОбработкаОповещенияВыбранногоВремени(ВыбранноеВремя, Дополнительно) Экспорт
	Если ВыбранноеВремя <> Неопределено Тогда
		ЭтотОбъект[Дополнительно.Данные] = ВыбранноеВремя.Значение;
		ИзмененаЗадача = Истина;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СвернутьРазвернутьГруппу(Элемент)
	ИмяГруппыСвернутьРазвернуть = Элемент.Имя;
	ИмяГруппыСвернутьРазвернуть = СтрЗаменить(ИмяГруппыСвернутьРазвернуть, "ДекорацияОткрыть", "");
	ИмяГруппыСвернутьРазвернуть = СтрЗаменить(ИмяГруппыСвернутьРазвернуть, "ДекорацияЗакрыть", "");
	ИмяГруппыСвернутьРазвернуть = СтрЗаменить(ИмяГруппыСвернутьРазвернуть, "ЗаголовокГруппы", "");
	
	Если НЕ ИмяТекущейГруппыСвернутьРазвернуть = ИмяГруппыСвернутьРазвернуть
	И Элементы["ДекорацияЗакрыть" + ИмяТекущейГруппыСвернутьРазвернуть].Видимость Тогда
		ИзменитьСвернутостьГруппы(ИмяТекущейГруппыСвернутьРазвернуть);
	КонецЕсли;
	ИзменитьСвернутостьГруппы(ИмяГруппыСвернутьРазвернуть);
	ПодключитьОбработчикОжидания("УстановитьАктивностьПослеСворачиванияРазворачиванияГруппы",0.0001,Истина);
	
	ИмяТекущейГруппыСвернутьРазвернуть = ИмяГруппыСвернутьРазвернуть;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьСвернутостьГруппы(ИмяГруппы, Свернуть = Неопределено)
	Элементы["СворачиваемаяГруппа" + ИмяГруппы].Видимость = ?(Свернуть = Неопределено, Не Элементы["СворачиваемаяГруппа" + ИмяГруппы].Видимость, Не Свернуть);
	Элементы["ДекорацияОткрыть" + ИмяГруппы].Видимость = ?(Свернуть = Неопределено, Не Элементы["ДекорацияОткрыть" + ИмяГруппы].Видимость, Свернуть);
	Элементы["ДекорацияЗакрыть" + ИмяГруппы].Видимость = ?(Свернуть = Неопределено, Не Элементы["ДекорацияЗакрыть" + ИмяГруппы].Видимость, Не Свернуть);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьАктивностьПослеСворачиванияРазворачиванияГруппы()
	Если Элементы["ДекорацияОткрыть" + ИмяГруппыСвернутьРазвернуть].Видимость Тогда
		ТекущийЭлемент = Элементы["ДекорацияОткрыть" + ИмяГруппыСвернутьРазвернуть];
	Иначе
		ТекущийЭлемент = Элементы["ДекорацияЗакрыть" + ИмяГруппыСвернутьРазвернуть];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредметПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Предмет) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.Форма.CRM_ФормаДокумента", 
			Новый Структура("Ключ, ОткрытиеИзФормы", Предмет, Истина),ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.Независимый);
		
	ИначеЕсли ТипЗнч(Предмет) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		ОткрытьФорму("Документ.ЭлектронноеПисьмоВходящее.Форма.CRM_ФормаДокумента", 
			Новый Структура("Ключ, ОткрытиеИзФормы", Предмет, Истина),ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.Независимый);
	Иначе
		ПоказатьЗначение(, Предмет);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьБизнесПроцессДосрочно(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗавершитьБизнесПроцессДосрочноЗавершение", ЭтотОбъект);
	ОткрытьФорму("БизнесПроцесс.CRM_БизнесПроцесс.Форма.ФормаДосрочногоЗавершения",,ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьБизнесПроцессДосрочноЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		СтруктураДанных = ПодготовитьСтруктуруДанных();
		СтруктураДанных.Вставить("ПараметрыДосрочногоЗавершения", Результат);
		Закрыть(СтруктураДанных);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик команды формы "СоздатьНовогоКлиента".
//
Процедура СоздатьНовогоКлиента(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПотенциальныйКлиент", CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(БизнесПроцессСсылка, "ПотенциальныйКлиент"));
	CRM_КлиентыКлиент.ОткрытьФормуБыстрогоВводаПартнера(ЭтотОбъект, ПараметрыФормы);
КонецПроцедуры // СоздатьНовогоКлиента()

&НаКлиенте
Процедура ПередвинутьЭтап(Команда)
	
	ПараметрыФормы = Новый Структура("Ключ", БизнесПроцессСсылка);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПередвинутьЭтапЗавершения", ЭтотОбъект);
	ОткрытьФорму("БизнесПроцесс.CRM_БизнесПроцесс.Форма.ФормаПеремещенияЭтапа",ПараметрыФормы,ЭтотОбъект,,,,ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередвинутьЭтапЗавершения(Результат, ДополнительныеПараметры) Экспорт
	
	//ЗаполнитьТаблицуИсполнителей();
	//ПолучитьЗадачуБПДляИстории();	
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	CRM_УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	CRM_УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// Обработчик механизма "Свойства"
	CRM_УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
КонецПроцедуры
