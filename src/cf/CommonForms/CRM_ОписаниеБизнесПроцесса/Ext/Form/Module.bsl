
&НаСервере
Функция ВернутьИмяРеквизитаОснования(Тип)
	
	Если Метаданные.КритерииОтбора.СвязанныеДокументы.Тип.СодержитТип(Тип) Тогда
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(Тип);
		
		Для Каждого Реквизит Из МетаданныеДокумента.Реквизиты Цикл
			Если Метаданные.КритерииОтбора.СвязанныеДокументы.Состав.Содержит(Реквизит) Тогда
				Возврат Реквизит.Имя;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура ДобавитьСтрокуВДеревоДокументов(СтрокиДереваДокументов, СодержаниеСтроки, ЦветТекстаСтроки = Неопределено, Текст, Содержание);
	
	Если ЦветТекстаСтроки = Неопределено Тогда
		ЦветТекстаСтроки = Новый Цвет(100,100,100);
	КонецЕсли;
	
	КоллекцияСтрок = СтрокиДереваДокументов.ПолучитьЭлементы();
	
	НоваяСтрокаДерева                       = КоллекцияСтрок.Добавить(); 
	НоваяСтрокаДерева.ДокументПредставление	= СодержаниеСтроки;
	НоваяСтрокаДерева.ЦветТекстаСтроки      = ЦветТекстаСтроки;
	НоваяСтрокаДерева.Текст					= Текст;
	НоваяСтрокаДерева.Содержание			= Содержание;
	
КонецПроцедуры// ДобавитьСтрокуВДеревоДокументов()

&НаСервере
Процедура ДобавитьОписаниеКоммерческоеПредложение(СтрокаДерева,ТекущийДокумент)
	
	СтрокаДата = "Дата: "+Формат(ТекущийДокумент.Дата,"ДФ=""дд ММММ гггг 'г.'""");
	Текст		= "Дата: ";
	Содержание	= Формат(ТекущийДокумент.Дата,"ДФ=""дд ММММ гггг 'г.'""");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаДата, мЦветСтрок, Текст, Содержание);
	
	СтрокаДата = "Дата принятия решения: "+Формат(ТекущийДокумент.CRM_ДатаПринятияРешения,"ДФ=""дд ММММ гггг 'г.'""");
	Текст		= "Дата принятия решения: ";
	Содержание	= Формат(ТекущийДокумент.CRM_ДатаПринятияРешения,"ДФ=""дд ММММ гггг 'г.'""");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаДата, мЦветСтрок, Текст, Содержание);
	
	
	СтрокаОтветственный = "Ответственный: "+ ТекущийДокумент.Менеджер;
	Текст		= "Ответственный: ";
	Содержание	= ТекущийДокумент.Менеджер;
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаОтветственный, мЦветСтрок, Текст, Содержание);
	
	СтрокаСостояние = "Статус: " + ТекущийДокумент.Статус;
	Текст		= "Статус: ";
	Содержание	= ТекущийДокумент.Статус;
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаСостояние, мЦветСтрок, Текст, Содержание);
	
	СтрокаКомментарий = "КОММЕНТАРИЙ: " + ?(Не ПустаяСтрока(ТекущийДокумент.Комментарий),ТекущийДокумент.Комментарий,"");
	Текст		= "Комментарий: ";
	Содержание	= ?(Не ПустаяСтрока(ТекущийДокумент.Комментарий),ТекущийДокумент.Комментарий,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаКомментарий, мЦветСтрокСодержания, Текст, Содержание);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОписаниеЗадача(СтрокаДерева,ТекущаяЗадача)
	СтрокаТочка = "Точка маршрута: "+ ТекущаяЗадача.CRM_ТочкаМаршрута;
	Текст		= "Точка маршрута: ";
	Содержание	= ТекущаяЗадача.CRM_ТочкаМаршрута;
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаТочка, мЦветСтрок, Текст, Содержание);
	
	СтрокаСожержание = "СОДЕРЖАНИЕ:" + ?(Не ПустаяСтрока(ТекущаяЗадача.Описание),ТекущаяЗадача.Описание,"");
	Текст		= "Содержание: ";
	Содержание	= ?(Не ПустаяСтрока(ТекущаяЗадача.Описание),ТекущаяЗадача.Описание,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаСожержание, мЦветСтрокСодержания, Текст, Содержание);
	
	СтрокаРезультат = "РЕЗУЛЬТАТ: " + ?(Не ПустаяСтрока(ТекущаяЗадача.РезультатВыполнения),ТекущаяЗадача.РезультатВыполнения,"");
	Текст		= "Результат: ";
	Содержание	= ?(Не ПустаяСтрока(ТекущаяЗадача.РезультатВыполнения),ТекущаяЗадача.РезультатВыполнения,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаРезультат, мЦветСтрокСодержания, Текст, Содержание);
		
	Если ТекущаяЗадача.Исполнитель <> Справочники.Пользователи.ПустаяСсылка() Тогда
		СтрокаИсполнитель = "Исполнитель: "+Строка(ТекущаяЗадача.Исполнитель);
		Содержание		  = Строка(ТекущаяЗадача.Исполнитель);
	ИначеЕсли ТекущаяЗадача.РольИсполнителя <> Справочники.РолиИсполнителей.ПустаяСсылка() Тогда
		СтрокаИсполнитель = "Исполнитель: "+Строка(ТекущаяЗадача.РольИсполнителя);
		Содержание		  = Строка(ТекущаяЗадача.РольИсполнителя);
	КонецЕсли;
	Текст = "Исполнитель :";
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаИсполнитель, мЦветСтрок, Текст, Содержание);
	// Точка маршрута, содержание, результат, исполнитель.
КонецПроцедуры

&НаСервере
Процедура ДобавитьОписаниеДокумент(СтрокаДерева,ТекущийДокумент)
	
	МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипЗнч(ТекущийДокумент));
	Если МетаданныеДокумента.Реквизиты.Найти("Описание")<> Неопределено Тогда
		Если Не ПустаяСтрока(ТекущийДокумент.Описание) Тогда
			// ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, "ОПИСАНИЕ:", мЦветСтрок);
			Текст		= "Описание : ";
			Содержание	= ТекущийДокумент.Описание;
			ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
		КонецЕсли;
	КонецЕсли;
	
	Если МетаданныеДокумента.Реквизиты.Найти("Комментарий")<> Неопределено Тогда
		Если Не ПустаяСтрока(ТекущийДокумент.Комментарий) Тогда
			// ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, "КОММЕНТАРИЙ:", мЦветСтрок);
			Текст		= "Комментарий : ";
			Содержание	= ТекущийДокумент.Комментарий;
			ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
		КонецЕсли;
	КонецЕсли;
	
	// Автор, ответственный события.
	
	СтрокаАвторОтветственный = "";
	Если МетаданныеДокумента.Реквизиты.Найти("Автор")<> Неопределено Тогда
		Текст		= "Автор : ";
		Содержание	= ?(ЗначениеЗаполнено(ТекущийДокумент.Автор),ТекущийДокумент.Автор,"");
		ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрок, Текст, Содержание);
	КонецЕсли;
	
	Если МетаданныеДокумента.Реквизиты.Найти("Ответственный")<> Неопределено Тогда
		Текст		= "Ответственный: ";
		Содержание	= ?(ЗначениеЗаполнено(ТекущийДокумент.Ответственный),ТекущийДокумент.Ответственный,"");
		ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрок, Текст, Содержание);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОписаниеЭлектронноеПисьмоВходящее(СтрокаДерева,ЭлектронноеПисьмо)
	
	// Тема, содержание и результат события - обязательные поля.
	Текст		= "Тема: ";
	Содержание	= ?(Не ПустаяСтрока(ЭлектронноеПисьмо.Тема),ЭлектронноеПисьмо.Тема,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
	
	Текст		= "Содержание: ";
	//Содержание	= ?(Не ПустаяСтрока(ЭлектронноеПисьмо.ТекстHTML),УправлениеЭлектроннойПочтой.ПолучитьПростойТекстИзHTML(ЭлектронноеПисьмо.ТекстHTML),"");
	Содержание	= ?(Не ПустаяСтрока(ЭлектронноеПисьмо.Текст),ЭлектронноеПисьмо.Текст,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
	
	Текст		= "Комментарий: ";
	Содержание	= ?(Не ПустаяСтрока(ЭлектронноеПисьмо.Комментарий),ЭлектронноеПисьмо.Комментарий,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, "Комментарий: " + Содержание, мЦветСтрокСодержания, Текст, Содержание);

	
	Текст		= "Ответственный: ";
	Содержание	= ?(ЗначениеЗаполнено(ЭлектронноеПисьмо.Ответственный),ЭлектронноеПисьмо.Ответственный,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, "Ответственный: " + Содержание, мЦветСтрок, Текст, Содержание);
	
	//// файлы
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//               |	ХранилищеДополнительнойИнформации.ИмяФайла
	//               |ИЗ
	//               |	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
	//               |ГДЕ
	//               |	ХранилищеДополнительнойИнформации.Объект = &Объект";
	//			   
	//Запрос.УстановитьПараметр("Объект", ЭлектронноеПисьмо);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//СтрокаФайлов = "";
	//Пока Выборка.Следующий() Цикл
	//	Если Не ПустаяСтрока(СтрокаФайлов) Тогда
	//		СтрокаФайлов = СтрокаФайлов + ", ";
	//	КонецЕсли;
	//	СтрокаФайлов = СтрокаФайлов + Выборка.ИмяФайла;
	//КонецЦикла;
	//
	//Если Не ПустаяСтрока(СтрокаФайлов) Тогда
	//	Текст		= "Вложения: ";
	//	Содержание	= СтрокаФайлов;
	//	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаФайлов, мЦветСтрок, Текст, Содержание);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОписаниеЭлектронноеПисьмоИсходящее(СтрокаДерева,ЭлектронноеПисьмо)
	
	// Тема, содержание и результат события - обязательные поля.
	Текст		= "Тема: ";
	Содержание	= ?(Не ПустаяСтрока(ЭлектронноеПисьмо.Тема),ЭлектронноеПисьмо.Тема,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
	
	Текст		= "Содержание: ";
	//Содержание	= ?(Не ПустаяСтрока(ЭлектронноеПисьмо.ТекстHTML),УправлениеЭлектроннойПочтой.ПолучитьПростойТекстИзHTML(ЭлектронноеПисьмо.ТекстHTML),"");
	Содержание	= ?(Не ПустаяСтрока(ЭлектронноеПисьмо.Текст),ЭлектронноеПисьмо.Текст,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
	
	Текст		= "Комментарий: ";
	Содержание	= ?(Не ПустаяСтрока(ЭлектронноеПисьмо.Комментарий),ЭлектронноеПисьмо.Комментарий,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, "Комментарий: " + Содержание, мЦветСтрокСодержания, Текст, Содержание);

	
	Текст		= "Ответственный: ";
	Содержание	= ?(ЗначениеЗаполнено(ЭлектронноеПисьмо.Ответственный),ЭлектронноеПисьмо.Ответственный,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, "Ответственный: " + Содержание, мЦветСтрок, Текст, Содержание);
	
	//// файлы
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//               |	ХранилищеДополнительнойИнформации.ИмяФайла
	//               |ИЗ
	//               |	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
	//               |ГДЕ
	//               |	ХранилищеДополнительнойИнформации.Объект = &Объект";
	//			   
	//Запрос.УстановитьПараметр("Объект", ЭлектронноеПисьмо);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//СтрокаФайлов = "";
	//Пока Выборка.Следующий() Цикл
	//	Если Не ПустаяСтрока(СтрокаФайлов) Тогда
	//		СтрокаФайлов = СтрокаФайлов + ", ";
	//	КонецЕсли;
	//	СтрокаФайлов = СтрокаФайлов + Выборка.ИмяФайла;
	//КонецЦикла;
	//
	//Если Не ПустаяСтрока(СтрокаФайлов) Тогда
	//	Текст		= "Вложения: ";
	//	Содержание	= СтрокаФайлов;
	//	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаФайлов, мЦветСтрок, Текст, Содержание);
	//КонецЕсли;
	
КонецПроцедуры

Процедура ДобавтьОписаниеСобытия(СтрокаДерева, Событие)
	
	// Группа, вид и тип  события, приоритет события.
	Если Событие.ВходящееИсходящее = Перечисления.CRM_ВходящееИсходящееСобытие.Входящее Тогда
		СтрокаТипа = "входящ";
	Иначе
		СтрокаТипа = "исходящ";
	КонецЕсли;

	Если Событие.ВидСобытия = Перечисления.CRM_ВидыСобытий.ЛичнаяВстреча Тогда
		СтрокаТипа = СтрокаТипа + "ая";
	ИначеЕсли Событие.ВидСобытия = Перечисления.CRM_ВидыСобытий.ТелефонныйЗвонок Тогда
		СтрокаТипа = СтрокаТипа + "ий";
	Иначе
		СтрокаТипа = СтрокаТипа + "ее";
	КонецЕсли;
	
	Если Событие.Важность = Перечисления.ВариантыВажностиВзаимодействия.Высокая Тогда
		СтрокаПриоритет = "высокий";
	ИначеЕсли Событие.Важность = Перечисления.ВариантыВажностиВзаимодействия.Низкая Тогда
		СтрокаПриоритет = "низкий";
	Иначе
		СтрокаПриоритет = "средний";	
	КонецЕсли;	
		
	СтрокаВидТип = " ("+ Событие.ВидСобытия + ", " + СтрокаТипа + ")";

	//СодержаниеСтроки = Строка(Событие.ГруппаСобытия) + СтрокаВидТип + ", приоритет " + СтрокаПриоритет;
	//Текст		= "Группа/Тип/Приоритет: ";
	//Содержание	= СодержаниеСтроки;
	//ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СодержаниеСтроки, мЦветСтрок, Текст, Содержание);
	
	// Контрагент и контактное лицо события.
	
	Текст		= "Партнер: ";
	Содержание	= ?(ЗначениеЗаполнено(Событие.Партнер),Событие.Партнер,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрок, Текст, Содержание);
	
	Текст		= "Контактное лицо: ";
	Содержание	= ?(ЗначениеЗаполнено(Событие.КонтактноеЛицо),Событие.КонтактноеЛицо,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрок, Текст, Содержание);
	
	
	// начало и окончание события
	СтрокаНачалоОкончание = "";
	Если ЗначениеЗаполнено(Событие.Дата) Тогда
		Текст		= "Начало/окончание события: ";
		СтрокаНачалоОкончание = "С " + Событие.Дата;
		Если ЗначениеЗаполнено(Событие.ОкончаниеСобытия) Тогда
			СтрокаНачалоОкончание = СтрокаНачалоОкончание + " по " + Событие.ОкончаниеСобытия;
		КонецЕсли;
		Содержание = СтрокаНачалоОкончание;
		ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаНачалоОкончание, мЦветСтрок, Текст, Содержание);
	КонецЕсли;
	
	// Тема, содержание и результат события - обязательные поля.
	
	Текст		= "Тема: ";
	Содержание	= ?(Не ПустаяСтрока(Событие.Тема),Событие.Тема,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
	
	Текст		= "Описание: ";
	Содержание	= ?(Не ПустаяСтрока(Событие.Описание),Событие.Описание,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
	
	Текст		= "Результат: ";
	Содержание	= ?(Не ПустаяСтрока(Событие.Результат),Событие.Результат,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
	
	// Автор, ответственный события.
	Текст		= "Автор: ";
	Содержание	= ?(ЗначениеЗаполнено(Событие.Автор),Событие.Автор,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
	
	Текст		= "Ответственный: ";
	Содержание	= ?(ЗначениеЗаполнено(Событие.Ответственный),Событие.Ответственный,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
	
	//// файлы
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//               |	ХранилищеДополнительнойИнформации.ИмяФайла
	//               |ИЗ
	//               |	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
	//               |ГДЕ
	//               |	ХранилищеДополнительнойИнформации.Объект = &Объект";
	//			   
	//Запрос.УстановитьПараметр("Объект", Событие);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//СтрокаФайлов = "";
	//Пока Выборка.Следующий() Цикл
	//	Если Не ПустаяСтрока(СтрокаФайлов) Тогда
	//		СтрокаФайлов = СтрокаФайлов + ", ";
	//	КонецЕсли;
	//	СтрокаФайлов = СтрокаФайлов + Выборка.ИмяФайла;
	//КонецЦикла;
	//
	//Если Не ПустаяСтрока(СтрокаФайлов) Тогда
	//	Текст		= "Вложения: ";
	//	Содержание	= СтрокаФайлов;
	//	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаФайлов, мЦветСтрок, Текст, Содержание);
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьОписаниеБизнесПроцесса(СтрокаДерева, Основание)
	
	
	Если Основание.Завершен Тогда
		СтрокаФактическаяДата = Формат(Основание.ДатаЗавершения,"ДФ=""дд ММ гггг 'г.'""");
	Иначе
		СтрокаФактическаяДата = "";
	КонецЕсли;
	ПланДата = Формат(Основание.ПланируемаяДатаЗавершения,"ДФ=""дд ММ гггг 'г.'""");
	
	СтрокаДатыСтарта = "Дата старта: "+ Основание.Дата;
	Содержание		= Основание.Дата;
	
	Текст		= "Дата старта: ";
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаДатыСтарта, мЦветСтрок, Текст, Содержание);
	
	СтрокаПланДата = "Планируемая дата окончания: "+ ПланДата;
	Текст		= "Планируемая дата окончания: ";
	Содержание	= ПланДата;
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаПланДата, мЦветСтрок, Текст, Содержание);
	
	СтрокаФактДата = "Фактическая дата окончания: "+ СтрокаФактическаяДата;
	Текст		= "Фактическая дата окончания: ";
	Содержание	= СтрокаФактическаяДата;
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаФактДата, мЦветСтрок, Текст, Содержание);
	
	СтрокаВажность = "Важность: " + Основание.Важность;
	Текст		= "Важность: ";
	Содержание	= Основание.Важность;
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаВажность, мЦветСтрок, Текст, Содержание);
	
	СтрокаОтветственный = "Ответственный: " + Основание.Ответственный;
	Текст		= "Ответственный: ";
	Содержание	= Основание.Ответственный;
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаОтветственный, мЦветСтрок, Текст, Содержание);
	
	СтрокаКонтрагент = "Партнер: " + Основание.Партнер;
	Текст		= "Партнер: ";
	Содержание	= Основание.Партнер;
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаКонтрагент, мЦветСтрок, Текст, Содержание);
		
	СтрокаКЛ = "Контактное лицо: " + Основание.КонтактноеЛицо;
	Текст		= "Контактное лицо: ";
	Содержание	= Основание.КонтактноеЛицо;
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаКЛ, мЦветСтрок, Текст, Содержание);
	
	СтрокаСумма = "Сумма : " + Основание.Сумма ;
	Текст		= "Сумма: ";
	Содержание	= Строка(Основание.Сумма);
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, СтрокаСумма, мЦветСтрок, Текст, Содержание);
	
	Текст		= "Наименование: ";
	Содержание	= Основание.Наименование;
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);
	
	Текст		= "Содержание: ";
	Содержание	= ?(Не ПустаяСтрока(Основание.Описание),Основание.Описание,"");
	ДобавитьСтрокуВДеревоДокументов(СтрокаДерева, Текст + Содержание, мЦветСтрокСодержания, Текст, Содержание);

КонецПроцедуры

&НаСервере
Функция ПолучитьСписокДокументовПоКритериюОтбора(ЗначениеКритерияОтбора)
	
	МассивДокументов = Новый Массив;
	
	Если Метаданные.КритерииОтбора.СвязанныеДокументы.Тип.СодержитТип(ТипЗнч(ЗначениеКритерияОтбора))  Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СвязанныеДокументы.Ссылка
		|ИЗ
		|	КритерийОтбора.СвязанныеДокументы(&ЗначениеКритерияОтбора) КАК СвязанныеДокументы";
		
		Запрос.УстановитьПараметр("ЗначениеКритерияОтбора",ЗначениеКритерияОтбора);
		Таблица = Запрос.Выполнить().Выгрузить();
		
	Иначе
		
		Возврат МассивДокументов;
		
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл

		МетаданныеДокумента = СтрокаТаблицы.Ссылка.Метаданные();
		Если Не ПравоДоступа("Чтение", МетаданныеДокумента) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивДокументов.Добавить(СтрокаТаблицы.Ссылка);
	КонецЦикла;
	
	Возврат МассивДокументов;
	
КонецФункции

&НаСервере
Процедура ДобавитьОписание(НоваяПодСтрока,СсылкаНаОбъект)
	
	ТипЗначенияОбъекта =  ТипЗнч(СсылкаНаОбъект);
	
	Если ТипЗначенияОбъекта = ТИП("БизнесПроцессСсылка.CRM_БизнесПроцесс") Тогда
		ДобавитьОписаниеБизнесПроцесса(НоваяПодСтрока, СсылкаНаОбъект);
	ИначеЕсли ТипЗначенияОбъекта = ТИП("ДокументСсылка.УдалитьCRM_Событие") Тогда
		ДобавтьОписаниеСобытия(НоваяПодСтрока, СсылкаНаОбъект);
	ИначеЕсли ТипЗначенияОбъекта = ТИП("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		ДобавитьОписаниеЭлектронноеПисьмоВходящее(НоваяПодСтрока, СсылкаНаОбъект);
	ИначеЕсли ТипЗначенияОбъекта = ТИП("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		ДобавитьОписаниеЭлектронноеПисьмоИсходящее(НоваяПодСтрока, СсылкаНаОбъект);
	ИначеЕсли ТипЗначенияОбъекта = ТИП("ДокументСсылка.КоммерческоеПредложениеКлиенту") Тогда
		ДобавитьОписаниеКоммерческоеПредложение(НоваяПодСтрока, СсылкаНаОбъект);
	ИначеЕсли ОбщегоНазначения.ЭтоДокумент(СсылкаНаОбъект.Метаданные()) Тогда
		ДобавитьОписаниеДокумент(НоваяПодСтрока, СсылкаНаОбъект);
	ИначеЕсли ТипЗначенияОбъекта = ТИП("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		ДобавитьОписаниеЗадача(НоваяПодСтрока, СсылкаНаОбъект);
	КонецЕсли;

	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьДерево(СтрокаДерева, Основание)
	
	МассивДокументов = Новый Массив;
	
	Если ТипЗнч(Основание) = ТИП("БизнесПроцессСсылка.CRM_БизнесПроцесс") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	CRM_ОбъектыПоБизнесПроцессам.Объект КАК ссылка
		               |ИЗ
		               |	РегистрСведений.CRM_ОбъектыПоБизнесПроцессам КАК CRM_ОбъектыПоБизнесПроцессам
		               |ГДЕ
		               |	CRM_ОбъектыПоБизнесПроцессам.ТочкаМаршрута = НЕОПРЕДЕЛЕНО
		               |	И CRM_ОбъектыПоБизнесПроцессам.Задача = НЕОПРЕДЕЛЕНО
		               |	И CRM_ОбъектыПоБизнесПроцессам.БизнесПроцесс = &БизнесПроцесс
		               |	И CRM_ОбъектыПоБизнесПроцессам.Объект <> &ОснованиеБизнесПроцесса
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	CRM_Задача.Ссылка
		               |ИЗ
		               |	Задача.ЗадачаИсполнителя КАК CRM_Задача
		               |ГДЕ
		               |	CRM_Задача.БизнесПроцесс = &БизнесПроцесс
		               |АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.УстановитьПараметр("БизнесПроцесс",Основание);
		Запрос.УстановитьПараметр("ОснованиеБизнесПроцесса",Основание.Предмет);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивДокументов.Добавить(Выборка.Ссылка);
		КонецЦикла;	
		
	ИначеЕсли ТипЗнч(Основание) = ТИП("ЗадачаСсылка.ЗадачаИсполнителя") И НЕ Основание.CRM_ТочкаМаршрута.Вид = Перечисления.CRM_ВидыТочекМаршрута.ВложенныйБизнесПроцесс Тогда
		
		Если мДостраиватьПоСтруктуреПодчиненности Тогда
			МассивДокументов = ПолучитьСписокДокументовПоКритериюОтбора(Основание);
		Иначе
			МассивДокументов = Новый Массив;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	CRM_ОбъектыПоБизнесПроцессам.Объект КАК ссылка
		               |ИЗ
		               |	РегистрСведений.CRM_ОбъектыПоБизнесПроцессам КАК CRM_ОбъектыПоБизнесПроцессам
		               |ГДЕ
		               |	CRM_ОбъектыПоБизнесПроцессам.БизнесПроцесс = &БизнесПроцесс
		               |	И CRM_ОбъектыПоБизнесПроцессам.Задача = &Задача
		               |	И CRM_ОбъектыПоБизнесПроцессам.ТочкаМаршрута = &ТочкаМаршрута
		               |
		               |АВТОУПОРЯДОЧИВАНИЕ";
		
		Запрос.УстановитьПараметр("Задача",Основание);
		Запрос.УстановитьПараметр("ТочкаМаршрута",Основание.CRM_ТочкаМаршрута);
		Запрос.УстановитьПараметр("БизнесПроцесс",Основание.БизнесПроцесс);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивДокументов.Добавить(Выборка.Ссылка);
		КонецЦикла;
	ИначеЕсли мДостраиватьПоСтруктуреПодчиненности Тогда
		
		МассивДокументов = ПолучитьСписокДокументовПоКритериюОтбора(Основание);
		
	КонецЕсли;
	
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
		
	Для Каждого ЭлементМассива Из МассивДокументов Цикл
		
		Если ТипЗнч(ЭлементМассива) = ТИП("ЗадачаСсылка.ЗадачаИсполнителя")  Тогда
			
//ВЛОЖЕННЫЙ БП
			Если ЭлементМассива.CRM_ТочкаМаршрута.Вид = Перечисления.CRM_ВидыТочекМаршрута.ВложенныйБизнесПроцесс Тогда
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ВедущаяЗадача",ЭлементМассива);
				Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
				|	CRM_БизнесПроцесс.Ссылка
				|ИЗ
				|	БизнесПроцесс.CRM_БизнесПроцесс КАК CRM_БизнесПроцесс
				|ГДЕ
				|	CRM_БизнесПроцесс.ВедущаяЗадача = &ВедущаяЗадача";
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					ЭлементМассива  =  Выборка.Ссылка;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ДеревоЗнач = РеквизитФормыВЗначение("ДеревоПодчиненностиДокументов");
		МассивСтрок = ДеревоЗнач.Строки.НайтиСтроки(Новый Структура("СсылкаНаОбъект",ЭлементМассива),Истина);
		Если МассивСтрок.Количество() = 0 Тогда
			КоллекцияСтрок = СтрокаДерева.ПолучитьЭлементы();
			НоваяПодСтрока = КоллекцияСтрок.Добавить();
			НоваяПодСтрока.ДокументПредставление	= Строка(ЭлементМассива);
			НоваяПодСтрока.СсылкаНаОбъект			= ЭлементМассива;
			
			ДобавитьОписание(НоваяПодСтрока,ЭлементМассива);
			ЗаполнитьДерево(НоваяПодСтрока, ЭлементМассива);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСтрокуДерева(СтрокаДереваЗначений, мТабДок, Макет)
	
	Если СтрокаДереваЗначений.Строки.Количество() > 0 Тогда
		Если СтрокаДереваЗначений.Уровень() = 0 Тогда
			
			Если СтрокаДереваЗначений.СсылкаНаОбъект <> Неопределено Тогда
				Если ТипЗнч(СтрокаДереваЗначений.СсылкаНаОбъект) = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс") Тогда
					Если СтрокаДереваЗначений.СсылкаНаОбъект.Стартован Тогда
						Если НЕ СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления И НЕ СтрокаДереваЗначений.СсылкаНаОбъект.Завершен Тогда
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака5");
						ИначеЕсли СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления И НЕ СтрокаДереваЗначений.СсылкаНаОбъект.Завершен Тогда
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака6");
						ИначеЕсли НЕ СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления И СтрокаДереваЗначений.СсылкаНаОбъект.Завершен Тогда
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака4");
						ИначеЕсли СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления И СтрокаДереваЗначений.СсылкаНаОбъект.Завершен Тогда
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака9");
						КонецЕсли;
					ИначеЕсли НЕ СтрокаДереваЗначений.СсылкаНаОбъект.Стартован Тогда
						Если НЕ СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления Тогда
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака7");
						Иначе
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака8");
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли ОбщегоНазначения.ЭтоДокумент(СтрокаДереваЗначений.СсылкаНаОбъект.Метаданные()) Тогда
					Если СтрокаДереваЗначений.СсылкаНаОбъект.Проведен Тогда
						ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака1");
					ИначеЕсли СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления Тогда
						ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака3");
					Иначе
						ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака2");
					КонецЕсли;
				ИначеЕсли ТипЗнч(СтрокаДереваЗначений.СсылкаНаОбъект) = ТИП("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
					Если СтрокаДереваЗначений.СсылкаНаОбъект.Выполнена Тогда
						ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака11");
					Иначе
						ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Картинака10");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			//ОбластьМакета.Область().Отступ = СтрокаДереваЗначений.Уровень();
			//ОбластьМакета.Область().Отступ = 1;
			мТабДок.Вывести(ОбластьМакета);
			ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеБП|Область1");
			ОбластьМакета.Параметры.БизнесПроцесс	= СтрокаДереваЗначений.СсылкаНаОбъект;
			ОбластьМакета.Параметры.Расшифровка		= СтрокаДереваЗначений.СсылкаНаОбъект;
			мТабДок.Присоединить(ОбластьМакета);
		Иначе
			Если СтрокаДереваЗначений.СсылкаНаОбъект <> Неопределено Тогда
				Если ТипЗнч(СтрокаДереваЗначений.СсылкаНаОбъект) = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс") Тогда
					Если СтрокаДереваЗначений.СсылкаНаОбъект.Стартован Тогда
						Если НЕ СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления И НЕ СтрокаДереваЗначений.СсылкаНаОбъект.Завершен Тогда
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака5");
						ИначеЕсли СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления И НЕ СтрокаДереваЗначений.СсылкаНаОбъект.Завершен Тогда
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака6");
						ИначеЕсли НЕ СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления И СтрокаДереваЗначений.СсылкаНаОбъект.Завершен Тогда
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака4");
						ИначеЕсли СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления И СтрокаДереваЗначений.СсылкаНаОбъект.Завершен Тогда
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака9");
						КонецЕсли;
					ИначеЕсли НЕ СтрокаДереваЗначений.СсылкаНаОбъект.Стартован Тогда
						Если НЕ СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления Тогда
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака7");
						Иначе
							ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака8");
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли ОбщегоНазначения.ЭтоДокумент(СтрокаДереваЗначений.СсылкаНаОбъект.Метаданные()) Тогда
					Если СтрокаДереваЗначений.СсылкаНаОбъект.Проведен Тогда
						ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака1");
					ИначеЕсли СтрокаДереваЗначений.СсылкаНаОбъект.ПометкаУдаления Тогда
						ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака3");
					Иначе
						ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака2");
					КонецЕсли;
				ИначеЕсли ТипЗнч(СтрокаДереваЗначений.СсылкаНаОбъект) = ТИП("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
					Если СтрокаДереваЗначений.СсылкаНаОбъект.Выполнена Тогда
						ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака11");
					Иначе
						ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Картинака10");
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			//ОбластьМакета.Область().Отступ = СтрокаДереваЗначений.Уровень();
			//ОбластьМакета.Область().Отступ = 1;
			мТабДок.Вывести(ОбластьМакета);
			
			ОбластьМакета = Макет.ПолучитьОбласть("ПредставлениеТочкиМаршрута|Область1");
			ОбластьМакета.Область().Отступ = ?(СтрокаДереваЗначений.Уровень()=1,0,СтрокаДереваЗначений.Уровень()*2);
			// +++ Кулаков П.Л. 26.02.2020
			ЕстьВариантВыполненияСтрокой = ОбщегоНазначения.ЕстьРеквизитОбъекта("CRM_ВариантВыполненияСтрокой",СтрокаДереваЗначений.СсылкаНаОбъект.Метаданные());
			Если ЕстьВариантВыполненияСтрокой Тогда
				ОбластьМакета.Параметры.Точка	= Строка(СтрокаДереваЗначений.СсылкаНаОбъект) + ?(ЗначениеЗаполнено(СтрокаДереваЗначений.СсылкаНаОбъект.CRM_ВариантВыполненияСтрокой)," /" + СтрокаДереваЗначений.СсылкаНаОбъект.CRM_ВариантВыполненияСтрокой+"/","");
			Иначе
				ОбластьМакета.Параметры.Точка	= Строка(СтрокаДереваЗначений.СсылкаНаОбъект);
			КонецЕсли;
			// --- Кулаков П.Л.
			ОбластьМакета.Параметры.Расшифровка	= СтрокаДереваЗначений.СсылкаНаОбъект;
			мТабДок.Присоединить(ОбластьМакета);
		КонецЕсли;
		мТабДок.НачатьГруппуСтрок(,?(СтрокаДереваЗначений.Уровень() <= 2, Истина, Ложь));
		Для Каждого СтрокаСтроки Из СтрокаДереваЗначений.Строки Цикл
			
			ВывестиСтрокуДерева(СтрокаСтроки, мТабДок, Макет);
		КонецЦикла;
		мТабДок.ЗакончитьГруппуСтрок();
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|БезКартинки");
		//ОбластьМакета.Область().Отступ = СтрокаДереваЗначений.Уровень();
		//ОбластьМакета.Область().Отступ = 1;
		мТабДок.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("Строка|Область1");
		ОбластьМакета.Область().Отступ = ?(СтрокаДереваЗначений.Уровень()=1,0,СтрокаДереваЗначений.Уровень()*2);
		ОбластьМакета.Параметры.Текст		= СтрокаДереваЗначений.Текст;
		ОбластьМакета.Параметры.Содержание	= СтрокаДереваЗначений.Содержание;
		мТабДок.Присоединить(ОбластьМакета);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
	
	// ++ VOG Ульянов И.В. 24.10.2019 bugs 763
	УстановитьПривилегированныйРежим(Истина);
	// -- VOG Ульянов И.В. 24.10.2019 bugs 763
	
	КоллекцияСтрок = ДеревоПодчиненностиДокументов.ПолучитьЭлементы();
	КоллекцияСтрок.Очистить();
	
	ИмяРеквизитаОснования	= ВернутьИмяРеквизитаОснования(ТипЗнч(ДокументОснование));
	СсылкаНаОснование		= Неопределено;
	
	Если НЕ ИмяРеквизитаОснования = Неопределено И ЗначениеЗаполнено(ДокументОснование[ИмяРеквизитаОснования]) Тогда
		//СсылкаНаОснование	= Объект[ИмяРеквизитаОснования];
	КонецЕсли;
	
	НоваяСтрока = КоллекцияСтрок.Добавить();
	НоваяСтрока.СсылкаНаОбъект = ДокументОснование;
	ДобавитьОписаниеБизнесПроцесса(НоваяСтрока, ДокументОснование);
	
	ЗаполнитьДерево(НоваяСтрока, ДокументОснование);
	
	ТабличныйДокумент.Очистить();
	
	ТабличныйДокумент.ОтображатьГруппировки = Истина;
	
	Макет = ПолучитьОбщийМакет("CRM_ОписаниеБизнесПроцесса");
	
	ДеревоЗнач = РеквизитФормыВЗначение("ДеревоПодчиненностиДокументов");
	
	Для Каждого СтрокаДЗ Из ДеревоЗнач.Строки Цикл
		ВывестиСтрокуДерева(СтрокаДЗ, ТабличныйДокумент, Макет);
	КонецЦикла;
	ТабличныйДокумент.ПоказатьУровеньГруппировокСтрок(2);
	
	// ++ VOG Ульянов И.В. 24.10.2019 bugs 763
	УстановитьПривилегированныйРежим(Ложь);
	// -- VOG Ульянов И.В. 24.10.2019 bugs 763
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ОбъектОтбора", ДокументОснование);
	
	Элементы.ФормаПодробно.Пометка			= Истина;
	мДостраиватьПоСтруктуреПодчиненности	= Истина;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		СформироватьОтчетНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	СформироватьОтчетНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктураПодчиненности(Команда)
	
	Если Элементы.ТабличныйДокумент.ТекущаяОбласть.Расшифровка <> Неопределено Тогда
		Расшифровка = Элементы.ТабличныйДокумент.ТекущаяОбласть.Расшифровка;
	Иначе
		Расшифровка = ДокументОснование;
	КонецЕсли;
	ОткрытьФорму("ОбщаяФорма.CRM_СтруктураПодчиненности",Новый Структура("ОбъектОтбора", Расшифровка),
		ЭтотОбъект,
		КлючУникальности,
		ВариантОткрытияОкна.ОтдельноеОкно);
			
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если ТипЗнч(Область.Расшифровка) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.Форма.CRM_ФормаДокумента", 
			Новый Структура("Ключ, ОткрытиеИзФормы", Область.Расшифровка, Истина),ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.Независимый);
			
	ИначеЕсли ТипЗнч(Область.Расшифровка) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда		
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Документ.ЭлектронноеПисьмоВходящее.Форма.CRM_ФормаДокумента", 
			Новый Структура("Ключ, ОткрытиеИзФормы", Область.Расшифровка, Истина),ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.Независимый);		
			
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Подробно(Команда)
	
	Элементы.ФормаПодробно.Пометка			= НЕ Элементы.ФормаПодробно.Пометка;
	мДостраиватьПоСтруктуреПодчиненности	= Элементы.ФормаПодробно.Пометка;
	
	СформироватьОтчетНаСервере();
	
КонецПроцедуры
