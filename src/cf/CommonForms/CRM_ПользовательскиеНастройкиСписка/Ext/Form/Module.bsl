
///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ СЕРВЕР

&НаСервере
Процедура СохранитьНастройки()
	СтруктураНастройки = Новый Структура("Отбор,Группировка,УсловноеОформление", Неопределено, Неопределено, Неопределено);
	Если Элементы.СтраницаОтбор.Видимость Тогда
		СтруктураНастройки.Отбор = ДинамическийСписок.Отбор;
	КонецЕсли;
	Если Элементы.СтраницаГруппировка.Видимость Тогда
		СтруктураНастройки.Группировка = ДинамическийСписок.Группировка;
	КонецЕсли;
	Если Элементы.СтраницаУсловноеОформление.Видимость Тогда
		СтруктураНастройки.УсловноеОформление = ДинамическийСписок.УсловноеОформление;
	КонецЕсли;
	CRM_ОбщегоНазначенияСервер.СохранитьПользовательскиеНастройкиДинамическогоСписка(ИдентификаторСписка, ИдентификаторНастройки, СтруктураНастройки);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ КЛИЕНТ

&НаКлиенте
Функция ПроверитьСохранить()
	Если Не ЗначениеЗаполнено(НаименованиеНастройки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Наименование должно быть заполнено!'"),, "НаименованиеНастройки");
		Возврат Ложь;
	КонецЕсли;
	
	СохранитьНастройки();
	Возврат Истина;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТаблицаОтборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтборПослеУдаления(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаГруппировкаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаГруппировкаПослеУдаления(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУсловноеОформлениеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУсловноеОформлениеПослеУдаления(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	Если ПроверитьСохранить() Тогда
		ДанныеБылиИзменены = Истина;
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если	Параметры.Свойство("СвойстваДинамическогоСписка")
		И	Параметры.Свойство("ИдентификаторНастройки") Тогда
		//
		ДинамическийСписок.ДинамическоеСчитываниеДанных		= Параметры.СвойстваДинамическогоСписка.ДинамическоеСчитываниеДанных;
		ДинамическийСписок.ПроизвольныйЗапрос				= Параметры.СвойстваДинамическогоСписка.ПроизвольныйЗапрос;
		Если ДинамическийСписок.ПроизвольныйЗапрос Тогда
			ДинамическийСписок.ТекстЗапроса					= Параметры.СвойстваДинамическогоСписка.ТекстЗапроса;
		КонецЕсли;
		ДинамическийСписок.ОсновнаяТаблица					= Параметры.СвойстваДинамическогоСписка.ОсновнаяТаблица;
		
		ИдентификаторСписка		= Параметры.СвойстваДинамическогоСписка.ИдентификаторСписка;
		ИдентификаторНастройки	= Параметры.ИдентификаторНастройки;
		
		Если Параметры.Свойство("НаименованиеНастройки") Тогда
			НаименованиеНастройки = Параметры.НаименованиеНастройки;
		КонецЕсли;
		Если Параметры.Свойство("Копирование") Тогда
			Копирование = Параметры.Копирование;
		КонецЕсли;
		
		Если Параметры.Свойство("ИдентификаторНастройкиШаблон") И ЗначениеЗаполнено(Параметры.ИдентификаторНастройкиШаблон) Тогда
			ИдентификаторДляСохраненныхНастроек = Параметры.ИдентификаторНастройкиШаблон;
		Иначе
			ИдентификаторДляСохраненныхНастроек = ИдентификаторНастройки;
		КонецЕсли;
		
		СохраненныеНастройки = CRM_ОбщегоНазначенияСервер.ВосстановитьПользовательскиеНастройкиДинамическогоСписка(ИдентификаторСписка, ИдентификаторДляСохраненныхНастроек);
		CRM_ОбщегоНазначенияКлиентСервер.ПрименитьПользовательскиеНастройкиКДинамическомуСписку(ДинамическийСписок, СохраненныеНастройки);
		
		Если Копирование Тогда
			ИдентификаторНастройки = Строка(Новый УникальныйИдентификатор()); 
		КонецЕсли;
	Иначе
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПередЗакрытием".
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	Если Модифицированность Тогда
		Отказ = Истина;
		ОбратныйВызов = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОбратныйВызов, НСтр("ru = 'Данные были изменены. Сохранить данные?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;	
КонецПроцедуры // ПередЗакрытием()

&НаКлиенте
// Процедура - обработчик ответа на вопрос перед закрытием формы.
//
// Параметры:
//	Результат				- КодВозвратаДиалога	- Ответ на вопрос.
//	ДополнительныеПараметры	- Структура				- Структура дополнительных параметров.
//
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = КодВозвратаДиалога.Да Тогда
		Если ПроверитьСохранить() Тогда
			Модифицированность	= Ложь;
			Закрыть();
		КонецЕсли;
	Иначе
		Модифицированность	= Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры // ПередЗакрытиемЗавершение()

#КонецОбласти
