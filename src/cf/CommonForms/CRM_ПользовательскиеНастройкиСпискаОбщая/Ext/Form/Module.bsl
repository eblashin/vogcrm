
///////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ ФОРМЫ

&НаКлиенте
Перем ПредыдущийТекущийИдентификаторВДереве;
&НаКлиенте
Перем КэшСвойстваДинамическогоСписка;

///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСтруктуруТекущиеНастройки(Форма)
	Возврат Новый Структура("Отбор,Группировка,УсловноеОформление", Форма.ДинамическийСписок.Отбор, Форма.ДинамическийСписок.Группировка, Форма.ДинамическийСписок.УсловноеОформление);
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ СЕРВЕР

&НаСервере
Функция ПолучитьСвойстваДинамическогоСпискаСервер()
	Возврат CRM_ОбщегоНазначенияСервер.ПолучитьСвойстваДинамическогоСписка(
				ЭтотОбъект,
				"ДинамическийСписок",
				ИдентификаторСписка,
				"ДеревоПользовательскиеНастройкиСписка",
				Неопределено,
				Неопределено);
	//
КонецФункции

&НаСервере
Процедура СохранитьНастройки()
	Дерево = РеквизитФормыВЗначение("ДеревоПользовательскиеНастройкиСписка");
	СтрокиНастроек = Дерево.Строки.НайтиСтроки(Новый Структура("ЭтоКорневойЭлемент", Ложь), Истина);
	
	Для Каждого СтрокаНастройка Из СтрокиНастроек Цикл
		Если Не ЗначениеЗаполнено(СтрокаНастройка.Идентификатор) Тогда Продолжить; КонецЕсли;
		Если Не ЭтоАдресВременногоХранилища(СтрокаНастройка.Адрес) Тогда Продолжить; КонецЕсли;
		
		СтруктураНастройки = ПолучитьСтруктуруНастроекПоАдресуВоВременномХранилище(СтрокаНастройка.Адрес);
		Если СтруктураНастройки = Неопределено Тогда Продолжить; КонецЕсли;
		
		CRM_ОбщегоНазначенияСервер.СохранитьПользовательскиеНастройкиДинамическогоСписка(ИдентификаторСписка, СтрокаНастройка.Идентификатор, СтруктураНастройки);
	КонецЦикла;
	СохранитьДеревоПользовательскихНастроекСервер();
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруНастроекПоАдресуВоВременномХранилище(АдресВоВременномХранилище)
	Если ЭтоАдресВременногоХранилища(АдресВоВременномХранилище) Тогда
		Попытка
			СохраненныеДанные = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
			Если ТипЗнч(СохраненныеДанные) = Тип("Структура") Тогда
				СтруктураРезультат = Новый Структура("Отбор,Группировка,УсловноеОформление");
				
				Если СохраненныеДанные.Свойство("Отбор") И ТипЗнч(СохраненныеДанные.Отбор) = Тип("ХранилищеЗначения") Тогда
					СохраненныйОтбор = СохраненныеДанные.Отбор.Получить();
					Если ТипЗнч(СохраненныйОтбор) = Тип("ОтборКомпоновкиДанных") Тогда
						СтруктураРезультат.Отбор = СохраненныйОтбор;
					КонецЕсли;
				КонецЕсли;
				
				Если СохраненныеДанные.Свойство("Группировка") И ТипЗнч(СохраненныеДанные.Группировка) = Тип("ХранилищеЗначения") Тогда
					СохраненнаяГруппировка = СохраненныеДанные.Группировка.Получить();
					Если ТипЗнч(СохраненнаяГруппировка) = Тип("ПоляГруппировкиКомпоновкиДанных") Тогда
						СтруктураРезультат.Группировка = СохраненнаяГруппировка;
					КонецЕсли;
				КонецЕсли;
				
				Если СохраненныеДанные.Свойство("УсловноеОформление") И ТипЗнч(СохраненныеДанные.УсловноеОформление) = Тип("ХранилищеЗначения") Тогда
					СохраненноеУсловноеОформление = СохраненныеДанные.УсловноеОформление.Получить();
					Если ТипЗнч(СохраненноеУсловноеОформление) = Тип("УсловноеОформлениеКомпоновкиДанных") Тогда
						СтруктураРезультат.УсловноеОформление = СохраненноеУсловноеОформление;
					КонецЕсли;
				КонецЕсли;
				
				Возврат СтруктураРезультат;
			Иначе
				Возврат Неопределено;
			КонецЕсли;
		Исключение
			Возврат Неопределено;
		КонецПопытки;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура СохранитьТекущиеНастройкиВоВременномХранилище(ИдентификаторНастройки, СтруктураНастройки = Неопределено)
	Если СтруктураНастройки = Неопределено Тогда
		СтруктураНастройки = CRM_ОбщегоНазначенияСервер.ВосстановитьПользовательскиеНастройкиДинамическогоСписка(ИдентификаторСписка, ИдентификаторНастройки);
	КонецЕсли;
	
	Если ТипЗнч(СтруктураНастройки) <> Тип("Структура") Тогда Возврат; КонецЕсли;
	
	НайденныеСтроки = CRM_ОбщегоНазначенияКлиентСервер.НайтиВЭлементахДерева(ДеревоПользовательскиеНастройкиСписка.ПолучитьЭлементы(), Новый Структура("Идентификатор", ИдентификаторНастройки), Истина);
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаАдреса = НайденныеСтроки[0];
	
	СтруктураДляСохранения = Новый Структура("Отбор,Группировка,УсловноеОформление");
	Если СтруктураНастройки.Свойство("Отбор") Тогда
		СтруктураДляСохранения.Отбор = Новый ХранилищеЗначения(СтруктураНастройки.Отбор, Новый СжатиеДанных(9));
	КонецЕсли;
	Если СтруктураНастройки.Свойство("Группировка") Тогда
		СтруктураДляСохранения.Группировка = Новый ХранилищеЗначения(СтруктураНастройки.Группировка, Новый СжатиеДанных(9));
	КонецЕсли;
	Если СтруктураНастройки.Свойство("УсловноеОформление") Тогда
		СтруктураДляСохранения.УсловноеОформление = Новый ХранилищеЗначения(СтруктураНастройки.УсловноеОформление, Новый СжатиеДанных(9));
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(СтрокаАдреса.Адрес) Тогда
		ПоместитьВоВременноеХранилище(СтруктураДляСохранения, СтрокаАдреса.Адрес);
	Иначе
		СтрокаАдреса.Адрес = ПоместитьВоВременноеХранилище(СтруктураДляСохранения, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СкопироватьНастройкуПоИдентификатору(ИдентификаторИсточник, ИдентификаторПриемник)
	Если Не ЗначениеЗаполнено(ИдентификаторИсточник) Или Не ЗначениеЗаполнено(ИдентификаторПриемник) Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = CRM_ОбщегоНазначенияКлиентСервер.НайтиВЭлементахДерева(ДеревоПользовательскиеНастройкиСписка.ПолучитьЭлементы(), Новый Структура("Идентификатор", ИдентификаторИсточник), Истина);
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураНастройки = ПолучитьСтруктуруНастроекПоАдресуВоВременномХранилище(НайденныеСтроки[0].Адрес);
	
	Если ТипЗнч(СтруктураНастройки) = Тип("Структура") Тогда
		СохранитьТекущиеНастройкиВоВременномХранилище(ИдентификаторПриемник, СтруктураНастройки);
	Иначе
		СтруктураНастройки = CRM_ОбщегоНазначенияСервер.ВосстановитьПользовательскиеНастройкиДинамическогоСписка(ИдентификаторСписка, ИдентификаторИсточник);
		Если ТипЗнч(СтруктураНастройки) = Тип("Структура") Тогда
			СохранитьТекущиеНастройкиВоВременномХранилище(ИдентификаторПриемник, СтруктураНастройки);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ КЛИЕНТ

&НаКлиенте
Функция ПолучитьСвойстваДинамическогоСпискаКлиент()
	Если ТипЗнч(КэшСвойстваДинамическогоСписка) <> Тип("Структура") Тогда
		КэшСвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаСервер();
	КонецЕсли;
	Возврат КэшСвойстваДинамическогоСписка;
КонецФункции

&НаКлиенте
Функция ПроверитьСохранить()
	ТекущиеДанные = Элементы.ДеревоПользовательскиеНастройкиСписка.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И Не ТекущиеДанные.ЭтоКорневойЭлемент Тогда
		СохранитьТекущиеНастройкиВоВременномХранилище(ТекущиеДанные.Идентификатор, ПолучитьСтруктуруТекущиеНастройки(ЭтотОбъект));
	КонецЕсли;
	
	СохранитьНастройки();
	Возврат Истина;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ТаблицаОтборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		Модифицированность = Истина;
	
		ТекущиеДанные = Элементы.ДеревоПользовательскиеНастройкиСписка.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено И Не ТекущиеДанные.ЭтоКорневойЭлемент Тогда
			СохранитьТекущиеНастройкиВоВременномХранилище(ТекущиеДанные.Идентификатор, ПолучитьСтруктуруТекущиеНастройки(ЭтотОбъект));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтборПослеУдаления(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаГруппировкаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		Модифицированность = Истина;
	
		ТекущиеДанные = Элементы.ДеревоПользовательскиеНастройкиСписка.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено И Не ТекущиеДанные.ЭтоКорневойЭлемент Тогда
			СохранитьТекущиеНастройкиВоВременномХранилище(ТекущиеДанные.Идентификатор, ПолучитьСтруктуруТекущиеНастройки(ЭтотОбъект));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаГруппировкаПослеУдаления(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУсловноеОформлениеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Не ОтменаРедактирования Тогда
		Модифицированность = Истина;
	
		ТекущиеДанные = Элементы.ДеревоПользовательскиеНастройкиСписка.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено И Не ТекущиеДанные.ЭтоКорневойЭлемент Тогда
			СохранитьТекущиеНастройкиВоВременномХранилище(ТекущиеДанные.Идентификатор, ПолучитьСтруктуруТекущиеНастройки(ЭтотОбъект));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУсловноеОформлениеПослеУдаления(Элемент)
	Модифицированность = Истина;
	
	ТекущиеДанные = Элементы.ДеревоПользовательскиеНастройкиСписка.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И Не ТекущиеДанные.ЭтоКорневойЭлемент Тогда
		СохранитьТекущиеНастройкиВоВременномХранилище(ТекущиеДанные.Идентификатор, ПолучитьСтруктуруТекущиеНастройки(ЭтотОбъект));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьДеревоПользовательскихНастроекСервер()
	Дерево = РеквизитФормыВЗначение("ДеревоПользовательскиеНастройкиСписка");
	СвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаСервер();
	CRM_ОбщегоНазначенияСервер.СохранитьДеревоПользовательскихНастроекДинамическогоСписка(СвойстваДинамическогоСписка.ИдентификаторСписка, Дерево);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПользовательскиеНастройкиСпискаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	СвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаКлиент();
	
	Отказ = Истина;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	ЭлементыВерхнийУровень = ДеревоПользовательскиеНастройкиСписка.ПолучитьЭлементы()[0].ПолучитьЭлементы();
	
	Если Копирование И (ТекущиеДанные = Неопределено Или ТекущиеДанные.ЭтоКорневойЭлемент) Тогда
		Возврат;
	КонецЕсли;
	
	ИдентификаторДляКопирования = Неопределено;
	НаименованиеНастройки = НСтр("ru = 'Новая настройка'");
	
	ЭлементыДляДобавления = ЭлементыВерхнийУровень;
	
	Если Копирование Тогда
		ИдентификаторДляКопирования	= ТекущиеДанные.Идентификатор;
		НаименованиеНастройки		= ТекущиеДанные.Наименование;
	КонецЕсли;
	
	НоваяСтрока = ЭлементыДляДобавления.Добавить();
	НоваяСтрока.Идентификатор = Строка(Новый УникальныйИдентификатор());
	НоваяСтрока.Наименование = НаименованиеНастройки;
	
	Если ИдентификаторДляКопирования <> Неопределено Тогда
		СкопироватьНастройкуПоИдентификатору(ИдентификаторДляКопирования, НоваяСтрока.Идентификатор);
	КонецЕсли;
	
	Попытка Элементы.ДеревоПользовательскиеНастройкиСписка.Развернуть(НоваяСтрока.ПолучитьРодителя().ПолучитьИдентификатор(), Истина);
	Исключение КонецПопытки;
	
	Модифицированность = Истина;
	
	Попытка
		Элементы.ДеревоПользовательскиеНастройкиСписка.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Исключение
		ДеревоПользовательскиеНастройкиСпискаПриАктивизацииСтроки(Элемент);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПользовательскиеНастройкиСпискаПередНачаломИзменения(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Или ТекущиеДанные.ЭтоКорневойЭлемент Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПользовательскиеНастройкиСпискаПередУдалением(Элемент, Отказ)
	СвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаКлиент();
	CRM_ОбщегоНазначенияКлиент.ДеревоПользовательскиеНастройкиСпискаПередУдалением(ЭтотОбъект, СвойстваДинамическогоСписка.ИдентификаторСписка, Элемент, Отказ);
	
	Если Не Отказ Тогда
		ТекущиеДанные = Элементы.ДеревоПользовательскиеНастройкиСписка.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			Если ЭтоАдресВременногоХранилища(ТекущиеДанные.Адрес) Тогда
				Попытка УдалитьИзВременногоХранилища(ТекущиеДанные.Адрес);
				Исключение КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПользовательскиеНастройкиСпискаПослеУдаления(Элемент)
	ПредыдущийТекущийИдентификаторВДереве = Неопределено;
	ДеревоПользовательскиеНастройкиСпискаПриАктивизацииСтроки(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПользовательскиеНастройкиСпискаПриАктивизацииСтроки(Элемент)
	Если ПредыдущийТекущийИдентификаторВДереве <> Неопределено Тогда
		ПредыдущиеДанные = ДеревоПользовательскиеНастройкиСписка.НайтиПоИдентификатору(ПредыдущийТекущийИдентификаторВДереве);
		Если ПредыдущиеДанные <> Неопределено Тогда
			СохранитьТекущиеНастройкиВоВременномХранилище(ПредыдущиеДанные.Идентификатор, ПолучитьСтруктуруТекущиеНастройки(ЭтотОбъект));
		КонецЕсли;
	КонецЕсли;
	
	СвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаКлиент();
	
	ТекущиеДанные = Элементы.ДеревоПользовательскиеНастройкиСписка.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	ПредыдущийТекущийИдентификаторВДереве = ТекущиеДанные.ПолучитьИдентификатор();
	
	Если ТекущиеДанные.ЭтоКорневойЭлемент Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ПрименитьПользовательскиеНастройкиКДинамическомуСписку(ДинамическийСписок, Неопределено, СвойстваДинамическогоСписка.ИдентификаторСписка, Истина, Истина, Истина);
		Элементы.ТаблицаОтбор.ТолькоПросмотр				= Истина;
		Элементы.ТаблицаГруппировка.ТолькоПросмотр			= Истина;
		Элементы.ТаблицаУсловноеОформление.ТолькоПросмотр	= Истина;
		Возврат;
	Иначе
		Элементы.ТаблицаОтбор.ТолькоПросмотр				= Ложь;
		Элементы.ТаблицаГруппировка.ТолькоПросмотр			= Ложь;
		Элементы.ТаблицаУсловноеОформление.ТолькоПросмотр	= Ложь;
		
		СтруктураНастройки = Неопределено;
		
		СтруктураНастройки = ПолучитьСтруктуруНастроекПоАдресуВоВременномХранилище(ТекущиеДанные.Адрес);
		Если ТипЗнч(СтруктураНастройки) = Тип("Структура") Тогда
			CRM_ОбщегоНазначенияКлиентСервер.ПрименитьПользовательскиеНастройкиКДинамическомуСписку(ДинамическийСписок, СтруктураНастройки, СвойстваДинамическогоСписка.ИдентификаторСписка, Истина, Истина, Истина);
		Иначе
			CRM_ОбщегоНазначенияКлиентСервер.ПрименитьПользовательскиеНастройкиКДинамическомуСписку(ДинамическийСписок, ТекущиеДанные.Идентификатор, СвойстваДинамическогоСписка.ИдентификаторСписка, Истина, Истина, Истина);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	Если ПроверитьСохранить() Тогда
		ДанныеБылиИзменены = Истина;
		Модифицированность = Ложь;
		Закрыть(ДанныеБылиИзменены);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть(Ложь);
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("СвойстваДинамическогоСписка") Тогда
		ДинамическийСписок.ДинамическоеСчитываниеДанных		= Параметры.СвойстваДинамическогоСписка.ДинамическоеСчитываниеДанных;
		ДинамическийСписок.ПроизвольныйЗапрос				= Параметры.СвойстваДинамическогоСписка.ПроизвольныйЗапрос;
		Если ДинамическийСписок.ПроизвольныйЗапрос Тогда
			ДинамическийСписок.ТекстЗапроса					= Параметры.СвойстваДинамическогоСписка.ТекстЗапроса;
		КонецЕсли;
		ДинамическийСписок.ОсновнаяТаблица					= Параметры.СвойстваДинамическогоСписка.ОсновнаяТаблица;
		
		ИдентификаторСписка = Параметры.СвойстваДинамическогоСписка.ИдентификаторСписка;
		
		Если Параметры.Свойство("СкрытьУсловноеОформление") Тогда
			Элементы.СтраницаУсловноеОформление.Видимость = Ложь;
		КонецЕсли;
		
		СвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаСервер();
		CRM_ОбщегоНазначенияСервер.ПользовательскиеНастройкиСпискаОбновитьДеревоНастроек(ЭтотОбъект, СвойстваДинамическогоСписка);
	Иначе
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПередЗакрытием".
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	Если Модифицированность Тогда
		Отказ = Истина;
		ОбратныйВызов = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОбратныйВызов, НСтр("ru = 'Данные были изменены. Сохранить данные?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;	
КонецПроцедуры // ПередЗакрытием()

&НаКлиенте
// Процедура - обработчик ответа на вопрос перед закрытием формы.
//
// Параметры:
//	Результат				- КодВозвратаДиалога	- Ответ на вопрос.
//	ДополнительныеПараметры	- Структура				- Структура дополнительных параметров.
//
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = КодВозвратаДиалога.Да Тогда
		Если ПроверитьСохранить() Тогда
			Модифицированность	= Ложь;
			Закрыть(Истина);
		КонецЕсли;
	Иначе
		Модифицированность	= Ложь;
		Закрыть(Ложь);
    КонецЕсли;
КонецПроцедуры // ПередЗакрытиемЗавершение()

#КонецОбласти
