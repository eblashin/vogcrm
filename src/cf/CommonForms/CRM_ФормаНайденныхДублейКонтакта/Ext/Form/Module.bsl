////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере 
// Функция выполняет поиск дублей контакта.
//
// Параметры:
//	СтруктураОбъекта	- Структура			- Структура реквизитов контакта.
//	СтруктураПоиска		- Структура			- Структура условий поиска.
//	СписокКонтактов		- СписокЗначений	- Список полей контактной информации.
//	Контакт				- СправочникСсылка	- Контакт
//	Клиент				- СправочникСсылка	- Владелец контакта.
//
// Возвращаемое значение:
//	Булево	- Признак наличия дублей.
//
Функция НайтиДубли(СтруктураОбъекта, СтруктураПоиска, СписокКонтактов, Контакт, Клиент)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СсылкаНаОбъект",	Контакт);
	Сч = 0;
	ПервоеЗначение = Истина;
	Для Каждого КлючИЗначение Из СтруктураПоиска Цикл
		ИмяРеквизита      = КлючИЗначение.Ключ;
		СтепеньСхожести   = КлючИЗначение.Значение;
		ЗначениеРеквизита = Неопределено;
		Реквизиты = "";
		Сч = Сч + 1;
		Если Найти(ИмяРеквизита, "Контакт") = 0  Тогда
			Если ТипЗнч(СтруктураОбъекта) = Тип("Структура") Тогда
				СтруктураОбъекта.Свойство(ИмяРеквизита, ЗначениеРеквизита);
			Иначе
				ЗначениеРеквизита = СтруктураОбъекта[ИмяРеквизита];
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
				Продолжить;
			КонецЕсли;
			Если НЕ ПервоеЗначение Тогда
				Реквизиты = "
				| ОБЪЕДИНИТЬ ВСЕ
				|";
			КонецЕсли;
			Реквизиты =  Реквизиты + "
			|ВЫБРАТЬ  
			|Данные.Ссылка" +  ?(ПервоеЗначение, " КАК Ссылка", "");
			Реквизиты = Реквизиты + "
			|,Данные." + ИмяРеквизита + ?(ПервоеЗначение, " КАК Реквизит", "");
			Реквизиты = Реквизиты + "
			|,""" + ИмяРеквизита + """" + ?(ПервоеЗначение, " КАК ИмяРеквизита", "");
			Условия  = "
			|Данные." + ИмяРеквизита + " " + СтепеньСхожести + " &" + ИмяРеквизита + Строка(Сч);
			Запрос.УстановитьПараметр(ИмяРеквизита+ Строка(Сч), ?(СтепеньСхожести = "ПОДОБНО", "%" + ЗначениеРеквизита + "%", ЗначениеРеквизита));
			Запрос.Текст = Запрос.Текст + Реквизиты + "
				|ИЗ Справочник.КонтактныеЛицаПартнеров КАК Данные
				|ГДЕ " + Сред(Условия, 2) + "  И НЕ Данные.Ссылка = &СсылкаНаОбъект";
			ПервоеЗначение = Ложь;
		Иначе
			Массив = Новый Массив;
			Для Каждого Стр Из СписокКонтактов Цикл
				ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "Контакт_", "");
				Если Стр.Значение = ИмяРеквизита И ЗначениеЗаполнено(Стр.Представление) Тогда
					Массив.Добавить(Стр.Представление);	
				КонецЕсли;
			КонецЦикла;
			Если Массив.Количество() > 0 Тогда
				Для Каждого Стр Из Массив Цикл
					Если НЕ ПервоеЗначение Тогда
						Реквизиты = "
						| ОБЪЕДИНИТЬ ВСЕ
						|";
					КонецЕсли;
					Реквизиты =  Реквизиты + "
					|ВЫБРАТЬ 
					|Данные.Ссылка" +  ?(ПервоеЗначение, " КАК Ссылка", "");
					Реквизиты = Реквизиты + "
					|,Данные.Представление" + ?(ПервоеЗначение, " КАК Реквизит", "");
					Реквизиты = Реквизиты + "
					|,""" + ИмяРеквизита + """" + ?(ПервоеЗначение, " КАК ИмяРеквизита", "");
					Условия  = "
					|Данные.Представление "+ СтепеньСхожести + " &" + ИмяРеквизита + Строка(Сч) + "
					|И Данные.Тип = &Тип" + Строка(Сч);
					Запрос.УстановитьПараметр(ИмяРеквизита + Строка(Сч), ?(СтепеньСхожести = "ПОДОБНО", "%" + Стр + "%", Стр));
					Если ИмяРеквизита = "Телефон" Тогда 
						Запрос.УстановитьПараметр("Тип" + Строка(Сч), Перечисления.ТипыКонтактнойИнформации.Телефон);
					ИначеЕсли ИмяРеквизита = "АдресЭлектроннойПочты" Тогда 
						Запрос.УстановитьПараметр("Тип" + Строка(Сч), Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
					КонецЕсли;
					Запрос.Текст = Запрос.Текст + Реквизиты + "
						|ИЗ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК Данные
						|ГДЕ " + Сред(Условия, 2) + "  И НЕ Данные.Ссылка = &СсылкаНаОбъект";
					Сч = Сч + 1;
					ПервоеЗначение = Ложь;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если НЕ ЗначениеЗаполнено(Запрос.Текст) Тогда
		Возврат Ложь;
	КонецЕсли;
	МассивСвоихКонтактов	= CRM_ОбщегоНазначенияСервер.ПолучитьМассивСвоихКонтактов(Клиент);
	МассивСвоихКлиентов		= CRM_ОбщегоНазначенияСервер.ПолучитьМассивСвоихКлиентов(Клиент);
	ЕстьНайденные = Ложь;	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Объект", Выборка.Ссылка);
		НайдСтрока = _ТаблицаНайдено.НайтиСтроки(Отбор);
		Если НайдСтрока.Количество() = 0 Тогда
			Строка = _ТаблицаНайдено.Добавить();
			Строка.Объект			= Выборка.Ссылка;
			Строка.Представление	= Строка(Выборка.Ссылка);
		КонецЕсли;
		Строка = ТаблицаРасшифровкаНайдено.Добавить();
		Строка.Объект = Выборка.Ссылка;
		Строка.ПредставлениеНайденоПо = СтрЗаменить(Выборка.ИмяРеквизита,"CRM_","") + " - " + Строка(Выборка.Реквизит);
		ЕстьНайденные = Истина;
	КонецЦикла;
	Возврат ЕстьНайденные;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ

&НаКлиенте
// Процедура - обработчик события "ПриАктивизацииСтроки" таблицы формы "ТаблицаНайдено".
//
Процедура ТаблицаНайденоПриАктивизацииСтроки(Элемент)
	Элементы.ТаблицаРасшифровкаНайдено.ОтборСтрок = Новый ФиксированнаяСтруктура("Объект", Элементы.ТаблицаНайдено.ТекущиеДанные.Объект); 
	Элементы.Декорация2.Видимость			= НЕ Элементы.ТаблицаНайдено.ТекущиеДанные.Доступен;
	Элементы.ПерейтиКНайденному.Доступность	= Элементы.ТаблицаНайдено.ТекущиеДанные.Доступен;
КонецПроцедуры // ТаблицаНайденоПриАктивизацииСтроки()

&НаКлиенте
// Процедура - обработчик события "Выбор" таблицы формы "ТаблицаНайдено".
//
Процедура ТаблицаНайденоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущиеДанные.Доступен Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Объект);
	КонецЕсли;
КонецПроцедуры // ТаблицаНайденоВыбор()

#Область ОбработчикиКомандФормы

&НаКлиенте
// Процедура - обработчик команды формы "ПродолжитьВводНового".
//
Процедура ПродолжитьВводНового(Команда)
	Закрыть(Новый Структура("Результат", "Продолжить"));
КонецПроцедуры // ПродолжитьВводНового()

&НаКлиенте
// Процедура - обработчик команды формы "ПерейтиКНайденному".
//
Процедура ПерейтиКНайденному(Команда)
	Если Элементы.ТаблицаНайдено.ТекущиеДанные.Доступен Тогда
		Закрыть(Новый Структура("Результат,Объект", "Перейти" , Элементы.ТаблицаНайдено.ТекущиеДанные.Объект));
	КонецЕсли;
КонецПроцедуры // ПерейтиКНайденному()

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("СтруктураПоиска") Тогда
		Если НайтиДубли(Параметры.СтруктураОбъекта, Параметры.СтруктураПоиска, Параметры.СписокКонтактов, Параметры.Контакт, Параметры.Клиент) Тогда
			Для Каждого СтрокаНайденого Из _ТаблицаНайдено Цикл
				Отбор = Новый Структура();
				Отбор.Вставить("Объект", СтрокаНайденого.Объект);
				НайдСтрока = ТаблицаНайдено.НайтиСтроки(Отбор);
				Если НайдСтрока.Количество() = 0 Тогда
					Строка = ТаблицаНайдено.Добавить();
					Строка.Объект			= СтрокаНайденого.Объект;
					Строка.Представление	= СтрокаНайденого.Представление;
					Строка.Доступен			= (Найти(Строка(СтрокаНайденого.Объект),"<Объект не найден>") = 0);
				КонецЕсли;
			КонецЦикла;
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти
