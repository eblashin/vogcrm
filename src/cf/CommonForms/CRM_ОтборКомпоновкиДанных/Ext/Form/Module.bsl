
Процедура ИнициализацияКомпоновки(ТекстЗапроса, ОтборКомпоновкиДанных = Неопределено, ИнициализацияПараметрами=Неопределено)
	// Создание и настройка схемы компоновки данных.
	СКДДанные = Новый СхемаКомпоновкиДанных();
	
	ИсточникДанных = СКДДанные.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = "ИсточникДанных";
	ИсточникДанных.ТипИсточникаДанных = "Local";
	
	НаборДанных = СКДДанные.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя = "НаборДанных";
	НаборДанных.ИсточникДанных = "ИсточникДанных";
	НаборДанных.Запрос = ТекстЗапроса;
	
	Настройки = СКДДанные.НастройкиПоУмолчанию;
	
	ДетальнаяГруппировка = Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	ДетальнаяГруппировка.Использование = Истина;
	
	ВыбранноеАвтоПоле = Настройки.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	ВыбранноеАвтоПоле.Использование = Истина;
	
	Если ЭтоАдресВременногоХранилища(АдресСКДВоВременномХранилище) Тогда
		Попытка УдалитьИзВременногоХранилища(АдресСКДВоВременномХранилище);
		Исключение КонецПопытки;
	КонецЕсли;
	
	АдресСКДВоВременномХранилище = ПоместитьВоВременноеХранилище(СКДДанные, УникальныйИдентификатор);
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСКДВоВременномХранилище));
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных();
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКДДанные));
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	Для Каждого ПолеВыбора Из КомпоновщикНастроек.Настройки.ДоступныеПоляВыбора.Элементы Цикл
		// Пропускаем системные поля
		Если Лев(Строка(ПолеВыбора.Поле), 13) = "СистемныеПоля" Или Лев(Строка(ПолеВыбора.Поле), 12) = "SystemFields" Тогда Продолжить; КонецЕсли;
		Если Лев(Строка(ПолеВыбора.Поле), 15) = "ПараметрыДанных" Или Лев(Строка(ПолеВыбора.Поле), 14) = "DataParameters" Тогда Продолжить; КонецЕсли;
		
		ВыбранныеПоляДетальнаяГруппировка = ДетальнаяГруппировка.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ВыбранныеПоляДетальнаяГруппировка.Поле  = Новый ПолеКомпоновкиДанных(ПолеВыбора.Поле);
	КонецЦикла;
	
	Настройки.ПараметрыДанных.Элементы.Очистить();
	
	Если ОтборКомпоновкиДанных <> Неопределено Тогда
		CRM_ОбщегоНазначенияКлиентСервер.СкопироватьОтборКомпоновкиДанных(КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы, ОтборКомпоновкиДанных.Элементы, КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.ДоступныеПоляОтбора);
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализацияКомпоновкиПоИмениОбщегоМакета(ОтборКомпоновкиДанных = Неопределено, ПараметрыКомпоновки=Неопределено, ИнициализацияПараметрами=Неопределено)
	
	СКДДанные = ПолучитьИзВременногоХранилища(АдресСКДВоВременномХранилище);
	
	ИсточникДляСхемы = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСКДВоВременномХранилище);
	
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(ИсточникДляСхемы);
	
	Если ПараметрыКомпоновки <> Неопределено Тогда
		
		CRM_ОбщегоНазначенияКлиентСервер.СкопироватьПараметрыКомпоновки(КомпоновщикНастроекКомпоновкиДанных.Настройки.ПараметрыДанных, ПараметрыКомпоновки);
		
	КонецЕсли;
	
	Если НЕ ИнициализацияПараметрами = Неопределено Тогда
		
		Для Каждого стр из ИнициализацияПараметрами Цикл 
			
			ПоискПараметра = КомпоновщикНастроекКомпоновкиДанных.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(стр.Ключ));
			
			Если НЕ ПоискПараметра = Неопределено Тогда
				ПоискПараметра.Значение = стр.Значение;				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ОтборКомпоновкиДанных <> Неопределено Тогда
		
		CRM_ОбщегоНазначенияКлиентСервер.СкопироватьОтборКомпоновкиДанных(КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы, ОтборКомпоновкиДанных.Элементы, КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.ДоступныеПоляОтбора);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Параметры.Свойство("ТекстЗапроса") И НЕ Параметры.Свойство("АдресСКДВоВременномХранилище") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОтборКомпоновкиДанных = Неопределено;
	Параметры.Свойство("ОтборКомпоновкиДанных", ОтборКомпоновкиДанных);
	
	ПараметрыКомпоновки = Неопределено;
	Параметры.Свойство("ПараметрыКомпоновки", ПараметрыКомпоновки);
	
	АдресСКДВоВременномХранилище = Параметры.АдресСКДВоВременномХранилище;
	
	Если Параметры.Свойство("Заголовок") И ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	ВозвращатьСтруктуруСДанными = Параметры.ВозвращатьСтруктуруСДанными;
		
	ИнициализацияПараметрами = Неопределено;
	
	Параметры.Свойство("ИнициализацияПараметрами", ИнициализацияПараметрами);
	
	Если ВозвращатьСтруктуруСДанными Тогда
				
		ИнициализацияКомпоновкиПоИмениОбщегоМакета(ОтборКомпоновкиДанных, ПараметрыКомпоновки, ИнициализацияПараметрами);
		
	Иначе 
		
		ИнициализацияКомпоновки(Параметры.ТекстЗапроса, ОтборКомпоновкиДанных, ИнициализацияПараметрами);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если ВозвращатьСтруктуруСДанными Тогда
		
		СтруктураВозврата = Новый Структура();
		
		СтруктураВозврата.Вставить("Отбор", КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор);
		СтруктураВозврата.Вставить("ПараметрыДанных", КомпоновщикНастроекКомпоновкиДанных.Настройки.ПараметрыДанных);
		
		Закрыть(СтруктураВозврата);
		
	Иначе 
		
		Закрыть(КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Если ЭтоАдресВременногоХранилища(АдресСКДВоВременномХранилище) Тогда
		Попытка УдалитьИзВременногоХранилища(АдресСКДВоВременномХранилище);
		Исключение КонецПопытки;
	КонецЕсли;
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОчиститьИЗакрыть(Команда)
	
	Если ЭтоАдресВременногоХранилища(АдресСКДВоВременномХранилище) Тогда
		Попытка УдалитьИзВременногоХранилища(АдресСКДВоВременномХранилище);
		Исключение КонецПопытки;
	КонецЕсли;
	
	Закрыть(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекКомпоновкиДанныхНастройкиОтборПриИзменении(Элемент)
	
	
КонецПроцедуры
