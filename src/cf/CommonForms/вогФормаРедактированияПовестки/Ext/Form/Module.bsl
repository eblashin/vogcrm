
#Область ОбработчикиСобытийФормы
	
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	МероприятиеСсылка = Параметры.ДокументСсылка;
	Если МероприятиеСсылка.Пустая() Тогда
		ВызватьИсключение НСтр("ru = 'Не определен документ мероприятия.'");
	КонецЕсли;
	
	Если Параметры.Свойство("ТекущийСоставПовестки")
	  И Параметры.ТекущийСоставПовестки.Количество() > 0 Тогда
	  
	  	СоставПовестки.Очистить();
		Для каждого СтрокаТекущегоСостава Из Параметры.ТекущийСоставПовестки Цикл
			НоваяСтрока = СоставПовестки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТекущегоСостава,, "ПрисоединенныеФайлы");

			Для каждого Файл Из СтрокаТекущегоСостава.ПрисоединенныеФайлы Цикл
				НоваяСтрокаФайла = НоваяСтрока.ПрисоединенныеФайлы.Добавить();	
				
				НоваяСтрокаФайла.Файл 			= Файл;	
				НоваяСтрокаФайла.ИндексКартинки = ИндексКартинкиФайла(Файл);
				
			КонецЦикла;
		
		КонецЦикла;
	
	КонецЕсли;
	
	Параметры.Свойство("РежимВвода", РежимВвода);
	
	Если РежимВвода = "ТолькоВопросы" Тогда
		Элементы.СоставПовесткиГруппаОтвет.Видимость = Ложь;	
	    Элементы.ГруппаПрисоединенныеФайлы.Видимость = Ложь;
		
	ИначеЕсли РежимВвода = "ТолькоОтветы" Тогда
		Элементы.СоставПовесткиГруппаВопрос.ТолькоПросмотр = Истина;
		Элементы.СоставПовесткиПанель.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не Модифицированность
	  ИЛИ ЗакрытьБезусловно Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Конекст) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ЗакрытьБезусловно = Истина;
		Закрыть();
	Иначе
		ЗакрытьБезусловно = Истина;
		Закрыть(СформироватьРезультатСоставаПовестки());
		
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытиемЗавершение()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "Запись_Файл" Тогда
		Если Параметр.Свойство("ЭтоНовый") // VOG Солодов В.В. 03.04.2019 Добавил условие
			И Параметр.ЭтоНовый 
		 	И Параметр.ВладелецФайла = МероприятиеСсылка Тогда
			ТекущиеДанные = Элементы.СоставПовестки.ТекущиеДанные;
			Если ТекущиеДанные = Неопределено Тогда
				Возврат;
				
			КонецЕсли;
			
			Для каждого ПрисоединенныйФайл Из Источник Цикл
				НоваяСтрокаФайла = ТекущиеДанные.ПрисоединенныеФайлы.Добавить();	
				
				НоваяСтрокаФайла.Файл 			= ПрисоединенныйФайл;	
				НоваяСтрокаФайла.ИндексКартинки = ИндексКартинкиФайла(ПрисоединенныйФайл);
				
			КонецЦикла;
			
			Модифицированность = Истина;
			вогУправлениеПрисоединеннымиФайламиСервер.ВыполнитьДобавлениеВидаФайла(ПредопределенноеЗначение("Справочник.вогВидыПрисоединенныхФайлов.ПустаяСсылка"), Источник);			
			
		КонецЕсли;
		
	КонецЕсли;	
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрименитьИЗакрыть(Команда)
	
	ЗакрытьБезусловно = Истина;
	Закрыть(СформироватьРезультатСоставаПовестки());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СоставПовесткиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	Если Не РежимВвода = "ТолькоОтветы" Тогда
		Оповещение = Новый ОписаниеОповещения("СоставПовесткиПослеФормулировкиВопроса", ЭтотОбъект);
		ПоказатьВводСтроки(Оповещение, "", НСтр("ru = 'Формулировка вопроса'"),, Истина); 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПовесткиПередУдалением(Элемент, Отказ)
	Отказ = (РежимВвода = "ТолькоОтветы");
КонецПроцедуры

&НаКлиенте
Процедура СоставПовесткиПослеФормулировкиВопроса(ФормулировкаВопроса, Контекст) Экспорт

	Если Не ЗначениеЗаполнено(ФормулировкаВопроса) Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = СоставПовестки.Добавить();
	
	НоваяСтрока.Вопрос = ФормулировкаВопроса;
	НоваяСтрока.ИдентификаторСтроки = Новый УникальныйИдентификатор;
	
	Элементы.СоставПовестки.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Модифицированность = Истина;
	
КонецПроцедуры // СоставПовесткиПослеФормулировкиВопроса()

&НаКлиенте
Процедура СоставПовесткиПрисоединенныеФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ПрисоединенныеФайлыКлиент.ДобавитьФайлы(МероприятиеСсылка, УникальныйИдентификатор);
	
КонецПроцедуры

// ++ VOG Солодов В.В. 03.04.2019
&НаКлиенте
Процедура СоставПовесткиПрисоединенныеФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	
	Если ЗначениеЗаполнено(ДанныеСтроки.Файл) Тогда
		РаботаСФайламиСлужебныйКлиент.РедактироватьСОповещением(Неопределено, ДанныеСтроки.Файл);
	КонецЕсли;
	
КонецПроцедуры // -- VOG Солодов В.В. 03.04.2019

#КонецОбласти

#Область ПодключаемыеПроцедурыФункции

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

&НаКлиенте
Функция СформироватьРезультатСоставаПовестки()

	МассивСоставаПовестки = Новый Массив;
	Для каждого СтрокаТЧ Из СоставПовестки Цикл
		МассивФайлов = Новый Массив;
		Для каждого СтрокаФайла Из СтрокаТЧ.ПрисоединенныеФайлы Цикл
			МассивФайлов.Добавить(СтрокаФайла.Файл);
		КонецЦикла;
		
		МассивСоставаПовестки.Добавить(
			Новый Структура("Вопрос, Ответ, ПрисоединенныеФайлы, ИдентификаторСтроки", 
				СтрокаТЧ.Вопрос, СтрокаТЧ.Ответ, МассивФайлов, СтрокаТЧ.ИдентификаторСтроки)
		);
		
	КонецЦикла;
	
	Возврат МассивСоставаПовестки;

КонецФункции // СформироватьРезультатСоставаПовестки()

&НаСервере
Функция ИндексКартинкиФайла(Файл)

	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ПометкаУдаления");
	СтруктураРеквизитов.Вставить("ИндексКартинки");
	
	РеквизитыФайла = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Файл, СтруктураРеквизитов);
	
	Возврат ?(РеквизитыФайла.ПометкаУдаления, РеквизитыФайла.ИндексКартинки + 1, РеквизитыФайла.ИндексКартинки);
	
КонецФункции // ИндексКартинкиФайла()

#КонецОбласти
