
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтображатьСписокАктивныхЗадач = Истина;
	Если ТипЗнч(Параметры.Предмет) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		ОтображатьСписокАктивныхЗадач = Ложь;
	КонецЕсли;
	
	СписокАктивныхЗадач.Параметры.УстановитьЗначениеПараметра("Ответственный", Параметры.Предмет.Ответственный);
	СписокАктивныхЗадач.Параметры.УстановитьЗначениеПараметра("Предмет", Параметры.Предмет);
	СписокАктивныхЗадач.Параметры.УстановитьЗначениеПараметра("Сегодня", НачалоДня(ТекущаяДатаСеанса()));
	
	ИспользоватьДатуИВремяВСрокахЗадач = 
		ПолучитьФункциональнуюОпцию("ИспользоватьДатуИВремяВСрокахЗадач");
	ФорматДаты = ?(ИспользоватьДатуИВремяВСрокахЗадач, "ДФ='дд.ММ.гггг ЧЧ:мм'", "ДЛФ=D");
	Элементы.СписокАктивныхЗадачСрокИсполнения.Формат = ФорматДаты;
	Элементы.ДеревоВсеПроцессыСрокИсполнения.Формат = ФорматДаты;
	Элементы.ДеревоВсеПроцессыДатаИсполнения.Формат = ФорматДаты;
	
	Элементы.СписокАктивныхЗадач.Видимость = ОтображатьСписокАктивныхЗадач;
	Элементы.ГруппаВсеПроцессы.ОтображатьЗаголовок = ОтображатьСписокАктивныхЗадач;
	
	ЗаполнитьДеревоПроцессов();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗадачаВыполнена" Тогда
		ЗаполнитьДеревоПроцессов();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьДеревоПроцессов()
	
	ДеревоВсеПроцессы.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗадачаЗадачаИсполнителя.Ссылка КАК Ссылка,
	|	ЗадачаЗадачаИсполнителя.БизнесПроцесс КАК БизнесПроцесс
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаЗадачаИсполнителя
	|ГДЕ
	|	ЗадачаЗадачаИсполнителя.БизнесПроцесс.Предмет = &Предмет
	|И ВЫБОР
	|		КОГДА НЕ ЗадачаЗадачаИсполнителя.CRM_СостояниеИнтереса = ЗНАЧЕНИЕ(Справочник.CRM_СостоянияИнтересов.ПустаяСсылка) И ЗадачаЗадачаИсполнителя.Исполнитель = &Ответственный
	|			ТОГДА НЕ ЗадачаЗадачаИсполнителя.БизнесПроцесс.Интерес = &Предмет
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	//|	И НЕ ЗадачаЗадачаИсполнителя.БизнесПроцесс.Интерес = &Предмет
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗадачаЗадачаИсполнителя.СрокИсполнения УБЫВ
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ссылка)
	|ПО
	|	БизнесПроцесс";
	
	Запрос.УстановитьПараметр("Ответственный", Параметры.Предмет.Ответственный);
	Запрос.УстановитьПараметр("Предмет", Параметры.Предмет);
	
	ВыборкаБП = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаБП.Следующий() Цикл
		НовыйБП = ДеревоВсеПроцессы.ПолучитьЭлементы().Добавить();
		БизнесПроцесс = ВыборкаБП.БизнесПроцесс;
		НовыйБП.Ссылка = БизнесПроцесс;
		НовыйБП.Наименование = БизнесПроцесс.Наименование;
		Выборка = ВыборкаБП.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяЗадача = НовыйБП.ПолучитьЭлементы().Добавить();
			Задача = Выборка.Ссылка;
			НоваяЗадача.Ссылка = Задача;
			НоваяЗадача.Наименование = Задача.Наименование;
			НоваяЗадача.Исполнитель = Задача.Исполнитель;
			НоваяЗадача.ДатаИсполнения = Задача.ДатаИсполнения;
			НоваяЗадача.ПринятаКИсполнению = Задача.ПринятаКИсполнению;
			НоваяЗадача.Просрочена = ?(Задача.СрокИсполнения < НачалоДня(ТекущаяДатаСеанса()), ИСТИНА, ЛОЖЬ);
			НоваяЗадача.СрокИсполнения = Задача.СрокИсполнения;
			НоваяЗадача.Выполнена = Задача.Выполнена;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВсеПроцессыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ПоказатьЗначение(,Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры
