// Возвращает код картинки в зависимости от типа вопроса и принадлежности к разделу.
//
// Параметры:
//  ЭтоРаздел  - Булево - признак раздела.
//  ТипВопроса - Перечисление.ТипыВопросовШаблонаАнкеты.
//
// Возвращаемое значение:
//   Число   - код картинки для отображения в дереве.
//
Функция ПолучитьКодКартинкиШаблонаАнкеты(ТипВопроса = Неопределено) Экспорт
	
	Возврат вогУправлениеОпросамиПовтИспСеанс.ПолучитьКодКартинкиШаблонаАнкеты(ТипВопроса);
	
КонецФункции

// Заново формирует нумерацию дерева анкеты.
Процедура СформироватьНумерациюДерева(ДеревоАнкеты,ПреобразовыватьФормулировку = Ложь) Экспорт

	Если НЕ ЗначениеЗаполнено(ДеревоАнкеты.ПолучитьЭлементы()[0].ТипСтроки) Тогда 
		ЗначимыеЭлементыДерева = ДеревоАнкеты.ПолучитьЭлементы()[0].ПолучитьЭлементы();
	Иначе
		ЗначимыеЭлементыДерева = ДеревоАнкеты.ПолучитьЭлементы();
	КонецЕсли;
	
	СформироватьНумерациюЭлементовДерева(ЗначимыеЭлементыДерева,1,Новый Массив,ПреобразовыватьФормулировку);

КонецПроцедуры 

// Вызывается рекурсивно при формировании полного кода строк дерева анкеты.
Процедура СформироватьНумерациюЭлементовДерева(СтрокиДерева, УровеньРекурсии, МассивПолныйКод, ПреобразовыватьФормулировку)
	
	Если МассивПолныйКод.Количество() < УровеньРекурсии Тогда
		МассивПолныйКод.Добавить(0);
	КонецЕсли;
	
	Для каждого Элемент Из СтрокиДерева Цикл
		
		МассивПолныйКод[УровеньРекурсии-1] = МассивПолныйКод[УровеньРекурсии-1] + 1;
		Для инд = УровеньРекурсии По МассивПолныйКод.Количество()-1 Цикл
			МассивПолныйКод[инд] = 0;
		КонецЦикла;
		
		ПолныйКод = СтрСоединить(МассивПолныйКод,".");
		ПолныйКод = АнкетированиеКлиентСервер.УдалитьПоследниеСимволыИзСтроки(ПолныйКод,".0.",".");
		
		Элемент.ПолныйКод = ПолныйКод;
		Если ПреобразовыватьФормулировку Тогда
			Элемент.Формулировка = Элемент.ПолныйКод + ". " + Элемент.Формулировка;
		КонецЕсли;
		
		ПодчиненныеЭлементыСтрокиДерева = Элемент.ПолучитьЭлементы();
		
		Если ПодчиненныеЭлементыСтрокиДерева.Количество() > 0 Тогда
		
			СформироватьНумерациюЭлементовДерева(ПодчиненныеЭлементыСтрокиДерева, УровеньРекурсии + 1, МассивПолныйКод, ПреобразовыватьФормулировку);
			
			МассивПолныйКод.Удалить(МассивПолныйКод.ВГраница());
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Формирует имя раздела на основании уникального идентификатора строки дерева анкеты.
//
// Параметры:
//  Ключ  - УникальныйИдентификатор - ключ, на основе которого будет формироваться имя вопроса.
//
// Возвращаемое значение:
//  Строка - получившаяся в результате обработки строка.
//
Функция ПолучитьИмяРеквизитаПоСсылке(Ссылка, Префикс = "Раздел_") Экспорт
	
	Возврат вогУправлениеОпросамиПовтИспСеанс.ПолучитьИмяРеквизитаПоСсылке(Ссылка, СокрЛП(Префикс));
	
КонецФункции

Функция РасширенияИзображений() Экспорт
	Возврат "*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.heic;*.avi;*.mp4;*.mov;*.mpeg;*.wmf;*.emf)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.heic;*.avi;*.mp4;*.mov;*.mpeg;*.wmf;*.emf";	// +++ VOG Кулаков П.Л. 18.08.2020 CRM-846
КонецФункции // РасширенияИзображений()

	
#Область РаботаСУсловиямВопросов

#Если НЕ Сервер И НЕ ВнешнееСоединение Тогда
	
Функция ОткрытьФормуНастройкиУсловийЗависимости(ФормаВладелец, ВариантОпроса=Неопределено) Экспорт 
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ОтборКомпоновкиДанных", ФормаВладелец.НастройкиУсловийЗависимости.Настройки.Отбор);
	ПараметрыОткрытия.Вставить("ПараметрыКомпоновки", ФормаВладелец.НастройкиУсловийЗависимости.Настройки.ПараметрыДанных);
	
	ИнициализацияПараметрами = Новый Структура("ВариантОпроса", ВариантОпроса);
		
	ПараметрыОткрытия.Вставить("Заголовок", "Настройка зависимости " + СокрЛП(ФормаВладелец.Объект.Ссылка));
	ПараметрыОткрытия.Вставить("АдресСКДВоВременномХранилище", ФормаВладелец.АдресСхемыКомпоновкиУсловий);
	ПараметрыОткрытия.Вставить("ВозвращатьСтруктуруСДанными", Истина);
	
	ПараметрыОткрытия.Вставить("ИнициализацияПараметрами", ИнициализацияПараметрами);
	
	Оповещение = Новый ОписаниеОповещения("ОписаниеОповещенияЗакрытиеФормыРедактированияНастройкиСКД", вогУправлениеОпросамиКлиентСервер, ФормаВладелец); 
	
	ОткрытьФорму("ОбщаяФорма.CRM_ОтборКомпоновкиДанных", ПараметрыОткрытия, ФормаВладелец,,,, Оповещение);
	
КонецФункции

&НаКлиенте
Процедура ОписаниеОповещенияЗакрытиеФормыРедактированияНастройкиСКД(Значение, ФормаВладелец) Экспорт 
	
	Если Значение = Неопределено Тогда
		Возврат;
	Иначе
		
		ФормаВладелец.Модифицированность = Истина;
		ФормаВладелец.Объект.УстановленаЗависимость = Ложь;
		
		Если Значение = Ложь Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ФормаВладелец.Объект.УстановленаЗависимость = Истина;
	
	ФормаВладелец.НастройкиУсловийЗависимости.Настройки.Отбор.Элементы.Очистить();
	
	CRM_ОбщегоНазначенияКлиентСервер.СкопироватьОтборКомпоновкиДанных(ФормаВладелец.НастройкиУсловийЗависимости.Настройки.Отбор.Элементы, Значение.Отбор.Элементы);
	CRM_ОбщегоНазначенияКлиентСервер.СкопироватьПараметрыКомпоновки(ФормаВладелец.НастройкиУсловийЗависимости.Настройки.ПараметрыДанных, Значение.ПараметрыДанных );
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецЕсли

#КонецОбласти

