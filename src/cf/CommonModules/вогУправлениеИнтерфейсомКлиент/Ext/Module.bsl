
#Область ПрограммныйИнтерфейс

Процедура ВыполнитьКодКомандыНаКлиенте(Значение, ДополнительноеЗначение, ЭтаФорма, ЭтотОбъект, Объект) Экспорт 
	
	Если ТипЗнч(ДополнительноеЗначение) = Тип("Структура") Тогда
		
		Если ДополнительноеЗначение.Свойство("КодВыполнения") 
			И ЗначениеЗаполнено(ДополнительноеЗначение.КодВыполнения) Тогда
			
			Если ДополнительноеЗначение.Свойство("НаСервере") Тогда
				
				ЭтаФорма.Подключаемый_ОписаниеОповещенияДополнительнойКомандыСервер(Значение, ДополнительноеЗначение);
				
			Иначе 
				
				Если ДополнительноеЗначение.Свойство("Параметр1") Тогда
					Параметр1 = ДополнительноеЗначение.Параметр1;
				КонецЕсли;
				Если ДополнительноеЗначение.Свойство("Параметр2") Тогда
					Параметр2 = ДополнительноеЗначение.Параметр2;
				КонецЕсли;
				Если ДополнительноеЗначение.Свойство("Параметр3") Тогда
					Параметр3 = ДополнительноеЗначение.Параметр3;
				КонецЕсли;
				Если ДополнительноеЗначение.Свойство("Параметр4") Тогда
					Параметр4 = ДополнительноеЗначение.Параметр4;
				КонецЕсли;
				Если ДополнительноеЗначение.Свойство("Параметр5") Тогда
					Параметр5 = ДополнительноеЗначение.Параметр5;
				КонецЕсли;

				Попытка
					
					Выполнить(ДополнительноеЗначение.КодВыполнения);
					
				Исключение
					
					ТекстСообщения = НСтр("ru = 'Ошибка выполнения обработчика опиания оповещения'") + ОписаниеОшибки();
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					
				КонецПопытки;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработчикКомандыФормы(Команда, ЭтаФорма) Экспорт 
	
	СтруктураКоманды = НайтиСтрокуКоманды(ЭтаФорма, Команда.Имя);
	
	Если СтруктураКоманды = Неопределено ИЛИ  Не ЗначениеЗаполнено(СтруктураКоманды.Обработчик) Тогда
		Возврат;
	КонецЕсли;
	
	Параметр1			 = СтруктураКоманды.Параметр1;
	Параметр2			 = СтруктураКоманды.Параметр2;
	Параметр3			 = СтруктураКоманды.Параметр3;
	Параметр4			 = СтруктураКоманды.Параметр4;
	Параметр5			 = СтруктураКоманды.Параметр5;
		
	Попытка
	    Выполнить(СтруктураКоманды.Обработчик);
	Исключение
	 	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не удалось выполнить команду. Причина: '") + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
КонецПроцедуры

Функция НайтиСтрокуКоманды(Форма, ИмяКоманды) Экспорт
	
	Строки = Форма.ТаблицаКомандДополнительныеКоманды.НайтиСтроки(Новый Структура("ИмяКоманды", ИмяКоманды));	
	
	Если Строки.Количество() Тогда
		Возврат Строки[0]
	Иначе	
		Возврат Неопределено;	
	КонецЕсли;
	
КонецФункции

Процедура ОбработатьРасшифровкуИнформации(Форма, Расшифровка, НаправлениеДеятельности = Неопределено) Экспорт
	
	Если (ТипЗнч(Расшифровка) = Тип("СправочникСсылка.CRM_ЗначенияКлассификаторов")) Тогда
		КлассификаторСсылка = вогОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Расшифровка, "Владелец", Истина);
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("ПланВидовХарактеристикСсылка.CRM_Классификаторы") Тогда
		КлассификаторСсылка = Расшифровка;
	Иначе 
		Возврат;
	КонецЕсли;
	
	Если НаправлениеДеятельности = Неопределено Тогда
		НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.ПустаяСсылка");	
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений;
	СписокВыбора.Добавить(НСтр("ru = 'Открыть историю изменения'"),,, 	БиблиотекаКартинок.ИсторияИзменений);
	СписокВыбора.Добавить(НСтр("ru = 'Создать новую анкету'"),,, 		БиблиотекаКартинок.CRM_ПодсистемаАнкетирование);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Владелец", 				КлассификаторСсылка);
	СтруктураПараметров.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	СтруктураПараметров.Вставить("Респондент", 				Форма.Объект.Ссылка);
	СтруктураПараметров.Вставить("Форма", 					Форма);
	
	ОписаниеОповещенияВыбора = Новый ОписаниеОповещения(
		"ВыборДействияРасшифровки", 
		вогУправлениеИнтерфейсомКлиент, 
		СтруктураПараметров);
		
	Форма.ПоказатьВыборИзМеню(ОписаниеОповещенияВыбора, СписокВыбора);
	
КонецПроцедуры



//Кайдашов 06/06/19 {
// Возвращает параметры для выбора срока.
// Возвращаемое значение:
//  Структура - параметры для выбора срока.
//   * Форма - УправляемаяФорма - форма процесса или шаблона.
//   * ИмяРеквизитаСрокИсполнения - Строка
//   * ИмяРеквизитаСрокИсполненияДни - Строка
//   * ИмяРеквизитаСрокИсполненияЧасы - Строка
//   * ИмяРеквизитаСрокИсполненияМинуты - Строка
//   * ИмяРеквизитаВариантУстановкиСрока - Строка
//   * ИмяРеквизитаПредставлениеСрока - Строка
//   * ИмяОбъектаФормы - Строка
//   * СрокиПредшественников - Дата, ДанныеФормыКоллекция
//   * НаименованиеСрокаУчастника - Строка
//
Функция ПараметрыВыбораСрока() Экспорт
	
	
	Параметры = Новый Структура;
	
	Параметры.Вставить("Форма");
	Параметры.Вставить("ИмяРеквизитаСрокИсполнения");
	Параметры.Вставить("ИмяРеквизитаСрокИсполненияДни");
	Параметры.Вставить("ИмяРеквизитаСрокИсполненияЧасы");
	Параметры.Вставить("ИмяРеквизитаСрокИсполненияМинуты");
	Параметры.Вставить("ИмяРеквизитаВариантУстановкиСрока");
	Параметры.Вставить("ИмяРеквизитаПредставлениеСрока");
	Параметры.Вставить("ИмяОбъектаФормы");
	Параметры.Вставить("СрокиПредшественников");
	Параметры.Вставить("НаименованиеСрокаУчастника");
	Параметры.Вставить("Участник");
	
	Возврат Параметры;
	
КонецФункции
//}Кайдашов 06/06/19


#КонецОбласти

#Область ВспомогательныеПрцедурыФункции

Процедура ВыборДействияРасшифровки(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если ТипЗнч(РезультатВыбора) = Тип("ЭлементСпискаЗначений") Тогда
		
		Если РезультатВыбора.Значение = "Открыть историю изменения" Тогда
			
			//Кайдашов 855
			СтруктураОтбора  = Новый Структура;
			СтруктураОтбора.Вставить("Респондент", 				ДополнительныеПараметры.Респондент);
			СтруктураОтбора.Вставить("Владелец", 				ДополнительныеПараметры.Владелец);
			СтруктураОтбора.Вставить("НаправлениеДеятельности", ДополнительныеПараметры.НаправлениеДеятельности);
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор", 	СтруктураОтбора);
			ПараметрыФормы.Вставить("СформироватьПриОткрытии", 	Истина);
			
			ОткрытьФорму("Отчет.ИсторияЗначенийКлассификаторов.ФормаОбъекта", 
				ПараметрыФормы,                      	
				Форма,
				,
				,
				,
				, 
				РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			//СтруктураОтбора  = Новый Структура;
			//СтруктураОтбора.Вставить("Респондент", 				ДополнительныеПараметры.Респондент);
			//СтруктураОтбора.Вставить("Владелец", 				ДополнительныеПараметры.Владелец);
			//СтруктураОтбора.Вставить("НаправлениеДеятельности", ДополнительныеПараметры.НаправлениеДеятельности);
			//
			//ПараметрыФормы = Новый Структура;
			//ПараметрыФормы.Вставить("Отбор", 					СтруктураОтбора);
			//ПараметрыФормы.Вставить("СформироватьПриОткрытии", 	Истина);
			//
			//ОткрытьФорму("Отчет.вогРезультатыОпросов.ФормаОбъекта", 
			//	ПараметрыФормы,                      	
			//	Форма,
			//	,
			//	,
			//	,
			//	, 
			//	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				
		ИначеЕсли РезультатВыбора.Значение = "Создать новую анкету" Тогда
			
			СписокВариантовОпроса = ОпределитьВариантОпроса(
				ТипЗнч(ДополнительныеПараметры.Респондент),
				ДополнительныеПараметры.Владелец, 
				ДополнительныеПараметры.НаправлениеДеятельности);
				
			Если СписокВариантовОпроса.Количество() > 1 Тогда
				
				ОписаниеОповещенияВыбора = Новый ОписаниеОповещения(
					"ВыборВариантаОпросаЗавершение", 
					вогУправлениеИнтерфейсомКлиент, 
					ДополнительныеПараметры.Респондент);
					
				Форма.ПоказатьВыборИзМеню(ОписаниеОповещенияВыбора, СписокВариантовОпроса);
				
			ИначеЕсли СписокВариантовОпроса.Количество() = 1 Тогда
				
				ВыборВариантаОпросаФрагмент(СписокВариантовОпроса[0].Значение, ДополнительныеПараметры.Респондент);
				
			Иначе
				
				ТекстСообщения = НСтр("ru = 'Нет доступных вариантов опроса. Формирование анкеты невозможно!'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборВариантаОпросаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатВыбора) = Тип("ЭлементСпискаЗначений") Тогда
		ВыборВариантаОпросаФрагмент(РезультатВыбора.Значение, ДополнительныеПараметры);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборВариантаОпросаФрагмент(ВариантОпроса, Респондент)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Респондент", 		Респондент);
	ЗначенияЗаполнения.Вставить("ВариантОпроса", 	ВариантОпроса);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", 	ЗначенияЗаполнения);
	ПараметрыОткрытия.Вставить("ЗаполнятьДанными", 		Истина);
	
	ОткрытьФорму("Документ.вогАнкета.ФормаОбъекта", ПараметрыОткрытия);
	
КонецПроцедуры

Функция ОпределитьВариантОпроса(ТипРеспондента, Классификатор, НаправлениеДеятельности)
	
	Возврат вогУправлениеИнтерфейсомВызовСервера.ОпределитьВариантОпроса(
		ТипРеспондента, 
		Классификатор, 
		НаправлениеДеятельности);
	
КонецФункции

// ++ VOG Солодов В.В. 07.10.2020 CRM-572
Процедура Подключаемый_ОписаниеОповещенияДополнительнойКомандыСервер(Значение, ДополнительноеЗначение) Экспорт
	// заглушка
КонецПроцедуры
// -- VOG Солодов В.В. 07.10.2020 CRM-572

#КонецОбласти


