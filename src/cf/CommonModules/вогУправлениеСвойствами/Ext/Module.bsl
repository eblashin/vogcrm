
#Область ПрограммныйИнтерфейс

// Заполняет наборы свойств объекта. Обычно требуется, если наборов более одного.
//
// Параметры:
//  Объект       - Ссылка на владельца свойств.
//                 Объект владельца свойств.
//                 ДанныеФормыСтруктура (по типу объекта владельца свойств).
//
//  ТипСсылки    - Тип - тип ссылки владельца свойств.
//
//  НаборыСвойств - ТаблицаЗначений с колонками:
//                    Набор - СправочникСсылка.НаборыДополнительныхРеквизитовИСведений.
//
//                    // Далее свойства элемента формы типа ГруппаФормы вида обычная группа
//                    // или страница, которая создается, если наборов больше одного без учета
//                    // пустого набора, который описывает свойства группы удаленных реквизитов.
//                    
//                    // Если значение Неопределено, значит использовать значение по умолчанию.
//                    
//                    // Для любой группы управляемой формы.
//                    Высота                   - Число.
//                    Заголовок                - Строка.
//                    Подсказка                - Строка.
//                    РастягиватьПоВертикали   - Булево.
//                    РастягиватьПоГоризонтали - Булево.
//                    ТолькоПросмотр           - Булево.
//                    ЦветТекстаЗаголовка      - Цвет.
//                    Ширина                   - Число.
//                    ШрифтЗаголовка           - Шрифт.
//                    
//                    // Для обычной группы и страницы.
//                    Группировка              - ГруппировкаПодчиненныхЭлементовФормы.
//                    
//                    // Для обычной группы.
//                    Отображение                - ОтображениеОбычнойГруппы.
//                    ШиринаПодчиненныхЭлементов - ШиринаПодчиненныхЭлементовФормы.
//                    
//                    // Для страницы.
//                    Картинка                 - Картинка.
//                    ОтображатьЗаголовок      - Булево.
//
//  СтандартнаяОбработка - Булево - начальное значение Истина. Указывает получать ли
//                         основной набор, когда НаборыСвойств.Количество() равно нулю.
//
//  КлючНазначения   - Неопределено - (начальное значение) - указывает вычислить
//                      ключ назначения автоматически и добавить к значениям свойств
//                      формы КлючНазначенияИспользования и КлючСохраненияПоложенияОкна,
//                      чтобы изменения формы (настройки, положение и размер) сохранялись
//                      отдельно для разного состава наборов.
//                      Например, для каждого вида номенклатуры - свой состав наборов.
//
//                    - Строка - (не более 32 символа) - использовать указанный ключ
//                      назначения для добавления к значениям свойств формы.
//                      Пустая строка - не изменять свойства ключей формы, т.к. они
//                      устанавливается в форме и уже учитывают различия состава наборов.
//
//                    Добавка имеет формат "КлючНаборовСвойств<КлючНазначения>",
//                    чтобы <КлючНазначения> можно было обновлять без повторной добавки.
//                    При автоматическом вычислении <КлючНазначения> содержит хэш
//                    идентификаторов ссылок упорядоченных наборов свойств.
//
Процедура ЗаполнитьНаборыСвойствОбъекта(Объект, ТипСсылки, НаборыСвойств, СтандартнаяОбработка, КлючНазначения) Экспорт
	
	ТипЗначения = ТипЗнч(Объект);
	Если (ТипЗначения = Тип("ДокументСсылка.вогАнкета")
		ИЛИ ТипЗначения = Тип("ДокументОбъект.вогАнкета")
		ИЛИ ТипСсылки = Тип("ДокументСсылка.вогАнкета")) Тогда
		
		СписокСвойств = вогУправлениеОпросамиСервер.ПолучитьНаборыСвойствДляОпроса(Объект);	
		
	// ++ VOG Солодов В.В. 05.07.2019 task 437
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.вогКоллекцииНоменклатуры") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойств(Объект, Объект.Уровень.Наименование);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.CRM_ЗначенияКлассификаторов") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойств(Объект, Объект.Наименование);
	// -- VOG Солодов В.В. 05.07.2019
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Для Каждого ЭлементСписка Из СписокСвойств Цикл
		
		СтрокаНабора = НаборыСвойств.Добавить();
		
		СтрокаНабора.Набор 	   = ЭлементСписка.Значение;
		СтрокаНабора.Заголовок = ЭлементСписка.Представление;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПослеПолученияОписанияСвойств(Форма, Объект, ОписаниеСвойств) Экспорт
	
	ТипЗначения = ТипЗнч(Объект);
	Если ТипЗначения = Тип("ДокументСсылка.вогАнкета")
		ИЛИ ТипЗначения = Тип("ДокументОбъект.вогАнкета") Тогда
		
		МассивРазрешенныхСвойств = вогУправлениеОпросамиСервер.ПолучитьОписаниеСвойствОпроса(Объект);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	МассивИсключаемыхСтрок = Новый Массив;
	Для каждого СтрокаОписания Из ОписаниеСвойств Цикл
		Если МассивРазрешенныхСвойств.Найти(СтрокаОписания.Свойство) = Неопределено Тогда
			МассивИсключаемыхСтрок.Добавить(СтрокаОписания);
		
		КонецЕсли;
			
	КонецЦикла;
	
	Для каждого СтрокаОписания Из МассивИсключаемыхСтрок Цикл
		ОписаниеСвойств.Удалить(СтрокаОписания);	
		
	КонецЦикла;	
	
КонецПроцедуры

// Адаптированный вариант УправлениеСвойствами.ПередЗаписьюВидаОбъекта().
//
// Параметры:
//  ВидОбъекта                - Объект - например, вид номенклатуры перед записью.
//  ИмяОбъектаСоСвойствами    - Строка - например, Номенклатура.
//  ИмяРеквизитаНабораСвойств - Строка - используется, когда наборов свойств несколько или
//                              используется имя реквизита основного набора отличное от "НаборСвойств".
//
Процедура ПередЗаписьюВидаОбъекта(ВидОбъекта,
                                  ИмяОбъектаСоСвойствами,
                                  ИмяРеквизитаНабораСвойств = "НаборСвойств",
								  НачалоНаименования = "") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборСвойств   = ВидОбъекта[ИмяРеквизитаНабораСвойств];
	РодительНабора = Справочники.НаборыДополнительныхРеквизитовИСведений[ИмяОбъектаСоСвойствами];
	
	Если ЗначениеЗаполнено(НаборСвойств) Тогда
		
		СтарыеСвойстваНабора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			НаборСвойств, "Наименование, Родитель, ПометкаУдаления");
		
		Если СтарыеСвойстваНабора.Наименование    = НачалоНаименования + ВидОбъекта.Наименование
		   И СтарыеСвойстваНабора.ПометкаУдаления = ВидОбъекта.ПометкаУдаления
		   И СтарыеСвойстваНабора.Родитель        = РодительНабора Тогда
			
			Возврат;
		КонецЕсли;
		
		Если СтарыеСвойстваНабора.Родитель = РодительНабора Тогда
			ЗаблокироватьДанныеДляРедактирования(НаборСвойств);
			НаборСвойствОбъект = НаборСвойств.ПолучитьОбъект();
		Иначе
			НаборСвойствОбъект = НаборСвойств.Скопировать();
		КонецЕсли;
	Иначе
		НаборСвойствОбъект = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
		НаборСвойствОбъект.Используется = Истина;
	КонецЕсли;
	
	НаборСвойствОбъект.Наименование    = НачалоНаименования + ВидОбъекта.Наименование;
	НаборСвойствОбъект.ПометкаУдаления = ВидОбъекта.ПометкаУдаления;
	НаборСвойствОбъект.Родитель        = РодительНабора;
	НаборСвойствОбъект.Записать();
	
	ВидОбъекта[ИмяРеквизитаНабораСвойств] = НаборСвойствОбъект.Ссылка;
	
	// Обновление наименований необщих дополнительных реквизитов и сведений.
	Если Не ЗначениеЗаполнено(НаборСвойств) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаборСвойств", НаборСвойств);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Свойства.Ссылка КАК Ссылка,
	|	Свойства.НаборСвойств.Наименование КАК НаименованиеНабора,
	|	Свойства.НаборСвойств.ПометкаУдаления КАК ПометкаУдаленияНабора
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойства
	|ГДЕ
	|	Свойства.НаборСвойств = &НаборСвойств
	|	И ВЫБОР
	|			КОГДА Свойства.Наименование <> Свойства.Заголовок + "" ("" + Свойства.НаборСвойств.Наименование + "")""
	|				ТОГДА ИСТИНА
	|			КОГДА Свойства.ПометкаУдаления <> Свойства.НаборСвойств.ПометкаУдаления
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВыборкаСвойств = Запрос.Выполнить().Выбрать();
	Пока ВыборкаСвойств.Следующий() Цикл
		ЗаблокироватьДанныеДляРедактирования(ВыборкаСвойств.Ссылка);
		Объект = ВыборкаСвойств.Ссылка.ПолучитьОбъект();
		Объект.Наименование = Объект.Заголовок + " (" + Строка(ВыборкаСвойств.НаименованиеНабора) + ")";
		Объект.ПометкаУдаления = ВыборкаСвойств.ПометкаУдаленияНабора;
		Объект.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// ++ VOG Солодов В.В. 05.07.2019 task 425
Функция ПолучитьНаборыСвойств(ДанныеОбъекта, ИмяНабора)
	
	Если ОбщегоНазначения.ЗначениеСсылочногоТипа(ДанныеОбъекта) Тогда
		Ссылка = ДанныеОбъекта;
	Иначе
		Ссылка = ДанныеОбъекта.Ссылка;
	КонецЕсли;
	
	МетаданныеОбъекта 		= Ссылка.Метаданные();
	ИмяОбъектаМетаданных 	= МетаданныеОбъекта.Имя;
	ВидОбъектаМетаданных 	= ОбщегоНазначения.ВидОбъектаПоСсылке(Ссылка);
	
	Если ВидОбъектаМетаданных = "Справочник" Или ВидОбъектаМетаданных = "ПланВидовХарактеристик" Тогда
		Если ОбщегоНазначения.ОбъектЯвляетсяГруппой(ДанныеОбъекта) Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ИмяЭлемента 			= ВидОбъектаМетаданных + "_" + ИмяОбъектаМетаданных;
	ИмяОбщегоЭлемента 		= ИмяЭлемента + "_Общие";
	
	Наборы = Новый СписокЗначений;
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.CRM_ЗначенияКлассификаторов") Тогда
		
		Наборы.Добавить(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, 			"НаборСвойств"));
		Наборы.Добавить(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка.Владелец, 	"НаборСвойств"));
		
	ИначеЕсли ЗначениеЗаполнено(ИмяНабора) Тогда
		
		РодительНабора 	= Справочники.НаборыДополнительныхРеквизитовИСведений[ИмяЭлемента];
		Отбор 			= Новый Структура("Наименование", ИмяНабора);
		
		Выборка = Справочники.НаборыДополнительныхРеквизитовИСведений.Выбрать(РодительНабора,, Отбор);
		
		Пока Выборка.Следующий() Цикл
			Наборы.Добавить(Выборка.Ссылка);
		КонецЦикла;
		
	КонецЕсли;
	
	// Общий элемент для всех наборов
	Наборы.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений[ИмяОбщегоЭлемента]);
	
	Возврат Наборы;
	
КонецФункции // -- VOG Солодов В.В. 05.07.2019

#КонецОбласти
