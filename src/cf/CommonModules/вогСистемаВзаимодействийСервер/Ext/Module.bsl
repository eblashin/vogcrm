//Функция находит первое контекстное обсуждение по переданному объекту
//Параметры:
//	СсылкаНаОбъект - ЛюбаяСсылка
//Возвращает:
//	Тип: ИдентификаторОбсужденияСистемыВзаимодействия или Неопределено, если не найдено обсуждение
Функция ПолучитьОбсуждениеПоОбъекту(СсылкаНаОбъект) Экспорт
	
	URL = ПолучитьНавигационнуюСсылку(СсылкаНаОбъект);
	ОтборОбсуждения = Новый ОтборОбсужденийСистемыВзаимодействия;
	ОтборОбсуждения.КонтекстОбсуждения = Новый КонтекстОбсужденияСистемыВзаимодействия(URL);
	ОтборОбсуждения.КонтекстноеОбсуждение = Истина;
	СписокОбсуждений = СистемаВзаимодействия.ПолучитьОбсуждения(ОтборОбсуждения);
	Если СписокОбсуждений.Количество() > 0 тогда
		Возврат СписокОбсуждений[0].Идентификатор;
	КонецЕсли;
	Возврат Неопределено;
	
КонецФункции

//Функция создаёт новое контекстное обсуждение для объекта
//Сначала происходит поиск уже существующего обсуждения и возвращается его идентификатор, если найдено
//Параметры:
// СсылкаНаОбъект - любая ссылка
//Возвращает:
// Тип: ИдентификаторОбсужденияСистемыВзаимодействия или Неопределено, если не найдено обсуждение
Функция СоздатьНовоеОбсуждениеПоОбъекту(СсылкаНаОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = ПолучитьОбсуждениеПоОбъекту(СсылкаНаОбъект);
	Если Результат = Неопределено тогда
		URL = ПолучитьНавигационнуюСсылку(СсылкаНаОбъект);
		НовоеОбсуждение = СистемаВзаимодействия.СоздатьОбсуждение();
		НовоеОбсуждение.КонтекстОбсуждения = Новый КонтекстОбсужденияСистемыВзаимодействия(URL);
		НовоеОбсуждение.Отображаемое = Истина;
		НовоеОбсуждение.Заголовок = ""+СсылкаНаОбъект;
		НовоеОбсуждение.Записать();
		Результат = НовоеОбсуждение.Идентификатор;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//Процедура добавляет в регистр сведений вогНапоминанияОСообщениях записи
Процедура ДобавитьНапоминаниеДляПолучателейПриОтправкеСообщения(Получатели,Контекст,ЗаголовокОбсуждения,ТекстСообщения) экспорт
	
	Для каждого Получатель из Получатели цикл
		МЗ = РегистрыСведений.вогНапоминанияОСообщениях.СоздатьМенеджерЗаписи();
		МЗ.Контекст = Контекст;       
		МЗ.Пользователь = Справочники.Пользователи.НайтиПоРеквизиту("ИдентификаторПользователяИБ",СистемаВзаимодействия.ПолучитьИдентификаторПользователяИнформационнойБазы(Получатель));
		МЗ.ДатаСообщения = ТекущаяДата();
		МЗ.ЗаголовокОбсуждения = ЗаголовокОбсуждения;
		МЗ.ТекстСообщения = ТекстСообщения;
		МЗ.Записать();
		
		МЗ = РегистрыСведений.CRM_Напоминания.СоздатьМенеджерЗаписи();
		МЗ.Пользователь = Справочники.Пользователи.НайтиПоРеквизиту("ИдентификаторПользователяИБ",СистемаВзаимодействия.ПолучитьИдентификаторПользователяИнформационнойБазы(Получатель));
		МЗ.Предмет = Контекст;
		МЗ.ДатаНачала = ТекущаяДата();
		МЗ.ДатаОповещения =МЗ.ДатаНачала;
		МЗ.ДатаАктуальности = МЗ.ДатаНачала + 3*24*3600;
		МЗ.Содержание = ЗаголовокОбсуждения + Символы.ПС + Символы.ВК + ТекстСообщения;
		МЗ.Важность = 2;
		МЗ.Счетчик = 0;
		МЗ.Записать();
		
	КонецЦикла;
	
	
КонецПроцедуры

//Обработчик события получения формы, при открытии формы считаем что будет открыто обсуждение и все сообщения будут прочитаны
Процедура вогОткрытиеФормыОбъектаДляНапоминанийОбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт
	
	Если ВидФормы="ФормаОбъекта" и Параметры.Свойство("Ключ") тогда
		Контекст = ПолучитьНавигационнуюСсылку(Параметры.ключ);
		Набор = РегистрыСведений.вогНапоминанияОСообщениях.СоздатьНаборЗаписей();
		Набор.Отбор.Контекст.Установить(Контекст); 
		Набор.Отбор.Пользователь.Установить(Пользователи.ТекущийПользователь());
		Набор.Прочитать();
		Для каждого Запись из Набор цикл
			Запись.Прочитано = Истина;
		КонецЦикла;
		Набор.Записать();
	КонецЕсли;
	
	
КонецПроцедуры

//Обработчик события закрытия формы,считаем что будет открыто обсуждение и все сообщения будут прочитаны
//Необходимо добавлять вызов в обработки ПриЗакрытии
Процедура ПриЗакрытииФормыОбъектa(URL) Экспорт
	
		Набор = РегистрыСведений.вогНапоминанияОСообщениях.СоздатьНаборЗаписей();
		Набор.Отбор.Контекст.Установить(URL); 
		Набор.Отбор.Пользователь.Установить(Пользователи.ТекущийПользователь());
		Набор.Прочитать();
		Для каждого Запись из Набор цикл
			Запись.Прочитано = Истина;
		КонецЦикла;
		Набор.Записать();
		
КонецПроцедуры


