
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Взаимодействия"
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАМНЫЙ ИНТЕРФЕЙС

// Открывает форму нового документа "Электронное письмо исходящее"
// с переданными в процедуру параметрами.
//
// Параметры:
//  Отправитель  				- СправочникСсылка.УчетныеЗаписи	- Учетная запись, с которой выполняется отправка.
//  Получатель   				- Строка, СписокЗначений, Массив	- Список получателей письма.
//  Тема       				  	- Строка 							- Тема письма.
//  Текст        				- Строка 							- Текст письма.
//  СписокФайлов 				- Массив			 				- Вложения письма.
//  Предмет      				- Ссылка 							- Предмет письма.
//	ОписаниеОповещенияОЗакрытии	- ОписаниеОповещения				- Описание оповещения о закрытии.
//
Процедура CRM_ОткрытьФормуОтправкиПочтовогоСообщения(Знач Отправитель = Неопределено, Знач Получатель = Неопределено,
	Знач Тема = "", Знач Текст = "", Знач СписокФайлов = Неопределено, Знач Предмет = Неопределено,
	Знач ОписаниеОповещенияОЗакрытии = Неопределено) Экспорт
	
	ПараметрыПисьма = Новый Структура;
	
	ПараметрыПисьма.Вставить("УчетнаяЗапись", Отправитель);
	ПараметрыПисьма.Вставить("Кому", Получатель);
	ПараметрыПисьма.Вставить("Тема", Тема);
	ПараметрыПисьма.Вставить("Тело", "");

	ПараметрыПисьма.Вставить("Вложения", СписокФайлов);
	ПараметрыПисьма.Вставить("Предмет", Предмет);
	
	Если Отправитель = "ОтправкаПечатнойФормы" Тогда
		ПараметрыПисьма.УчетнаяЗапись = Неопределено;
		ПараметрыПисьма.Вставить("ОтправкаПечатнойФормы", Истина);
	КонецЕсли;
	
	Если ТипЗнч(Текст) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		ДанныеЗаполнения = Новый Структура;
		ДанныеЗаполнения.Вставить("ОснованиеВходящее", Текст);
		ДанныеЗаполнения.Вставить("Основание", Предмет);
		ПараметрыПисьма.Вставить("Основание", ДанныеЗаполнения);
		ПараметрыПисьма.Удалить("Тема");
	ИначеЕсли ЗначениеЗаполнено(Предмет) Тогда
		ПараметрыПисьма.Вставить("Основание", Предмет);
		Если ТипЗнч(Текст) = Тип("Строка") И Не ПустаяСтрока(Текст) Тогда
			ПараметрыПисьма.Вставить("Тело", Текст);	
		КонецЕсли;
	ИначеЕсли ТипЗнч(Текст) = Тип("Строка") И Не ПустаяСтрока(Текст) Тогда
		ПараметрыПисьма.Вставить("Тело", Текст);	
	КонецЕсли;
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", ПараметрыПисьма, , , , , ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры


// Процедура оповещает форму объекта-основания о том, что контакт создан и записан.
//
// Параметры:
//	Ссылка			- СправочникСсылка	- Ссылка на созданный контакт.
//	Наименование	- Строка			- Наименование контакта.
//	Основание		- Документссылка	- Ссылка на взаимодействие - основание.
//
Процедура КонтактСоздан(Ссылка, Наименование, Основание) Экспорт

	ВозвращаемыйПараметр = Новый Структура;
	ВозвращаемыйПараметр.Вставить("Ссылка",       Ссылка);
	ВозвращаемыйПараметр.Вставить("Наименование", Наименование);
	ВозвращаемыйПараметр.Вставить("Основание",    Основание);
	Оповестить("Контакт создан",ВозвращаемыйПараметр);

КонецПроцедуры // КонтактСоздан()

Процедура ДатаВзаимодействияНачалоВыбора(Объект, Элемент, ДанныеВыбора, СтандартнаяОбработка, СтруктураПараметров) Экспорт
	СтандартнаяОбработка = Ложь;
	
	Параметры = Новый Структура();
	Параметры.Вставить("РежимВыбора", Истина);
	
	Для Каждого ЭлементСтруктуры Из СтруктураПараметров Цикл
		Параметры.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;

	ФормаВыбора = ОткрытьФорму("Обработка.CRM_КалендарьМенеджера.Форма.Форма", Параметры, Элемент, Объект.Ссылка);
КонецПроцедуры


Процедура ДатаВзаимодействияПриИзменении(Объект, Элемент, СтруктураПараметров) Экспорт
	
	Важность = Неопределено;
	ТипУслуги  = Неопределено;
	Дата     = '00010101000000';
	Пользователь  = Неопределено;
	
	Если СтруктураПараметров.Свойство("Автор") Тогда
		Пользователь = СтруктураПараметров.Автор;
	КонецЕсли; 
	Если НЕ ЗначениеЗаполнено(Пользователь) И СтруктураПараметров.Свойство("Ответственный") Тогда
		Пользователь = СтруктураПараметров.Ответственный;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("Клиент") Тогда
		Клиент = СтруктураПараметров.Клиент;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ТипУслуги") Тогда
		ТипУслуги = СтруктураПараметров.ТипУслуги;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство("ДатаПоУмолчанию") Тогда
		Дата = СтруктураПараметров.ДатаПоУмолчанию;
	КонецЕсли;
	
	СтруктураВозможностиПланирования = CRM_ВзаимодействияСервер.ПроверитьВозможностьПланирования(Дата, Пользователь, Клиент, ТипУслуги);
	
	Если НЕ СтруктураВозможностиПланирования.МожноПланировать Тогда
		//Элемент.Значение = '00010101000000';
		
		СтруктураПараметров.Вставить("Дата", '00010101000000');
		
		НовоеСообщение = Новый СообщениеПользователю();
		НовоеСообщение.УстановитьДанные(Элемент);
		НовоеСообщение.Текст = "Планирование возможно только до " + Формат(СтруктураВозможностиПланирования.ДатаПланирования, "ДЛФ=DD") + " включительно!";
		НовоеСообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры


Процедура ДатаВзаимодействияОбработкаВыбора(Объект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка, СтруктураПараметров) Экспорт
	
КонецПроцедуры

