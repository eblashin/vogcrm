
/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЕЙСТВИЙ

// Процедура выполняет доступное действие
//
// Параметры:
//	Номер			- Число		- Номер действия (соответветствует значению параметра EvenType,
//									которое возвращает панель управления при выборе действия
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпВыполнитьДоступноеДействие(Номер, СтруктураЗвонка) Экспорт
	МассивДоступныхДействий	= сфпСофтФонПроСерверПереопределяемый.сфпПолучитьМассивДоступныхДействий();
	ЭлементМассива			= МассивДоступныхДействий[Номер];
	Попытка
		Выполнить("" + ЭлементМассива.Действие + "(СтруктураЗвонка)");
	Исключение
	КонецПопытки;	
КонецПроцедуры // сфпВыполнитьДоступноеДействие()

// Процедура выполняет автоматическое действие
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//  ОткрыватьЗвонок - Булево - Независимо от действия в настройках открывать телефонный звонок
//
Процедура сфпВыполнитьАвтоматическоеДействие(СтруктураЗвонка, ОткрыватьЗвонок = Ложь) Экспорт
	Если СтруктураЗвонка.ВходящийЗвонок Тогда
		НаименованиеДействия	= сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриВходящемЗвонке");
	Иначе	
		НаименованиеДействия	= сфпСофтФонПроСервер.сфпПолучитьЗначениеНастройкиПользователя("сфпДействиеПриИсходящемЗвонке");
	КонецЕсли;
	МассивАвтоматическихДействий = сфпСофтФонПроСерверПереопределяемый.сфпПолучитьМассивДоступныхДействий();
	Для Каждого ЭлементМассива Из МассивАвтоматическихДействий Цикл
		Если ЭлементМассива.Наименование = НаименованиеДействия Тогда
			Если НЕ ПустаяСтрока(ЭлементМассива.Действие) Тогда
				Попытка
					Выполнить("" + ЭлементМассива.Действие + "(СтруктураЗвонка)");
				Исключение
				КонецПопытки;
			Иначе
				// в настройках стоит "нет действий", проверим, что это команда панели и откроем звонок
				Если ОткрыватьЗвонок Тогда
					Попытка
						сфпОткрытьТелефонныйЗвонок(СтруктураЗвонка);
					Исключение
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры // сфпВыполнитьДоступноеДействие()

/////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ИНИЦИАЛИЗАЦИИ ФОРМ ОБЪЕКТОВ

// Функция создает и заполняет форму документа "CRM_СчетНаОплатуПокупателю"
//
// Параметры:
//	СтруктураЗвонка		- Структура	- Структура данных звонка
//	ДанныеЗаполнения	- Структура	- Структура данных для заполнения документа
//
Функция сфпИнициализироватьФормуСчета(СтруктураЗвонка, ДанныеЗаполнения)
	
	ИмяФормы = "Документ.CRM_СчетНаОплатуПокупателю.ФормаОбъекта";	
	ФормаСчета = ПолучитьФорму(ИмяФормы,,,СтруктураЗвонка.hCall);
	ФормаСчета.Объект["Дата"] 			= сфпСофтФонПроСервер.сфпТекущаяДата();
	ФормаСчета.Объект["Автор"]	        = сфпСофтФонПроСервер.сфпТекущийПользователь();
	ФормаСчета.Объект["Ответственный"]	= ФормаСчета.Объект["Автор"];
	ИмяПредопределенногоЗначения		= Нстр("ru ='Перечисление.ВариантыВажностиВзаимодействия.Обычная'"); 
	ФормаСчета.Объект["Важность"]		= ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
	ФормаСчета.Объект["Комментарий"]    = НСтр("ru='#Создан автоматически средствами СофтФон'");
	Если ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		ФормаСчета.Объект["ДокументОснование"]	= СтруктураЗвонка.НовыйЗвонок;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если Найти(Строка(СтруктураЗвонка.Контакт), НСтр("ru = '<Объект не найден>'")) > 0 Тогда
			ФормаСчета.Объект["Комментарий"]	= ФормаСчета.Объект["Комментарий"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона)
					+ Символы.ПС + НСтр("ru='К данному абоненту в доступе отказано.'")
					+ НСтр("ru=' Для разрешения работы с абонентом обратитесь к руководителю или администратору.'");
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
			ФормаСчета.Объект["Партнер"]	= СтруктураЗвонка.Контакт;
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ФормаСчета.Объект["КонтактноеЛицо"]		= СтруктураЗвонка.Контакт;
			ФормаСчета.Объект["Партнер"]			= сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		    Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ФормаСчета.Объект["Партнер"]	= Клиент;
			КонецЕсли;
		Иначе
			ФормаСчета.Объект["Комментарий"]	= ФормаСчета.Объект["Комментарий"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона);
		КонецЕсли;
	КонецЕсли;
	
	ФиксироватьПервичныйИнтерес = сфпСофтФонПроСервер.сфпПолучитьЗначениеКонстантыФиксироватьПервичныйИнтерес();
	Если ФиксироватьПервичныйИнтерес Тогда
		Если НЕ (ДанныеЗаполнения = Неопределено) И ДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
			ИмяПредопределенногоЗначения		 = Нстр("ru ='ПланВидовХарактеристик.КаналыРекламныхВоздействий.CRM_CoMagic'");
			ФормаСчета.КаналПервичногоИнтереса = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
		Иначе
			ИмяПредопределенногоЗначения		 = Нстр("ru ='ПланВидовХарактеристик.КаналыРекламныхВоздействий.CRM_БезУказанияИсточника'");
			ФормаСчета.КаналПервичногоИнтереса = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	
	Возврат ФормаСчета;
КонецФункции

// Функция создает и заполняет форму документа "ЗаказКлиента"
// Используется в тех объединенных решениях, где есть документ  "Заказ клиента"
//
// Параметры:
//	СтруктураЗвонка		- Структура	- Структура данных звонка
//	ДанныеЗаполнения	- Структура	- Структура данных для заполнения документа
//
Функция сфпИнициализироватьФормуЗаказаКлиента(СтруктураЗвонка, ДанныеЗаполнения)
	
	ИмяФормы = "Документ.ЗаказКлиента.ФормаОбъекта";	
	ФормаЗаказа = ПолучитьФорму(ИмяФормы,,,СтруктураЗвонка.hCall);
	ФормаЗаказа.Объект["Дата"] 			= сфпСофтФонПроСервер.сфпТекущаяДата();
	ФормаЗаказа.Объект["Менеджер"]		= сфпСофтФонПроСервер.сфпТекущийПользователь();
	ФормаЗаказа.Объект["Организация"]	= CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
	ФормаЗаказа.Объект["Комментарий"]    = НСтр("ru='#Создан автоматически средствами СофтФон'");
	Если ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		ФормаЗаказа.Объект["ДокументОснование"]	= СтруктураЗвонка.НовыйЗвонок;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если Найти(Строка(СтруктураЗвонка.Контакт), НСтр("ru = '<Объект не найден>'")) > 0 Тогда
			ФормаЗаказа.Объект["Комментарий"]	= ФормаЗаказа.Объект["Комментарий"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона)
					+ Символы.ПС + НСтр("ru='К данному абоненту в доступе отказано.'")
					+ НСтр("ru=' Для разрешения работы с абонентом обратитесь к руководителю или администратору.'");
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
			ФормаЗаказа.Объект["Партнер"]		= СтруктураЗвонка.Контакт;
			ФормаЗаказа.Объект["Контрагент"] 	= сфпСофтФонПроСервер.сфпПолучитьКонтрагентаПартнера(СтруктураЗвонка.Контакт);
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ФормаЗаказа.Объект["КонтактноеЛицо"]	= СтруктураЗвонка.Контакт;
			ФормаЗаказа.Объект["Партнер"]			= сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			ФормаЗаказа.Объект["Контрагент"] 		= сфпСофтФонПроСервер.сфпПолучитьКонтрагентаПартнера(ФормаЗаказа.Объект["Партнер"]);
		Иначе
			ФормаЗаказа.Объект["Комментарий"]	= ФормаЗаказа.Объект["Комментарий"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона);
		КонецЕсли;
	КонецЕсли;
		
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	
	Возврат ФормаЗаказа;
КонецФункции

// Функция создает и заполняет форму документа "CRM_Интерес"
//
// Параметры:
//	СтруктураЗвонка		- Структура	- Структура данных звонка
//	ДанныеЗаполнения	- Структура	- Структура данных для заполнения документа
//
Функция сфпИнициализироватьФормуИнтереса(СтруктураЗвонка, ДанныеЗаполнения)
	
	ИмяФормы = "Документ.CRM_Интерес.ФормаОбъекта";	
	ФормаИнтереса = ПолучитьФорму(ИмяФормы,,,СтруктураЗвонка.hCall);
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	
	ФормаИнтереса.Объект["Автор"] 				= сфпСофтФонПроСервер.сфпТекущийПользователь();
	ФормаИнтереса.Объект["Дата"] 				= сфпСофтФонПроСервер.сфпТекущаяДата();
	ФормаИнтереса.Объект["Ответственный"] 		= ФормаИнтереса.Объект["Автор"];
		
	ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
	Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
		ФормаИнтереса.Объект["Организация"] = ЗначениеНастройки;
	Иначе
		ФормаИнтереса.Объект["Организация"] = CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		ФормаИнтереса.Объект["ДокументОснование"]	= СтруктураЗвонка.НовыйЗвонок;
	КонецЕсли;
	
	cфпСтруктураПользователя = сфпСофтФонПроСервер.сфпПолучитьЗначенияРеквизитовПользователя(ФормаИнтереса.Объект["Автор"]);
	ФормаИнтереса.Объект["Подразделение"]       = cфпСтруктураПользователя.Подразделение;
	ФормаИнтереса.Объект["Офис"]       			= cфпСтруктураПользователя.Офис;
	ИмяПредопределенногоЗначения		 		= Нстр("ru ='Справочник.CRM_СостоянияИнтересов.ВыявлениеПотребностей'");
	ФормаИнтереса.Объект["СостояниеИнтереса"]   = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
	ФормаИнтереса.сфпНомерТелефона 	            = СтруктураЗвонка.НомерТелефона;
	ФормаИнтереса.Объект["Тема"]				= НСтр("ru='#Создан автоматически средствами СофтФон'") 
	+ ?(ЗначениеЗаполнено(СтруктураЗвонка.НомерТелефона), Нстр("ru = ', номер телефона: '") + СтруктураЗвонка.НомерТелефона, "");
	ИмяПредопределенногоЗначения		 		= Нстр("ru ='Справочник.CRM_ТипУслуги.ПоставкаТоварыУслуги'");
	ФормаИнтереса.Объект["ТипУслуги"]			= ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если Найти(Строка(СтруктураЗвонка.Контакт), НСтр("ru = '<Объект не найден>'")) > 0 Тогда
			ФормаИнтереса.Объект["Описание"]	= ФормаИнтереса.Объект["Описание"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона)
					+ Символы.ПС + НСтр("ru='К данному абоненту в доступе отказано.'")
					+ НСтр("ru=' Для разрешения работы с абонентом обратитесь к руководителю или администратору.'");
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
			ФормаИнтереса.Объект["Партнер"]			= СтруктураЗвонка.Контакт;
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ФормаИнтереса.Объект["КонтактноеЛицо"]	= СтруктураЗвонка.Контакт;
			ФормаИнтереса.Объект["Партнер"]			= сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		    Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ФормаИнтереса.Объект["Партнер"]	= Клиент;
			Иначе
				ФормаИнтереса.Объект["ПотенциальныйКлиент"]	= СтруктураЗвонка.Контакт;
			КонецЕсли;
		Иначе
			ФормаИнтереса.Объект["Описание"]	= ФормаИнтереса.Объект["Описание"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона);
		КонецЕсли;
	КонецЕсли;
	
	ФиксироватьПервичныйИнтерес = сфпСофтФонПроСервер.сфпПолучитьЗначениеКонстантыФиксироватьПервичныйИнтерес();
	
	Если НЕ (ДанныеЗаполнения = Неопределено) И ДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
		сфпСтруктураВнешнихДанных	= ДанныеЗаполнения.сфпСтруктураCoMagic;
		//ФормаИнтереса.Объект["сфпCoMagicID"]	= сфпСтруктураВнешнихДанных.comagic_context.visitor_id;
		ФормаИнтереса.Объект["Описание"]		= ФормаИнтереса.Объект["Описание"] + ?(ФормаИнтереса.Объект["Описание"], "", Символы.ПС) 
		+ НСтр("ru='Кампания: '") + сфпСтруктураВнешнихДанных.comagic_context.campaign + Символы.ПС 
		+ НСтр("ru='Сайт: '") + сфпСтруктураВнешнихДанных.comagic_context.site + Символы.ПС
		+ НСтр("ru='Ключевые слова: '") + сфпСтруктураВнешнихДанных.comagic_context.search_query; 
		Если ФиксироватьПервичныйИнтерес Тогда
			ИмяПредопределенногоЗначения		 		= Нстр("ru ='ПланВидовХарактеристик.КаналыРекламныхВоздействий.CRM_CoMagic'");
			ФормаИнтереса.КаналПервичногоИнтереса 		= ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
			ФормаИнтереса.ИсточникПервичногоИнтереса 	= сфпСофтФонПроСервер.сфпНайтиМаркетинговоеМероприятие(сфпСтруктураВнешнихДанных.comagic_context.campaign);
		КонецЕсли;
	Иначе
		Если ФиксироватьПервичныйИнтерес Тогда
			ИмяПредопределенногоЗначения		 = Нстр("ru ='ПланВидовХарактеристик.КаналыРекламныхВоздействий.CRM_БезУказанияИсточника'");
			ФормаИнтереса.КаналПервичногоИнтереса = ПредопределенноеЗначение(ИмяПредопределенногоЗначения);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	
	Возврат ФормаИнтереса;

КонецФункции

/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВЫПОЛНЕНИЯ ДЕЙСТВИЙ

// Процедура открывает телефонный звонок
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьТелефонныйЗвонок(СтруктураЗвонка)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", СтруктураЗвонка.НовыйЗвонок);
	Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьТелефонныйЗвонокЗавершение", ЭтотОбъект, Новый Структура("ПараметрыФормы", ПараметрыФормы));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"]);
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьТелефонныйЗвонокЗавершение(СписокКонтактов[0].Значение,Новый Структура("ПараметрыФормы", ПараметрыФормы));
		Иначе
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Ложь);
			ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
		КонецЕсли;
	Иначе
		ОткрытьФорму("Документ.ТелефонныйЗвонок.Форма.сфпФормаДокумента", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьТелефонныйЗвонок()

// Процедура заканчивает команду открытия звонка после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "КонтактАбонент"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьТелефонныйЗвонокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ПараметрыФормы = ДополнительныеПараметры.ПараметрыФормы;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		ПараметрыФормы.Вставить("АбонентКонтакт", Результат);
	КонецЕсли;
	ОткрытьФорму("Документ.ТелефонныйЗвонок.Форма.сфпФормаДокумента", ПараметрыФормы);
КонецПроцедуры // сфпОткрытьТелефонныйЗвонокЗавершение()

// Процедура открывает карточку контакта
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьКарточкуКонтакта(СтруктураЗвонка)
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		ПоказатьЗначение(, СтруктураЗвонка.Контакт);
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	ИначеЕсли ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьКарточкуКонтактаЗавершение", ЭтотОбъект, Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьКарточкуКонтактаЗавершение(СписокКонтактов[0].Значение,Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		Иначе
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Ложь);
			ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
		КонецЕсли;
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьКарточкуКонтакта()

// Процедура заканчивает команду открытия события после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьКарточкуКонтактаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		ПоказатьЗначение(, Результат);
		СтруктураЗвонка.Вставить("Контакт", Результат);
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьКарточкуКонтактаЗавершение()

// Функция создает и открывает документ "CRM_СчетНаОплатуПокупателю"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьСчетНаОплату(СтруктураЗвонка)
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	ФормаСчета = сфпИнициализироватьФормуСчета(СтруктураЗвонка, сфпДанныеЗаполнения);
	Если НЕ (ФормаСчета = Неопределено) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
			ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьСчетНаОплатуЗавершение", ЭтотОбъект, Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаСчета, СтруктураЗвонка));
			СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
			Если СписокКонтактов.Количество() = 1 Тогда
				сфпОткрытьСчетНаОплатуЗавершение(СписокКонтактов[0].Значение,Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаСчета, СтруктураЗвонка));
			Иначе
				ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
				ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
				ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
			КонецЕсли;
		Иначе
			ФормаСчета.Модифицированность = Истина;
			ФормаСчета.Открыть();
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			ФормаСчета.Объект["ДокументОснование"] = НовыйЗвонок;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // сфпОткрытьСчетНаОплату()

// Процедура заканчивает команду открытия счета после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров
//
Процедура сфпОткрытьСчетНаОплатуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ФормаДокумента 	   = ДополнительныеПараметры.ФормаДокумента;
	СтруктураЗвонка    = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		Если ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры") Тогда
			ФормаДокумента.Объект["Партнер"] = Результат;
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ФормаДокумента.Объект["Партнер"] 		= сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			ФормаДокумента.Объект["КонтактноеЛицо"] = Результат;
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		    Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ФормаДокумента.Объект["Партнер"]	= Клиент;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ФормаДокумента.Модифицированность = Истина;
	ФормаДокумента.Открыть();
	НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
	сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	ФормаДокумента.Объект["ДокументОснование"] = НовыйЗвонок;
КонецПроцедуры // сфпОткрытьСчетНаОплатуЗавершение()

// Функция создает и открывает документ "Заказ клиента"
// Используется в тех объединенных решениях, где есть документ  "Заказ клиента"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьЗаказКлиента(СтруктураЗвонка)
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;		
	ФормаЗаказа = сфпИнициализироватьФормуЗаказаКлиента(СтруктураЗвонка, сфпДанныеЗаполнения);
	Если НЕ (ФормаЗаказа = Неопределено) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда		
			ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьЗаказКлиентаЗавершение", ЭтотОбъект, Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаЗаказа, СтруктураЗвонка));			
			СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
			Если СписокКонтактов.Количество() = 1 Тогда
				сфпОткрытьЗаказКлиентаЗавершение(СписокКонтактов[0].Значение,Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаЗаказа, СтруктураЗвонка));
			Иначе				
				ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
				ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
				ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
			КонецЕсли;				
		Иначе			
			ФормаЗаказа.Модифицированность = Истина;
			ФормаЗаказа.Открыть();
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка); 				
			ФормаЗаказа.Объект["ДокументОснование"] = НовыйЗвонок;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // сфпОткрытьСчетНаОплату() 	

// Процедура заканчивает команду открытия счета после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьЗаказКлиентаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ФормаДокумента 	   = ДополнительныеПараметры.ФормаДокумента;
	СтруктураЗвонка    = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);				
		Если ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры") Тогда
			ФормаДокумента.Объект["Партнер"]		= Результат;
			ФормаДокумента.Объект["Контрагент"] 	= сфпСофтФонПроСервер.сфпПолучитьКонтрагентаПартнера(Результат);
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ФормаДокумента.Объект["Партнер"] 		= сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			ФормаДокумента.Объект["Контрагент"] 	= сфпСофтФонПроСервер.сфпПолучитьКонтрагентаПартнера(ФормаДокумента.Объект["Партнер"]);			
			ФормаДокумента.Объект["КонтактноеЛицо"] = Результат;			
		КонецЕсли;
	КонецЕсли;	
	ФормаДокумента.Модифицированность = Истина;
	ФормаДокумента.Открыть();
	НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
	сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка); 	
	ФормаДокумента.Объект["ДокументОснование"] = НовыйЗвонок;
КонецПроцедуры // сфпОткрытьСчетНаОплатуЗавершение()

// Функция открывает список документов "Анкета"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьСписокАнкет(СтруктураЗвонка)
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры"))
			ИЛИ (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Пользователи"))
			ИЛИ (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор", Новый Структура("Респондент", СтруктураЗвонка.Контакт));
			ПараметрыФормы.Вставить("Респондент", СтруктураЗвонка.Контакт);
			ОткрытьФорму("Документ.Анкета.Форма.ФормаСписка", ПараметрыФормы);
		КонецЕсли;
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	ИначеЕсли ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьСписокАнкетЗавершение", ЭтотОбъект, Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьСписокАнкетЗавершение(СписокКонтактов[0].Значение,Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		Иначе
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
			ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
		КонецЕсли;
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьСписокАнкет()

// Процедура заканчивает команду открытия списка анкет после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьСписокАнкетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	СтруктураЗвонка    = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		Если (ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры"))
			ИЛИ (ТипЗнч(Результат) = Тип("СправочникСсылка.Пользователи"))
			ИЛИ (ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор", Новый Структура("Респондент", Результат));
			ПараметрыФормы.Вставить("Респондент", Результат);
			ОткрытьФорму("Документ.Анкета.Форма.ФормаСписка", ПараметрыФормы);
		КонецЕсли;
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры

// Функция открывает отчет "CRM_КарточкаКлиента"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьДосьеКлиента(СтруктураЗвонка)
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "CRM_КарточкаКлиента") Тогда
			ИмяОтчета = "CRM_КарточкаКлиента";
		ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "ДосьеПартнера") Тогда
			ИмяОтчета = "ДосьеПартнера";
		КонецЕсли;
		
		Если (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Партнер", СтруктураЗвонка.Контакт);
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма",	ПараметрыФормы);
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		ИначеЕсли (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Партнер", сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт));
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма",	ПараметрыФормы);
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		// +CRM3
		ИначеЕсли (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты")) Тогда
			Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Партнер", Клиент);
				ОткрытьФорму("Отчет."+ИмяОтчета+".Форма",	ПараметрыФормы);
			КонецЕсли;
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		// -CRM3
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьДосьеКлиентаЗавершение", ЭтотОбъект, Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьДосьеКлиентаЗавершение(СписокКонтактов[0].Значение,Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		Иначе
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
			ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
		КонецЕсли;
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьДосьеКлиента()

// Процедура заканчивает команду открытия досье клиента после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров
//
Процедура сфпОткрытьДосьеКлиентаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;	
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "CRM_КарточкаКлиента") Тогда
			ИмяОтчета = "CRM_КарточкаКлиента";
		ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "ДосьеПартнера") Тогда
			ИмяОтчета = "ДосьеПартнера";
		КонецЕсли;
		
		СтруктураЗвонка.Вставить("Контакт", Результат);
		Если (ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Партнер", Результат);
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма",	ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		ИначеЕсли (ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Партнер", сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат));
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма",	ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		// +CRM3
		ИначеЕсли (ТипЗнч(Результат) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты")) Тогда
			Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Партнер", Клиент);
				ОткрытьФорму("Отчет."+ИмяОтчета+".Форма",	ПараметрыФормы,, Новый УникальныйИдентификатор());
			КонецЕсли;
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			// -CRM3
		Иначе
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		КонецЕсли;
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьДосьеКлиентаЗавершение()

// Функция открывает отчет "CRM_ДебиторскаяЗадолженностьПоСрокамДолга"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьДебиторскуюЗадолженность(СтруктураЗвонка)
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "CRM_ДебиторскаяЗадолженностьПоСрокамДолга") Тогда
			ИмяОтчета = "CRM_ДебиторскаяЗадолженностьПоСрокамДолга";
		ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "СостояниеРасчетовСКлиентами") Тогда
			ИмяОтчета = "СостояниеРасчетовСКлиентами";
		КонецЕсли;
		
		Если (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Партнер", СтруктураЗвонка.Контакт));
			ПараметрыФормы.Вставить("КлючВарианта",	"Основной");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		ИначеЕсли (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Партнер", сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт)));
			ПараметрыФормы.Вставить("КлючВарианта",	"Основной");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,,Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		// +CRM3
		ИначеЕсли (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты")) Тогда
			Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Отбор",	Новый Структура("Партнер", Клиент));
				ПараметрыФормы.Вставить("КлючВарианта",	"Основной");
				ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
				ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,,Новый УникальныйИдентификатор());
			КонецЕсли;
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		// -CRM3
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьДебиторскуюЗадолженностьЗавершение", ЭтотОбъект, Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьДебиторскуюЗадолженностьЗавершение(СписокКонтактов[0].Значение,Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		Иначе
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
			ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
		КонецЕсли;
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьДебиторскуюЗадолженность()

// Процедура заканчивает команду открытия дебиторской задолженности после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьДебиторскуюЗадолженностьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "CRM_ДебиторскаяЗадолженностьПоСрокамДолга") Тогда
			ИмяОтчета = "CRM_ДебиторскаяЗадолженностьПоСрокамДолга";
		ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "СостояниеРасчетовСКлиентами") Тогда
			ИмяОтчета = "СостояниеРасчетовСКлиентами";
		КонецЕсли;
		
		СтруктураЗвонка.Вставить("Контакт", Результат);
		Если (ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Партнер", Результат));
			ПараметрыФормы.Вставить("КлючВарианта",	"Основной");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		ИначеЕсли (ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Партнер", сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат)));
			ПараметрыФормы.Вставить("КлючВарианта",	"Основной");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			// +CRM3
		ИначеЕсли (ТипЗнч(Результат) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты")) Тогда
			Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Отбор",	Новый Структура("Партнер", Клиент));
				ПараметрыФормы.Вставить("КлючВарианта",	"Основной");
				ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
				ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			КонецЕсли;
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			// -CRM3
		Иначе
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		КонецЕсли;
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьДебиторскуюЗадолженностьЗавершение()

// Функция открывает отчет "CRM_ВедомостьВзаиморасчетыСКлиентами"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьВедомостьВзаиморасчетов(СтруктураЗвонка)
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "CRM_ВедомостьВзаиморасчетыСКлиентами") Тогда
			ИмяОтчета = "CRM_ВедомостьВзаиморасчетыСКлиентами";
		ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "РасчетыСКлиентами") Тогда
			ИмяОтчета = "РасчетыСКлиентами";
		КонецЕсли;
		
		Если (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", СтруктураЗвонка.Контакт));
			ПараметрыФормы.Вставить("КлючВарианта",	"Ведомость");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		ИначеЕсли (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт)));
			ПараметрыФормы.Вставить("КлючВарианта",	"Ведомость");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		// +CRM3
		ИначеЕсли (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты")) Тогда
			Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", Клиент));
				ПараметрыФормы.Вставить("КлючВарианта",	"Ведомость");
				ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
				ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			КонецЕсли;
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		// -CRM3
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьВедомостьВзаиморасчетовЗавершение", ЭтотОбъект, Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьВедомостьВзаиморасчетовЗавершение(СписокКонтактов[0].Значение,Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		Иначе
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
			ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
		КонецЕсли;
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьВедомостьВзаиморасчетов()

// Процедура заканчивает команду открытия ведомости взаиморасчётов после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпОткрытьВедомостьВзаиморасчетовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "CRM_ВедомостьВзаиморасчетыСКлиентами") Тогда
			ИмяОтчета = "CRM_ВедомостьВзаиморасчетыСКлиентами";
		ИначеЕсли CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Отчеты", "РасчетыСКлиентами") Тогда
			ИмяОтчета = "РасчетыСКлиентами";
		КонецЕсли;
		
		СтруктураЗвонка.Вставить("Контакт", Результат);
		Если (ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", Результат));
			ПараметрыФормы.Вставить("КлючВарианта",	"Ведомость");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		ИначеЕсли (ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат)));
			ПараметрыФормы.Вставить("КлючВарианта",	"Ведомость");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			// +CRM3
		ИначеЕсли (ТипЗнч(Результат) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты")) Тогда
			Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", Клиент));
				ПараметрыФормы.Вставить("КлючВарианта",	"Ведомость");
				ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
				ОткрытьФорму("Отчет."+ИмяОтчета+".Форма", ПараметрыФормы,, Новый УникальныйИдентификатор());
			КонецЕсли;
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			// -CRM3
		Иначе
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		КонецЕсли;
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
КонецПроцедуры // сфпОткрытьВедомостьВзаиморасчетовЗавершение()

// Функция открывает отчет "CRM_Продажи"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьПродажи(СтруктураЗвонка)
	
	ИмяФормыОтчетаПоПродажам = "Отчет.CRM_Продажи.Форма";
	
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", СтруктураЗвонка.Контакт));
			ПараметрыФормы.Вставить("КлючВарианта",	"ПоКлиентам");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму(ИмяФормыОтчетаПоПродажам, ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		ИначеЕсли (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт)));
			ПараметрыФормы.Вставить("КлючВарианта",	"ПоКлиентам");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму(ИмяФормыОтчетаПоПродажам, ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		// +CRM3
		ИначеЕсли (ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты")) Тогда
			Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", Клиент));
				ПараметрыФормы.Вставить("КлючВарианта",	"ПоКлиентам");
				ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
				ОткрытьФорму(ИмяФормыОтчетаПоПродажам, ПараметрыФормы,, Новый УникальныйИдентификатор());
			КонецЕсли;
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		// -CRM3
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьПродажиЗавершение", ЭтотОбъект, Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпОткрытьПродажиЗавершение(СписокКонтактов[0].Значение,Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		Иначе
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
			ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
		КонецЕсли;
		
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
	
КонецПроцедуры // сфпОткрытьПродажи()

// Процедура заканчивает команду открытия отчёта по продажам после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров
//
Процедура сфпОткрытьПродажиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ИмяФормыОтчетаПоПродажам = "Отчет.CRM_Продажи.Форма";
	
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		Если (ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", Результат));
			ПараметрыФормы.Вставить("КлючВарианта",	"ПоКлиентам");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму(ИмяФормыОтчетаПоПродажам, ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		ИначеЕсли (ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
			ПараметрыФормы = Новый Структура;
			ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат)));
			ПараметрыФормы.Вставить("КлючВарианта",	"ПоКлиентам");
			ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
			ОткрытьФорму(ИмяФормыОтчетаПоПродажам, ПараметрыФормы,, Новый УникальныйИдентификатор());
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		// +CRM3
		ИначеЕсли (ТипЗнч(Результат) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты")) Тогда
			Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("Отбор",	Новый Структура("Клиент", Клиент));
				ПараметрыФормы.Вставить("КлючВарианта",	"ПоКлиентам");
				ПараметрыФормы.Вставить("СформироватьПриОткрытии",	Истина);
				ОткрытьФорму(ИмяФормыОтчетаПоПродажам, ПараметрыФормы,, Новый УникальныйИдентификатор());
			КонецЕсли;
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		Иначе
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			// -CRM3
		КонецЕсли;
		
	Иначе
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	КонецЕсли;
	
КонецПроцедуры // сфпОткрытьПродажиЗавершение()

// +CRM3

// Процедура регистрирует обращение
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпРегистрацияОбращения(СтруктураЗвонка)
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(СтруктураЗвонка.Контакт);
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТелефонныйЗвонок",		ПредопределенноеЗначение("Документ.ТелефонныйЗвонок.ПустаяСсылка"));
		ПараметрыФормы.Вставить("МассивСсылок",			МассивСсылок);
		ПараметрыФормы.Вставить("НомерТелефона",		СтруктураЗвонка.НомерТелефона);
		Если НЕ (сфпДанныеЗаполнения = Неопределено) И сфпДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
			сфпСтруктураВнешнихДанных	= сфпДанныеЗаполнения.сфпСтруктураCoMagic;
			ПараметрыФормы.Вставить("сфпСтруктураВнешнихДанных",		сфпСтруктураВнешнихДанных);
		КонецЕсли;
		ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма", ПараметрыФормы, ЭтотОбъект, СтруктураЗвонка.НомерТелефона);
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		Оповестить("ЗаполнитьОснованиеОбращения", НовыйЗвонок)
	ИначеЕсли ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
		ОписаниеВыбора = Новый ОписаниеОповещения("сфпРегистрацияОбращенияЗавершение", ЭтотОбъект, Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
		Если СписокКонтактов.Количество() = 1 Тогда
			сфпРегистрацияОбращенияЗавершение(СписокКонтактов[0].Значение,Новый Структура("СтруктураЗвонка", СтруктураЗвонка));
		Иначе
			ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
			ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
			ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
		КонецЕсли;
	Иначе
		ПараметрыФормы = Новый Структура;
		МассивСсылок = Новый Массив;
		ПараметрыФормы.Вставить("МассивСсылок",			МассивСсылок);		
		ПараметрыФормы.Вставить("НомерТелефона",		СтруктураЗвонка.НомерТелефона);
		ПараметрыФормы.Вставить("ТелефонныйЗвонок",		ПредопределенноеЗначение("Документ.ТелефонныйЗвонок.ПустаяСсылка"));
		Если НЕ (сфпДанныеЗаполнения = Неопределено) И сфпДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
			сфпСтруктураВнешнихДанных	= сфпДанныеЗаполнения.сфпСтруктураCoMagic;
			ПараметрыФормы.Вставить("сфпСтруктураВнешнихДанных",		сфпСтруктураВнешнихДанных);
		КонецЕсли;
		ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма", ПараметрыФормы, ЭтотОбъект, СтруктураЗвонка.НомерТелефона);
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		Оповестить("ЗаполнитьОснованиеОбращения", НовыйЗвонок)
	КонецЕсли;
КонецПроцедуры // сфпРегистрацияОбращения()

// Процедура заканчивает команду открытия мастера обращения после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров	
//
Процедура сфпРегистрацияОбращенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	СтруктураЗвонка = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		МассивСсылок = Новый Массив;
		МассивСсылок.Добавить(Результат);
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ТелефонныйЗвонок",		ПредопределенноеЗначение("Документ.ТелефонныйЗвонок.ПустаяСсылка"));
		ПараметрыФормы.Вставить("МассивСсылок",			МассивСсылок);
		ПараметрыФормы.Вставить("НомерТелефона",		СтруктураЗвонка.НомерТелефона);
		Если НЕ (сфпДанныеЗаполнения = Неопределено) И сфпДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
			сфпСтруктураВнешнихДанных	= сфпДанныеЗаполнения.сфпСтруктураCoMagic;
			ПараметрыФормы.Вставить("сфпСтруктураВнешнихДанных",		сфпСтруктураВнешнихДанных);
		КонецЕсли;
		ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма", ПараметрыФормы, ЭтотОбъект, СтруктураЗвонка.НомерТелефона);
		СтруктураЗвонка.Вставить("Контакт", Результат);
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		Оповестить("ЗаполнитьОснованиеОбращения", НовыйЗвонок)
	Иначе
		ПараметрыФормы = Новый Структура;
		МассивСсылок = Новый Массив;
		ПараметрыФормы.Вставить("МассивСсылок",			МассивСсылок);
		ПараметрыФормы.Вставить("НомерТелефона",		СтруктураЗвонка.НомерТелефона);
		ПараметрыФормы.Вставить("ТелефонныйЗвонок",		ПредопределенноеЗначение("Документ.ТелефонныйЗвонок.ПустаяСсылка"));
		Если НЕ (сфпДанныеЗаполнения = Неопределено) И сфпДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
			сфпСтруктураВнешнихДанных	= сфпДанныеЗаполнения.сфпСтруктураCoMagic;
			ПараметрыФормы.Вставить("сфпСтруктураВнешнихДанных",		сфпСтруктураВнешнихДанных);
		КонецЕсли;
		ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма", ПараметрыФормы, ЭтотОбъект, СтруктураЗвонка.НомерТелефона);
		НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
		сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
		Оповестить("ЗаполнитьОснованиеОбращения", НовыйЗвонок)
	КонецЕсли;
КонецПроцедуры // сфпРегистрацияОбращенияЗавершение()

// Процедура создает и открывает документ "CRM_Интерес"
//
// Параметры:
//	СтруктураЗвонка	- Структура	- Структура данных звонка
//
Процедура сфпОткрытьИнтерес(СтруктураЗвонка)
	Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
		Возврат;
	КонецЕсли;
	ФормаИнтереса = сфпИнициализироватьФормуИнтереса(СтруктураЗвонка, сфпДанныеЗаполнения);
	Если НЕ (ФормаИнтереса = Неопределено) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
			ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьИнтересЗавершение", ЭтотОбъект, Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаИнтереса, СтруктураЗвонка));
			СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
			Если СписокКонтактов.Количество() = 1 Тогда
				сфпОткрытьИнтересЗавершение(СписокКонтактов[0].Значение,Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаИнтереса, СтруктураЗвонка));
			Иначе
				ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
				ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
				ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
			КонецЕсли;
		Иначе
			ФормаИнтереса.Модифицированность = Истина;
			ФормаИнтереса.Открыть();
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			ФормаИнтереса.Объект["ДокументОснование"] = НовыйЗвонок;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Процедура заканчивает команду открытия интереса после выбора пользователем контакта
//
// Параметры:
//	Результат				- СправочникОбъект	- Выбранный пользователем объект для подстановки в поле "Партнер" или "Контактное лицо"
//	ДополнительныеПараметры	- Структура			- Структура дополнительных переданных параметров
//
Процедура сфпОткрытьИнтересЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ФормаДокумента 	   = ДополнительныеПараметры.ФормаДокумента;
	СтруктураЗвонка    = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		Если ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры") Тогда
			ФормаДокумента.Объект["Партнер"] = Результат;
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			ФормаДокумента.Объект["КонтактноеЛицо"] = Результат;
			ФормаДокумента.Объект["Партнер"] 		= сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		    Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			Если ЗначениеЗаполнено(Клиент) Тогда
				ФормаДокумента.Объект["Партнер"]	= Клиент;
			Иначе
				ФормаДокумента.Объект["ПотенциальныйКлиент"] = Результат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	ФормаДокумента.Модифицированность = Истина;
	ФормаДокумента.Открыть();
	НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
	сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	ФормаДокумента.Объект["ДокументОснование"] = НовыйЗвонок;
КонецПроцедуры // сфпОткрытьСчетНаОплатуЗавершение()

// -CRM3

/////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ВЫПОЛНЕНИЯ ЗВОНКА

// Процедура - обработчик нажатия кнопки "Позвонить" поля "Телефон"
//
// Параметры:
//	Форма	- УправляемаяФорма	- Форма справочника	
//	Объект	- СправочникСсылка	- Элемент справочника
//
Процедура сфпПодключаемый_ПозвонитьНаНомер(Форма, Объект) Экспорт
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо записать элемент!'"));
		Возврат;
	КонецЕсли;
	ИмяРеквизита = СтрЗаменить(Форма.ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "ПозвонитьНаНомер","");
	Телефон = Форма[ИмяРеквизита];
	Если ПустаяСтрока(Телефон) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбран номер телефона!'"), 5);
		Возврат;
	КонецЕсли;
	сфпСофтФонПроКлиент.сфпПозвонить(Телефон, Объект.Ссылка);
КонецПроцедуры // сфпПодключаемый_ПозвонитьНаНомер()

// Процедура - обработчик выполнения общей команды "сфпПозвонить"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыПозвонить(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПараметрКоманды) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо записать элемент!'"));
		Возврат;
	КонецЕсли;
	ДанныеЗаполнения = Новый Структура("Основание", ПараметрКоманды);
	Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		АбонентКонтакт		= сфпСофтФонПроСервер.сфпПолучитьЗначениеРеквизита(ПараметрКоманды, "АбонентКонтакт"); 
		АбонентКакСвязаться	= сфпСофтФонПроСервер.сфпПолучитьЗначениеРеквизита(ПараметрКоманды, "АбонентКакСвязаться"); 
		Если ЗначениеЗаполнено(АбонентКонтакт) Тогда
			Если ЗначениеЗаполнено(АбонентКакСвязаться) Тогда
				сфпСофтФонПроКлиент.сфпПозвонить(АбонентКакСвязаться, АбонентКонтакт, ДанныеЗаполнения);
			Иначе
				СписокОбъектов = Новый СписокЗначений;
				СписокОбъектов.Добавить(АбонентКонтакт);
				сфпСофтФонПроКлиент.сфпПозвонитьВыбравТелефон(СписокОбъектов, ДанныеЗаполнения);
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(АбонентКакСвязаться) Тогда
			сфпСофтФонПроКлиент.сфпПозвонить(АбонентКакСвязаться, , ДанныеЗаполнения);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Не указан контакт!'"), 5);
		КонецЕсли;
	Иначе
		СписокОбъектов = Новый СписокЗначений;
		СписокОбъектов.Добавить(ПараметрКоманды);
		//+вог
		вогУправлениеСвязями.ЗаполнитьСвязанныеОбъекты(СписокОбъектов, ПараметрКоманды);
		//-вог
		сфпСофтФонПроКлиент.сфпПозвонитьВыбравТелефон(СписокОбъектов);
	КонецЕсли;
КонецПроцедуры // сфпОбработкаКомандыПозвонить()

// Процедура - обработчик выполнения общей команды "сфпКарточкаCoMagic"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыКарточкаCoMagic(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда Возврат; КонецЕсли;
	CoMagicID	= сфпСофтФонПроСерверПереопределяемый.сфпПолучитьCoMagicID(ПараметрКоманды);
	Если ПустаяСтрока(CoMagicID) Тогда Возврат; КонецЕсли;
	КлючСессии	= сфпСофтФонПроСервер.сфпПолучитьКлючСессииCoMagic();
	Если НЕ ЗначениеЗаполнено(КлючСессии) Тогда Возврат; КонецЕсли;
	Адрес	= "http://app.comagic.ru/analytics/auditory/cmvisitor/?session_key=" + КлючСессии + "&visitor_id=" + CoMagicID;
	ПерейтиПоНавигационнойСсылке(Адрес);
КонецПроцедуры // сфпОбработкаКомандыКарточкаCoMagic()

// Процедура - обработчик выполнения общей команды "ИсторияРазговора"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыИсторияРазговора(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда Возврат; КонецЕсли;
	Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		сфпСофтФонПроКлиент.сфпОткрытьИсториюРазговора(ПараметрКоманды);
	КонецЕсли;
КонецПроцедуры // сфпОбработкаКомандыИсторияРазговора()

// Процедура - обработчик выполнения общей команды "ПереводЗвонков"
//
// Параметры:
//	ПараметрКоманды				- Произвольный	- Параметр команды
//	ПараметрыВыполненияКоманды	- Структура		- Параметры выполнения команды
//
Процедура сфпОбработкаКомандыПереводЗвонков(ПараметрКоманды, ПараметрыВыполненияКоманды) Экспорт
	Если НЕ сфпСофтФонПроКлиент.сфпПроверитьДоступностьСофтФон(Истина) Тогда
		Возврат;
	ИначеЕсли НЕ сфпСофтФонПроСервер.сфпРолиДоступны("ПолныеПрава, сфпУправлениеМаршрутизацией") Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Недостаточно прав для настройки перевода звонков'"));
		Возврат;
	КонецЕсли;
	ПараметрыФормы	= Новый Структура;
	ПараметрыФормы.Вставить("Контакт",	ПараметрКоманды);
	ОткрытьФорму("ОбщаяФорма.сфпПользователиДляПереключения", ПараметрыФормы, ПараметрыВыполненияКоманды.Источник,
		ПараметрыВыполненияКоманды.Уникальность, ПараметрыВыполненияКоманды.Окно);
КонецПроцедуры // сфпОбработкаКомандыПереводЗвонков()

//+вог

Процедура сфпОткрытьМероприятие(СтруктураЗвонка)	
	//Если СтруктураЗвонка.Свойство("ФормаПолучена") и СтруктураЗвонка.ФормаПолучена Тогда
	//	Возврат;
	//КонецЕсли;
	ФормаМероприятия = сфпИнициализироватьФормуМероприятия(СтруктураЗвонка, сфпДанныеЗаполнения);
	Если НЕ (ФормаМероприятия = Неопределено) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка["МассивЗвонящих"]) И СтруктураЗвонка["МассивЗвонящих"].Количество() > 1 Тогда
			ОписаниеВыбора = Новый ОписаниеОповещения("сфпОткрытьМероприятиеЗавершение", ЭтотОбъект, Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаМероприятия, СтруктураЗвонка));
			СписокКонтактов = сфпСофтФонПроСервер.сфпСформироватьСписокОбъектовДляВыбораПоМассивуЗвонящих(СтруктураЗвонка["МассивЗвонящих"], Истина);
			Если СписокКонтактов.Количество() = 1 Тогда
				сфпОткрытьМероприятиеЗавершение(СписокКонтактов[0].Значение, Новый Структура("ФормаДокумента, СтруктураЗвонка", ФормаМероприятия, СтруктураЗвонка));
			Иначе
				ПараметрыОткрытия = Новый Структура("НомерТелефона, ТолькоКлиентыИКЛ", СтруктураЗвонка["НомерТелефона"], Истина);
				ПараметрыОткрытия.Вставить("СписокОбъектов", сфпСофтФонПроСервер.сфпПреобразоватьМассивЗвонящихВСписокЗначений(СтруктураЗвонка["МассивЗвонящих"]));
				ОткрытьФорму("ОбщаяФорма.сфпФормаВыбораАбонента", ПараметрыОткрытия, , Новый УникальныйИдентификатор(),ВариантОткрытияОкна.ОтдельноеОкно,,ОписаниеВыбора);
			КонецЕсли;
		Иначе
			ФормаМероприятия.Модифицированность = Истина;
			ФормаМероприятия.Открыть();
			НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
			сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
			ФормаМероприятия.Объект["ДокументОснование"] = НовыйЗвонок;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура сфпОткрытьМероприятиеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ФормаДокумента 	   = ДополнительныеПараметры.ФормаДокумента;
	СтруктураЗвонка    = ДополнительныеПараметры.СтруктураЗвонка;
	Если НЕ (Результат = Неопределено) И ЗначениеЗаполнено(Результат) Тогда
		СтруктураЗвонка.Вставить("Контакт", Результат);
		Если ТипЗнч(Результат) = Тип("СправочникСсылка.Партнеры") Тогда
			НоваяСтрока = ФормаДокумента.Объект["СторонниеЛица"][0];	
			НоваяСтрока["Партнер"] = Результат;
			НоваяСтрока["Телефон"] = СтруктураЗвонка.НомерТелефона;
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			НоваяСтрока = ФормаДокумента.Объект["СторонниеЛица"][0];	
			НоваяСтрока["КонтактноеЛицо"] = Результат;
			НоваяСтрока["Партнер"] 		  = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			НоваяСтрока["Телефон"] 		  = СтруктураЗвонка.НомерТелефона;
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		    Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			Если ЗначениеЗаполнено(Клиент) Тогда
				НоваяСтрока = ФормаДокумента.Объект["СторонниеЛица"][0];	
				НоваяСтрока["Партнер"] = Клиент;
				НоваяСтрока["Телефон"] = СтруктураЗвонка.НомерТелефона;
			КонецЕсли;
		//+вог
		ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.вогТорговыеТочки") Тогда
			НоваяСтрока = ФормаДокумента.Объект["СторонниеЛица"][0];	
			НоваяСтрока["вогТорговаяТочка"] = Результат;
			НоваяСтрока["Партнер"] 		    = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(Результат);
			НоваяСтрока["Телефон"] 		    = СтруктураЗвонка.НомерТелефона;
		//-вог
		КонецЕсли;
	КонецЕсли;	
		
	ФормаДокумента.Модифицированность = Истина;
	ФормаДокумента.Открыть();
	НовыйЗвонок = сфпСофтФонПроСервер.сфпСоздатьТелефонныйЗвонок(СтруктураЗвонка, сфпДанныеЗаполнения);
	сфпСофтФонПроКлиент.сфпВыполнитьДействияПослеЗаписиТелефонногоЗвонка(НовыйЗвонок, СтруктураЗвонка);
	ФормаДокумента.Объект["ДокументОснование"] = НовыйЗвонок;
	
КонецПроцедуры // сфпОткрытьМероприятиеЗавершение()

Функция сфпИнициализироватьФормуМероприятия(СтруктураЗвонка, ДанныеЗаполнения)
	
	ЗначенияЗаполнения = Новый Структура;
	Если СтруктураЗвонка.ВходящийЗвонок Тогда
		ВидВзаимодействия = ПредопределенноеЗначение("Справочник.CRM_ВидыВзаимодействий.ВходящийЗвонок");
	Иначе	
		ВидВзаимодействия = ПредопределенноеЗначение("Справочник.CRM_ВидыВзаимодействий.ИсходящийЗвонок");
	КонецЕсли;
	ЗначенияЗаполнения.Вставить("ВидВзаимодействия", ВидВзаимодействия);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НеЗаполнятьГруппуОповещений", Истина);
	ПараметрыФормы.Вставить("ОтложеннаяИнициализация"    , Истина);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения"		 , ЗначенияЗаполнения);
	
	ИмяФормы = "Документ.CRM_Мероприятие.ФормаОбъекта";	
	ФормаМероприятия = ПолучитьФорму(ИмяФормы, ПараметрыФормы,, СтруктураЗвонка.hCall);
	Если НЕ ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если ЗначениеЗаполнено(СтруктураЗвонка.ContactID) Тогда
			СтруктураЗвонка.Контакт	= сфпСофтФонПроСервер.сфпНайтиКонтактПоGUID(СтруктураЗвонка.ContactID);
		КонецЕсли;
	КонецЕсли;
	
	ФормаМероприятия.Объект["Автор"] 		 = сфпСофтФонПроСервер.сфпТекущийПользователь();
	ФормаМероприятия.Объект["Дата"] 		 = сфпСофтФонПроСервер.сфпТекущаяДата();
	ФормаМероприятия.Объект["Ответственный"] = ФормаМероприятия.Объект["Автор"];
		
	ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
	Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
		ФормаМероприятия.Объект["Организация"] = ЗначениеНастройки;
	Иначе
		ФормаМероприятия.Объект["Организация"] = CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.НовыйЗвонок) Тогда
		ФормаМероприятия.Объект["ДокументОснование"] = СтруктураЗвонка.НовыйЗвонок;
	КонецЕсли;
	
	cфпСтруктураПользователя = сфпСофтФонПроСервер.сфпПолучитьЗначенияРеквизитовПользователя(ФормаМероприятия.Объект["Автор"]);
	ФормаМероприятия.Объект["Подразделение"] = cфпСтруктураПользователя.Подразделение;
	ФормаМероприятия.Объект["Состояние"]  	 = ПредопределенноеЗначение("Справочник.CRM_СостоянияСобытий.ВРаботе");
	ФормаМероприятия.Объект["Место"]		 = СтруктураЗвонка.НомерТелефона;
	ФормаМероприятия.сфпНомерТелефона 	     = СтруктураЗвонка.НомерТелефона;
	ФормаМероприятия.Объект["Тема"]			 = НСтр("ru='#Создан автоматически средствами СофтФон'") 
		+ ?(ЗначениеЗаполнено(СтруктураЗвонка.НомерТелефона), Нстр("ru = ', номер телефона: '") + СтруктураЗвонка.НомерТелефона, "");
	
	Если ЗначениеЗаполнено(СтруктураЗвонка.Контакт) Тогда
		Если Найти(Строка(СтруктураЗвонка.Контакт), НСтр("ru = '<Объект не найден>'")) > 0 Тогда
			ФормаМероприятия.Объект["Описание"]	= ФормаМероприятия.Объект["Описание"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона)
					+ Символы.ПС + НСтр("ru='К данному абоненту в доступе отказано.'")
					+ НСтр("ru=' Для разрешения работы с абонентом обратитесь к руководителю или администратору.'");
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
			НоваяСтрока 		   = ФормаМероприятия.Объект["СторонниеЛица"][0];	
			НоваяСтрока["Партнер"] = СтруктураЗвонка.Контакт;
			НоваяСтрока["Телефон"] = СтруктураЗвонка.НомерТелефона;
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			НоваяСтрока = ФормаМероприятия.Объект["СторонниеЛица"][0];	
			НоваяСтрока["КонтактноеЛицо"] = СтруктураЗвонка.Контакт;
			НоваяСтрока["Партнер"] 		  = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			НоваяСтрока["Телефон"] 		  = СтруктураЗвонка.НомерТелефона;
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
		    Клиент = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			Если ЗначениеЗаполнено(Клиент) Тогда
				НоваяСтрока 		   = ФормаМероприятия.Объект["СторонниеЛица"][0];	
				НоваяСтрока["Партнер"] = Клиент;
				НоваяСтрока["Телефон"] = СтруктураЗвонка.НомерТелефона;
			КонецЕсли;
		//+вог
		ИначеЕсли ТипЗнч(СтруктураЗвонка.Контакт) = Тип("СправочникСсылка.вогТорговыеТочки") Тогда
			НоваяСтрока = ФормаМероприятия.Объект["СторонниеЛица"][0];	
			НоваяСтрока["вогТорговаяТочка"] = СтруктураЗвонка.Контакт;
			НоваяСтрока["Партнер"] 		    = сфпСофтФонПроСервер.сфпПолучитьВладельцаКонтакта(СтруктураЗвонка.Контакт);
			НоваяСтрока["Телефон"]          = СтруктураЗвонка.НомерТелефона;
			
		//-вог
		Иначе
			ФормаМероприятия.Объект["Описание"]	= ФормаМероприятия.Объект["Описание"] + Символы.ПС  + Строка(ТипЗнч(СтруктураЗвонка.Контакт)) + ": "
					+ сфпСофтФонПроСервер.сфпПолучитьНаименованиеКонтакта(СтруктураЗвонка.Контакт) + НСтр("ru = ', номер: '") 
					+ сфпСофтФонПроСервер.сфпПолучитьПредставлениеНомераТелефона(СтруктураЗвонка.Контакт, СтруктураЗвонка.НомерТелефона);
		КонецЕсли;
	КонецЕсли;
		
	Если НЕ (ДанныеЗаполнения = Неопределено) И ДанныеЗаполнения.Свойство("сфпСтруктураCoMagic") Тогда
		сфпСтруктураВнешнихДанных	= ДанныеЗаполнения.сфпСтруктураCoMagic;
		ФормаМероприятия.Объект["Описание"]		= ФормаМероприятия.Объект["Описание"] + ?(ФормаМероприятия.Объект["Описание"], "", Символы.ПС) 
		+ НСтр("ru='Кампания: '") + сфпСтруктураВнешнихДанных.comagic_context.campaign + Символы.ПС 
		+ НСтр("ru='Сайт: '") + сфпСтруктураВнешнихДанных.comagic_context.site + Символы.ПС
		+ НСтр("ru='Ключевые слова: '") + сфпСтруктураВнешнихДанных.comagic_context.search_query; 
	КонецЕсли;
	
	СтруктураЗвонка.Вставить("ФормаПолучена", Истина);
	
	Возврат ФормаМероприятия;

КонецФункции

//-вог