///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2020, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Задает настройки, применяемые как стандартные для объектов подсистемы.
//
// Параметры:
//   Настройки - Структура - коллекция настроек подсистемы. Реквизиты:
//       * ВыводитьОтчетыВместоВариантов - Булево - умолчание для вывода гиперссылок в панели отчетов:
//           Истина - варианты отчетов по умолчанию скрыты, а отчеты включены и видимы.
//           Ложь   - акварианты отчетов по умолчанию видимы, а отчеты отключены.
//           Значение по умолчанию: Ложь.
//       * ВыводитьОписания - Булево - умолчание для вывода описаний в панели отчетов:
//           Истина - значение по умолчанию. Выводить описания в виде подписей под гиперссылками вариантов
//           Ложь   - выводить описания в виде всплывающих подсказок
//           Значение по умолчанию: Истина.
//       * Поиск - Структура - настройки поиска вариантов отчетов.
//           ** ПодсказкаВвода - Строка - текст подсказки выводится в поле поиска когда поиск не задан.
//               В качестве примера рекомендуется указывать часто используемые термины прикладной конфигурации.
//       * ДругиеОтчеты - Структура - настройки формы "Другие отчеты":
//           ** ЗакрыватьПослеВыбора - Булево - закрывать ли форму после выбора гиперссылки отчета.
//               Истина - закрывать "Другие отчеты" после выбора.
//               Ложь   - не закрывать.
//               Значение по умолчанию: Истина.
//           ** ПоказыватьФлажок - Булево - показывать ли флажок ЗакрыватьПослеВыбора.
//               Истина - показывать флажок "Закрывать это окно после перехода к другому отчету".
//               Ложь   - не показывать флажок.
//               Значение по умолчанию: Ложь.
//       * РазрешеноИзменятьВарианты - Булево - показывать расширенные настройки отчета
//               и команды изменения варианта отчета.
//
// Пример:
//	Настройки.Поиск.ПодсказкаВвода = НСтр("ru = 'Например, себестоимость'");
//	Настройки.ДругиеОтчеты.ЗакрыватьПослеВыбора = Ложь;
//	Настройки.ДругиеОтчеты.ПоказыватьФлажок = Истина;
//	Настройки.РазрешеноИзменятьВарианты = Ложь;
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Настройки размещения отчетов

// Определяет разделы глобального командного интерфейса, в которых предусмотрены панели отчетов.
// В Разделы необходимо добавить метаданные тех подсистем первого уровня,
// в которых размещены команды вызова панелей отчетов.
//
// Параметры:
//   Разделы - СписокЗначений - разделы, в которые выведены команды открытия панели отчетов.
//       * Значение - ОбъектМетаданных: Подсистема, Строка - подсистема раздела глобального командного интерфейса,
//           либо ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы для начальной страницы.
//       * Представление - Строка - заголовок панели отчетов в этом разделе.
//
// Пример:
//	Разделы.Добавить(Метаданные.Подсистемы.Анкетирование, НСтр("ru = 'Отчеты по анкетированию'"));
//	Разделы.Добавить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы(), НСтр("ru = 'Основные отчеты'"));
//
Процедура ОпределитьРазделыСВариантамиОтчетов(Разделы) Экспорт
	
	// +CRM
	CRM_ВариантыОтчетов.ОпределитьРазделыСВариантамиОтчетов(Разделы);
	// -CRM
	
	//+вог
	//+Рабочий стол
	скРабочийСтолСервер.ОпределитьРазделыСВариантамиОтчетов(Разделы);
	//-Рабочий стол
	//-вог
	
КонецПроцедуры

// Задает настройки размещения вариантов отчетов в панели отчетов.
//   Отчет выступает в качестве контейнера вариантов.
//     Изменяя настройки отчета можно сразу изменять настройки всех его вариантов.
//     Однако, если явно получить настройки варианта отчета, то они станут самостоятельными,
//     т.е. более не будут наследовать изменения настроек от отчета.
//   
//   Начальная настройка размещения отчетов по подсистемам зачитывается из метаданных,
//     ее дублирование в коде не требуется.
//   
//   Функциональные опции варианта объединяются с функциональными опциями этого отчета по следующим правилам:
//     (ФО1_Отчета ИЛИ ФО2_Отчета) И (ФО3_Варианта ИЛИ ФО4_Варианта).
//   Функциональные опции отчетов не зачитываются из метаданных,
//     они применяются на этапе использования подсистемы пользователем.
//   Через ОписаниеОтчета можно добавлять функциональные опции, которые будут соединяться по указанным выше правилам,
//     но надо помнить, что эти функциональные опции будут действовать только для предопределенных вариантов отчетов.
//   Для пользовательских вариантов отчета действуют только функциональные опции отчета
//     - они отключаются только с отключением всего отчета.
//
// Параметры:
//   Настройки - Коллекция - настройки отчетов и вариантов отчетов конфигурации.
//                           Для их изменения предназначены следующие вспомогательные процедуры и функции:
//                           ВариантыОтчетов.ОписаниеОтчета, 
//                           ВариантыОтчетов.ОписаниеВарианта, 
//                           ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов, 
//                           ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера.
//
// Пример:
//
//  //Добавление варианта отчета в подсистему.
//	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ИмяОтчета, "<ИмяВарианта>");
//	НастройкиВарианта.Размещение.Вставить(Метаданные.Подсистемы.ИмяРаздела.Подсистемы.ИмяПодсистемы);
//
//  //Отключение варианта отчета.
//	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ИмяОтчета, "<ИмяВарианта>");
//	НастройкиВарианта.Включен = Ложь;
//
//  //Отключение всех вариантов отчета, кроме одного.
//	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИмяОтчета);
//	НастройкиОтчета.Включен = Ложь;
//	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "<ИмяВарианта>");
//	НастройкиВарианта.Включен = Истина;
//
//  //Заполнение настроек для поиска - наименования полей, параметров и отборов:
//	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, Метаданные.Отчеты.ИмяОтчетаБезСхемы, "");
//	НастройкиВарианта.НастройкиДляПоиска.НаименованияПолей =
//		НСтр("ru = 'Контрагент
//		|Договор
//		|Ответственный
//		|Скидка
//		|Дата'");
//	НастройкиВарианта.НастройкиДляПоиска.НаименованияПараметровИОтборов =
//		НСтр("ru = 'Период
//		|Ответственный
//		|Контрагент
//		|Договор'");
//
//  //Переключение режима вывода в панелях отчетов:
//  //Группировка вариантов отчета по этому отчету:
//	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Метаданные.Отчеты.ИмяОтчета, Истина);
//  //Без группировки по отчету:
//	Отчет = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ИмяОтчета);
//	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, Отчет, Ложь);
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	// +CRM
	CRM_ВариантыОтчетов.НастроитьВариантыОтчетов(Настройки);
	// -CRM
	
	// +CRM не переносить в объединенные решения
	// ИнтернетПоддержкаПользователей
	ИнтернетПоддержкаПользователей.НастроитьВариантыОтчетов(Настройки);
	// Конец ИнтернетПоддержкаПользователей
	// -CRM не переносить в объединенные решения
	
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогМенеджерыОбъектов);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Основной");
	НастройкиВарианта.Включен = Истина;
//Кайдашов #411
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогПоказателиЗаполненностиДанных);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ЗаполненностьДанных");
	НастройкиВарианта.Включен = Истина;
//START Кайдашов 15/08/19 569
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтчетПоДистрибуцииТорговыхТочек);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ДистрибуцияТорговыхТочек");
	НастройкиВарианта.Включен = Истина;
	// ++ VOG Солодов В.В. 18.10.2019 task 731
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогПланыПродаж);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПланыПродаж");
	НастройкиВарианта.Включен = Истина;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПланПродажПлитка");
	НастройкиВарианта.Включен = Истина;
	// -- VOG Солодов В.В. 18.10.2019
	//++ VOG Иванов С.А. 25.11.2019 ID заявки: 000000916 
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогПланыПродажПоВерсиям);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПланыПродаж");
	НастройкиВарианта.Включен = Истина;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПланПродажПлитка");
	НастройкиВарианта.Включен = Истина;
	//-- VOG Иванов С.А. 25.11.2019 ID заявки: 000000916 

//Кайдашов 28-01-2020	
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.Продажи);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Продажи");
	НастройкиВарианта.Включен = Истина;
	
//START Кайдашов 11/02/20 CRM-274	
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеДвухПериодовПродаж);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "СравнениеПоМесячно");
	НастройкиВарианта.Включен = Истина;
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеДвухПериодовПродаж);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "СравнениеПоКвартально");
	НастройкиВарианта.Включен = Истина;
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СравнениеДвухПериодовПродаж);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "СравнениеПоГодам");
	НастройкиВарианта.Включен = Истина;
	
	// +++ Кулаков П.Л. 25.02.2020
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогСписокДоговоров);
	НастройкиОтчета.Включен = Истина;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "СписокДоговоров");
	НастройкиВарианта.Включен = Истина;
	// --- Кулаков П.Л.
	
	
//START Кайдашов 11/02/20 CRM-364	
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтчетДляГенеральногоДиректора);
	НастройкиОтчета.Включен = Истина;
	//НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПоКомпаниям");
	//НастройкиВарианта.ВидимостьПоУмолчанию= Истина;
	//НастройкиВарианта.Включен = Истина;
	//НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПоБрендам");
	//НастройкиВарианта.ВидимостьПоУмолчанию = Истина;
	//НастройкиВарианта.Включен = Истина;
	//НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПоКлиентам");
	//НастройкиВарианта.ВидимостьПоУмолчанию = Истина;
	//НастройкиВарианта.Включен = Истина;
	//НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПоКлиентамРуб");
	//НастройкиВарианта.ВидимостьПоУмолчанию = Истина;
	//НастройкиВарианта.Включен = Истина;
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки,Метаданные.Отчеты.ОтчетДляГенеральногоДиректора);
	// ++ VOG Солодов В.В. 05.03.2020 CRM-376
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогЕженедельныйОтчетПланПродаж);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	// -- VOG Солодов В.В. 05.03.2020
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогОтчетПоДистрибуцииТорговыхТочекПлитка);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПродажОбои);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	
	
	// +++ Кулаков П.Л. CRM-665
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогОтчетПоДистрибуцииТорговыхТочекИнтернетМагазин);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ДистрибуцияТорговыхТочекИнтернетМагазин");
	НастройкиВарианта.Включен = Истина;
	// --- Кулаков П.Л.
	
	// +++ Кулаков П.Л. CRM-668
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогПересмотрКатегорийКлиетов);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПересмотрКатегорийКлиентов");
	НастройкиВарианта.Включен = Истина;
	// --- Кулаков П.Л.
	
	// +++ Кулаков П.Л. CRM-669
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогИсторияПересмотраКатегорииПоКлиенту);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ИсторияПересмотраКатегорииПоКлиенту");
	НастройкиВарианта.Включен = Истина;
	// --- Кулаков П.Л.
	
	// +++ Кулаков П.Л. CRM-776
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогПланПоКомандировкам);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПланПоКомандировкам");
	НастройкиВарианта.Включен = Истина;
	// --- Кулаков П.Л.
	
	// +++ Кулаков П.Л. CRM-980
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогПланФактПоКомандировкам);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПланФактПоКомандировкам");
	НастройкиВарианта.Включен = Истина;
	// --- Кулаков П.Л.
	
	// +++ VOG Кулаков П.Л. 18.11.2020 CRM-1051
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогОтчетПоВыручкеПлитка);
	НастройкиОтчета.Включен = Ложь;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ОтчетПоВыручкеПлитка");
	НастройкиВарианта.Включен = Истина;
	// --- Кулаков П.Л.
	
	// +++ VOG Кулаков П.Л. 04.03.2021 DEV-25
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПродажКоллекций);
	НастройкиОтчета.Включен = Истина;
	НастройкиОтчета.ОпределитьНастройкиФормы = Истина;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "Основной");
	НастройкиВарианта.Включен = Истина;
	//НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПродажКоллекций);
	//НастройкиОтчета.Включен = Истина;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "ПоТРТ");
	НастройкиВарианта.Включен = Истина;
	//НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПродажКоллекций);
	//НастройкиОтчета.Включен = Истина;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "РасстановкаКоллекция");
	НастройкиВарианта.Включен = Истина;
	//НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПродажКоллекций);
	//НастройкиОтчета.Включен = Истина;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "РасстановкПодразделениеКоллекция");
	НастройкиВарианта.Включен = Истина;
	//НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПродажКоллекций);
	//НастройкиОтчета.Включен = Истина;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "РасстановкаКоллекцияSKU");
	НастройкиВарианта.Включен = Истина;
	//НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализПродажКоллекций);
	//НастройкиОтчета.Включен = Истина;
	НастройкиВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, НастройкиОтчета, "РасстановкаПодразделениеКоллекцияSKU");
	НастройкиВарианта.Включен = Истина;

	// --- VOG Кулаков П.Л.
	
	//Кайдашов +++  1022
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПланированиеПродажГодовое_Обои);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки,Метаданные.Отчеты.ПланированиеПродажГодовое_Обои);
	
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПланированиеПродажГодовое_Плитка);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки,Метаданные.Отчеты.ПланированиеПродажГодовое_Плитка);
	//Кайдашов ---  1022
	
	// ++ VOG Солодов В.В. 26.11.2020 CRM-1050
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогОтчетПоВыручкеОбои);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.вогОтчетПоВыручкеОбои);
	// -- VOG Солодов В.В. 26.11.2020 CRM-1050
	// ++ VOG Солодов В.В. 18.03.2021 DEV-218
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПланированиеПродажКвартальноеПлитка);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ПланированиеПродажКвартальноеПлитка);
	// -- VOG Солодов В.В. 18.03.2021 DEV-218
	// ++ VOG Солодов В.В. 25.03.2021 DEV-302
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогОтчетПоВыручкеПлиткаКвартал);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.вогОтчетПоВыручкеПлиткаКвартал);
	
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогОтчетПоВыручкеПлиткаКварталНакопительный);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.вогОтчетПоВыручкеПлиткаКварталНакопительный);
	// -- VOG Солодов В.В. 25.03.2021 DEV-302
	// ++ VOG Солодов В.В. 06.04.2021 DEV-317
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.вогОтчетПоВыручкеОбоиКвартал);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.вогОтчетПоВыручкеОбоиКвартал);
	// -- VOG Солодов В.В. 06.04.2021 DEV-317
	
	// ++ VOG Солодов В.В. 17.06.2021 DEV-656
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.МаршрутПлановыхКомандировок);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.МаршрутПлановыхКомандировок);
	// -- VOG Солодов В.В. 17.06.2021 DEV-656
	
	// +++ VOG Кулаков П.Л. 18.06.2021
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПродажиПоКомплектамПанелей);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ПродажиПоКомплектамПанелей);
	// --- VOG Кулаков П.Л.
	
	// ++ VOG Солодов В.В. 30.08.2021 DEV-881
	НастройкиОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПланированиеПродажКвартальноеПлиткаПлоская);
	ВариантыОтчетов.НастроитьОтчетВМодулеМенеджера(Настройки, Метаданные.Отчеты.ПланированиеПродажКвартальноеПлиткаПлоская);
	// -- VOG Солодов В.В. 30.08.2021 DEV-881
	
КонецПроцедуры

// Регистрирует изменения в именах вариантов отчетов.
// Используется при обновлении в целях сохранения ссылочной целостности,
// в частности для сохранения пользовательских настроек и настроек рассылок отчетов.
// Старое имя варианта резервируется и не может быть использовано в дальнейшем.
// Если изменений было несколько, то каждое изменение необходимо зарегистрировать,
// указывая в актуальном имени варианта последнее (текущее) имя варианта отчета.
// Поскольку имена вариантов отчетов не выводятся в пользовательском интерфейсе,
// то рекомендуется задавать их таким образом, что бы затем не менять.
// В Изменения необходимо добавить описания изменений имен вариантов
// отчетов, подключенных к подсистеме.
//
// Параметры:
//   Изменения - ТаблицаЗначений - таблица изменений имен вариантов. Колонки:
//       * Отчет - ОбъектМетаданных - метаданные отчета, в схеме которого изменилось имя варианта.
//       * СтароеИмяВарианта - Строка - старое имя варианта, до изменения.
//       * АктуальноеИмяВарианта - Строка - текущее (последнее актуальное) имя варианта.
//
// Пример:
//	Изменение = Изменения.Добавить();
//	Изменение.Отчет = Метаданные.Отчеты.<ИмяОтчета>;
//	Изменение.СтароеИмяВарианта = "<СтароеИмяВарианта>";
//	Изменение.АктуальноеИмяВарианта = "<АктуальноеИмяВарианта>";
//
Процедура ЗарегистрироватьИзмененияКлючейВариантовОтчетов(Изменения) Экспорт
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Настройки команд отчетов

// Определяет объекты конфигурации, в модулях менеджеров которых предусмотрена процедура ДобавитьКомандыОтчетов,
// описывающая команды открытия контекстных отчетов.
// Синтаксис процедуры ДобавитьКомандыОтчетов см. в документации.
//
// Параметры:
//  Объекты - Массив - объекты метаданных (ОбъектМетаданных) с командами отчетов.
//
Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт
	
КонецПроцедуры

// Определение списка глобальных команд отчетов.
// Событие возникает в процессе вызова модуля повторного использования.
//
// Параметры:
//  КомандыОтчетов - ТаблицаЗначений - таблица команд для вывода в подменю, где:
//   * Идентификатор - Строка   - идентификатор команды.
//   * Представление - Строка   - представление команды в форме.
//   * Важность      - Строка   - суффикс группы в подменю, в которой следует вывести эту команду.
//                                Допустимо использовать: "Важное", "Обычное" и "СмТакже".
//   * Порядок       - Число    - порядок размещения команды в группе. Используется для настройки под конкретное
//                                рабочее место.
//   * Картинка      - Картинка - картинка команды.
//   * СочетаниеКлавиш - СочетаниеКлавиш - сочетание клавиш для быстрого вызова команды.
//   * ТипПараметра - ОписаниеТипов - типы объектов, для которых предназначена эта команда.
//   * ВидимостьВФормах    - Строка - имена форм через запятую, в которых должна отображаться команда.
//                                    Используется когда состав команд отличается для различных форм.
//   * ФункциональныеОпции - Строка - имена функциональных опций через запятую, определяющих видимость команды.
//   * УсловияВидимости    - Массив - определяет видимость команды в зависимости от контекста.
//                                    Для регистрации условий следует использовать процедуру
//                                    ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды().
//                                    Условия объединяются по "И".
//   * ИзменяетВыбранныеОбъекты - Булево - определяет доступность команды в ситуации,
//                                         когда у пользователя нет прав на изменение объекта.
//                                         Если Истина, то в описанной выше ситуации кнопка будет недоступна.
//                                         Необязательный. Значение по умолчанию: Ложь.
//   * МножественныйВыбор - Булево, Неопределено - если Истина, то команда поддерживает множественный выбор.
//                                                 В этом случае в параметре выполнения будет передан список ссылок.
//                                                 Необязательный. Значение по умолчанию: Истина.
//   * РежимЗаписи - Строка - действия, связанные с записью объекта, которые выполняются перед обработчиком команды, где:
//                 "НеЗаписывать" - объект не записывается, а в параметрах обработчика вместо ссылок передается
//                                  вся форма. В этом режиме рекомендуется работать напрямую с формой,
//                                  которая передается в структуре 2 параметра обработчика команды.
//                 "ЗаписыватьТолькоНовые" - записывать новые объекты.
//                 "Записывать"            - записывать новые и модифицированные объекты.
//                 "Проводить"             - проводить документы.
//                 Перед записью и проведением у пользователя запрашивается подтверждение.
//                 Необязательный. Значение по умолчанию: "Записывать".
//   * ТребуетсяРаботаСФайлами - Булево - если Истина, то в веб-клиенте предлагается
//                                        установить расширение для работы с 1С:Предприятием.
//                                        Необязательный. Значение по умолчанию: Ложь.
//   * Менеджер - Строка - полное имя объекта метаданных, отвечающего за выполнение команды.
//                         Например, "Отчет._ДемоКнигаПокупок".
//   * ИмяФормы - Строка - имя формы, которую требуется открыть или получить для выполнения команды.
//                         Если Обработчик не указан, то у формы вызывается метод "Открыть".
//   * КлючВарианта - Строка - имя варианта отчета, открываемого при выполнении команды.
//   * ИмяПараметраФормы - Строка - имя параметра формы, в который следует передать ссылку или массив ссылок.
//   * ПараметрыФормы - Неопределено, Структура - параметры формы, указанной в ИмяФормы.
//   * Обработчик - Строка - описание процедуры, обрабатывающей основное действие команды.
//                  Формат "<ИмяОбщегоМодуля>.<ИмяПроцедуры>" используется когда процедура размещена в общем модуле.
//                  Формат "<ИмяПроцедуры>" используется в следующих случаях:
//                  1) если ИмяФормы заполнено то в модуле указанной формы ожидается клиентская процедура,
//                  2) если ИмяФормы не заполнено то в модуле менеджера этого объекта ожидается серверная процедура.
//   * ДополнительныеПараметры - Структура - параметры обработчика, указанного в Обработчик.
//
//  Параметры - Структура - сведения о контексте исполнения, где:
//   * ИмяФормы - Строка - полное имя формы.
//   
//  СтандартнаяОбработка - Булево - если установить в Ложь, то событие "ДобавитьКомандыОтчетов" менеджера объекта не
//                                  будет вызвано.
//
Процедура ПередДобавлениемКомандОтчетов(КомандыОтчетов, Параметры, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

#КонецОбласти
