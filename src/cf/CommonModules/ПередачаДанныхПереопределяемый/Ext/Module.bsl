#Область ПрограммныйИнтерфейс

Процедура МенеджерыЛогическихХранилищ(ВсеМенеджерыЛогическихХранилищ) Экспорт
	
КонецПроцедуры

Процедура МенеджерыФизическихХранилищ(ВсеМенеджерыФизическихХранилищ) Экспорт
	
КонецПроцедуры

Функция ПериодДействияВременногоИдентификатора() Экспорт
	
	Возврат 600; // 10 минут
	
КонецФункции

Функция РазмерБлокаПолученияДанных() Экспорт
	
	Возврат 1024 * 1024;

КонецФункции

Функция РазмерБлокаОтправкиДанных() Экспорт
	
	Возврат 1024 * 1024;

КонецФункции

Процедура ОшибкаПриПолученииДанных(Ответ) Экспорт
	
	ЗаписьТехнологическогоЖурнала("ПолучениеДанных.Ошибка", Новый Структура("КодСостояния, Описание", Ответ.КодСостояния, Ответ.ПолучитьТелоКакСтроку()));
	
КонецПроцедуры

Процедура ОшибкаПриОтправкеДанных(Ответ) Экспорт
	
	ЗаписьТехнологическогоЖурнала("ОтправкаДанных.Ошибка", Новый Структура("КодСостояния, Описание", Ответ.КодСостояния, Ответ.ПолучитьТелоКакСтроку()));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаписьТехнологическогоЖурнала(Событие, Контекст)
	
	Попытка
		
		Запись = Новый ЗаписьJSON;
		Запись.УстановитьСтроку();
		
		Попытка
			
			ЗаписатьJSON(Запись, Контекст);
			
		Исключение
		
			СериализаторXDTO.ЗаписатьJSON(Запись, Контекст);
			
		КонецПопытки;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	&Событие КАК Событие,
		|	&Контекст КАК Контекст");
		
		Запрос.УстановитьПараметр("Событие", НСтр("ru = 'СобытиеТЖ.'") + Событие);
		Запрос.УстановитьПараметр("Контекст", Запись.Закрыть());
		
		Запрос.Выполнить();
		
	Исключение
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'ЗаписьТехнологическогоЖурнала'"), УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти