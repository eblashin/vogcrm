
////////////////////////////////////////////////////////////////////////////////
// Общие процедуры и функции

// Функция проверяет по номеру версии, что версия Outlook ниже 2013.
//
// Параметры:
//	НомерВерсии	- Строка	- Номер версии Outlook.
//
// Возвращаемое значение:
//	Булево	- Результат проверки.
//
Функция OutlookМеньше2013(НомерВерсии) Экспорт
	Возврат (Лев(НомерВерсии, 2) < "15");
КонецФункции // РелизМеньше2013()	

// Функция возвращает признак наличия контакта в массиве строк ТЧ.
//
// Параметры:
//	Контакт		- СправочникСсылка	- Контакт
//	ТЧ			- Массив			- Массив строк ТЧ.
//	ИмяКолонки  - Строка			- Имя реквизита строки ТЧ.
//
Функция КонтактЕстьВТЧ(Контакт, ТЧ, ИмяКолонки)
	Для Каждого СтрокаТЧ Из ТЧ Цикл
		Если СтрокаТЧ[ИмяКолонки] = Контакт Тогда
			Возврат Истина;
		КонецЕсли;	
	КонецЦикла;	
	Возврат Ложь;
КонецФункции	

// См. ПользователиКлиентСервер.ТекущийПользователь().
Функция ТекущийПользователь() Экспорт
	Возврат ПользователиКлиентСервер.ТекущийПользователь();
КонецФункции

Процедура ЗаполнитьСоответствиеСОМОбъектыКонтактов(СтруктураСвойств)
	Если НЕ СтруктураСвойств.Свойство("СОМОбъектыКонтактов") Тогда
		Возврат;
	ИначеЕсли НЕ (ТипЗнч(СтруктураСвойств.СОМОбъектыКонтактов) = Тип("Массив")) Тогда
		Возврат;
	КонецЕсли;
	Если СтруктураСвойств.СОМОбъектыКонтактов.Количество() > 0 Тогда
		Если СтруктураСвойств.Свойство("СоответствиеСОМОбъектыКонтактовОбъектOutlookID") 
			И (ТипЗнч(СтруктураСвойств.СоответствиеСОМОбъектыКонтактовОбъектOutlookID) = Тип("Соответствие")) Тогда
			Возврат;
		КонецЕсли;
		СтруктураСвойств.Вставить("СоответствиеСОМОбъектыКонтактовОбъектOutlookID", Новый Соответствие());
		Для Каждого СтрокаТаблицы Из СтруктураСвойств.СОМОбъектыКонтактов Цикл
			Если ЗначениеЗаполнено(СтрокаТаблицы.ОбъектOutlookID) Тогда
				СтруктураСвойств.СоответствиеСОМОбъектыКонтактовОбъектOutlookID.Вставить(СтрокаТаблицы.ОбъектOutlookID, СтрокаТаблицы);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьКонтактПоOutlookID(СтруктураСвойств, ID)
	Если СтруктураСвойств.Свойство("СоответствиеСОМОбъектыКонтактовОбъектOutlookID") Тогда
		Если СтруктураСвойств.СоответствиеСОМОбъектыКонтактовОбъектOutlookID.Количество() = СтруктураСвойств.СОМОбъектыКонтактов.Количество() Тогда
			Возврат СтруктураСвойств.СоответствиеСОМОбъектыКонтактовОбъектOutlookID[ID];
		Иначе
			ЗначениеВСоответствии = СтруктураСвойств.СоответствиеСОМОбъектыКонтактовОбъектOutlookID[ID];
			Если ЗначениеВСоответствии = Неопределено Тогда
				НайденныеСтроки = НайтиСтроки(СтруктураСвойств.СОМОбъектыКонтактов, Новый Структура("ОбъектOutlookID", ID));
				Если НайденныеСтроки.Количество() = 0 Тогда
					Возврат Неопределено;
				Иначе
					Возврат НайденныеСтроки[0];
				КонецЕсли;
			Иначе
				Возврат ЗначениеВСоответствии;
			КонецЕсли;
		КонецЕсли;
	Иначе
		НайденныеСтроки = НайтиСтроки(СтруктураСвойств.СОМОбъектыКонтактов, Новый Структура("ОбъектOutlookID", ID));
		Если НайденныеСтроки.Количество() = 0 Тогда
			Возврат Неопределено;
		Иначе
			Возврат НайденныеСтроки[0];
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ПолучитьКонтактПоАдресу(АдресEMail, СоответствияАдресовИКонтактов) Экспорт
	Если НЕ (ТипЗнч(СоответствияАдресовИКонтактов) = Тип("Соответствие")) Тогда
		СоответствияАдресовИКонтактов = Новый Соответствие();
	КонецЕсли;
	ЗначениеВСоответствии = СоответствияАдресовИКонтактов[АдресEMail];
	Если ЗначениеВСоответствии = Неопределено Тогда
		Возврат CRM_ОбменСMSOutlookСервер.ПолучитьКонтактПоАдресу(АдресEMail, СоответствияАдресовИКонтактов);
	ИначеЕсли ЗначениеВСоответствии = Ложь Тогда
		Возврат Неопределено;
	Иначе
		Возврат ЗначениеВСоответствии;
	КонецЕсли;
КонецФункции

Функция ПолучитьСвойствоПоСсылке(СсылкаИлиСтруктура, ИмяВСтруктуре = Неопределено, ИмяСвойства) Экспорт
	Если НЕ (ИмяВСтруктуре = Неопределено) И ((ТипЗнч(СсылкаИлиСтруктура) = Тип("Структура"))
		ИЛИ (ТипЗнч(СсылкаИлиСтруктура) = Тип("ДанныеФормыЭлементКоллекции"))) Тогда
		Попытка
			Возврат СсылкаИлиСтруктура[ИмяСвойства];
		Исключение
			Возврат CRM_ОбменСMSOutlookСервер.ПолучитьСвойствоПоСсылке(СсылкаИлиСтруктура[ИмяВСтруктуре], ИмяСвойства);
		КонецПопытки;
	Иначе
		Возврат CRM_ОбменСMSOutlookСервер.ПолучитьСвойствоПоСсылке(СсылкаИлиСтруктура, ИмяСвойства);
	КонецЕсли;
КонецФункции

Функция ПолучитьСтруктуруКонтактов()
	Возврат Новый Структура("Пометка,Направление,Объект_1С,
	|ДатаИзменения_1С,Представление_Outlook,ДатаИзменения_Outlook,ПапкаOutlook,ВидКонтакта,ID,ПометкаУдаления");
КонецФункции

Функция ПолучитьСтруктуруСобытий()
	Возврат Новый Структура("Пометка,Направление,Объект_1С,
	|ДатаИзменения_1С,Представление_Outlook,ДатаИзменения_Outlook,ПапкаOutlook,ID,ПометкаУдаления");
КонецФункции

Функция ПолучитьСтруктуруПисем()
	Возврат Новый Структура("Пометка,Направление,Объект_1С,
	|ДатаИзменения_1С,Представление_Outlook,ДатаИзменения_Outlook,ПапкаOutlook,ID");
КонецФункции

Функция ПолучитьСтруктуруКонтактов1С()
	Возврат Новый Структура("Организация,Фамилия,Имя,Отчество,ВидКонтакта,ДатаРегистрации,Ссылка,ПометкаУдаления");
КонецФункции

// Функция получает структуру таблицы событий Outlook.
//
Функция ПолучитьСтруктуруТаблицыСобытийOutlook() Экспорт
	Возврат Новый Структура("Частное,ДатаИзменения,FolderName,ОбъектOutlook,ОбъектOutlookID,Представление_Outlook");
КонецФункции

Функция ПолучитьСтруктуруТаблицыКонтактовOutlook()
	Возврат Новый Структура("Имя,Фамилия,Отчество,Представление_Outlook,Организация,Частное,
	|ДатаИзменения,FolderName,ОбъектOutlook,ВидКонтакта,ОбъектOutlookID");
	
КонецФункции

Функция ПолучитьСтруктуруТаблицыПисемOutlook()
	 Возврат Новый Структура("Представление_Outlook,ДатаИзменения,FolderName,ОбъектOutlook,ОбъектOutlookID");
КонецФункции

Функция ПолучитьСтруктуруТаблицыCOMОбъектовКонтактов()
	Возврат Новый Структура("СтрокаТЧ,ОбъектOutlook,ОбъектOutlookID");
КонецФункции

Функция ПолучитьСтруктуруТаблицыCOMОбъектовСобытий()
	Возврат Новый Структура("СтрокаТЧ,ОбъектOutlook,ОбъектOutlookID");
КонецФункции

Функция ПолучитьСтруктуруТаблицыCOMОбъектовПисем()
	Возврат Новый Структура("СтрокаТЧ,ОбъектOutlook,ОбъектOutlookID");
КонецФункции
	
Функция НайтиСтроки(мТаблица,СтрПоиска = Неопределено,Ошибка = "")
	Ошибка		= "";
	мНайденных	= Новый Массив;
	Если НЕ (ТипЗнч(мТаблица) = Тип("Массив")) Тогда 
		Возврат мНайденных;	
	КонецЕсли;
	Если СтрПоиска = Неопределено Тогда
		Для Каждого эл Из мТаблица Цикл
			мНайденных.Добавить(эл);
		КонецЦикла;
		Возврат мНайденных;
	КонецЕсли;
	Если (мТаблица.Количество() = 0) ИЛИ (СтрПоиска.Количество() = 0) Тогда 
		Возврат Новый Массив;	
	КонецЕсли;
	Для Каждого элОтбора Из СтрПоиска Цикл
		Если НЕ мТаблица[0].Свойство(элОтбора.Ключ) Тогда
			ТекстОшибки = "ru='" + "Поля " + элОтбора.Ключ + " не существует" + "'";
			Ошибка = НСтр(ТекстОшибки);
			Возврат Новый Массив;
		КонецЕсли;		
	КонецЦикла;
	Для Каждого элТаб Из мТаблица Цикл
		бКопировать = Истина;
		Для Каждого поле Из СтрПоиска Цикл
			Если НЕ (элТаб[поле.Ключ] = поле.Значение) Тогда 
				бКопировать = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если бКопировать Тогда
			мНайденных.Добавить(элТаб);
		КонецЕсли;
	КонецЦикла;
	Возврат мНайденных;	
КонецФункции 

// Процедура устанавливает реквизит объекта Outlook.
//
Процедура УстановитьРеквизитОбъектаOutlook(OutlookОбъект, Реквизит, Значение, ОписаниеОшибки = "") Экспорт
	Если Реквизит = "Частное" Тогда
		РеквизитOutlook = "Sensitivity";
	ИначеЕсли  Реквизит = "Имя" Тогда
		РеквизитOutlook = "FirstName";
	ИначеЕсли  Реквизит = "Фамилия" Тогда
		РеквизитOutlook = "LastName";
	ИначеЕсли  Реквизит = "Отчество" Тогда
		РеквизитOutlook = "MiddleName";         
	ИначеЕсли  Реквизит = "ПолноеИмя" Тогда
		РеквизитOutlook = "FullName";         
	ИначеЕсли  Реквизит = "Организация" Тогда
		РеквизитOutlook = "CompanyName" 
	ИначеЕсли  Реквизит = "ДатаРождения" Тогда
		РеквизитOutlook = "Birthday"    
	ИначеЕсли  Реквизит = "ОписаниеСобытия" Тогда
		РеквизитOutlook = "Subject"             
	ИначеЕсли  Реквизит = "СодержаниеСобытия" Тогда
		РеквизитOutlook = "Body"                
	ИначеЕсли  Реквизит = "НачалоСобытия" Тогда
		РеквизитOutlook = "Start"               
	ИначеЕсли  Реквизит = "ОкончаниеМероприятия" Тогда
		РеквизитOutlook = "End" 
	ИначеЕсли Реквизит = "Напоминание"       Тогда
		РеквизитOutlook = "ReminderSet"
	ИначеЕсли Реквизит = "СобытиеНаЦелыйДень" Тогда
		РеквизитOutlook = "AllDayEvent"
	ИначеЕсли Реквизит = "Должность" Тогда
		РеквизитOutlook = "JobTitle"
	ИначеЕсли Реквизит = "Место" Тогда
		РеквизитOutlook = "Location"
	Иначе
		РеквизитOutlook =  Реквизит;
	КонецЕсли;
	Попытка
		OutlookОбъект[РеквизитOutlook] = Значение;
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
КонецПроцедуры  

// Функция получает структуру свойств.
//
Функция ПолучитьСтруктуруСвойств() Экспорт
	Свойства = Новый Структура;
	Свойства.Вставить("MAPINameSpace");
	Свойства.Вставить("OutlookObj");
	Свойства.Вставить("FolderDelete");
	Свойства.Вставить("FolderCalendar");
	Свойства.Вставить("FolderTasks");
	Свойства.Вставить("FolderContacts");
	Свойства.Вставить("ТаблицаПапокOutlook",				Новый Массив);
	Свойства.Вставить("FolderOutbox");
	Свойства.Вставить("FolderSentMail");
	Свойства.Вставить("FolderInbox");
	Свойства.Вставить("ТаблицаПисемOutlook",				Новый Массив);
	Свойства.Вставить("ТаблицаСобытийOutlook",				Новый Массив);
	Свойства.Вставить("ТаблицаКонтактовOutlook",			Новый Массив);
	Свойства.Вставить("СОМОбъектыПисем",					Новый Массив);
	Свойства.Вставить("СОМОбъектыКонтактов",				Новый Массив);
	Свойства.Вставить("СОМОбъектыСобытий",					Новый Массив);
	Свойства.Вставить("Контакты",							Новый Массив);
	Свойства.Вставить("События",							Новый Массив);
	Свойства.Вставить("Письма",								Новый Массив);
	Свойства.Вставить("СоответствиеКонтактнойИнформации",	Новый Массив);
	Свойства.Вставить("ТаблицаПисемOutlook",				Новый Массив);
	Свойства.Вставить("ТаблицаСобытийOutlook",				Новый Массив);
	Свойства.Вставить("ТаблицаКонтактовOutlook",			Новый Массив);
	Свойства.Вставить("СОМОбъектыПисем",					Новый Массив);
	Свойства.Вставить("СОМОбъектыСобытий",					Новый Массив);
	Свойства.Вставить("События",							Новый Массив);
	Свойства.Вставить("Письма",								Новый Массив);
	Свойства.Вставить("ДатаПоследнейСинхронизацииСобытий");
	Свойства.Вставить("ДатаПоследнейСинхронизацииКонтактов");
	Свойства.Вставить("ДатаПоследнейСинхронизацииПисем");
	Свойства.Вставить("ФильтрДатаИзмененияПисьмаOutlook");
	Свойства.Вставить("ФильтрДатаИзмененияСобытияOutlook");
	Свойства.Вставить("ФильтрДатаИзмененияКонтактаOutlook");
	Свойства.Вставить("СоответствиеСОМОбъектыСобытий",		Новый Соответствие());
	Свойства.Вставить("СоответствиеСОМОбъектыПисем",		Новый Соответствие());
	Свойства.Вставить("СоответствиеСОМОбъектыКонтактов",	Новый Соответствие());
	Возврат Свойства;
КонецФункции

// Функция получает COMОбъект контактов.
//
Функция ПолучитьCOMОбъектКонтактов(OutlookObj, EntryID) Экспорт
	Возврат ПолучитьЭлементOutlook(OutlookObj, EntryID);
КонецФункции

// Процедура восстанавливает таблицу COMОбъектов.
//
Процедура ВосстановитьТаблицуCOMОбъектов(OutlookObj, ТаблицаОбъектов, СоответствиеСОМОбъекты) Экспорт
	Для Каждого Строка Из ТаблицаОбъектов Цикл
		Строка.ОбъектOutlook = ПолучитьЭлементOutlook(OutlookObj,Строка.ОбъектOutlookID);
		Если НЕ (СоответствиеСОМОбъекты[Строка.СтрокаТЧ] = Неопределено)
			И (ТипЗнч(СоответствиеСОМОбъекты[Строка.СтрокаТЧ].ОбъектOutlook) = Тип("Строка")) Тогда
			СоответствиеСОМОбъекты[Строка.СтрокаТЧ].ОбъектOutlook = Строка.ОбъектOutlook;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// Процедура восстанавливает таблицу объектов Outlook.
//
Процедура ВосстановитьТаблицуОбъектовOutlook(OutlookObj, ТаблицаОбъектов) Экспорт
	Для Каждого Строка Из ТаблицаОбъектов Цикл
		 Строка.ОбъектOutlook.ОбъектOutlook	= ПолучитьЭлементOutlook(OutlookObj, Строка.ОбъектOutlook.ОбъектOutlook);
		 Строка.ОбъектOutlook.ПапкаOutlook	= ПолучитьПапкуOutlook(OutlookObj, Строка.ОбъектOutlook.ПапкаOutlook);
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Другие функции 

Функция ПолучитьОбъект1С(ПрограммаOutlook, СсылкаВOutlook, ФормаТаблицы = Неопределено, ДополнительныеДанные = Неопределено) Экспорт
	Если ФормаТаблицы = Неопределено Тогда
		Возврат CRM_ОбменСMSOutlookСервер.ПолучитьОбъект1С(ПрограммаOutlook, СсылкаВOutlook);
	Иначе
		НайденныеСтроки = ФормаТаблицы.СоответствиеОбъектов.НайтиСтроки(Новый Структура("СсылкаВOutlook", СсылкаВOutlook));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Если ТипЗнч(ДополнительныеДанные) = Тип("Структура") Тогда
				ДополнительныеДанные.Вставить("Дата", НайденныеСтроки[0].Дата);
			КонецЕсли;
			Возврат НайденныеСтроки[0].СобственнаяСсылка;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ПолучитьОбъектOutlook(СтруктураСвойств, Настройки, Объект1С, ФормаТаблицы = Неопределено) Экспорт
	Если ФормаТаблицы = Неопределено Тогда
		мТаблицаСсылок = CRM_ОбменСMSOutlookСервер.ПолучитьОбъектыOutlookИз1С(Объект1С, Настройки.ПрограммаOutlook);
	Иначе
		мТаблицаСсылок = ФормаТаблицы.СоответствиеОбъектов.НайтиСтроки(Новый Структура("СобственнаяСсылка", Объект1С));
	КонецЕсли;
	мДляУдаления	= Новый Массив;
	ОбъектOutlook	= Неопределено;
	OutlookObj		= СтруктураСвойств.OutlookObj;
	Для Каждого мСтрока Из мТаблицаСсылок Цикл 
		EntryID = мСтрока.СсылкаВOutlook;
		Попытка  
			ОбъектOutlook = OutlookObj.Session.GetItemFromID(EntryID);
		Исключение
			// Возможно объект удален
			мДляУдаления.Добавить(Объект1С);
		КонецПопытки;
	КонецЦикла;
	Если НЕ (ОбъектOutlook  = Неопределено) И (ОбъектOutlook.Parent.EntryID = СтруктураСвойств.FolderDelete.EntryID) Тогда
		мДляУдаления.Добавить(Объект1С);
		ОбъектOutlook = Неопределено;
	КонецЕсли;
	Если мДляУдаления.Количество() > 0 Тогда
		CRM_ОбменСMSOutlookСервер.УдалитьОбъекты1СИзБазы(мДляУдаления,Настройки.ПрограммаOutlook);
	КонецЕсли;
	Возврат ОбъектOutlook;
КонецФункции

Функция ПолучитьПапкуOutlook(OutlookObj, EntryID, StoreID = Неопределено)
	Папка = Неопределено;
	Попытка
		Папка = OutlookObj.Session.GetFolderFromID(EntryID);
	Исключение
	КонецПопытки;
	Возврат Папка;
КонецФункции

Функция ПолучитьЭлементOutlook(OutlookObj, EntryID, StoreID = Неопределено)
	Элемент  = Неопределено;
	Попытка
		Элемент  = OutlookObj.Session.GetItemFromID(EntryID);
	Исключение
	КонецПопытки;
	Возврат Элемент;
КонецФункции

// Процедура сохраняет дату синхронизации для текущей базы Outlook.
//
Процедура СохранитьДатуСинхронизацииДляТекущейБазыOutlook(СсылкаПрограммаOutlook, СтруктураСвойств) Экспорт
	СтруктураДатыСинхронизации = Новый Структура("ДатаПоследнейСинхронизацииКонтактов,
		|ДатаПоследнейСинхронизацииСобытий,
		|ДатаПоследнейСинхронизацииПисем");
		ЗаполнитьЗначенияСвойств(СтруктураДатыСинхронизации, СтруктураСвойств);
	CRM_ОбменСMSOutlookСервер.СохранитьДатуСинхронизации(СсылкаПрограммаOutlook, СтруктураДатыСинхронизации);
КонецПроцедуры

Функция СформироватьТекстЗапросаСобытия(Настройки)
	ТекстЗапроса = "ВЫБРАТЬ
	|	CRM_Мероприятие.Ссылка,
	|	CRM_Мероприятие.Ссылка КАК Событие,
	|	CRM_Мероприятие.Ответственный,
	|	CRM_Мероприятие.Описание,
	|	CRM_Мероприятие.Дата,
	|	CRM_Мероприятие.ПометкаУдаления,
	|	СоответствиеОбъектовOutlook.ДатаПоследнейМодификации КАК ДатаПоследнейМодификации
	|ИЗ
	|	Документ.CRM_Мероприятие КАК CRM_Мероприятие
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.CRM_СоответствиеОбъектовOutlook КАК СоответствиеОбъектовOutlook
	|ПО
	|	СоответствиеОбъектовOutlook.СобственнаяСсылка = CRM_Мероприятие.Ссылка
	|ГДЕ
	|	(СоответствиеОбъектовOutlook.ДатаПоследнейМодификации ЕСТЬ NULL
	|	ИЛИ СоответствиеОбъектовOutlook.ДатаПоследнейМодификации = ДАТАВРЕМЯ(1,1,1)
	|	ИЛИ СоответствиеОбъектовOutlook.ДатаПоследнейМодификации > &ДатаПоследнейМодификации)
	|{ГДЕ
	|	CRM_Мероприятие.Ссылка.*,
	|	CRM_Мероприятие.Ответственный.*,
	|	CRM_Мероприятие.Дата}";
	Возврат ТекстЗапроса;
КонецФункции

// Функция формирует текст запроса контакты.
//
Функция СформироватьТекстЗапросаКонтакты() Экспорт
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Партнеры.Ссылка КАК Ссылка,
	|	Партнеры.Ссылка КАК Клиент,
	|	Партнеры.ПометкаУдаления,
	|	Партнеры.CRM_Фамилия КАК Фамилия,
	|	Партнеры.CRM_Имя КАК Имя,
	|	Партнеры.CRM_Отчество КАК Отчество,
	|	Партнеры.Наименование КАК Организация,
	|	Партнеры.ДатаРегистрации КАК ДатаРегистрации,
	|	""К"" КАК ВидКонтакта,
	|	СоответствиеОбъектовOutlook.ДатаПоследнейМодификации КАК ДатаПоследнейМодификации
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры,
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.CRM_СоответствиеОбъектовOutlook КАК СоответствиеОбъектовOutlook
	|ПО
	|	СоответствиеОбъектовOutlook.СобственнаяСсылка = Партнеры.Ссылка
	|ГДЕ
	|	&Партнеры
	|	И НЕ Партнеры.ЭтоГруппа
	|	И	(	СоответствиеОбъектовOutlook.ДатаПоследнейМодификации ЕСТЬ NULL
	|		ИЛИ СоответствиеОбъектовOutlook.ДатаПоследнейМодификации = ДАТАВРЕМЯ(1,1,1)
	|		ИЛИ СоответствиеОбъектовOutlook.ДатаПоследнейМодификации > &ДатаПоследнейМодификации)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КонтактныеЛицаПартнеров.Ссылка,
	|	КонтактныеЛицаПартнеров.Ссылка,
	|	КонтактныеЛицаПартнеров.ПометкаУдаления,
	|	КонтактныеЛицаПартнеров.CRM_Фамилия,
	|	КонтактныеЛицаПартнеров.CRM_Имя,
	|	КонтактныеЛицаПартнеров.CRM_Отчество,
	|	КонтактныеЛицаПартнеров.Владелец.Наименование,
	|	КонтактныеЛицаПартнеров.ДатаРегистрацииСвязи,
	|	""КЛК"",
	|	СоответствиеОбъектовOutlook.ДатаПоследнейМодификации КАК ДатаПоследнейМодификации
	|ИЗ
	|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.CRM_СоответствиеОбъектовOutlook КАК СоответствиеОбъектовOutlook
	|ПО
	|	СоответствиеОбъектовOutlook.СобственнаяСсылка = КонтактныеЛицаПартнеров.Ссылка
	|ГДЕ
	|	&КонтактныеЛицаПартнеров
	|	И	(	СоответствиеОбъектовOutlook.ДатаПоследнейМодификации ЕСТЬ NULL
	|		ИЛИ СоответствиеОбъектовOutlook.ДатаПоследнейМодификации = ДАТАВРЕМЯ(1,1,1)
	|		ИЛИ СоответствиеОбъектовOutlook.ДатаПоследнейМодификации > &ДатаПоследнейМодификации)
	|";
	Возврат ТекстЗапроса;
КонецФункции

// Функция получает программу MSOutlook на клиенте.
//
Функция ПолучитьПрограммуMSOutlookНаКлиенте(Форма, Пользователь, Компьютер) Экспорт 
		ТекстВопроса = "Для текущего пользователя/компьютера в системе не зарегистрировано
		|ни одной программы MS Outlook для обмена данными.
		|Зарегистрировать новую программу MS Outlook?"; 
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПрограммаMSOutlookСсылка	= CRM_ОбменСMSOutlookСервер.СоздатьПрограммуMSOutlook(Пользователь,Компьютер);
			СтруктураНастройки			= CRM_ОбменСMSOutlookСервер.ДобавитьНовуюНастройку(ПрограммаMSOutlookСсылка);
			Параметры					= Новый Структура("ЗначенияЗаполнения", СтруктураНастройки);
			Параметры.Вставить("МодальныйРежим", Истина);
			ОткрытьФорму("Обработка.CRM_ОбменСMSOutlook.Форма.ФормаМастерНастройки", Параметры, Форма);
			Возврат  ПрограммаMSOutlookСсылка;
		Иначе
			Возврат ПредопределенноеЗначение("Справочник.CRM_ПрограммыMSOutlook.ПустаяСсылка");
		КонецЕсли;	
КонецФункции

Процедура ЗаполнитьДатыПоследнейСинхронизации(СтруктураСвойств, Настройка)
	ДатыСинхронизации	= CRM_ОбменСMSOutlookСервер.ПолучитьДатуСинхронизации(Настройка.ПрограммаOutlook);
	СтруктураСвойств.ДатаПоследнейСинхронизацииКонтактов	= ДатыСинхронизации.ДатаПоследнейСинхронизацииКонтактов;
	СтруктураСвойств.ДатаПоследнейСинхронизацииСобытий		= ДатыСинхронизации.ДатаПоследнейСинхронизацииСобытий;
	СтруктураСвойств.ДатаПоследнейСинхронизацииПисем		= ДатыСинхронизации.ДатаПоследнейСинхронизацииПисем;
	
КонецПроцедуры

Процедура ОчиститьТабличныеЧасти(СтруктураСвойств)
	СтруктураСвойств.Контакты	= Новый Массив;
	СтруктураСвойств.Письма		= Новый Массив;
	СтруктураСвойств.События	= Новый Массив;
КонецПроцедуры

// Процедура готовит таблицу объектов Outlook.
//
Процедура ПодготовитьТаблицуОбъектовOutlook(ТаблицаОбъектовOutlook) Экспорт
	Для Каждого СтрокаТЗ Из ТаблицаОбъектовOutlook Цикл
		ОбъектOutlook	= СтрокаТЗ.ОбъектOutlook.ОбъектOutlook;
		ПапкаOutlook	= СтрокаТЗ.ОбъектOutlook.ПапкаOutlook;
		СтрокаТЗ.ОбъектOutlook.ОбъектOutlook	= ОбъектOutlook.EntryID;
		СтрокаТЗ.ОбъектOutlook.ПапкаOutlook		= ПапкаOutlook.EntryID;
	КонецЦикла;
КонецПроцедуры

// Процедура готовит таблицу COMОбъектов Outlook.
//
Процедура ПодготовитьТаблицуCOMОбъектовOutlook(ТаблицаОбъектовOutlook)Экспорт
	Для Каждого СтрокаТЗ Из ТаблицаОбъектовOutlook Цикл
		СтрокаТЗ.ОбъектOutlook = СтрокаТЗ.ОбъектOutlook.EntryID;
	КонецЦикла;
КонецПроцедуры

// Функция получает реквизит объекта Outlook.
//
Функция ПолучитьРеквизитОбъектаOutlook(OutlookОбъект, Реквизит, ОписаниеОшибки = "") Экспорт
	Результат = Неопределено;
	Если Реквизит = "Частное" Тогда
		РеквизитOutlook = "Sensitivity";
	ИначеЕсли Реквизит = "ДатаИзменения" Тогда
		РеквизитOutlook = "LastModificationTime";
	ИначеЕсли  Реквизит = "Имя" Тогда
		РеквизитOutlook = "FirstName"
	ИначеЕсли  Реквизит = "Фамилия" Тогда
		РеквизитOutlook = "LastName"
	ИначеЕсли  Реквизит = "Отчество" Тогда
		РеквизитOutlook = "MiddleName"  
	ИначеЕсли  Реквизит = "Организация" Тогда
		РеквизитOutlook = "CompanyName" 
	ИначеЕсли  Реквизит = "ДатаРождения" Тогда
		РеквизитOutlook = "Birthday"    
	ИначеЕсли  Реквизит = "Повторяющееся" Тогда
		РеквизитOutlook = "IsRecurring"         
	ИначеЕсли  Реквизит = "ОписаниеСобытия" Тогда
		РеквизитOutlook = "Subject"             
	ИначеЕсли  Реквизит = "СодержаниеСобытия" Тогда
		РеквизитOutlook = "Body"                
	ИначеЕсли  Реквизит = "НачалоСобытия" Тогда
		РеквизитOutlook = "Start"               
	ИначеЕсли  Реквизит = "ОкончаниеМероприятия" Тогда
		РеквизитOutlook = "End" 
	ИначеЕсли Реквизит = "Напоминание"       Тогда
		РеквизитOutlook = "ReminderSet"
	ИначеЕсли Реквизит = "СобытиеНаЦелыйДень" Тогда
		РеквизитOutlook = "AllDayEvent"
	ИначеЕсли Реквизит = "Должность" Тогда
		РеквизитOutlook = "JobTitle"
	ИначеЕсли Реквизит = "Место" Тогда
		РеквизитOutlook = "Location" 
	Иначе
		РеквизитOutlook = Реквизит;
	КонецЕсли;
	Попытка                                         
		Результат =  OutlookОбъект[РеквизитOutlook];
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	Возврат Результат;
КонецФункции 

// Основная функция синхронизации по настройке.
Процедура СинхронизироватьПоНастройке(СтруктураСвойств, Настройка, Форма, ОписаниеОповещения)  Экспорт
	ОчиститьТабличныеЧасти(СтруктураСвойств);
	ЗаполнитьДатыПоследнейСинхронизации(СтруктураСвойств,Настройка);
	СтруктураСвойств.Вставить("СоответствиеСОМОбъектыСобытий",		Новый Соответствие());
	СтруктураСвойств.Вставить("СоответствиеСОМОбъектыПисем",		Новый Соответствие());
	СтруктураСвойств.Вставить("СоответствиеСОМОбъектыКонтактов",	Новый Соответствие());
	ЗаполнитьТаблицуСинхронизацииСобытий(СтруктураСвойств,		Настройка);
	ЗаполнитьТаблицуСинхронизацииПисем(СтруктураСвойств,		Настройка);
	ЗаполнитьТаблицуСинхронизацииКонтактов(СтруктураСвойств,	Настройка);
	Если Настройка.ОткрытьФормуСопоставленияОбъектов Тогда
		ТаблицаCOMОбъектовКонтактов	= СтруктураСвойств.СОМОбъектыКонтактов;
		ТаблицаCOMОбъектовСобытий	= СтруктураСвойств.СОМОбъектыСобытий;
		ТаблицаCOMОбъектовПисем		= СтруктураСвойств.СОМОбъектыПисем;
		ТаблицаКонтактовOutlook		= СтруктураСвойств.ТаблицаКонтактовOutlook;
		ТаблицаПисемOutlook			= СтруктураСвойств.ТаблицаПисемOutlook;
		ТаблицаСобытийOutlook		= СтруктураСвойств.ТаблицаСобытийOutlook;
		ТаблицаПапокOutlook			= СтруктураСвойств.ТаблицаПапокOutlook;
		ПодготовитьТаблицуОбъектовOutlook(ТаблицаКонтактовOutlook);
		ПодготовитьТаблицуCOMОбъектовOutlook(ТаблицаCOMОбъектовКонтактов);
		ПодготовитьТаблицуОбъектовOutlook(ТаблицаСобытийOutlook);
		ПодготовитьТаблицуCOMОбъектовOutlook(ТаблицаCOMОбъектовСобытий);
		ПодготовитьТаблицуОбъектовOutlook(ТаблицаПисемOutlook);
		ПодготовитьТаблицуCOMОбъектовOutlook(ТаблицаCOMОбъектовПисем);
		мСтруктура = Новый Структура("СтруктураСвойств,Настройка", Новый Структура(
		"Контакты,
		|События,
		|Письма,
		|ТаблицаКонтактовOutlook,
		|ТаблицаСобытийOutlook,
		|ТаблицаПисемOutlook,
		|ТаблицаПапокOutlook,
		|COMОбъектыКонтактов,
		|COMОбъектыСобытий,
		|COMОбъектыПисем,
		|СоответствиеСОМОбъектыСобытий,
		|СоответствиеСОМОбъектыПисем,
		|СоответствиеСОМОбъектыКонтактов",
		СтруктураСвойств.Контакты,
		СтруктураСвойств.События,
		СтруктураСвойств.Письма,
		ТаблицаКонтактовOutlook,
		ТаблицаСобытийOutlook,
		ТаблицаПисемOutlook,
		ТаблицаПапокOutlook,
		ТаблицаCOMОбъектовКонтактов,
		ТаблицаCOMОбъектовСобытий,
		ТаблицаCOMОбъектовПисем,
		СтруктураСвойств.СоответствиеСОМОбъектыСобытий,
		СтруктураСвойств.СоответствиеСОМОбъектыПисем,
		СтруктураСвойств.СоответствиеСОМОбъектыКонтактов
		),
		Настройка
		);
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", мСтруктура);
		ДатыСинхронизации = ОткрытьФорму("Обработка.CRM_ОбменСMSOutlook.Форма.ФормаСопоставленияОбъектов",
			ПараметрыФормы, Форма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		СинхронизироватьКонтакты(СтруктураСвойств,	Настройка);
		СинхронизироватьСобытия(СтруктураСвойств,	Настройка);
		СинхронизироватьПисьма(СтруктураСвойств,	Настройка);
		СохранитьДатуСинхронизацииДляТекущейБазыOutlook(Настройка.ПрограммаOutlook, СтруктураСвойств);
		ДатыСинхронизации = Новый Структура("ДатаПоследнейСинхронизацииКонтактов,
											|ДатаПоследнейСинхронизацииПисем,ДатаПоследнейСинхронизацииСобытий");
		ЗаполнитьЗначенияСвойств(ДатыСинхронизации, СтруктураСвойств);
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, ДатыСинхронизации);
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПредставлениеСобытияOutlook(Тема, ДатаНачала)
	Возврат Строка(ДатаНачала) + ", " +  Тема;
КонецФункции

Процедура ЗаполнитьСтруктуруСобытияПоНастройке(СтруктураРеквизитов, Настройки)
	Если НЕ СтруктураРеквизитов.Свойство("Дата")
		ИЛИ (СтруктураРеквизитов.Свойство("Дата") И НЕ ЗначениеЗаполнено(СтруктураРеквизитов.Дата)) Тогда
		СтруктураРеквизитов.Вставить("Дата", ТекущаяДата());
	КонецЕсли;
	Если НЕ СтруктураРеквизитов.Свойство("ОкончаниеМероприятия")
		ИЛИ (СтруктураРеквизитов.Свойство("ОкончаниеМероприятия")
		И (НЕ ЗначениеЗаполнено(СтруктураРеквизитов.ОкончаниеМероприятия)
		ИЛИ (ТипЗнч(СтруктураРеквизитов.ОкончаниеМероприятия) = Тип("Дата")
		И СтруктураРеквизитов.ОкончаниеМероприятия < СтруктураРеквизитов.Дата))) Тогда
		СтруктураРеквизитов.Вставить("ОкончаниеМероприятия", СтруктураРеквизитов.Дата);
	КонецЕсли;
	СтруктураРеквизитов.Вставить("Ответственный",		ТекущийПользователь());
	//СтруктураРеквизитов.Вставить("ВходящееИсходящее",	Настройки.ТипСобытий1С);
	//СтруктураРеквизитов.Вставить("СостояниеСобытия",	Настройки.СостояниеСобытий1С);				
	//СтруктураРеквизитов.Вставить("ВидСобытия",			Настройки.ВидСобытий1С);
	//СтруктураРеквизитов.Вставить("Важность",			ПредопределенноеЗначение("Перечисление.ВариантыВажностиВзаимодействия.Обычная"));
	СтруктураРеквизитов.Вставить("Автор",				ТекущийПользователь());	
	//СтруктураРеквизитов.Вставить("Результат",			Настройки.Комментарий1С);
КонецПроцедуры

Процедура ЗаполнитьСтруктуруСобытияПоОбъектуOutlook(СтруктураРеквизитов, ОбъектOutlook)
	СтруктураРеквизитов.Вставить("Тема",				ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,	"ОписаниеСобытия"));
	СтруктураРеквизитов.Вставить("Описание",			ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,	"СодержаниеСобытия"));
	СтруктураРеквизитов.Вставить("Дата",				ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,	"НачалоСобытия"));
	СтруктураРеквизитов.Вставить("ОкончаниеМероприятия",	ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,	"ОкончаниеМероприятия"));
	СтруктураРеквизитов.Тема		= CRM_ОбменСMSOutlookКлиентСервер.ЗаменитьНедопустимыеСимволыXML(СтруктураРеквизитов.Тема);
	СтруктураРеквизитов.Описание	= CRM_ОбменСMSOutlookКлиентСервер.ЗаменитьНедопустимыеСимволыXML(СтруктураРеквизитов.Описание);
КонецПроцедуры

// Функция заполняет структуру объекта контактной информацией.
//
Функция ЗаполнитьСтруктуруОбъектаКонтактнойИнформацией(ТаблицаСинхронизируемыхРеквизитов, СтруктураОбъекта, ОбъектOutlook) Экспорт
	СтруктураОбъекта.Вставить("ТабличныеЧасти", Новый Структура("КонтактнаяИнформация", Новый Массив));
	Для Каждого СтрокаРеквизитов Из ТаблицаСинхронизируемыхРеквизитов Цикл
			ПредставлениеКИ				=  СокрЛП(ОбъектOutlook[СтрокаРеквизитов.ВидКИOutlook]);
			Если СтрокаРеквизитов.Тип	= ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес") Тогда
				СтрПредставлениеКИ		= ПредставлениеКИ;
				ПредставлениеКИ			= "";
				Для НомерСтроки = 1 По СтрЧислоСтрок(СтрПредставлениеКИ) Цикл
					ТекСтр = СокрЛП(СтрПолучитьСтроку(СтрПредставлениеКИ, НомерСтроки));
					Если НЕ ПустаяСтрока(ТекСтр) Тогда
						ПредставлениеКИ = ПредставлениеКИ + ?(ПустаяСтрока(ПредставлениеКИ), "", ", ") + ТекСтр;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			Если ЗначениеЗаполнено(ПредставлениеКИ) Тогда
				КИ = Новый Структура("Тип,Вид,Представление", СтрокаРеквизитов.Тип, СтрокаРеквизитов.ВидКИ1С, ПредставлениеКИ);
				СтруктураОбъекта.ТабличныеЧасти.КонтактнаяИнформация.Добавить(КИ);
			КонецЕсли;
	КонецЦикла;
	Возврат СтруктураОбъекта;
КонецФункции
	
// Функция возвращает e-mail контакта.
//
// Параметры:
//	Контакт	- СправочникСсылка	- Контакт.      ё
//
// Возвращаемое значение:
//	Строка	- Адрес электронной почты.
//
Функция ПолучитьEMailКонтакта(Контакт)
	Если ПустаяСтрока(Контакт.Email1Address) Тогда
		Если ПустаяСтрока(Контакт.Email2Address) Тогда
			Если ПустаяСтрока(Контакт.Email3Address) Тогда
				Возврат "";
			Иначе	
				Возврат Контакт.Email3Address;
			КонецЕсли;	
		Иначе	
			Возврат Контакт.Email2Address;
		КонецЕсли;	
	Иначе	
		Возврат Контакт.Email1Address;
	КонецЕсли;	
КонецФункции // ПолучитьEMailКонтакта()	

// Синхронизация событий
//
Процедура СинхронизироватьСобытия(СтруктураСвойств, Настройка)  Экспорт
	Если НЕ Настройка.СинхронизироватьСобытия Тогда Возврат; КонецЕсли;	
	ЗаполнитьСоответствиеСОМОбъектыКонтактов(СтруктураСвойств);
	Состояние("Для прерывания процесса синхронизации нажмите Ctrl+Break");
	Счетчик = 1;
	ОбщееКоличество = 0;
	Для Каждого СтрокаТаблицы Из СтруктураСвойств.События Цикл
		Если СтрокаТаблицы.Пометка Тогда
			ОбщееКоличество = ОбщееКоличество + 1;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаСобытия Из СтруктураСвойств.События Цикл
		Если НЕ СтрокаСобытия.Пометка Тогда Продолжить; КонецЕсли;
		ОбработкаПрерыванияПользователя();
		Состояние(НСтр("ru = 'Запись событий: '") + Строка(Счетчик) + НСтр("ru = ' из '") + Строка(ОбщееКоличество));
		Счетчик = Счетчик + 1;
		Если СтрокаСобытия.Направление = "Outlook -> 1С" Тогда
			// Чтобы не делать больше вызовов сервера чем нужно, создадим структуру на клиенте аналогичную объекту.
			СтруктураОбъекта = Новый Структура("Реквизиты,ТабличныеЧасти", Новый Структура,
				Новый Структура("СторонниеЛица", Новый Массив));
			СтрокаСОМОбъектыСобытий	= СтруктураСвойств.СоответствиеСОМОбъектыСобытий[СтрокаСобытия.ID];
			ОбъектOutlook			= СтрокаСОМОбъектыСобытий.ОбъектOutlook;
			// Удаление объекта Outlook
			Если ЗначениеЗаполнено(СтрокаСобытия.Объект_1С) И Настройка.УдалятьПомеченныеНаУдалениеОбъекты 
				И CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаСобытия, "Объект_1С", "ПометкаУдаления") Тогда
				Если НЕ (ОбъектOutlook = Неопределено)  Тогда	// Удаление объекта Outlook.
					ОбъектOutlook.Delete();
				КонецЕсли;
				Продолжить;
 			КонецЕсли;	
			ЗаполнитьСтруктуруСобытияПоОбъектуOutlook(СтруктураОбъекта.Реквизиты, ОбъектOutlook);
			// Перенесем контактные лица	
			// Обход контактов Outlook
			УчастникиСобытияOutlook = Новый Соответствие;
			Если Настройка.СинхронизироватьКонтактыСобытияOutlook И OutlookМеньше2013(ОбъектOutlook.Application.Version) Тогда
				Попытка
					КолКонтактов = ОбъектOutlook.Links.Count;
				Исключение	
					КолКонтактов = 0;
				КонецПопытки;
				Для Ном = 1 По КолКонтактов Цикл
					УчастникСобытия = ОбъектOutlook.Links.Item(Ном);
					Попытка
						КонтактOutlook = УчастникСобытия.Item;
						УчастникиСобытияOutlook.Вставить(КонтактOutlook);
					Исключение
					КонецПопытки;
				КонецЦикла;	
			КонецЕсли;
			Если Настройка.СинхронизироватьУчастниковСобытияOutlook  Тогда
				Попытка
					КолКонтактов = ОбъектOutlook.Recipients.Count;
				Исключение	
					КолКонтактов = 0;
				КонецПопытки;
				Для Ном = 1 По КолКонтактов Цикл
					УчастникСобытия = ОбъектOutlook.Recipients.Item(Ном);
					Попытка
						ДлинаGUID		= CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Настройка.ПрограммаOutlook, "ДлинаGUID");
						Идентификатор	= CRM_ОбменСMSOutlookКлиентСервер.ПолучитьИдентификаторУчастника(УчастникСобытия.AddressEntry.ID, ДлинаGUID);
						КонтактOutlook	= СтруктураСвойств.OutlookObj.Session.GetItemFromID(Идентификатор);
						УчастникиСобытияOutlook.Вставить(КонтактOutlook);
					Исключение
					КонецПопытки;
				КонецЦикла;	
			КонецЕсли;
			// Заполняем участников события (в этой конфигурации это мероприятия)
			// +CRM3
			//СтруктураОбъекта.Реквизиты.Вставить("Партнер",			CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(СтрокаСобытия.Объект_1С, "Партнер"));
			//СтруктураОбъекта.Реквизиты.Вставить("КонтактноеЛицо",	CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(СтрокаСобытия.Объект_1С, "КонтактноеЛицо"));
			СтруктураОбъекта.Реквизиты.Вставить("Партнер",			ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка"));
			СтруктураОбъекта.Реквизиты.Вставить("КонтактноеЛицо",	ПредопределенноеЗначение("Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка"));
			// -CRM3
			СторонниеЛица = СтруктураОбъекта.ТабличныеЧасти.СторонниеЛица;
			CRM_ОбменСMSOutlookСервер.ЗаполнитьСтронниеЛицаСобытия(СтрокаСобытия.Объект_1С, СторонниеЛица);
			МассивСтороннихЛиц = Новый Массив;
			Для	Каждого УчастникСобытия	Из 	УчастникиСобытияOutlook Цикл
				КонтактOutlook = УчастникСобытия.Ключ;
				// Контакты должны быть в списке синхронизации.
				НайденныйЭлемент = ПолучитьКонтактПоOutlookID(СтруктураСвойств, КонтактOutlook.EntryID);
				Если НайденныйЭлемент = Неопределено Тогда Продолжить; КонецЕсли;
				СОМОбъектКонтактов = НайденныйЭлемент;
				СтрокиТЧКонтакты = НайтиСтроки(СтруктураСвойств.Контакты, Новый Структура("ID", СОМОбъектКонтактов.СтрокаТЧ));
				Если СтрокиТЧКонтакты.Количество() = 0 Тогда Продолжить; КонецЕсли;
				СтрокаТЧКонтакты =	СтрокиТЧКонтакты[0];
				// Если контакт синхронизирован, то переносим его в 1С.
				Если ЗначениеЗаполнено(СтрокаТЧКонтакты.Объект_1С) Тогда
					Если СтрокаТЧКонтакты.ВидКонтакта = "КЛК" Тогда 
						Если МассивСтороннихЛиц.Найти(СтрокаТЧКонтакты.Объект_1С) = Неопределено Тогда
							МассивСтороннихЛиц.Добавить(СтрокаТЧКонтакты.Объект_1С);
						КонецЕсли;
						Если ЗначениеЗаполнено(СтруктураОбъекта.Реквизиты.КонтактноеЛицо) Тогда
							Если СтрокаТЧКонтакты.Объект_1С = СтруктураОбъекта.Реквизиты.КонтактноеЛицо Тогда
								Продолжить;
							ИначеЕсли НЕ КонтактЕстьВТЧ(СтрокаТЧКонтакты.Объект_1С, СторонниеЛица, "КонтактноеЛицо") Тогда
								СтрокаТЧ = Новый Структура;
								СтрокаТЧ.Вставить("Партнер", 		CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(СтрокаТЧКонтакты.Объект_1С, "Владелец"));
								СтрокаТЧ.Вставить("КонтактноеЛицо", СтрокаТЧКонтакты.Объект_1С);
								СтрокаТЧ.Вставить("Адрес",			ПолучитьEMailКонтакта(КонтактOutlook));
								СторонниеЛица.Добавить(СтрокаТЧ);
							КонецЕсли;
						ИначеЕсли ЗначениеЗаполнено(СтруктураОбъекта.Реквизиты.Партнер) Тогда
							Если НЕ КонтактЕстьВТЧ(СтрокаТЧКонтакты.Объект_1С, СторонниеЛица, "КонтактноеЛицо") Тогда
								СтрокаТЧ = Новый Структура;
								СтрокаТЧ.Вставить("Партнер", 		CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(СтрокаТЧКонтакты.Объект_1С, "Владелец"));
								СтрокаТЧ.Вставить("КонтактноеЛицо", СтрокаТЧКонтакты.Объект_1С);
								СтрокаТЧ.Вставить("Адрес",			ПолучитьEMailКонтакта(КонтактOutlook));
								СторонниеЛица.Добавить(СтрокаТЧ);
							КонецЕсли;
						Иначе
							СтруктураОбъекта.Реквизиты.Партнер			= CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(СтрокаТЧКонтакты.Объект_1С, "Владелец");
							СтруктураОбъекта.Реквизиты.КонтактноеЛицо	= СтрокаТЧКонтакты.Объект_1С;
						КонецЕсли;
					ИначеЕсли СтрокаТЧКонтакты.ВидКонтакта = "К" Тогда	
						Если МассивСтороннихЛиц.Найти(СтрокаТЧКонтакты.Объект_1С) = Неопределено Тогда
							МассивСтороннихЛиц.Добавить(СтрокаТЧКонтакты.Объект_1С);
						КонецЕсли;
						Если ЗначениеЗаполнено(СтруктураОбъекта.Реквизиты.Партнер) Тогда
							Если ЗначениеЗаполнено(СтруктураОбъекта.Реквизиты.КонтактноеЛицо) Тогда
								Если НЕ КонтактЕстьВТЧ(СтрокаТЧКонтакты.Объект_1С, СторонниеЛица, "Партнер") Тогда
									СтрокаТЧ = Новый Структура;
									СтрокаТЧ.Вставить("Партнер", 		СтрокаТЧКонтакты.Объект_1С);
									СтрокаТЧ.Вставить("КонтактноеЛицо", ПредопределенноеЗначение("Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка"));
									СтрокаТЧ.Вставить("Адрес",			ПолучитьEMailКонтакта(КонтактOutlook));
									СторонниеЛица.Добавить(СтрокаТЧ);
								КонецЕсли;
							ИначеЕсли СтрокаТЧКонтакты.Объект_1С = СтруктураОбъекта.Реквизиты.Партнер Тогда
								Продолжить;
							ИначеЕсли НЕ КонтактЕстьВТЧ(СтрокаТЧКонтакты.Объект_1С, СторонниеЛица, "Партнер") Тогда
								СтрокаТЧ = Новый Структура;
								СтрокаТЧ.Вставить("Партнер", 		СтрокаТЧКонтакты.Объект_1С);
								СтрокаТЧ.Вставить("КонтактноеЛицо", ПредопределенноеЗначение("Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка"));
								СтрокаТЧ.Вставить("Адрес",			ПолучитьEMailКонтакта(КонтактOutlook));
								СторонниеЛица.Добавить(СтрокаТЧ);
							КонецЕсли;
						Иначе
							СтруктураОбъекта.Реквизиты.Партнер			= СтрокаТЧКонтакты.Объект_1С;
							СтруктураОбъекта.Реквизиты.КонтактноеЛицо	= ПредопределенноеЗначение("Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка");
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;	 
			// Удаляем отсутствующие контакты.
			//Если ЗначениеЗаполнено(СтруктураОбъекта.Реквизиты.КонтактноеЛицо) Тогда
			//	Если МассивСтороннихЛиц.Найти(СтруктураОбъекта.Реквизиты.КонтактноеЛицо) = Неопределено Тогда
			//		СтруктураОбъекта.Реквизиты.Партнер			= ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка");
			//		СтруктураОбъекта.Реквизиты.КонтактноеЛицо	= ПредопределенноеЗначение("Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка");
			//	КонецЕсли;
			//ИначеЕсли ЗначениеЗаполнено(СтруктураОбъекта.Реквизиты.Партнер) Тогда
			//	Если МассивСтороннихЛиц.Найти(СтруктураОбъекта.Реквизиты.Партнер) = Неопределено Тогда
			//		СтруктураОбъекта.Реквизиты.Партнер			= ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка");
			//		СтруктураОбъекта.Реквизиты.КонтактноеЛицо	= ПредопределенноеЗначение("Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка");
			//	КонецЕсли;
			//КонецЕсли;
            КоличествоУчастников = СторонниеЛица.Количество();
			Для НомерСтроки = 1 По КоличествоУчастников Цикл 
				СтрокаУчастника = СторонниеЛица[КоличествоУчастников - НомерСтроки];
				Если ЗначениеЗаполнено(СтрокаУчастника.КонтактноеЛицо) Тогда
					Если (МассивСтороннихЛиц.Найти(СтрокаУчастника.КонтактноеЛицо) = Неопределено) Тогда
						СторонниеЛица.Удалить(КоличествоУчастников - НомерСтроки);
					КонецЕсли;
				ИначеЕсли (МассивСтороннихЛиц.Найти(СтрокаУчастника.Партнер) = Неопределено) Тогда
					СторонниеЛица.Удалить(КоличествоУчастников - НомерСтроки);
				КонецЕсли;
			КонецЦикла;
			ОчиститьУчастников = Истина;
			ЗаполнитьСтруктуруСобытияПоНастройке(СтруктураОбъекта.Реквизиты, Настройка);
			Объект_1С  = CRM_ОбменСMSOutlookСервер.ЗаполнитьМероприятиеПоСтруктуре(СтрокаСобытия.Объект_1С, СтруктураОбъекта, ОчиститьУчастников, СтрокаСобытия);
		ИначеЕсли СтрокаСобытия.Направление = "1С -> Outlook" Тогда
			Объект_1С				= СтрокаСобытия.Объект_1С;
			СтрокаСОМОбъектыСобытий	= СтруктураСвойств.СоответствиеСОМОбъектыСобытий[СтрокаСобытия.ID];
			Если СтрокаСОМОбъектыСобытий = Неопределено  Тогда
				Если CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаСобытия, "Объект_1С", "ПометкаУдаления") Тогда
					Продолжить;
				КонецЕсли;	
				НайденныеСтроки	= НайтиСтроки(Настройка.ТаблицаПапокOutlook, Новый Структура("Папка", СтрокаСобытия.ПапкаOutlook));
				ПапкаOutlook	= НайденныеСтроки[0];
				Folder			= ПолучитьПапкуOutlook(СтруктураСвойств.OutlookObj,ПапкаOutlook.Folder);
				Если Folder = Неопределено Тогда Продолжить; КонецЕсли;
				ОбъектOutlook	= Folder.Items.Add();
				УстановитьРеквизитОбъектаOutlook(ОбъектOutlook, "Напоминание", Ложь); // Отключим напоминания
			Иначе	
				ОбъектOutlook	= СтрокаСОМОбъектыСобытий.ОбъектOutlook;
				ПометкаУдаления	= CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаСобытия, "Объект_1С", "ПометкаУдаления");
				Если Настройка.УдалятьПомеченныеНаУдалениеОбъекты И ПометкаУдаления Тогда // Удаление объекта Outlook.
					ОбъектOutlook.Delete();
					Продолжить;
				КонецЕсли;	
			КонецЕсли; 
			СтруктураПолей = CRM_ОбменСMSOutlookСервер.ПолучитьСтруктуруСвойствСобытия(Объект_1С);	
			УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,"ОписаниеСобытия",		СтруктураПолей.Тема);
			УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,"СодержаниеСобытия",		СтруктураПолей.Описание);
			УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,"НачалоСобытия",			СтруктураПолей.Дата);
			УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,"ОкончаниеМероприятия",		СтруктураПолей.ОкончаниеМероприятия);
			УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,"СобытиеНаЦелыйДень",	СтруктураПолей.НаВесьДень);
			УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,"Место",					СтруктураПолей.Место); 
			// Перенесем контактные лица.
			Если Настройка.СинхронизироватьКонтактыСобытияOutlook И OutlookМеньше2013(ОбъектOutlook.Application.Version) Тогда
				Попытка
					КолКонтактов = ОбъектOutlook.Links.Count;
				Исключение	
					КолКонтактов = 0;
				КонецПопытки;
				Для Ном = 1 По КолКонтактов Цикл
					ОбъектOutlook.Links.Remove(КолКонтактов - Ном + 1);
				КонецЦикла; 
			КонецЕсли; 	
			Если Настройка.СинхронизироватьУчастниковСобытияOutlook Тогда
				Попытка
					КолКонтактов = ОбъектOutlook.Recipients.Count;
				Исключение	
					КолКонтактов = 0;
				КонецПопытки;
				Для Ном = 1 По КолКонтактов Цикл
					ОбъектOutlook.Recipients.Item(КолКонтактов - Ном + 1).Delete(); 
				КонецЦикла; 
			КонецЕсли;
			КонтактыСобытия = CRM_ОбменСMSOutlookСервер.ПолучитьКонтактыСобытия(Объект_1С);
			Для Каждого УчастникСобытия Из КонтактыСобытия Цикл 
				Контакт1С =  УчастникСобытия.Значение;
				// Контакты должны быть в списке синхронизации.
				НайденныеСтроки = НайтиСтроки(СтруктураСвойств.Контакты, Новый Структура("Объект_1С",Контакт1С));
				СтрокаТЧКонтакты = Неопределено;
				Если НайденныеСтроки.Количество() > 0 Тогда 
					СтрокаТЧКонтакты = НайденныеСтроки[0];
				КонецЕсли;
				Если СтрокаТЧКонтакты = Неопределено Тогда					
					Продолжить;
				КонецЕсли;
				Если СтрокаТЧКонтакты.ВидКонтакта = "ЛК" Тогда
					Продолжить;
				КонецЕсли;	
				НайденныйЭлемент = СтруктураСвойств.СоответствиеСОМОбъектыКонтактов[СтрокаТЧКонтакты.ID];
				Если НайденныйЭлемент = Неопределено Тогда
					Продолжить;
				Иначе
					СОМОбъектКонтактов = НайденныйЭлемент;
				КонецЕсли;
				// Если контакт синхронизирован, тогда переносим его в Outlook.
				Если СОМОбъектКонтактов.ОбъектOutlook = Неопределено Тогда Продолжить; КонецЕсли;
				Если Настройка.СинхронизироватьКонтактыСобытияOutlook И OutlookМеньше2013(ОбъектOutlook.Application.Version) Тогда
					НовыйУчастникСобытия = ОбъектOutlook.Links.add(СОМОбъектКонтактов.ОбъектOutlook);	
				КонецЕсли; 	
				Если Настройка.СинхронизироватьУчастниковСобытияOutlook Тогда
					ИмяКонтакта = СОМОбъектКонтактов.ОбъектOutlook.FullName;
					Если НЕ ЗначениеЗаполнено(ИмяКонтакта)  Тогда
						ИмяКонтакта = СОМОбъектКонтактов.ОбъектOutlook.CompanyName;
					КонецЕсли;	
					Если  ЗначениеЗаполнено(ИмяКонтакта) Тогда
						НовыйУчастникСобытия = ОбъектOutlook.Recipients.add(ИмяКонтакта);	
						НовыйУчастникСобытия.Resolve();
					КонецЕсли;
				КонецЕсли; 
			КонецЦикла;
			ОбъектOutlook.Save();
			СтрокаСобытия.Представление_Outlook	= ПолучитьПредставлениеСобытияOutlook(
				ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook, "ОписаниеСобытия"),
				ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook, "НачалоСобытия"));
			СтрокаСобытия.ДатаИзменения_Outlook	= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,"ДатаИзменения");
		КонецЕсли;
		// Сохраним связь с объектом Outlook.
		СтруктураЗаполнения = Новый Структура("ПрограммаOutlook,СобственнаяСсылка,СсылкаВOutlook",
			Настройка.ПрограммаOutlook, Объект_1С, ОбъектOutlook.EntryID);
		CRM_ОбменСMSOutlookСервер.СохранитьСвязьСОбъектомOutlook(СтруктураЗаполнения);
		СтрокаСобытия.Пометка = Ложь;
	КонецЦикла;
	// Сохраняем дату синхронизации.
	СтруктураСвойств.ДатаПоследнейСинхронизацииСобытий = ТекущаяДата();
КонецПроцедуры	

// Подключение к Outlook.
//
Функция ПолучитьOutlookObj(СтруктураСвойств, Настройка, ТекстОшибки) Экспорт
	// Проверка компьютера
	ИмяКомпьютера = CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(Настройка.ПрограммаOutlook,, "Компьютер");
	Попытка
		#Если ВебКлиент Тогда
			СтруктураСвойств.Вставить("OutlookObj", Новый COMОбъект("Outlook.Application"));
		#Иначе
			Если ЗначениеЗаполнено(ИмяКомпьютера) Тогда
				Если ВРег(ИмяКомпьютера) = ВРег(ИмяКомпьютера()) Тогда
					СтруктураСвойств.Вставить("OutlookObj", Новый COMОбъект("Outlook.Application"));
				Иначе
					СтруктураСвойств.Вставить("OutlookObj", Новый COMОбъект("Outlook.Application", ИмяКомпьютера));
				КонецЕсли;
			Иначе
				СтруктураСвойств.Вставить("OutlookObj", Новый COMОбъект("Outlook.Application"));
			КонецЕсли;
		#КонецЕсли
		СтруктураСвойств.Вставить("MAPINameSpace",		СтруктураСвойств.OutlookObj.GetNamespace("MAPI"));
		СтруктураСвойств.Вставить("FolderDelete",		СтруктураСвойств.MAPINameSpace.GetDefaultFolder(3));	// Удаленные объекты
		СтруктураСвойств.Вставить("FolderCalendar",		СтруктураСвойств.MAPINameSpace.GetDefaultFolder(9));	// Календарь
		СтруктураСвойств.Вставить("FolderTasks",		СтруктураСвойств.MAPINameSpace.GetDefaultFolder(13));	// Задачи
		СтруктураСвойств.Вставить("FolderContacts",		СтруктураСвойств.MAPINameSpace.GetDefaultFolder(10));	// Контакты
		СтруктураСвойств.Вставить("FolderOutbox",		СтруктураСвойств.MAPINameSpace.GetDefaultFolder(4));	// Исходящие
		СтруктураСвойств.Вставить("FolderSentMail",		СтруктураСвойств.MAPINameSpace.GetDefaultFolder(5));	// Отправленные
		СтруктураСвойств.Вставить("FolderInbox",		СтруктураСвойств.MAPINameSpace.GetDefaultFolder(6));	// Входящие
	Исключение
		ИО = ИнформацияОбОшибке();
		Если СтруктураСвойств.Свойство("OutlookObj") И НЕ (ТипЗнч(СтруктураСвойств.OutlookObj) = Тип("COMОбъект")) Тогда
			ТекстОшибки = "MS Outlook не установлен. Дальнейшая работа невозможна!";
		Иначе
			ТекстОшибки = КраткоеПредставлениеОшибки(ИО);
			#Если НЕ ВебКлиент Тогда
				Если ЗначениеЗаполнено(ИмяКомпьютера) И НЕ (ВРег(ИмяКомпьютера) = ВРег(ИмяКомпьютера())) Тогда
					// Возможно 1С запущена в терминале.
					ТекстОшибки = ТекстОшибки + НСтр("ru = '
					|
					|Если на рабочей станции'")
					+ " """ + ИмяКомпьютера + """ "
					+ НСтр("ru = 'запущено приложенме MS Outlook, попробуйте закрыть его на время обмена.'")
					//
				КонецЕсли;
			#КонецЕсли
			Попытка
				СтруктураСвойств.OutlookObj.Application.Quit();
			Исключение
			КонецПопытки;
		КонецЕсли;
		СтруктураСвойств.Вставить("OutlookObj", Неопределено);
		Возврат Ложь;
	КонецПопытки;
	Если ЗначениеЗаполнено(Настройка.ПрограммаOutlook) Тогда
		Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Настройка.ПрограммаOutlook, "ДлинаGUID") = 0 Тогда
			// Получаем длину из первого контакта.
			Если СтруктураСвойств.FolderContacts.Items.Count > 0 Тогда
				CRM_ОбменСMSOutlookСервер.УстановитьДлинуGUIDOutlook(Настройка.ПрограммаOutlook, СтруктураСвойств.FolderContacts.Items(1).EntryID);			
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	Возврат Истина;
КонецФункции

///////////////////////////////////////////////////////////////////////////////////
// Синхронизация контактов

Функция НайтиКонтактOutlookПоАдресу(мСтруктураСвойств, мНастройки, Адрес, СоответствиеКонтактовOutlookАдресам = Неопределено)
	Если ТипЗнч(СоответствиеКонтактовOutlookАдресам) = Тип("Соответствие") Тогда
		ЗначениеВСоответствии = СоответствиеКонтактовOutlookАдресам[Адрес];
		Если ЗначениеВСоответствии = Ложь Тогда
			Возврат Неопределено;
		ИначеЕсли НЕ (ЗначениеВСоответствии = Неопределено) Тогда
			Возврат СоответствиеКонтактовOutlookАдресам[Адрес];
		КонецЕсли;
	КонецЕсли;
	Если мНастройки.Свойство("СоответствиеТипыПапокOutlook")
		И ТипЗнч(мНастройки.СоответствиеТипыПапокOutlook) = Тип("Соответствие") Тогда
		Если ТипЗнч(мНастройки.СоответствиеТипыПапокOutlook[2]) = Тип("Массив") Тогда
			ПапкиOutlook = мНастройки.СоответствиеТипыПапокOutlook[2];
		Иначе
			ПапкиOutlook = НайтиСтроки(мНастройки.ТаблицаПапокOutlook, Новый Структура("olFolder", "2"));
			мНастройки.СоответствиеТипыПапокOutlook.Вставить(2, ПапкиOutlook);
		КонецЕсли;
	Иначе
		ПапкиOutlook = НайтиСтроки(мНастройки.ТаблицаПапокOutlook, Новый Структура("olFolder", "2"));
		мНастройки.Вставить("СоответствиеТипыПапокOutlook",	Новый Соответствие());
		мНастройки.СоответствиеТипыПапокOutlook.Вставить(2,	ПапкиOutlook);
	КонецЕсли;
	Для Каждого ПапкаOutlook Из ПапкиOutlook Цикл
		Folder			= ПолучитьПапкуOutlook(мСтруктураСвойств.OutlookObj, ПапкаOutlook.Folder);
		Попытка
		КонтактOutlook	= Folder.Items.Find("[Email1Address] = """ + СокрЛП(Адрес) + """ or [Email2Address] = """ 
			+ СокрЛП(Адрес) + """ or [Email3Address] = """ + СокрЛП(Адрес) + """");
		Исключение
			Возврат Неопределено;
		КонецПопытки;	
		Если НЕ (КонтактOutlook = Неопределено) Тогда
			Если ТипЗнч(СоответствиеКонтактовOutlookАдресам) = Тип("Соответствие") Тогда
				СоответствиеКонтактовOutlookАдресам.Вставить(Адрес, КонтактOutlook);
			КонецЕсли;
			Возврат КонтактOutlook;
		КонецЕсли;	
	КонецЦикла;
	СоответствиеКонтактовOutlookАдресам.Вставить(Адрес, Ложь);
	Возврат Неопределено;
КонецФункции

Функция ПолучитьПредставлениеКонтакта(Фамилия, Имя, Отчество)
	
	Возврат СокрЛП(Фамилия) + ?(Имя="", "", " ")+СокрЛП(Имя)+?(СокрЛП(Отчество)="", "", " ")+СокрЛП(Отчество);
	
КонецФункции	

Процедура ДобавитьКонтактOutlookВТаблицуСинхронизируемыхКонтактов(
	ТаблицаКонтактовOutlook,КонтактOutlook,
	ContactFolder,FolderName)
	Частное		= НЕ (ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,"Частное") = 0);
	Имя			= ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,	"Имя");
	Фамилия		= ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,	"Фамилия");
	Отчество	= ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,	"Отчество");
	Организация= ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,		"Организация");
	Если (Имя = "") И (Фамилия = "") И (Отчество = "") И (Организация = "") Тогда
		Возврат;
	КонецЕсли;
	СтрокаТаблицы					= ПолучитьСтруктуруТаблицыКонтактовOutlook();
	СтрокаТаблицы.ОбъектOutlookID	= КонтактOutlook.EntryID;
	СтрокаТаблицы.Имя				= Имя;
	СтрокаТаблицы.Фамилия			= Фамилия;
	СтрокаТаблицы.Отчество			= Отчество;
	Если НЕ (Имя = "") ИЛИ НЕ (Фамилия = "") ИЛИ НЕ (Отчество = "") Тогда
		СтрокаТаблицы.Представление_Outlook	= ПолучитьПредставлениеКонтакта(Фамилия, Имя, Отчество);
	Иначе	
		СтрокаТаблицы.Представление_Outlook	= Организация;
	КонецЕсли;
	СтрокаТаблицы.Организация	= Организация;
	СтрокаТаблицы.Частное		= Частное;
	СтрокаТаблицы.ДатаИзменения	= ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,"ДатаИзменения");
	СтрокаТаблицы.ДатаИзменения = ?(СтрокаТаблицы.ДатаИзменения = Дата('45010101'), Дата("00010101"), СтрокаТаблицы.ДатаИзменения);
	СтрокаТаблицы.FolderName	= FolderName;
	СтруктураОбъектOutlook = Новый Структура;
	СтруктураОбъектOutlook.Вставить("ОбъектOutlook",	КонтактOutlook);
	СтруктураОбъектOutlook.Вставить("ПапкаOutlook" ,	ContactFolder);	
	СтрокаТаблицы.ОбъектOutlook	= СтруктураОбъектOutlook;
	// Определим вид контакта
	Если НЕ (Организация = "") И (Имя = "") И (Фамилия = "") И (Отчество = "") Тогда
		СтрокаТаблицы.ВидКонтакта = "К";
		ТаблицаКонтактовOutlook.Добавить(СтрокаТаблицы);
	ИначеЕсли (НЕ (Организация = "") И (НЕ (Имя = "") ИЛИ НЕ (Фамилия = "") ИЛИ НЕ (Отчество = ""))) Тогда
		СтрокаТаблицы.ВидКонтакта = "КЛК";
		ТаблицаКонтактовOutlook.Добавить(СтрокаТаблицы);
	ИначеЕсли (Организация = "" И (НЕ (Имя = "") ИЛИ НЕ (Фамилия = "") ИЛИ НЕ (Отчество = ""))) Тогда
		СтрокаТаблицы.ВидКонтакта		= "К";
		ТаблицаКонтактовOutlook.Добавить(СтрокаТаблицы);
	КонецЕсли;
КонецПроцедуры

// Временное решение, нужно проверить нужно ли вообще здесь сворачивать таблицу(массив).
Процедура СвернутьТаблицуСинхронизируемыхКонтактовПоСтолбцам(СинхронизируемыеКонтактыСобытийOutlook)
	УникальныеКонтакты = Новый Соответствие;
	Для Каждого Контакт Из СинхронизируемыеКонтактыСобытийOutlook Цикл
		мКлюч = Строка(Контакт.ДатаИзменения) + Контакт.Фамилия + Контакт.Имя + Контакт.Отчество + Контакт.FolderName
			+ Контакт.ОбъектOutlookID;
		УникальныеКонтакты.Вставить(мКлюч, Контакт);
	КонецЦикла;
	СинхронизируемыеКонтактыСобытийOutlook = Новый Массив;
	Для Каждого Контакт Из УникальныеКонтакты Цикл
		СинхронизируемыеКонтактыСобытийOutlook.Добавить(Контакт.Значение);
	КонецЦикла;
КонецПроцедуры

// Функция получает синхронизируемые контакты событий Outlook.
//
Функция ПолучитьСинхронизируемыеКонтактыСобытийOutlook(СтруктураСвойств, Настройка) Экспорт
	Состояние("Поиск изменений...");
	ЗаполнитьСоответствиеСОМОбъектыКонтактов(СтруктураСвойств);
	СинхронизируемыеКонтактыСобытийOutlook = Новый Массив;
	Для Каждого СинхронизируемоеСобытие Из СтруктураСвойств.События Цикл
		Если НЕ СинхронизируемоеСобытие.Пометка Тогда
			Продолжить;
		ИначеЕсли НЕ (СинхронизируемоеСобытие.Направление = "Outlook -> 1С") Тогда
			Продолжить;
		КонецЕсли;	
		// Заполним таблицу контактов Outlook которые необходимо синхронизировать вместе с Событиями.
		НайденныйЭлемент = СтруктураСвойств.СоответствиеСОМОбъектыСобытий[СинхронизируемоеСобытие.ID];
		Если НайденныйЭлемент = Неопределено Тогда Продолжить; КонецЕсли;
		ОбъектOutlook = НайденныйЭлемент.ОбъектOutlook;
		Если Настройка.СинхронизироватьУчастниковСобытияOutlook Тогда
			Попытка
				КолКонтактов = ОбъектOutlook.Recipients.Count;
			Исключение	
				КолКонтактов = 0;
			КонецПопытки;
			Для Ном = 1 По КолКонтактов Цикл
				УчастникСобытия = ОбъектOutlook.Recipients.Item(Ном);
				Попытка
					ДлинаGUID		= CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Настройка.ПрограммаOutlook, "ДлинаGUID");
					Идентификатор	= CRM_ОбменСMSOutlookКлиентСервер.ПолучитьИдентификаторУчастника(УчастникСобытия.AddressEntry.ID, ДлинаGUID);
					КонтактOutlook	= СтруктураСвойств.OutlookObj.Session.GetItemFromID(Идентификатор);
					ContactFolder	= КонтактOutlook.Parent;
					ДобавитьКонтактOutlookВТаблицуСинхронизируемыхКонтактов(СинхронизируемыеКонтактыСобытийOutlook,
						КонтактOutlook, ContactFolder, ContactFolder.Name);
				Исключение
				КонецПопытки;
			КонецЦикла;	
		КонецЕсли;
		Если Настройка.СинхронизироватьКонтактыСобытияOutlook И OutlookМеньше2013(ОбъектOutlook.Application.Version) Тогда
			Попытка
				КолКонтактов = ОбъектOutlook.Links.Count;
			Исключение	
				КолКонтактов = 0;
			КонецПопытки;
			Для Ном = 1 По КолКонтактов Цикл
				УчастникСобытия = ОбъектOutlook.Links.Item(Ном);
				Попытка
					КонтактOutlook = УчастникСобытия.Item;
					ContactFolder = КонтактOutlook.Parent;
					ДобавитьКонтактOutlookВТаблицуСинхронизируемыхКонтактов(СинхронизируемыеКонтактыСобытийOutlook,
						КонтактOutlook, ContactFolder, ContactFolder.Name);
				Исключение
				КонецПопытки;
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;
	// Свернем контакты
	СвернутьТаблицуСинхронизируемыхКонтактовПоСтолбцам(СинхронизируемыеКонтактыСобытийOutlook);
	КолвоСтрок = СинхронизируемыеКонтактыСобытийOutlook.Количество();
	Для Индекс = 1 По КолвоСтрок Цикл
		НайденныйЭлемент = ПолучитьКонтактПоOutlookID(СтруктураСвойств, СинхронизируемыеКонтактыСобытийOutlook[КолвоСтрок - Индекс].ОбъектOutlookID);
		Если НЕ (НайденныйЭлемент = Неопределено)  Тогда
			СинхронизируемыеКонтактыСобытийOutlook.Удалить(КолвоСтрок - Индекс);
		КонецЕсли;
	КонецЦикла;
	Возврат СинхронизируемыеКонтактыСобытийOutlook;
КонецФункции

// Процедура заполняет список контактов Outlook синхронизируемых вместе с событиями.
//
Функция ПолучитьСинхронизируемыеКонтактыПисемOutlook(СтруктураСвойств, Настройка) Экспорт
	Состояние("Поиск изменений...");
	ЗаполнитьСоответствиеСОМОбъектыКонтактов(СтруктураСвойств);
	СинхронизируемыеКонтактыПисемOutlook = Новый Массив;
	СоответствиеКонтактовOutlookАдресам = Новый Соответствие();
	Для Каждого СинхронизируемоеПисьмо Из  СтруктураСвойств.Письма Цикл
		Если НЕ СинхронизируемоеПисьмо.Пометка Тогда
			Продолжить;
		ИначеЕсли НЕ СинхронизируемоеПисьмо.Направление = "Outlook -> 1С" Тогда
			Продолжить;
		КонецЕсли;	
		// Заполним таблицу контактов Outlook которые необходимо синхронизировать вместе с Событиями.
		НайденныйЭлемент = СтруктураСвойств.СоответствиеСОМОбъектыПисем[СинхронизируемоеПисьмо.ID];
		Если НайденныйЭлемент = Неопределено Тогда Продолжить; КонецЕсли;
		ОбъектOutlook = НайденныйЭлемент.ОбъектOutlook;
		// Добавим получателей
		Попытка
			КолКонтактов = ОбъектOutlook.Recipients.Count;
		Исключение	
			КолКонтактов = 0;
			Продолжить;
		КонецПопытки;
		Для Ном = 1 По КолКонтактов Цикл
			УчастникСобытия = ОбъектOutlook.Recipients.Item(Ном);
			Попытка
				ДлинаGUID		= CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Настройка.ПрограммаOutlook, "ДлинаGUID");
				Идентификатор	= CRM_ОбменСMSOutlookКлиентСервер.ПолучитьИдентификаторУчастника(УчастникСобытия.AddressEntry.ID, ДлинаGUID);
				КонтактOutlook	= ПолучитьЭлементOutlook(СтруктураСвойств.OutlookObj,Идентификатор);
				ContactFolder	= КонтактOutlook.Parent;
				ДобавитьКонтактOutlookВТаблицуСинхронизируемыхКонтактов(СинхронизируемыеКонтактыПисемOutlook, КонтактOutlook, ContactFolder, ContactFolder.Name);
			Исключение
				// Найдем контакт по адресу
				КонтактOutlook = НайтиКонтактOutlookПоАдресу(СтруктураСвойств, Настройка, УчастникСобытия.address, СоответствиеКонтактовOutlookАдресам);
				Если НЕ (КонтактOutlook = Неопределено) Тогда
					ContactFolder = КонтактOutlook.Parent;
					ДобавитьКонтактOutlookВТаблицуСинхронизируемыхКонтактов(СинхронизируемыеКонтактыПисемOutlook, КонтактOutlook, ContactFolder, ContactFolder.Name);
				КонецЕсли;	
			КонецПопытки;
		КонецЦикла;	
		// Добавим отправителя
		Попытка
			// Найдем контакт по адресу
			КонтактOutlook = НайтиКонтактOutlookПоАдресу(СтруктураСвойств, Настройка, ОбъектOutlook.SenderEmailAddress ,СоответствиеКонтактовOutlookАдресам);
		Исключение
			Продолжить;
		КонецПопытки;
		Если НЕ (КонтактOutlook = Неопределено) Тогда
			ContactFolder = КонтактOutlook.Parent;				
			ДобавитьКонтактOutlookВТаблицуСинхронизируемыхКонтактов(СинхронизируемыеКонтактыПисемOutlook, КонтактOutlook, ContactFolder, ContactFolder.Name);
		КонецЕсли;								
	КонецЦикла;
	СвернутьТаблицуСинхронизируемыхКонтактовПоСтолбцам(СинхронизируемыеКонтактыПисемOutlook);
	КолвоСтрок = СинхронизируемыеКонтактыПисемOutlook.Количество();
	Для Индекс = 1 По КолвоСтрок Цикл
		НайденныйЭлемент = ПолучитьКонтактПоOutlookID(СтруктураСвойств, СинхронизируемыеКонтактыПисемOutlook[КолвоСтрок - Индекс].ОбъектOutlookID);
       	Если НЕ (НайденныйЭлемент = Неопределено) Тогда
			СинхронизируемыеКонтактыПисемOutlook.Удалить(КолвоСтрок - Индекс);
		КонецЕсли;
	КонецЦикла;
	Возврат  СинхронизируемыеКонтактыПисемOutlook;
КонецФункции

// Процедура формирует список контактов outlook.
//
Процедура ПолучитьВсеКонтактыOutlook(СтруктураСвойств, Настройка) Экспорт
	Для Каждого ПапкаOutlook Из СтруктураСвойств.ТаблицаПапокOutlook Цикл
		Если НЕ (ПапкаOutlook.olFolder = "2") Тогда Продолжить; КонецЕсли;
		Folder			= ПолучитьПапкуOutlook(СтруктураСвойств.OutlookObj, ПапкаOutlook.Folder);
		ContactFolder	= Folder;	
		FolderName		= ContactFolder.Name;
		Если ContactFolder.Items.Count > 0 Тогда
			Для Ном = 1 По ContactFolder.Items.Count Цикл
				Состояние("Чтение контактов Outlook (" + FolderName + ") " + Строка(Ном));
				КонтактOutlook = ContactFolder.Items(Ном);		
				ДобавитьКонтактOutlookВТаблицуСинхронизируемыхКонтактов(СтруктураСвойств.ТаблицаКонтактовOutlook, КонтактOutlook,
					ContactFolder, FolderName);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Состояние("");
КонецПроцедуры	

// Процедура  формирует список синхронизируемых контактов 1С.
//
Функция ПолучитьСинхронизируемыеКонтакты1С(СтруктураСвойств, Настройка) Экспорт
	Состояние("Поиск изменений...");
	ТаблицаСинхронизируемыхКонтактов1С =  Новый Массив;			
	ТекстЗапроса	= CRM_ОбменСMSOutlookКлиент.СформироватьТекстЗапросаКонтакты();
	Отбор			= Настройка.НастройкиКонтактов.Отбор;
	пПараметры		= Новый Соответствие;
	пПараметры.Вставить("Партнеры",					Настройка.СинхронизироватьК);
	пПараметры.Вставить("КонтактныеЛицаПартнеров",	Настройка.СинхронизироватьКЛК);	
	Попытка
		ДатаПоследнегоОбмена = Настройка.ФильтрДатаИзмененияКонтактаOutlook;
	Исключение
		ДатаПоследнегоОбмена = Неопределено;
	КонецПопытки;
	мСинхронизируемыеКонтакты = CRM_ОбменСMSOutlookСервер.ПолучитьСинхронизируемыеКонтакты1С(ТекстЗапроса, Отбор,
		пПараметры, ДатаПоследнегоОбмена);
	Для Каждого Контакт Из мСинхронизируемыеКонтакты Цикл
		СтрокаТаблицы = ПолучитьСтруктуруКонтактов1С();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Контакт);
		СтрокаТаблицы.Организация		= ФорматироватьПредставлениеКонтакта(Контакт.Организация);
		СтрокаТаблицы.Фамилия			= ФорматироватьПредставлениеКонтакта(Контакт.Фамилия);
		СтрокаТаблицы.Имя				= ФорматироватьПредставлениеКонтакта(Контакт.Имя);
		СтрокаТаблицы.Отчество			= ФорматироватьПредставлениеКонтакта(Контакт.Отчество);
		СтрокаТаблицы.ВидКонтакта		= Контакт.ВидКонтакта;
		СтрокаТаблицы.ДатаРегистрации	= Контакт.ДатаРегистрации;
		СтрокаТаблицы.Ссылка			= Контакт.Ссылка;
		ТаблицаСинхронизируемыхКонтактов1С.Добавить(СтрокаТаблицы);
	КонецЦикла;	
	Возврат   ТаблицаСинхронизируемыхКонтактов1С;
КонецФункции

// Процедура  формирует список синхронизируемых контактов outlook.
//
Функция ПолучитьСинхронизируемыеКонтактыOutlook(СтруктураСвойств, Настройка) Экспорт
	Состояние("Поиск изменений...");
	ТаблицаСинхронизируемыхКонтактовOutlook =  Новый Массив;
	Если ЗначениеЗаполнено(Настройка.ФильтрДатаИзмененияКонтактаOutlook) Тогда
		Для Каждого ПапкаOutlook Из Настройка.ТаблицаПапокOutlook Цикл
			Если НЕ (ПапкаOutlook.olFolder = "2") Тогда Продолжить; КонецЕсли;
			Folder = ПолучитьПапкуOutlook(СтруктураСвойств.OutlookObj, ПапкаOutlook.Folder);
			Если Folder = Неопределено Тогда Продолжить; КонецЕсли;
			ContactFolder	= Folder;	
			FolderName		= ContactFolder.Name;
			СинхронизируемыеКонтакты = ContactFolder.Items.Restrict("[LastModificationTime] > '"
				+ Формат(Настройка.ФильтрДатаИзмененияКонтактаOutlook + 60,"ДФ=""dd/MM/yy ЧЧ:мм""") + "'");
			Для Ном = 1 По СинхронизируемыеКонтакты.Count Цикл
				КонтактOutlook = СинхронизируемыеКонтакты.item(Ном) ;
				// Возможно не нужно синхронизировать частные контакты.
				Если Настройка.ИсключитьЧастныеКонтакты И НЕ (ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,"Частное") = 0) Тогда
					Продолжить;
				КонецЕсли;
				ДобавитьКонтактOutlookВТаблицуСинхронизируемыхКонтактов(ТаблицаСинхронизируемыхКонтактовOutlook, КонтактOutlook,
					ContactFolder, FolderName);
			КонецЦикла;	
		КонецЦикла;
	Иначе	
		// Первая синхронизация
		 ПолучитьВсеКонтактыOutlook(СтруктураСвойств,Настройка);
		Если Настройка.ИсключитьЧастныеКонтакты Тогда
			Ошибка = "";
			ТаблицаСинхронизируемыхКонтактовOutlook =  НайтиСтроки(СтруктураСвойств.ТаблицаКонтактовOutlook,
				Новый Структура("Частное", Ложь), Ошибка);
		Иначе
			ТаблицаСинхронизируемыхКонтактовOutlook =  НайтиСтроки(СтруктураСвойств.ТаблицаКонтактовOutlook);
		КонецЕсли;
	КонецЕсли;
	Возврат ТаблицаСинхронизируемыхКонтактовOutlook;
КонецФункции

// Процедура заполняет список контактов 1С синхронизируемых вместе с событиями.
Функция ФорматироватьПредставлениеКонтакта(Представление)
	 ПредставлениеБезПробелов = СокрЛП(Представление);
	 Возврат ?(ПредставлениеБезПробелов = "", "", ВРег(Лев(ПредставлениеБезПробелов,1)) + Прав(ПредставлениеБезПробелов, СтрДлина(ПредставлениеБезПробелов) - 1));	
КонецФункции	

// Функция получает синхронизируемые контакты событий 1С.
//
Функция ПолучитьСинхронизируемыеКонтактыСобытий1С(СтруктураСвойств, Настройка) Экспорт
	Состояние("Поиск изменений...");
	ФормаТаблицы = ПолучитьФорму("Обработка.CRM_ОбменСMSOutlook.Форма.Таблицы");
	ФормаТаблицы.КонтактыСобытий.Очистить();
	ФормаТаблицы.ЗаполнитьТаблицуКонтактыСобытий(СтруктураСвойств.События);
	ТаблицаСинхронизируемыхКонтактов1С		=  Новый Массив;
	СоответствиеСинхронизируемыхКонтактов	= Новый Соответствие();
	Для Каждого СтрокаТаблицы Из ФормаТаблицы.КонтактыСобытий Цикл
		Объект1С = СтрокаТаблицы.Контакт;
		Если НЕ (СоответствиеСинхронизируемыхКонтактов[Объект1С] = Неопределено) Тогда Продолжить; КонецЕсли;
		НоваяСтрока		= ПолучитьСтруктуруКонтактов1С();
		ТипЗначения		= ТипЗнч(Объект1С);
		Организация		= CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаТаблицы, "Контакт", "Наименование");
		Фамилия			= CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаТаблицы, "Контакт", "CRM_Фамилия");
		Имя				= CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаТаблицы, "Контакт", "CRM_Имя");
		Отчество		= CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаТаблицы, "Контакт", "CRM_Отчество");
		ДатаИзменения	= ТекущаяДата();
		Организация		= ФорматироватьПредставлениеКонтакта(Организация);
		Фамилия			= ФорматироватьПредставлениеКонтакта(Фамилия);
		Имя				= ФорматироватьПредставлениеКонтакта(Имя);
		Отчество		= ФорматироватьПредставлениеКонтакта(Отчество);
		Если ТипЗначения = Тип("СправочникСсылка.Партнеры") Тогда
			НоваяСтрока.Организация		= Организация;
			НоваяСтрока.Фамилия			= "";
			НоваяСтрока.Имя				= "";
			НоваяСтрока.Отчество		= "";
			НоваяСтрока.ВидКонтакта		= "К";
			НоваяСтрока.ПометкаУдаления	= СтрокаТаблицы.ПометкаУдаления;
			НоваяСтрока.ДатаРегистрации	= CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаТаблицы, "Контакт", "ДатаРегистрации");
		ИначеЕсли	ТипЗначения = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			НоваяСтрока.Организация		= Организация;
			НоваяСтрока.Фамилия			= Фамилия;
			НоваяСтрока.Имя				= Имя;
			НоваяСтрока.Отчество		= Отчество;
			НоваяСтрока.ВидКонтакта		= "КЛК";
			НоваяСтрока.ПометкаУдаления	= СтрокаТаблицы.ПометкаУдаления;
			НоваяСтрока.ДатаРегистрации	= CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаТаблицы, "Контакт", "ДатаРегистрацииСвязи");
		КонецЕсли;       
		НоваяСтрока.Ссылка	= Объект1С;
		ТаблицаСинхронизируемыхКонтактов1С.Добавить(НоваяСтрока);
		СоответствиеСинхронизируемыхКонтактов.Вставить(Объект1С, Истина);
	КонецЦикла;	
	// Убирает повторяющиеся контакты в таблице.
	КолвоСтрок = ТаблицаСинхронизируемыхКонтактов1С.Количество();
	Для Индекс = 1 По КолвоСтрок Цикл
		СсылкаНаКонтакт = ТаблицаСинхронизируемыхКонтактов1С[КолвоСтрок - Индекс].Ссылка;
		НайденныеСтроки = НайтиСтроки(СтруктураСвойств.Контакты, Новый Структура("Объект_1С", СсылкаНаКонтакт));
		Если НайденныеСтроки.Количество() > 0 Тогда
			ТаблицаСинхронизируемыхКонтактов1С.Удалить(КолвоСтрок - Индекс);
		КонецЕсли;
	КонецЦикла;
	ФормаТаблицы = Неопределено;
	Возврат ТаблицаСинхронизируемыхКонтактов1С;
КонецФункции

// Процедура  сопоставляет  контакты 1С с  контактами outlook. 
//
Процедура СопоставитьКонтакты1С(СтруктураСвойств, Настройка, ТаблицаСинхронизируемыхКонтактов1С, ТолькоНовые = Ложь)
	// Найдем папку для загрузки новых объектов 1С.
	Если Настройка.ТаблицаПапокOutlook.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'В настройке не указаны папки Outlook для получения данных из 1С. Проверьте настройки!'"));
		Возврат;
	КонецЕсли;
	Для Каждого ПапкаOutlookДляЗагрузкиИз1С Из Настройка.ТаблицаПапокOutlook Цикл
		Если (ПапкаOutlookДляЗагрузкиИз1С.olFolder = "2") И (ПапкаOutlookДляЗагрузкиИз1С.ЗагрузкаИз1С = Истина) Тогда
			Прервать; 
		КонецЕсли;	
	КонецЦикла;
	ФормаТаблицы = ПолучитьФорму("Обработка.CRM_ОбменСMSOutlook.Форма.Таблицы");
	ФормаТаблицы.СоответствиеОбъектов.Очистить();
	ФормаТаблицы.ЗаполнитьТаблицуСоответствиеОбъектов(ТаблицаСинхронизируемыхКонтактов1С, Настройка.ПрограммаOutlook);
	Количество = ТаблицаСинхронизируемыхКонтактов1С.Количество();
	Сч = 0;
	СоответствиеСопоставленныхКонтактов = Новый Соответствие();
	СоответствиеКонтактовOutlookАдресам = Новый Соответствие();
	Для Каждого СтрокаКонтактов_1С Из ТаблицаСинхронизируемыхКонтактов1С Цикл
		сч = сч + 1;
		// Возможно контакт уже сопоставлен ранее.
		Если НЕ (СоответствиеСопоставленныхКонтактов[СтрокаКонтактов_1С.Ссылка] = Неопределено) Тогда Продолжить; КонецЕсли;
		// Проверим нет ли в 1С базе связанного объекта Outlook.
		КонтактOutlook = ПолучитьОбъектOutlook(СтруктураСвойств, Настройка, СтрокаКонтактов_1С.Ссылка, ФормаТаблицы);
		// Поиск по ключевым полям
		Если (КонтактOutlook = Неопределено) И Настройка.СинхронизироватьКонтактыПоПолям Тогда 
			Имя			= СтрЗаменить(СтрокаКонтактов_1С.Имя,			"""",	"""""");
			Фамилия		= СтрЗаменить(СтрокаКонтактов_1С.Фамилия,		"""",	"""""");
			Отчество	= СтрЗаменить(СтрокаКонтактов_1С.Отчество,		"""",	"""""");
			Организация	= СтрЗаменить(СтрокаКонтактов_1С.Организация,	"""",	"""""");
			ПапкиOutlook = НайтиСтроки(Настройка.ТаблицаПапокOutlook,	Новый Структура("olFolder", "2"));
			Для Каждого ПапкаOutlook Из ПапкиOutlook Цикл
				Folder			= ПолучитьПапкуOutlook(СтруктураСвойств.OutlookObj, ПапкаOutlook.Folder);
				Если Folder = Неопределено Тогда Продолжить; КонецЕсли;
				КонтактOutlook	= Folder.Items.Find("[FirstName] = """ + СокрЛП(Имя) + """ and [LastName] = """
					+ СокрЛП(Фамилия) + """ and [MiddleName] = """ + СокрЛП(Отчество) + """ and [CompanyName] = """
					+ СокрЛП(Организация) + """");
				Если НЕ (КонтактOutlook = Неопределено) Тогда Прервать; КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		// Поиск по e-mail
		Если КонтактOutlook = Неопределено Тогда 
			МассивАдресов	= CRM_ОбменСMSOutlookСервер.ПолучитьМассивАдресовКонтакта(СтрокаКонтактов_1С.Ссылка);
			ПапкиOutlook	= НайтиСтроки(Настройка.ТаблицаПапокOutlook, Новый Структура("olFolder", "2"));
			Для Каждого Адрес Из МассивАдресов Цикл
				Для Каждого ПапкаOutlook Из ПапкиOutlook Цикл
					Folder			= ПолучитьПапкуOutlook(СтруктураСвойств.OutlookObj, ПапкаOutlook.Folder);
					Если Folder = Неопределено Тогда Продолжить; КонецЕсли;
					КонтактOutlook	= Folder.Items.Find("[Email1Address] = """ + СокрЛП(Адрес) 
						+ """ or [Email2Address] = """ + СокрЛП(Адрес) + """ or [Email3Address] = """ + СокрЛП(Адрес) + """");
					Если НЕ (КонтактOutlook = Неопределено) Тогда Прервать; КонецЕсли;	
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		// В список добавляем только непомеченные на удаление объекты, для которых найдено соответствие полей.
		ПомеченНаУдаление = CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаКонтактов_1С, "Ссылка", "ПометкаУдаления");
		Если  (КонтактOutlook = Неопределено) И ПомеченНаУдаление Тогда Продолжить; КонецЕсли;	
		// Добавим новую строку в таблицу сопоставления объектов 1С и Outlook.
		НоваяСтрокаКонтакта						= ПолучитьСтруктуруКонтактов();
		НоваяСтрокаКонтакта.Пометка				= Настройка.СинхронизироватьКонтакты И НЕ (ТолькоНовые И НЕ (КонтактOutlook = Неопределено));
		НоваяСтрокаКонтакта.Объект_1С			= СтрокаКонтактов_1С.Ссылка;
		ДатаИзменения_1С						= СтрокаКонтактов_1С.ДатаРегистрации;
		Если ЗначениеЗаполнено(НоваяСтрокаКонтакта.Объект_1С) И ЗначениеЗаполнено(Настройка.ФильтрДатаИзмененияКонтактаOutlook) Тогда
			ДатаИзменения_1С = CRM_ОбменСMSOutlookСервер.ПолучитьДатуМодификацииВ1С(НоваяСтрокаКонтакта.Объект_1С, Настройка.ПрограммаOutlook);
			Если НЕ ЗначениеЗаполнено(ДатаИзменения_1С) Тогда
				ДатаИзменения_1С = СтрокаКонтактов_1С.ДатаРегистрации;
			КонецЕсли;
		КонецЕсли;
		НоваяСтрокаКонтакта.ДатаИзменения_1С	= ДатаИзменения_1С;
		НоваяСтрокаКонтакта.ID					= Строка(Новый УникальныйИдентификатор);
		НоваяСтрокаКонтакта.ПометкаУдаления		= СтрокаКонтактов_1С.ПометкаУдаления;
		ДатаРегистрации1С						= ?(СтрокаКонтактов_1С.ДатаРегистрации = Неопределено, '00010101', СтрокаКонтактов_1С.ДатаРегистрации);
		Если (Настройка.Направление = "1СOutlook") И НЕ (КонтактOutlook = Неопределено) Тогда
			НоваяСтрокаКонтакта.Направление	= ?(ПолучитьРеквизитОбъектаOutlook(КонтактOutlook, "ДатаИзменения") > ДатаИзменения_1С, "Outlook -> 1С", "1С -> Outlook");
		Иначе
			НоваяСтрокаКонтакта.Направление	= "1С -> Outlook";
		КонецЕсли;
		НоваяСтрокаКонтакта.ВидКонтакта	= СтрокаКонтактов_1С.ВидКонтакта;
		Если НЕ (КонтактOutlook = Неопределено) Тогда
			Имя			= ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,	"Имя");
			Фамилия		= ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,	"Фамилия");
			Отчество	= ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,	"Отчество");
			Если НЕ (Имя = "") ИЛИ НЕ (Фамилия = "") ИЛИ НЕ (Отчество = "") Тогда
				НоваяСтрокаКонтакта.Представление_Outlook = ПолучитьПредставлениеКонтакта(Фамилия, Имя, Отчество);
			Иначе	
				НоваяСтрокаКонтакта.Представление_Outlook = ПолучитьРеквизитОбъектаOutlook(КонтактOutlook, "Организация");
			КонецЕсли;
			НоваяСтрокаКонтакта.ПапкаOutlook				= КонтактOutlook.Parent.Name;
			НоваяСтрокаКонтакта.ДатаИзменения_Outlook		= ПолучитьРеквизитОбъектаOutlook(КонтактOutlook,"ДатаИзменения");
			НоваяСтрокаСОМОбъекта							= ПолучитьСтруктуруТаблицыCOMОбъектовКонтактов();
			НоваяСтрокаСОМОбъекта.СтрокаТЧ					= НоваяСтрокаКонтакта.ID;
			НоваяСтрокаСОМОбъекта.ОбъектOutlook				= КонтактOutlook;
			НоваяСтрокаСОМОбъекта.ОбъектOutlookID 			= КонтактOutlook.EntryID; 
			СтруктураСвойств.СОМОбъектыКонтактов.Добавить(НоваяСтрокаСОМОбъекта);
			СтруктураСвойств.СоответствиеСОМОбъектыКонтактов.Вставить(НоваяСтрокаСОМОбъекта.СтрокаТЧ, НоваяСтрокаСОМОбъекта);
		Иначе
			НоваяСтрокаКонтакта.ПапкаOutlook				= ПапкаOutlookДляЗагрузкиИз1С.Папка;
		КонецЕсли;
		СтруктураСвойств.Контакты.Добавить(НоваяСтрокаКонтакта);
		СоответствиеСопоставленныхКонтактов.Вставить(НоваяСтрокаКонтакта.Объект_1С, Истина);
		Состояние("Сопоставление контактов 1С " + Сч + " из " + Количество);
	КонецЦикла;
	ФормаТаблицы = Неопределено;
КонецПроцедуры

// Процедура  сопоставляет  контакты outlook с  контактами 1С. 
//
Процедура СопоставитьКонтактыOutlook(СтруктураСвойств, Настройка, ТаблицаСинхронизируемыхКонтактовOutlook, ТолькоНовые = Ложь)
 	Количество		= ТаблицаСинхронизируемыхКонтактовOutlook.Количество();
	ФормаТаблицы	= ПолучитьФорму("Обработка.CRM_ОбменСMSOutlook.Форма.Таблицы");
	ФормаТаблицы.СоответствиеОбъектов.Очистить();
	ФормаТаблицы.ЗаполнитьТаблицуСоответствиеОбъектов(ТаблицаСинхронизируемыхКонтактовOutlook, Настройка.ПрограммаOutlook, Истина);
	ЗаполнитьСоответствиеСОМОбъектыКонтактов(СтруктураСвойств);
	Сч = 0;
	Для Каждого СтрокаКонтактовOutlook Из ТаблицаСинхронизируемыхКонтактовOutlook Цикл
		сч = сч + 1;
		// Возможно контакт уже сопоставлен ранее.
		НайденныйЭлемент = ПолучитьКонтактПоOutlookID(СтруктураСвойств, СтрокаКонтактовOutlook.ОбъектOutlookID);
        Если НЕ (НайденныйЭлемент = Неопределено) Тогда Продолжить; КонецЕсли;
		// Поиск контакта Outlook в 1С.
		СсылкаНаОбъект1С = ПолучитьОбъект1С(Настройка.ПрограммаOutlook,
			СтрокаКонтактовOutlook.ОбъектOutlook.ОбъектOutlook.EntryID, ФормаТаблицы);
		// Новый контакт  Outlook, попробуем найти его в 1С по полям ФИО.
		Если (СсылкаНаОбъект1С = Неопределено) И Настройка.СинхронизироватьКонтактыПоПолям Тогда 
			Если СтрокаКонтактовOutlook.ВидКонтакта = "КЛК" Тогда
				ИмяТаблицы = "КонтактныеЛицаПартнеров";
			ИначеЕсли СтрокаКонтактовOutlook.ВидКонтакта = "К" Тогда
				ИмяТаблицы = "Партнеры";
			КонецЕсли;
			мКонтакты = CRM_ОбменСMSOutlookСервер.ПолучитьКонтакты1С(ИмяТаблицы, СтрокаКонтактовOutlook.ВидКонтакта,
				СтрокаКонтактовOutlook.Фамилия,	СтрокаКонтактовOutlook.Имя,СтрокаКонтактовOutlook.Отчество,
				СтрокаКонтактовOutlook.Организация);
			Если мКонтакты.Количество() > 0 Тогда
				СсылкаНаОбъект1С = мКонтакты[0].Ссылка;
			КонецЕсли;
		КонецЕсли;
		// Поиск по e-mail
		Если СсылкаНаОбъект1С = Неопределено Тогда 
			СсылкаНаОбъект1С = CRM_ОбменСMSOutlookСервер.НайтиКонтакт1CПоEMail(СтрокаКонтактовOutlook.ВидКонтакта,
				СтрокаКонтактовOutlook.ОбъектOutlook.ОбъектOutlook.Email1Address);
		КонецЕсли;
		Если СсылкаНаОбъект1С = Неопределено Тогда
			СсылкаНаОбъект1С = CRM_ОбменСMSOutlookСервер.НайтиКонтакт1CПоEMail(СтрокаКонтактовOutlook.ВидКонтакта,
				СтрокаКонтактовOutlook.ОбъектOutlook.ОбъектOutlook.Email2Address);
		КонецЕсли;
		Если СсылкаНаОбъект1С = Неопределено Тогда
			СсылкаНаОбъект1С = CRM_ОбменСMSOutlookСервер.НайтиКонтакт1CПоEMail(СтрокаКонтактовOutlook.ВидКонтакта,
				СтрокаКонтактовOutlook.ОбъектOutlook.ОбъектOutlook.Email3Address);
		КонецЕсли;
		// Добавим новую строку в таблицу сопоставления объектов 1С и Outlook.
		НоваяСтрокаКонтакта								= ПолучитьСтруктуруКонтактов();
		НоваяСтрокаКонтакта.Пометка						= НЕ (ТолькоНовые И НЕ (СсылкаНаОбъект1С = Неопределено));	
		НоваяСтрокаКонтакта.Представление_Outlook		= СтрокаКонтактовOutlook.Представление_Outlook;
		НоваяСтрокаКонтакта.ПапкаOutlook				= СтрокаКонтактовOutlook.FolderName;
		НоваяСтрокаКонтакта.ДатаИзменения_Outlook		= СтрокаКонтактовOutlook.ДатаИзменения;
		НоваяСтрокаКонтакта.ID							= Строка(Новый УникальныйИдентификатор);
		ДатаИзменения_1С									= ТекущаяДата();
		Если ЗначениеЗаполнено(СсылкаНаОбъект1С) Тогда
			// Если это не первый обмен, то вместо даты регистрации установим дату изменения объекта.
			Если ЗначениеЗаполнено(Настройка.ФильтрДатаИзмененияКонтактаOutlook) Тогда
				ДатаИзменения_1С = CRM_ОбменСMSOutlookСервер.ПолучитьДатуМодификацииВ1С(СсылкаНаОбъект1С, Настройка.ПрограммаOutlook);
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ДатаИзменения_1С) И СтрокаКонтактовOutlook.ВидКонтакта = "КЛК" Тогда
				ДатаИзменения_1С = CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СсылкаНаОбъект1С, , "ДатаРегистрацииСвязи");
			ИначеЕсли НЕ ЗначениеЗаполнено(ДатаИзменения_1С) И СтрокаКонтактовOutlook.ВидКонтакта = "К" Тогда
				ДатаИзменения_1С = CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СсылкаНаОбъект1С, , "ДатаРегистрации");
			КонецЕсли;
		КонецЕсли;
		// Направление
		// Определяем направление по умолчанию.
		Если (Настройка.Направление = "1СOutlook") И НЕ (СсылкаНаОбъект1С = Неопределено) Тогда
			НоваяСтрокаКонтакта.Направление	= ?(СтрокаКонтактовOutlook.ДатаИзменения > ДатаИзменения_1С, "Outlook -> 1С", "1С -> Outlook");
		Иначе
			НоваяСтрокаКонтакта.Направление	= "Outlook -> 1С";
		КонецЕсли;
		Если ЗначениеЗаполнено(СсылкаНаОбъект1С) Тогда 
			НоваяСтрокаКонтакта.Объект_1С			= СсылкаНаОбъект1С;			
			НоваяСтрокаКонтакта.ДатаИзменения_1С	= ДатаИзменения_1С;
		ИначеЕсли СтрокаКонтактовOutlook.ВидКонтакта = "КЛК" Тогда
			НоваяСтрокаКонтакта.Объект_1С			= ПредопределенноеЗначение("Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка");
		ИначеЕсли СтрокаКонтактовOutlook.ВидКонтакта = "К" Тогда
			НоваяСтрокаКонтакта.Объект_1С			= ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка");
		КонецЕсли;
		НоваяСтрокаКонтакта.ВидКонтакта	= СтрокаКонтактовOutlook.ВидКонтакта;
		СтруктураСвойств.Контакты.Добавить(НоваяСтрокаКонтакта);
		НоваяСтрокаСОМОбъекта				  = ПолучитьСтруктуруТаблицыCOMОбъектовКонтактов();
		НоваяСтрокаСОМОбъекта.СтрокаТЧ		  = НоваяСтрокаКонтакта.ID;
		НоваяСтрокаСОМОбъекта.ОбъектOutlook	  = СтрокаКонтактовOutlook.ОбъектOutlook.ОбъектOutlook;
		НоваяСтрокаСОМОбъекта.ОбъектOutlookID =	СтрокаКонтактовOutlook.ОбъектOutlookID; 
		СтруктураСвойств.СОМОбъектыКонтактов.Добавить(НоваяСтрокаСОМОбъекта);
		СтруктураСвойств.СоответствиеСОМОбъектыКонтактов.Вставить(НоваяСтрокаСОМОбъекта.СтрокаТЧ, НоваяСтрокаСОМОбъекта);
		Состояние("Сопоставление контактов Outlook " + Сч + " из " + Количество);
	КонецЦикла;
	ФормаТаблицы = Неопределено;
КонецПроцедуры

// Функция заполняет табличную часть контактов в соответствии с указанным направлением и приоритетом.
//
Процедура ЗаполнитьТаблицуСинхронизацииКонтактов(СтруктураСвойств, Настройка) Экспорт
	СтруктураСвойств.СОМОбъектыКонтактов.Очистить();
	Если Настройка.СинхронизироватьКонтакты Тогда
		Если Настройка.Направление = "1СOutlook" Тогда
			// В обе стороны
			СинхронизируемыеКонтакты1С	= ПолучитьСинхронизируемыеКонтакты1С(СтруктураСвойств, Настройка);	
			СопоставитьКонтакты1С(СтруктураСвойств, Настройка, СинхронизируемыеКонтакты1С);		
			СинхронизируемыеКонтактыOutlook	= ПолучитьСинхронизируемыеКонтактыOutlook(СтруктураСвойств, Настройка);
			СопоставитьКонтактыOutlook(СтруктураСвойств, Настройка, СинхронизируемыеКонтактыOutlook);		
		ИначеЕсли Настройка.Направление = "Outlook" Тогда
			// Из 1С в Outlook
			СинхронизируемыеКонтакты1С	= ПолучитьСинхронизируемыеКонтакты1С(СтруктураСвойств, Настройка);	
			СопоставитьКонтакты1С(СтруктураСвойств, Настройка, СинхронизируемыеКонтакты1С);
		ИначеЕсли Настройка.Направление = "1C" Тогда
			// Из Outlook в 1С
			СинхронизируемыеКонтактыOutlook	= ПолучитьСинхронизируемыеКонтактыOutlook(СтруктураСвойств, Настройка);
			СопоставитьКонтактыOutlook(СтруктураСвойств, Настройка, СинхронизируемыеКонтактыOutlook);
		КонецЕсли;
	КонецЕсли;
	Если Настройка.СинхронизироватьСобытия 
		И (Настройка.СинхронизироватьУчастниковСобытияOutlook ИЛИ Настройка.СинхронизироватьКонтактыСобытияOutlook) Тогда
		Если Настройка.Направление = "1СOutlook" Тогда
			// В обе стороны
			СинхронизируемыеКонтактыСобытийOutlook = ПолучитьСинхронизируемыеКонтактыСобытийOutlook(СтруктураСвойств, Настройка);
			СинхронизируемыеКонтактыСобытий1С 	   = ПолучитьСинхронизируемыеКонтактыСобытий1С(СтруктураСвойств, Настройка);
			СопоставитьКонтакты1С(СтруктураСвойств, Настройка, СинхронизируемыеКонтактыСобытий1С, НЕ Настройка.СинхронизироватьКонтакты);
			СопоставитьКонтактыOutlook(СтруктураСвойств, Настройка, СинхронизируемыеКонтактыСобытийOutlook, НЕ Настройка.СинхронизироватьКонтакты);
		ИначеЕсли Настройка.Направление = "Outlook" Тогда
			// Из 1С в Outlook
			СинхронизируемыеКонтактыСобытий1С	= ПолучитьСинхронизируемыеКонтактыСобытий1С(СтруктураСвойств, Настройка);
			СопоставитьКонтакты1С(СтруктураСвойств, Настройка, СинхронизируемыеКонтактыСобытий1С, НЕ Настройка.СинхронизироватьКонтакты);
		ИначеЕсли Настройка.Направление = "1C" Тогда
			// Из Outlook в 1С
			СинхронизируемыеКонтактыСобытийOutlook = ПолучитьСинхронизируемыеКонтактыСобытийOutlook(СтруктураСвойств, Настройка);
			СопоставитьКонтактыOutlook(СтруктураСвойств, Настройка, СинхронизируемыеКонтактыСобытийOutlook, НЕ Настройка.СинхронизироватьКонтакты);
		КонецЕсли;
	КонецЕсли;
	Если Настройка.СинхронизироватьПисьма И Настройка.СинхронизироватьКонтакты Тогда
		СинхронизируемыеКонтактыПисемOutlook = ПолучитьСинхронизируемыеКонтактыПисемOutlook(СтруктураСвойств, Настройка);
		СопоставитьКонтактыOutlook(СтруктураСвойств, Настройка, СинхронизируемыеКонтактыПисемOutlook, НЕ Настройка.СинхронизироватьКонтакты);			 
	КонецЕсли;	
КонецПроцедуры

Функция ПолучитьВидКонтакта1С(Объект_1С)
	ТипКонтакта1С = ТипЗнч(Объект_1С);	
	Если  ТипКонтакта1С = Тип("СправочникСсылка.Партнеры") Тогда
		Возврат "К"
	ИначеЕсли	ТипКонтакта1С = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
		Возврат  "КЛК"
	КонецЕсли;
КонецФункции

Процедура ЗагрузитьКИИз1С(ТаблицаСинхронизируемыхРеквизитов, Объект_1С, ОбъектOutlook)
	мКИ = CRM_ОбменСMSOutlookСервер.ПолучитьКонтактнуюИнформацию(Объект_1С);			
	Для Каждого СтрокаРеквизитов Из ТаблицаСинхронизируемыхРеквизитов Цикл
		КИ = НайтиСтроки(мКИ, Новый Структура("Тип,Вид", СтрокаРеквизитов.Тип, СтрокаРеквизитов.ВидКИ1С));
		Если  КИ.Количество() > 0 Тогда  			
			Реквизит = СтрокаРеквизитов.ВидКИOutlook;
			ОбъектOutlook[Реквизит] = КИ[0].Представление;			
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры
 
Процедура СинхронизироватьКонтакт(СтруктураСвойств, Настройка, СтрокаКонтактов, ТаблицаСинхронизируемыхРеквизитовК,
	ТаблицаСинхронизируемыхРеквизитовКЛК)
	Если СтрокаКонтактов.Направление = "Outlook -> 1С" Тогда
		НайденныйЭлемент = СтруктураСвойств.СоответствиеСОМОбъектыКонтактов[СтрокаКонтактов.ID];
		ОбъектOutlook = НайденныйЭлемент.ОбъектOutlook;
		Если Настройка.ПереноситьЗаметкиКонтактаВ1С Тогда
			Заметки	= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook, "СодержаниеСобытия");
			// Очистим комментарий новых объектов в Outlook.
			Заметки	= СтрЗаменить(Заметки,Настройка.КомментарийOutlook, "");
		КонецЕсли;	
		СтруктураОбъекта = Новый Структура("Реквизиты,ТабличныеЧасти", Новый Структура,
			Новый Структура("СторонниеЛица", Новый Массив));
		Организация				= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook, "Организация");
		Фамилия					= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook, "Фамилия");
		Имя						= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook, "Имя");
		Отчество				= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook, "Отчество");
		ДатаРождения			= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook, "ДатаРождения");
		бОрганизацияЗаполнена	= ЗначениеЗаполнено(Организация);
		// Контакт может быть Контактным лицом, только если у него есть заполненное поле Организация
		// и заполнено какое-либо поле ФИО (или все).
		Если НЕ ЗначениеЗаполнено(Организация) Тогда 
			Организация = ПолучитьПредставлениеКонтакта(Фамилия, Имя, Отчество);	
		КонецЕсли;
		Если СтрокаКонтактов.ВидКонтакта = "К"  Тогда
			ЭтоНовыйОбъект = Ложь;
			// Создание контакта
			Если НЕ ЗначениеЗаполнено(СтрокаКонтактов.Объект_1С) Тогда
				ЭтоНовыйОбъект = Истина;
			КонецЕсли;
			Если ЭтоНовыйОбъект Тогда
				СтруктураОбъекта.Реквизиты.Вставить("ДатаРегистрации", ТекущаяДата());
			Иначе	
				// Удаление объекта Outlook
				ПометкаУдаления = CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаКонтактов, "Объект_1С",
					"ПометкаУдаления");
				Если Настройка.УдалятьПомеченныеНаУдалениеОбъекты И ПометкаУдаления Тогда
					Если НЕ (ОбъектOutlook = Неопределено) Тогда
						// Удаление объекта Outlook
						ОбъектOutlook.Delete();
					КонецЕсли;
					Возврат;
				КонецЕсли;
			КонецЕсли;
			ПартнерФЛ	= ПредопределенноеЗначение("Перечисление.КомпанияЧастноеЛицо.ЧастноеЛицо");
			ПартнерЮЛ	= ПредопределенноеЗначение("Перечисление.КомпанияЧастноеЛицо.Компания");
			ОбъектВидПартнера	= CRM_КлиентыСервер.ПолучитьВидПартнера(СтрокаКонтактов.Объект_1С);
			Если (ЗначениеЗаполнено(СтрокаКонтактов.Объект_1С) И ОбъектВидПартнера = ПартнерФЛ)
				ИЛИ (НЕ ЗначениеЗаполнено(СтрокаКонтактов.Объект_1С) 
				И (бОрганизацияЗаполнена ИЛИ НЕ (Фамилия = "") ИЛИ НЕ (Отчество = ""))) Тогда
				СтруктураОбъекта.Реквизиты.Вставить("CRM_Фамилия",	Фамилия);
				СтруктураОбъекта.Реквизиты.Вставить("CRM_Имя",		Имя);
				СтруктураОбъекта.Реквизиты.Вставить("CRM_Отчество",	Отчество);
				Наименование	= ПолучитьПредставлениеКонтакта(Фамилия, Имя, Отчество);
				СтруктураОбъекта.Реквизиты.Вставить("Наименование",		Наименование);
				СтруктураОбъекта.Реквизиты.Вставить("ЮрФизЛицо",	ПартнерФЛ);
			Иначе
				СтруктураОбъекта.Реквизиты.Вставить("ЮрФизЛицо",	ПартнерЮЛ);
				СтруктураОбъекта.Реквизиты.Вставить("Наименование",		Организация);
			КонецЕсли;
			Если Настройка.ПереноситьЗаметкиКонтактаВ1С И ЭтоНовыйОбъект Тогда
				СтруктураОбъекта.Реквизиты.Вставить("Комментарий", Настройка.Комментарий1С + Символы.ПС + Заметки);
			ИначеЕсли Настройка.ПереноситьЗаметкиКонтактаВ1С Тогда
				СтруктураОбъекта.Реквизиты.Вставить("Комментарий", Заметки);
			ИначеЕсли ЭтоНовыйОбъект Тогда
				СтруктураОбъекта.Реквизиты.Вставить("Комментарий", Настройка.Комментарий1С);
			КонецЕсли;
			Объект_1С = CRM_ОбменСMSOutlookСервер.СоздатьКонтактПоСтруктуре(СтрокаКонтактов.Объект_1С, СтруктураОбъекта,
				СтрокаКонтактов);
			// Запись объекта
			Попытка
				СтруктураОбъекта						= Новый Структура;
				СтруктураОбъектаКонтактнаяИнформация	= ЗаполнитьСтруктуруОбъектаКонтактнойИнформацией(
					ТаблицаСинхронизируемыхРеквизитовК, СтруктураОбъекта, ОбъектOutlook);
				CRM_ОбменСMSOutlookСервер.ЗаполнитьОбъект(Объект_1С, СтруктураОбъектаКонтактнаяИнформация);
			Исключение
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			// Возможно вид контакта определен неверно.
			ВидКонтакта1С	= ПолучитьВидКонтакта1С(Объект_1С);
			Если НЕ (ВидКонтакта1С = СтрокаКонтактов.ВидКонтакта) Тогда
				СтрокаКонтактов.ВидКонтакта	= ВидКонтакта1С;
				СинхронизироватьКонтакт(СтруктураСвойств, Настройка, СтрокаКонтактов, ТаблицаСинхронизируемыхРеквизитовК,
					ТаблицаСинхронизируемыхРеквизитовКЛК);
				Возврат;
			КонецЕсли;
		ИначеЕсли СтрокаКонтактов.ВидКонтакта = "КЛК" Тогда
			ЭтоНовыйОбъект = Ложь;
			// Создание контакта
			Объект_1С	= СтрокаКонтактов.Объект_1С;
			Если НЕ ЗначениеЗаполнено(СтрокаКонтактов.Объект_1С) Тогда
				ЭтоНовыйОбъект = Истина;
			КонецЕсли;
			// Получим владельца
			// Если это новый создаем контрагента - владельца контактного лица.
			Владелец = Неопределено;
			СостояниеКонтактногоЛица = ПредопределенноеЗначение("Перечисление.CRM_Состояние.Работает");
			Если ЭтоНовыйОбъект Тогда
				ВидПартнера				= ПредопределенноеЗначение("Перечисление.КомпанияЧастноеЛицо.Компания");
				СтруктураКонтрагента	= Новый Структура("Реквизиты,ТабличныеЧасти",
					Новый Структура("Наименование,ДатаРегистрации,ЮрФизЛицо,Родитель", Организация,
					ТекущаяДата(), ВидПартнера, Настройка.ГруппаКонтактов1С), Новый Структура);
				НайденныйВладелец	= CRM_ОбменСMSOutlookСервер.НайтиВладельцаПоНаименованию(Организация);
				Если НайденныйВладелец = Неопределено Тогда
					ПустойВладелец		= ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка");
					НайденныйВладелец	= CRM_ОбменСMSOutlookСервер.СоздатьКонтактПоСтруктуре(ПустойВладелец, СтруктураКонтрагента,
						СтрокаКонтактов);
				КонецЕсли;
			Иначе
				НайденныйВладелец = CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаКонтактов, "Объект_1С", "Владелец");
			КонецЕсли;
			// Обязательное поле
			СтруктураОбъекта.Реквизиты.Вставить("Владелец", НайденныйВладелец);
			ДатаРождения	= ?(ДатаРождения = Дата('45010101'), Дата("00010101"), ДатаРождения);
			СтруктураОбъекта.Реквизиты.Вставить("CRM_Фамилия",	Фамилия);
			СтруктураОбъекта.Реквизиты.Вставить("CRM_Имя",		Имя);
			СтруктураОбъекта.Реквизиты.Вставить("CRM_Отчество",	Отчество);
			СтруктураОбъекта.Реквизиты.Вставить("ДатаРождения",	ДатаРождения);
			// Если это новое КЛ тогда нужно заполнить обязательное поле.
			Если Истина Тогда
				СтруктураОбъекта.Реквизиты.Вставить("CRM_Состояние",		СостояниеКонтактногоЛица);
				СтруктураОбъекта.Реквизиты.Вставить("ДатаРегистрацииСвязи",	ТекущаяДата());
			КонецЕсли;
			ПредставлениеКонтакта	= ПолучитьПредставлениеКонтакта(Фамилия, Имя, Отчество);
			СтруктураОбъекта.Реквизиты.Вставить("Наименование", ПредставлениеКонтакта);
			Если Настройка.ПереноситьЗаметкиКонтактаВ1С И ЭтоНовыйОбъект Тогда
				СтруктураОбъекта.Реквизиты.Вставить("Комментарий",	Настройка.Комментарий1С + Символы.ПС + Заметки);
			ИначеЕсли Настройка.ПереноситьЗаметкиКонтактаВ1С Тогда
				СтруктураОбъекта.Реквизиты.Вставить("Комментарий", Заметки);
			ИначеЕсли ЭтоНовыйОбъект Тогда
				СтруктураОбъекта.Реквизиты.Вставить("Комментарий", Настройка.Комментарий1С);
			КонецЕсли;
			Если ЭтоНовыйОбъект Тогда
				Объект_1С = CRM_ОбменСMSOutlookСервер.СоздатьКонтактПоСтруктуре(Объект_1С, СтруктураОбъекта, СтрокаКонтактов);
			Иначе
				// Удаление объекта Outlook
				ПомеченНаУдаление = CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(Объект_1С, , "ПометкаУдаления");
				Если Настройка.УдалятьПомеченныеНаУдалениеОбъекты И ПомеченНаУдаление Тогда
					Если НЕ (ОбъектOutlook = Неопределено) Тогда
						// Удаление объекта Outlook.
						ОбъектOutlook.Delete();
					КонецЕсли;
					Возврат;
				КонецЕсли;	
				CRM_ОбменСMSOutlookСервер.ЗаполнитьОбъектСвойствами(Объект_1С, СтруктураОбъекта);
			КонецЕсли;				
			// Запись объекта
			Попытка
				СтруктураОбъекта						= Новый Структура;
				СтруктураОбъектаКонтактнаяИнформация	= ЗаполнитьСтруктуруОбъектаКонтактнойИнформацией(
					ТаблицаСинхронизируемыхРеквизитовКЛК, СтруктураОбъекта, ОбъектOutlook);
                CRM_ОбменСMSOutlookСервер.ЗаполнитьОбъект(Объект_1С, СтруктураОбъектаКонтактнаяИнформация);
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			// Возможно вид контакта определен неверно.
			ВидКонтакта1С =  ПолучитьВидКонтакта1С(Объект_1С);
			Если НЕ (ВидКонтакта1С = СтрокаКонтактов.ВидКонтакта) Тогда
				СтрокаКонтактов.ВидКонтакта	= ВидКонтакта1С;
				СинхронизироватьКонтакт(СтруктураСвойств, Настройка, СтрокаКонтактов, ТаблицаСинхронизируемыхРеквизитовК,
					ТаблицаСинхронизируемыхРеквизитовКЛК);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		СтрокаКонтактов.Объект_1С = Объект_1С;
	ИначеЕсли СтрокаКонтактов.Направление = "1С -> Outlook" Тогда
		НайденныйЭлемент	= СтруктураСвойств.СоответствиеСОМОбъектыКонтактов[СтрокаКонтактов.ID];
		Объект_1С			= СтрокаКонтактов.Объект_1С;
		ЭтоНовыйОбъект		= Ложь;
		ПометкаУдаления		= CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаКонтактов, "Объект_1С",
			"ПометкаУдаления");
		Если НайденныйЭлемент = Неопределено Тогда
			Если ПометкаУдаления Тогда Возврат; КонецЕсли;
			НайденныеПапки	= НайтиСтроки(Настройка.ТаблицаПапокOutlook, Новый Структура("Папка",СтрокаКонтактов.ПапкаOutlook));
			ПапкаOutlook	= НайденныеПапки[0];
			Folder			= ПолучитьПапкуOutlook(СтруктураСвойств.OutlookObj, ПапкаOutlook.Folder);
			Если Folder = Неопределено Тогда Возврат; КонецЕсли;
			ОбъектOutlook	= Folder.Items.Add();	
			ЭтоНовыйОбъект	= Истина;
		Иначе	
			ОбъектOutlook	= НайденныйЭлемент.ОбъектOutlook;
			Если Настройка.УдалятьПомеченныеНаУдалениеОбъекты И ПометкаУдаления Тогда
				// Удаление объекта Outlook.
				ОбъектOutlook.Delete();	
				Возврат;
			КонецЕсли;
		КонецЕсли;
		СтруктураОбъекта	= CRM_ОбменСMSOutlookСервер.ПолучитьСтруктуруСвойствКонтакта(Объект_1С, СтрокаКонтактов.ВидКонтакта);
		Если СтрокаКонтактов.ВидКонтакта = "КЛК" Тогда	
			Если НЕ ЗначениеЗаполнено(СтруктураОбъекта.CRM_Имя) И НЕ ЗначениеЗаполнено(СтруктураОбъекта.CRM_Фамилия) И НЕ ЗначениеЗаполнено(СтруктураОбъекта.CRM_Отчество) Тогда
				УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Имя",		СтруктураОбъекта.Наименование);
			Иначе
				УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Имя",		СтруктураОбъекта.CRM_Имя);
				УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Фамилия",	СтруктураОбъекта.CRM_Фамилия);
				УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Отчество",	СтруктураОбъекта.CRM_Отчество);
			КонецЕсли;
			Если СтруктураОбъекта.Свойство("Организация") Тогда
				УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Организация",	СтруктураОбъекта.Организация);
			КонецЕсли;
			ДатаРождения = ?(СтруктураОбъекта.ДатаРождения = Дата("00010101"), Дата('45010101'), СтруктураОбъекта.ДатаРождения);
			УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"ДатаРождения",	СтруктураОбъекта.ДатаРождения);
			Заметки = "";
			Если Настройка.ПереноситьКомментарийКонтактаВOutlook И ЭтоНовыйОбъект Тогда
				Заметки = Настройка.КомментарийOutlook + Символы.ПС + СтрЗаменить(СтруктураОбъекта.Комментарий, Настройка.Комментарий1С, "");
			ИначеЕсли Настройка.ПереноситьКомментарийКонтактаВOutlook Тогда	
				Заметки = СтрЗаменить(СтруктураОбъекта.Комментарий, Настройка.Комментарий1С, "");
			ИначеЕсли ЭтоНовыйОбъект Тогда
				Заметки = Настройка.КомментарийOutlook;
			КонецЕсли;
			Если НЕ ПустаяСтрока(Заметки) Тогда
				УстановитьРеквизитОбъектаOutlook(ОбъектOutlook, "СодержаниеСобытия", Заметки);
			КонецЕсли;
			ЗагрузитьКИИз1С(ТаблицаСинхронизируемыхРеквизитовКЛК, Объект_1С, ОбъектOutlook);
		ИначеЕсли СтрокаКонтактов.ВидКонтакта = "К" Тогда
			ВидПартнераКомпания		= ПредопределенноеЗначение("Перечисление.КомпанияЧастноеЛицо.Компания");
			ВидПартнераЧастноеЛицо	= ПредопределенноеЗначение("Перечисление.КомпанияЧастноеЛицо.ЧастноеЛицо");
			Если СтруктураОбъекта.ЮрФизЛицо =  ВидПартнераКомпания Тогда
				УстановитьРеквизитОбъектаOutlook(ОбъектOutlook, "Организация", СтруктураОбъекта.Наименование);
			ИначеЕсли СтруктураОбъекта.ЮрФизЛицо = ВидПартнераЧастноеЛицо Тогда
				Если НЕ ЗначениеЗаполнено(СтруктураОбъекта.CRM_Имя) И НЕ ЗначениеЗаполнено(СтруктураОбъекта.CRM_Фамилия) И НЕ ЗначениеЗаполнено(СтруктураОбъекта.CRM_Отчество) Тогда
					УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Имя",		СтруктураОбъекта.Наименование);
				Иначе
					УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Имя",		СтруктураОбъекта.CRM_Имя);
					УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Фамилия",	СтруктураОбъекта.CRM_Фамилия);
					УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Отчество",	СтруктураОбъекта.CRM_Отчество);
				КонецЕсли;
				УстановитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Организация",	"");
			КонецЕсли;
			Заметки = "";
			Если Настройка.ПереноситьКомментарийКонтактаВOutlook И ЭтоНовыйОбъект Тогда
				Заметки = Настройка.КомментарийOutlook + Символы.ПС + СтрЗаменить(СтруктураОбъекта.Комментарий, Настройка.Комментарий1С, "");
			ИначеЕсли Настройка.ПереноситьКомментарийКонтактаВOutlook Тогда	
				Заметки = СтрЗаменить(СтруктураОбъекта.Комментарий, Настройка.Комментарий1С, "");
			ИначеЕсли ЭтоНовыйОбъект Тогда
				Заметки = Настройка.КомментарийOutlook;
			КонецЕсли;
			Если НЕ ПустаяСтрока(Заметки) Тогда
				УстановитьРеквизитОбъектаOutlook(ОбъектOutlook, "СодержаниеСобытия", Заметки);
			КонецЕсли;
			ЗагрузитьКИИз1С(ТаблицаСинхронизируемыхРеквизитовК, Объект_1С,ОбъектOutlook);					
		КонецЕсли;
		Попытка
			ОбъектOutlook.Save();
		Исключение
		
		КонецПопытки;
		СтрокаКонтактов.Представление_Outlook = ПолучитьПредставлениеКонтакта(
			ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Фамилия"),
			ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Имя"),
			ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,	"Отчество"));
		СтрокаКонтактов.ДатаИзменения_Outlook	= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook, "ДатаИзменения");
		НайденныйЭлемент = СтруктураСвойств.СоответствиеСОМОбъектыКонтактов[СтрокаКонтактов.ID];
		Если НайденныйЭлемент = Неопределено Тогда
			СтрокаСОМОбъектыКонтактов					= ПолучитьСтруктуруТаблицыCOMОбъектовКонтактов();
			СтрокаСОМОбъектыКонтактов.СтрокаТЧ			= СтрокаКонтактов;
			СтрокаСОМОбъектыКонтактов.ОбъектOutlook 	= ОбъектOutlook;
			СтрокаСОМОбъектыКонтактов.ОбъектOutlookID	= ОбъектOutlook.EntryID;
			СтруктураСвойств.СОМОбъектыКонтактов.Добавить(СтрокаСОМОбъектыКонтактов);
			СтруктураСвойств.СоответствиеСОМОбъектыКонтактов.Вставить(СтрокаСОМОбъектыКонтактов.СтрокаТЧ, СтрокаСОМОбъектыКонтактов);
		КонецЕсли;
	КонецЕсли;
	// Сохраним связь с объектом Outlook.
	СтруктураЗаполнения = Новый Структура("ПрограммаOutlook,СобственнаяСсылка,СсылкаВOutlook", Настройка.ПрограммаOutlook,
		Объект_1С, ОбъектOutlook.EntryID);
	Если ЗначениеЗаполнено(СтрокаКонтактов.Объект_1С) Тогда
		НайденныеСтроки = НайтиСтроки(СтруктураСвойств.Контакты, Новый Структура("ID", СтрокаКонтактов.ID));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НайденнаяСтрока.Объект_1С = СтрокаКонтактов.Объект_1С;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	CRM_ОбменСMSOutlookСервер.СохранитьСвязьСОбъектомOutlook(СтруктураЗаполнения);
	Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Настройка.ПрограммаOutlook, "ДлинаGUID") = 0 Тогда
		CRM_ОбменСMSOutlookСервер.УстановитьДлинуGUIDOutlook(Настройка.ПрограммаOutlook, ОбъектOutlook.EntryID);			
	КонецЕсли;
КонецПроцедуры

// Процедура синхронизирует контакты.
//
Процедура СинхронизироватьКонтакты(СтруктураСвойств, Настройка)  Экспорт
	ТаблицаСинхронизируемыхРеквизитовК		= НайтиСтроки(Настройка.СоответствиеКонтактнойИнформации,
		Новый Структура("ВидКонтакта","К"));
	ТаблицаСинхронизируемыхРеквизитовКЛК	= НайтиСтроки(Настройка.СоответствиеКонтактнойИнформации,
		Новый Структура("ВидКонтакта","КЛК"));
	Состояние("Для прерывания процесса синхронизации нажмите Ctrl+Break");
	Счетчик = 1;
	ОбщееКоличество = 0;
	Для Каждого СтрокаТаблицы Из СтруктураСвойств.Контакты Цикл
		Если СтрокаТаблицы.Пометка Тогда
			ОбщееКоличество = ОбщееКоличество + 1;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаКонтактов Из СтруктураСвойств.Контакты Цикл
		Если НЕ СтрокаКонтактов.Пометка Тогда Продолжить; КонецЕсли;
		ОбработкаПрерыванияПользователя();
		Состояние(НСтр("ru = 'Запись контактов: '") + Строка(Счетчик) + НСтр("ru = ' из '") + Строка(ОбщееКоличество));
		Счетчик = Счетчик + 1;
		СинхронизироватьКонтакт(СтруктураСвойств, Настройка, СтрокаКонтактов, ТаблицаСинхронизируемыхРеквизитовК, ТаблицаСинхронизируемыхРеквизитовКЛК);
		СтрокаКонтактов.Пометка = Ложь;
	КонецЦикла;
	// Сохраняем дату синхронизации.
	Если Настройка.СинхронизироватьКонтакты  Тогда
		СтруктураСвойств.ДатаПоследнейСинхронизацииКонтактов = ТекущаяДата();
	КонецЕсли;
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////
// Синхронизация Событий

// Функция заполняет табличную часть контактов в соответствии с указанным направлением и приоритетом.
//
// Процедура  сопоставляет  контакты 1С с  контактами outlook.
//
Процедура СопоставитьСобытия1С(СтруктураСвойств, Настройка, ТаблицаСинхронизируемыхСобытий1С)
	// Найдем папку для загрузки новых объектов 1С.
	Для Каждого ПапкаOutlookДляЗагрузкиИз1С Из Настройка.ТаблицаПапокOutlook Цикл
		Если (ПапкаOutlookДляЗагрузкиИз1С.olFolder = "1") И (ПапкаOutlookДляЗагрузкиИз1С.ЗагрузкаИз1С = Истина) Тогда
			Прервать; 
		КонецЕсли;	
	КонецЦикла;
	ФормаТаблицы	= ПолучитьФорму("Обработка.CRM_ОбменСMSOutlook.Форма.Таблицы");
	ФормаТаблицы.СоответствиеОбъектов.Очистить();
	ФормаТаблицы.ЗаполнитьТаблицуСоответствиеОбъектов(ТаблицаСинхронизируемыхСобытий1С, Настройка.ПрограммаOutlook);
	СоответствиеСопоставленныеСобытия	= Новый Соответствие();
	Количество = ТаблицаСинхронизируемыхСобытий1С.Количество();
	Сч = 0;
	Для Каждого СтрокаСобытий_1С Из ТаблицаСинхронизируемыхСобытий1С Цикл
		сч = сч + 1;
		// Возможно событие уже сопоставлено ранее.
		Если НЕ (СоответствиеСопоставленныеСобытия[СтрокаСобытий_1С.Ссылка] = Неопределено) Тогда Продолжить; КонецЕсли;
		СобытиеOutlook = ПолучитьОбъектOutlook(СтруктураСвойств, Настройка, СтрокаСобытий_1С.Ссылка, ФормаТаблицы);
		// В список добавляем только помеченные на удаление объекты для которых найдено соответствие полей.
		Если (СобытиеOutlook = Неопределено)
			И CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаСобытий_1С, "Ссылка", "ПометкаУдаления") Тогда
			Продолжить;
		КонецЕсли;	
		НоваяСтрокаСобытия					= ПолучитьСтруктуруСобытий();
		НоваяСтрокаСобытия.ID				= Строка(Новый УникальныйИдентификатор);
		НоваяСтрокаСобытия.Пометка			= Истина;
		НоваяСтрокаСобытия.Объект_1С		= СтрокаСобытий_1С.Ссылка;
		НоваяСтрокаСобытия.ПометкаУдаления	= СтрокаСобытий_1С.ПометкаУдаления;
		НоваяСтрокаСобытия.ДатаИзменения_1С	= СтрокаСобытий_1С.Дата;
		Если (Настройка.Направление = "1СOutlook") И НЕ (СобытиеOutlook = Неопределено) Тогда
			НоваяСтрокаСобытия.Направление	= ?(ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook, "ДатаИзменения") > СтрокаСобытий_1С.Дата, "Outlook -> 1С", "1С -> Outlook");
		Иначе
			НоваяСтрокаСобытия.Направление	= "1С -> Outlook";
		КонецЕсли;
		Если НЕ (СобытиеOutlook = Неопределено) Тогда
			НоваяСтрокаСобытия.Представление_Outlook		= ПолучитьПредставлениеСобытияOutlook(ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook,"ОписаниеСобытия"),
				ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook,"НачалоСобытия"));
			НоваяСтрокаСобытия.ПапкаOutlook					= СобытиеOutlook.Parent.Name;
			НоваяСтрокаСобытия.ДатаИзменения_Outlook		= ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook,"ДатаИзменения");
			НоваяСтрокаСОМОбъекта							= ПолучитьСтруктуруТаблицыCOMОбъектовСобытий();
			НоваяСтрокаСОМОбъекта.СтрокаТЧ					= НоваяСтрокаСобытия.ID;
			НоваяСтрокаСОМОбъекта.ОбъектOutlook				= СобытиеOutlook;
			НоваяСтрокаСОМОбъекта.ОбъектOutlookID			= СобытиеOutlook.EntryID;
			СтруктураСвойств.СОМОбъектыСобытий.Добавить(НоваяСтрокаСОМОбъекта);
			СтруктураСвойств.СоответствиеСОМОбъектыСобытий.Вставить(НоваяСтрокаСОМОбъекта.СтрокаТЧ, НоваяСтрокаСОМОбъекта);
		Иначе
			НоваяСтрокаСобытия.ПапкаOutlook					= ПапкаOutlookДляЗагрузкиИз1С.Папка;
		КонецЕсли;
		СтруктураСвойств.События.Добавить(НоваяСтрокаСобытия);
		СоответствиеСопоставленныеСобытия.Вставить(СтрокаСобытий_1С.Ссылка, Истина);
	КонецЦикла;
	ФормаТаблицы = Неопределено;
КонецПроцедуры

Процедура СопоставитьСобытияOutlook(СтруктураСвойств, Настройка, ТаблицаСинхронизируемыхСобытийOutlook)
	Количество		= ТаблицаСинхронизируемыхСобытийOutlook.Количество();	
	ФормаТаблицы	= ПолучитьФорму("Обработка.CRM_ОбменСMSOutlook.Форма.Таблицы");
	ФормаТаблицы.СоответствиеОбъектов.Очистить();
	ФормаТаблицы.ЗаполнитьТаблицуСоответствиеОбъектов(ТаблицаСинхронизируемыхСобытийOutlook, Настройка.ПрограммаOutlook, Истина);
	Сч = 0;
	СоответствиеОбработанные = Новый Соответствие();
	Для Каждого СтрокаСобытийOutlook Из ТаблицаСинхронизируемыхСобытийOutlook Цикл
		сч = сч + 1;
		// Возможно событие уже было сопоставлен ранее.
		Если НЕ (СоответствиеОбработанные[СтрокаСобытийOutlook.ОбъектOutlookID] = Неопределено) Тогда Продолжить; КонецЕсли;
		СоответствиеОбработанные.Вставить(СтрокаСобытийOutlook.ОбъектOutlookID, Истина);
		// Поиск события в 1С
		EntryID				= СтрокаСобытийOutlook.ОбъектOutlook.ОбъектOutlook.EntryID;
		СсылкаНаОбъект1С	= ПолучитьОбъект1С(Настройка.ПрограммаOutlook, EntryID, ФормаТаблицы);
		// Добавим новую строку в таблицу сопоставления объектов 1С и Outlook.
		НоваяСтрокаСобытия								= ПолучитьСтруктуруСобытий();
		НоваяСтрокаСобытия.ID							= Строка(Новый УникальныйИдентификатор);
		НоваяСтрокаСобытия.Пометка						= Истина;	
		НоваяСтрокаСобытия.Представление_Outlook		= СтрокаСобытийOutlook.Представление_Outlook;
		НоваяСтрокаСобытия.ПапкаOutlook					= СтрокаСобытийOutlook.FolderName;
		НоваяСтрокаСобытия.ДатаИзменения_Outlook		= СтрокаСобытийOutlook.ДатаИзменения;
		ДатаИзменения_1С									= Дата('00010101');
		Если ЗначениеЗаполнено(СсылкаНаОбъект1С) Тогда
			ДатаИзменения_1С = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(СсылкаНаОбъект1С, "Дата");
			// Если это не первый обмен, то вместо даты регистрации установим дату изменения объекта.
			Если ЗначениеЗаполнено(Настройка.ФильтрДатаИзмененияКонтактаOutlook) Тогда
				ДатаИзменения_1С = CRM_ОбменСMSOutlookСервер.ПолучитьДатуМодификацииВ1С(СсылкаНаОбъект1С, Настройка.ПрограммаOutlook);
			КонецЕсли;
		КонецЕсли;
		Если (Настройка.Направление = "1СOutlook") И НЕ (СсылкаНаОбъект1С = Неопределено) Тогда
			НоваяСтрокаСобытия.Направление	= ?(СтрокаСобытийOutlook.ДатаИзменения > ДатаИзменения_1С, "Outlook -> 1С", "1С -> Outlook");
		Иначе
			НоваяСтрокаСобытия.Направление	= "Outlook -> 1С";
		КонецЕсли;
		Если ЗначениеЗаполнено(СсылкаНаОбъект1С) Тогда 
			НоваяСтрокаСобытия.Объект_1С		= СсылкаНаОбъект1С;
			НоваяСтрокаСобытия.ДатаИзменения_1С	= ДатаИзменения_1С;
		Иначе
			НоваяСтрокаСобытия.Объект_1С		= ПредопределенноеЗначение("Документ.CRM_Мероприятие.ПустаяСсылка");
		КонецЕсли;
		СтруктураСвойств.События.Добавить(НоваяСтрокаСобытия);
		НоваяСтрокаСОМОбъекта					= ПолучитьСтруктуруТаблицыCOMОбъектовСобытий();
		НоваяСтрокаСОМОбъекта.СтрокаТЧ			= НоваяСтрокаСобытия.ID;
		НоваяСтрокаСОМОбъекта.ОбъектOutlook		= СтрокаСобытийOutlook.ОбъектOutlook.ОбъектOutlook;
		НоваяСтрокаСОМОбъекта.ОбъектOutlookID	= СтрокаСобытийOutlook.ОбъектOutlookID;
		СтруктураСвойств.СОМОбъектыСобытий.Добавить(НоваяСтрокаСОМОбъекта);
		СтруктураСвойств.СоответствиеСОМОбъектыСобытий.Вставить(НоваяСтрокаСОМОбъекта.СтрокаТЧ, НоваяСтрокаСОМОбъекта);
		Состояние("Сопоставление событий Outlook " + Сч + " из " + Количество);
	КонецЦикла;
	ФормаТаблицы = Неопределено;
КонецПроцедуры

// Процедура заполняет таблицу синхронизации событий.
//
Процедура ЗаполнитьТаблицуСинхронизацииСобытий(СтруктураСвойств, Настройки) Экспорт
	Если НЕ Настройки.СинхронизироватьСобытия Тогда Возврат; КонецЕсли;	
	СтруктураСвойств.СОМОбъектыСобытий.Очистить();
	Если Настройки.Направление = "1СOutlook" Тогда
		// В обе стороны
		СинхронизируемыеСобытияOutlook = ПолучитьСинхронизируемыеСобытияOutlook(СтруктураСвойств, Настройки);
		ТекстЗапроса	=  СформироватьТекстЗапросаСобытия(Настройки);
		Отбор			= Настройки.НастройкиСобытий.Отбор;
		Попытка
			ДатаПоследнегоОбмена = Настройки.ФильтрДатаИзмененияСобытияOutlook;
		Исключение
			ДатаПоследнегоОбмена = Неопределено;
		КонецПопытки;
		СинхронизируемыеСобытия1С = CRM_ОбменСMSOutlookСервер.ПолучитьСинхронизируемыеСобытия1С(ТекстЗапроса, Отбор, ДатаПоследнегоОбмена);
		СопоставитьСобытия1С(СтруктураСвойств, Настройки, СинхронизируемыеСобытия1С);		
		СопоставитьСобытияOutlook(СтруктураСвойств, Настройки, СинхронизируемыеСобытияOutlook);		
	ИначеЕсли Настройки.Направление = "Outlook" Тогда
		// Из 1С в Outlook
		ТекстЗапроса	= СформироватьТекстЗапросаСобытия(Настройки);
		Отбор			= Настройки.НастройкиСобытий.Отбор;
		Попытка
			ДатаПоследнегоОбмена = Настройки.ФильтрДатаИзмененияСобытияOutlook;
		Исключение
			ДатаПоследнегоОбмена = Неопределено;
		КонецПопытки;
		СинхронизируемыеСобытия1С = CRM_ОбменСMSOutlookСервер.ПолучитьСинхронизируемыеСобытия1С(ТекстЗапроса, Отбор, ДатаПоследнегоОбмена);	
		СопоставитьСобытия1С(СтруктураСвойств, Настройки, СинхронизируемыеСобытия1С);	
	ИначеЕсли Настройки.Направление = "1C" Тогда // Из Outlook в 1С
		СинхронизируемыеСобытияOutlook = ПолучитьСинхронизируемыеСобытияOutlook(СтруктураСвойств, Настройки);				
		СопоставитьСобытияOutlook(СтруктураСвойств, Настройки, СинхронизируемыеСобытияOutlook);		
	КонецЕсли;
КонецПроцедуры

// Функция получает синхронизируемые события Outlook.
//
Функция ПолучитьСинхронизируемыеСобытияOutlook(СтруктураСвойств, Настройки) Экспорт
	ТаблицаСинхронизируемыхСобытийOutlook = Новый Массив;
	Если ЗначениеЗаполнено(Настройки.ФильтрДатаИзмененияСобытияOutlook) Тогда
		Для Каждого ПапкаOutlook Из Настройки.ТаблицаПапокOutlook Цикл
			Если НЕ (ПапкаOutlook.olFolder = "1") Тогда Продолжить; КонецЕсли;
			ContactFolder	= ПолучитьПапкуOutlook(СтруктураСвойств.OutlookObj, ПапкаOutlook.Folder);
			FolderName		= ContactFolder.Name;
			СинхронизируемыеСобытия = ContactFolder.Items.Restrict("[LastModificationTime] > '"
				+ Формат(Настройки.ФильтрДатаИзмененияСобытияOutlook + 60,"ДФ=""dd/MM/yy ЧЧ:мм""") + "'");
			Для Ном = 1 По СинхронизируемыеСобытия.Count Цикл
				СобытиеOutlook = СинхронизируемыеСобытия.Item(Ном) ;
				// Возможно не нужно синхронизировать частные контакты.
				Если Настройки.ИсключитьЧастныеКонтакты 
					И НЕ (ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook,"Частное") = 0) Тогда
					Продолжить;
				КонецЕсли;
				Повторяющееся = ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook,"Повторяющееся");
				Если Повторяющееся = Истина Тогда
					// Повторяющееся события  не синхронизируем.
					Продолжить;
				КонецЕсли;	
				ДобавитьСобытиеOutlookВТаблицуСинхронизируемыхСобытий(ТаблицаСинхронизируемыхСобытийOutlook, СобытиеOutlook,
					ContactFolder, FolderName);
			КонецЦикла;	
		КонецЦикла;
	Иначе	
		// Первая синхронизация
		ПолучитьВсеСобытияOutlook(СтруктураСвойств,Настройки);
		Если Настройки.ИсключитьЧастныеСобытия Тогда
			Ошибка = "";
			ТаблицаСинхронизируемыхСобытийOutlook =  НайтиСтроки(СтруктураСвойств.ТаблицаСобытийOutlook,
				Новый Структура("Частное", Ложь), Ошибка);
		Иначе
			ТаблицаСинхронизируемыхСобытийOutlook =  НайтиСтроки(СтруктураСвойств.ТаблицаСобытийOutlook);
		КонецЕсли;
	КонецЕсли;
	Возврат ТаблицаСинхронизируемыхСобытийOutlook;
КонецФункции

// Процедура формирует список событий outlook.
//
Процедура ПолучитьВсеСобытияOutlook(СтруктураСвойств, Настройки)
	Для Каждого ПапкаOutlook Из Настройки.ТаблицаПапокOutlook Цикл
		Если НЕ (ПапкаOutlook.olFolder = "1") Тогда Продолжить; КонецЕсли;
		ContactFolder = ПолучитьПапкуOutlook(СтруктураСвойств.OutlookObj, ПапкаOutlook.Folder);
		CMS_перем = ContactFolder.FolderPath; // TODO:
		FolderName = ContactFolder.Name;
		Если ContactFolder.Items.Count > 0 Тогда
			Для Ном = 1 По ContactFolder.Items.Count Цикл
				Попытка
					СобытиеOutlook = ContactFolder.Items(Ном);
				Исключение
				КонецПопытки;
				Состояние("Чтение событий календаря Outlook (" + FolderName + ") " + Строка(Ном));
				Повторяющееся = ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook, "Повторяющееся");
				Если Повторяющееся = Истина Тогда
					// Повторяющееся события  не синхронизируем.
					Продолжить;
				КонецЕсли;
				ДобавитьСобытиеOutlookВТаблицуСинхронизируемыхСобытий(СтруктураСвойств.ТаблицаСобытийOutlook, СобытиеOutlook, ContactFolder,FolderName);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Состояние("");
КонецПроцедуры

Процедура ДобавитьСобытиеOutlookВТаблицуСинхронизируемыхСобытий(ТаблицаСобытийOutlook, СобытиеOutlook, ContactFolder, FolderName)
	Частное = НЕ (ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook, "Частное") = 0);
	СтрокаТаблицы = ПолучитьСтруктуруТаблицыСобытийOutlook();
	СтрокаТаблицы.ОбъектOutlookID		= СобытиеOutlook.EntryID;
	СтрокаТаблицы.Представление_Outlook	= ПолучитьПредставлениеСобытияOutlook(ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook, "ОписаниеСобытия"),
		ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook, "НачалоСобытия"));
	СтрокаТаблицы.Частное		= Частное;
	СтрокаТаблицы.ДатаИзменения	=  ПолучитьРеквизитОбъектаOutlook(СобытиеOutlook,"ДатаИзменения");
	СтрокаТаблицы.ДатаИзменения	= ?(СтрокаТаблицы.ДатаИзменения = Дата('45010101'), Дата("00010101"), СтрокаТаблицы.ДатаИзменения);
	СтрокаТаблицы.FolderName	= FolderName;
	СтруктураОбъектOutlook = Новый Структура;
	СтруктураОбъектOutlook.Вставить("ОбъектOutlook",	СобытиеOutlook);
	СтруктураОбъектOutlook.Вставить("ПапкаOutlook" ,	ContactFolder);	
	СтрокаТаблицы.ОбъектOutlook	= СтруктураОбъектOutlook;
	ТаблицаСобытийOutlook.Добавить(СтрокаТаблицы);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////
// Синхронизация Писем

// Процедура  сопоставляет  контакты outlook с  контактами 1С.
//
Процедура СопоставитьПисьмаOutlook(мСтруктураСвойств, мНастройка, ТаблицаСинхронизируемыхПисемOutlook)
	Количество = ТаблицаСинхронизируемыхПисемOutlook.Количество();	
	ФормаТаблицы = ПолучитьФорму("Обработка.CRM_ОбменСMSOutlook.Форма.Таблицы");
	ФормаТаблицы.СоответствиеОбъектов.Очистить();
	ФормаТаблицы.ЗаполнитьТаблицуСоответствиеОбъектов(ТаблицаСинхронизируемыхПисемOutlook, мНастройка.ПрограммаOutlook, Истина);
	Сч = 0;
	СоответствиеОбработанные = Новый Соответствие();
	Для Каждого СтрокаПисемOutlook Из ТаблицаСинхронизируемыхПисемOutlook Цикл
		сч = сч + 1;
		// Возможно контакт уже сопоставлен ранее.
		Если НЕ (СоответствиеОбработанные[СтрокаПисемOutlook.ОбъектOutlookID] = Неопределено) Тогда Продолжить; КонецЕсли;
		СоответствиеОбработанные.Вставить(СтрокаПисемOutlook.ОбъектOutlookID, Истина);
		// Поиск контакта в 1С
		// Заключено в Попытку, так как в некоторых письмах при попытке чтения EntryID возникала ошибка чтения этого значения.
		ДополнительныеДанныеОбъекта1С = Новый Структура();
		Попытка
			EntryID = Неопределено;
			EntryID = СтрокаПисемOutlook.ОбъектOutlook.ОбъектOutlook.EntryID;
			СсылкаНаОбъект1С = ПолучитьОбъект1С(мНастройка.ПрограммаOutlook, EntryID, ФормаТаблицы, ДополнительныеДанныеОбъекта1С);
		Исключение
			сч = сч - 1;
			Продолжить;
		КонецПопытки;
		// Добавим новую строку в таблицу сопоставления объектов 1С и Outlook.
		НоваяСтрокаПисьма							= ПолучитьСтруктуруПисем();
		НоваяСтрокаПисьма.ID						= Строка(Новый УникальныйИдентификатор);
		НоваяСтрокаПисьма.Пометка					= Истина;	
		НоваяСтрокаПисьма.Представление_Outlook		= СтрокаПисемOutlook.Представление_Outlook;
		НоваяСтрокаПисьма.ПапкаOutlook				= СтрокаПисемOutlook.FolderName;
		НоваяСтрокаПисьма.ДатаИзменения_Outlook		= СтрокаПисемOutlook.ДатаИзменения;
		НоваяСтрокаПисьма.Направление				= "Outlook -> 1С";
		Если ЗначениеЗаполнено(СсылкаНаОбъект1С) Тогда 
			НоваяСтрокаПисьма.Объект_1С				= СсылкаНаОбъект1С;
			Если ДополнительныеДанныеОбъекта1С.Свойство("Дата") И ТипЗнч(ДополнительныеДанныеОбъекта1С.Дата) = Тип("Дата") Тогда
				НоваяСтрокаПисьма.ДатаИзменения_1С	= ДополнительныеДанныеОбъекта1С.Дата;
			Иначе
				НоваяСтрокаПисьма.ДатаИзменения_1С	= CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СсылкаНаОбъект1С, , "Дата");
			КонецЕсли;
		Иначе
			Если мСтруктураСвойств.FolderInbox.FolderPath = "\\Личные папки\Входящие" Тогда 
				НоваяСтрокаПисьма.Объект_1С				= ПредопределенноеЗначение("Документ.ЭлектронноеПисьмоВходящее.ПустаяСсылка");
			Иначе
				НоваяСтрокаПисьма.Объект_1С				= ПредопределенноеЗначение("Документ.ЭлектронноеПисьмоИсходящее.ПустаяСсылка");
			КонецЕсли;
		КонецЕсли;
		мСтруктураСвойств.Письма.Добавить(НоваяСтрокаПисьма);
		НоваяСтрокаСОМОбъекта					= ПолучитьСтруктуруТаблицыCOMОбъектовПисем();
		НоваяСтрокаСОМОбъекта.СтрокаТЧ			= НоваяСтрокаПисьма.ID;
		НоваяСтрокаСОМОбъекта.ОбъектOutlook		= СтрокаПисемOutlook.ОбъектOutlook.ОбъектOutlook;
		НоваяСтрокаСОМОбъекта.ОбъектOutlookID	= СтрокаПисемOutlook.ОбъектOutlookID;
		мСтруктураСвойств.СОМОбъектыПисем.Добавить(НоваяСтрокаСОМОбъекта);
		мСтруктураСвойств.СоответствиеСОМОбъектыПисем.Вставить(НоваяСтрокаСОМОбъекта.СтрокаТЧ, НоваяСтрокаСОМОбъекта);
		Состояние("Сопоставление писем Outlook " + Сч + " из " + Количество);
	КонецЦикла;
	ФормаТаблицы = Неопределено;
КонецПроцедуры

// Процедура заполняет таблицу синхронизации писем.
//
Процедура ЗаполнитьТаблицуСинхронизацииПисем(мСтруктураСвойств, мНастройка) Экспорт
	Если НЕ мНастройка.СинхронизироватьПисьма Тогда Возврат; КонецЕсли;	
	мСтруктураСвойств.СОМОбъектыПисем.Очистить();
	СинхронизируемыеПисьмаOutlook = ПолучитьСинхронизируемыеПисьмаOutlook(мСтруктураСвойств, мНастройка);
	СопоставитьПисьмаOutlook(мСтруктураСвойств, мНастройка, СинхронизируемыеПисьмаOutlook);		
КонецПроцедуры

// Процедура  формирует список синхронизируемых событий outlook.
//
Функция ПолучитьСинхронизируемыеПисьмаOutlook(мСтруктураСвойств, мНастройка) Экспорт
	Состояние("Поиск изменений...");
	ТаблицаСинхронизируемыхПисемOutlook = Новый Массив;
	Если ЗначениеЗаполнено(мНастройка.ФильтрДатаИзмененияПисьмаOutlook) Тогда
		Для Каждого ПапкаOutlook Из мСтруктураСвойств.ТаблицаПапокOutlook Цикл
			Если НЕ (ПапкаOutlook.olFolder = "0") Тогда Продолжить; КонецЕсли;
			EntryID			= ПапкаOutlook.Folder;
			ContactFolder	= ПолучитьПапкуOutlook(мСтруктураСвойств.OutlookObj, EntryID);
			Если ContactFolder = Неопределено Тогда Продолжить; КонецЕсли;
			FolderName	= ContactFolder.Name;
			СинхронизируемыеПисьма = ContactFolder.Items.Restrict("[LastModificationTime] > '" 
				+ Формат(мНастройка.ФильтрДатаИзмененияПисьмаOutlook + 60,"ДФ=""dd/MM/yy ЧЧ:мм""") + "'");
			Для Ном = 1 По СинхронизируемыеПисьма.Count Цикл
				Попытка
					ПисьмоOutlook	= СинхронизируемыеПисьма.Item(Ном) ;
					EntryID			= ПисьмоOutlook.EntryID;
				Исключение
					Продолжить;
				КонецПопытки;
				ДобавитьПисьмоOutlookВТаблицуСинхронизируемыхПисем(ТаблицаСинхронизируемыхПисемOutlook, ПисьмоOutlook,
					ContactFolder, FolderName);
			КонецЦикла;	
		КонецЦикла;
	Иначе	
		// Первая синхронизация
		ПолучитьВСЕПисьмаOutlook(мСтруктураСвойств, мНастройка);
		ТаблицаСинхронизируемыхПисемOutlook =  НайтиСтроки(мСтруктураСвойств.ТаблицаПисемOutlook);
	КонецЕсли;
	Возврат ТаблицаСинхронизируемыхПисемOutlook;
КонецФункции

Функция ПолучитьПредставлениеПисьмаOutlook(Тема, Отправитель, Получатель)
	Возврат Строка(Отправитель) + ", " + Строка(Получатель)  + ", " + Строка(Тема);
КонецФункции	

Процедура ДобавитьПисьмоOutlookВТаблицуСинхронизируемыхПисем(ТаблицаСинхронизируемыхПисемOutlook, ПисьмоOutlook, ContactFolder, FolderName)
	СтрокаТаблицы = ПолучитьСтруктуруТаблицыПисемOutlook();
	СтрокаТаблицы.ОбъектOutlookID		= ПисьмоOutlook.EntryID;
	СтрокаТаблицы.Представление_Outlook	= ПолучитьПредставлениеПисьмаOutlook(
		ПолучитьРеквизитОбъектаOutlook(ПисьмоOutlook,	"Subject"),
		ПолучитьРеквизитОбъектаOutlook(ПисьмоOutlook,	"From"),
		ПолучитьРеквизитОбъектаOutlook(ПисьмоOutlook,	"To"));
	СтрокаТаблицы.ДатаИзменения	= ПолучитьРеквизитОбъектаOutlook(ПисьмоOutlook, "ДатаИзменения");
	СтрокаТаблицы.ДатаИзменения	= ?(СтрокаТаблицы.ДатаИзменения = Дата('45010101'), Дата("00010101"), СтрокаТаблицы.ДатаИзменения);
	СтрокаТаблицы.FolderName	= FolderName;
	СтруктураОбъектOutlook		= Новый Структура;
	СтруктураОбъектOutlook.Вставить("ОбъектOutlook",	ПисьмоOutlook);
	СтруктураОбъектOutlook.Вставить("ПапкаOutlook" ,	ContactFolder);		
	СтрокаТаблицы.ОбъектOutlook	= СтруктураОбъектOutlook;
	ТаблицаСинхронизируемыхПисемOutlook.Добавить(СтрокаТаблицы);
КонецПроцедуры

// Процедура формирует список событий Outlook.
//
Процедура ПолучитьВСЕПисьмаOutlook(мСтруктураСвойств, мНастройка)  Экспорт
	Для Каждого ПапкаOutlook Из мНастройка.ТаблицаПапокOutlook Цикл
		Если НЕ (ПапкаOutlook.olFolder = "0") Тогда Продолжить; КонецЕсли;
		EntryID			= ПапкаOutlook.Folder;	
		ContactFolder	= ПолучитьПапкуOutlook(мСтруктураСвойств.OutlookObj,EntryID);
		FolderName		= ContactFolder.Name;
		Если ContactFolder.Items.Count > 0 Тогда
			Для Ном = 1 По ContactFolder.Items.Count Цикл
				Попытка 
					ПисьмоOutlook	= ContactFolder.Items(Ном);	
					EntryID			= ПисьмоOutlook.EntryID;
				Исключение
					Продолжить;
				КонецПопытки;
				Состояние("Чтение писем Outlook (" + FolderName + ") " + Строка(Ном));			
				ДобавитьПисьмоOutlookВТаблицуСинхронизируемыхПисем(мСтруктураСвойств.ТаблицаПисемOutlook, ПисьмоOutlook,
					ContactFolder, FolderName);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Состояние("");
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПисьмаПоОбъектуOutlook(СтруктураРеквизитов, ОбъектOutlook, ПапкаOutlookEntryID, СписокПапок, Входящее)
	ВидПапки = CRM_ОбменСMSOutlookСервер.ПолучитьВидПапки(СписокПапок, ПапкаOutlookEntryID, Входящее);
	
	Если НЕ Входящее Тогда
		Если ВидПапки = ПредопределенноеЗначение("Перечисление.CRM_ВидыПапокЭлектроннойПочты.Исходящие") Тогда
			СтруктураРеквизитов.Вставить("СтатусПисьма",	ПредопределенноеЗначение("Перечисление.СтатусыИсходящегоЭлектронногоПисьма.Исходящее"));
		ИначеЕсли ВидПапки = ПредопределенноеЗначение("Перечисление.CRM_ВидыПапокЭлектроннойПочты.Отправленные") Тогда
			СтруктураРеквизитов.Вставить("СтатусПисьма",	ПредопределенноеЗначение("Перечисление.СтатусыИсходящегоЭлектронногоПисьма.Отправлено"));
		ИначеЕсли ВидПапки = ПредопределенноеЗначение("Перечисление.CRM_ВидыПапокЭлектроннойПочты.Черновики") Тогда
			СтруктураРеквизитов.Вставить("СтатусПисьма",	ПредопределенноеЗначение("Перечисление.СтатусыИсходящегоЭлектронногоПисьма.Черновик"));
		КонецЕсли;
	КонецЕсли;
	
	Папка = CRM_УправлениеЭлектроннойПочтой.ПолучитьПапкуПисьма(СтруктураРеквизитов.УчетнаяЗапись, ОбъектOutlook.Parent.Name, ВидПапки);
	СтруктураРеквизитов.Вставить("Папка",		Папка);
	СтруктураРеквизитов.Вставить("Тема",		ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,	"ОписаниеСобытия"));
	СтруктураРеквизитов.Вставить("Описание",	ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,	"СодержаниеСобытия"));
	СтруктураРеквизитов.Тема		= CRM_ОбменСMSOutlookКлиентСервер.ЗаменитьНедопустимыеСимволыXML(СтруктураРеквизитов.Тема);
	СтруктураРеквизитов.Описание	= CRM_ОбменСMSOutlookКлиентСервер.ЗаменитьНедопустимыеСимволыXML(СтруктураРеквизитов.Описание);
КонецПроцедуры

Процедура ЗаполнитьСтруктуруСобытияДляПисьмаПоНастройке(СтруктураРеквизитов, Настройки, ОбъектOutlook = Неопределено)
	Если НЕ СтруктураРеквизитов.Свойство("Дата") ИЛИ (СтруктураРеквизитов.Свойство("Дата") 
		И НЕ ЗначениеЗаполнено(СтруктураРеквизитов.Дата)) Тогда
		СтруктураРеквизитов.Вставить("Дата", ТекущаяДата());
	КонецЕсли;
	//Если НЕ СтруктураРеквизитов.Свойство("ОкончаниеМероприятия") ИЛИ (СтруктураРеквизитов.Свойство("ОкончаниеМероприятия")
	//	И (НЕ ЗначениеЗаполнено(СтруктураРеквизитов.ОкончаниеМероприятия)
	//	ИЛИ (ТипЗнч(СтруктураРеквизитов.ОкончаниеМероприятия) = Тип("Дата")
	//	И СтруктураРеквизитов.ОкончаниеМероприятия < СтруктураРеквизитов.Дата))) Тогда
	//	СтруктураРеквизитов.Вставить("ОкончаниеМероприятия", СтруктураРеквизитов.Дата);
	//КонецЕсли;
	СтруктураРеквизитов.Вставить("Ответственный",		ТекущийПользователь());
	//СтруктураРеквизитов.Вставить("СостояниеСобытия",	Настройки.СостояниеСобытийПисьмо);				
	//СтруктураРеквизитов.Вставить("ВидСобытия",			Настройки.ВидСобытийПисьмо);
	СтруктураРеквизитов.Вставить("Важность",			ПредопределенноеЗначение("Перечисление.ВариантыВажностиВзаимодействия.Обычная"));
	СтруктураРеквизитов.Вставить("Автор",				ТекущийПользователь());	
	СтруктураРеквизитов.Вставить("Комментарий",			Настройки.Комментарий1С);
КонецПроцедуры

// Добавляет вложения электронного письма.
//
Процедура ДобавитьВложенияЭлектронногоПисьма(Объект_1С, ОбъектOutlook)
	#Если Не ВебКлиент Тогда
	Если НЕ ЗначениеЗаполнено(Объект_1С) ИЛИ НЕ (ТипЗнч(Объект_1С) = Тип("ДокументСсылка.CRM_Мероприятие")) Тогда
		Возврат;
	КонецЕсли;
	Для Ном = 1 По ОбъектOutlook.Attachments.Count Цикл
		Вложение		= ОбъектOutlook.Attachments.Item(Ном);
		ИмяКаталога		= КаталогВременныхФайлов();
		ИмяФайлаOutlook	=  Вложение.FileName;
		ИмяФайла		= ОбщегоНазначенияКлиентСервер.ПолучитьПолноеИмяФайла(ИмяКаталога, ИмяФайлаOutlook);
		Попытка
			Вложение.SaveAsFile(ИмяФайла);
		Исключение
			Продолжить;
		КонецПопытки;
		Файл = Новый Файл(ИмяФайла);
		РасширениеБезТочки				= ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(Файл.Расширение);
		ИмяФайлаБезРасширения			= Файл.ИмяБезРасширения;
		ВремяИзменения					= ТекущаяДата();
		АдресФайлаВоВременномХранилище	= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла));
		ПараметрыФайла = Новый Структура;
		ПараметрыФайла.Вставить("ВладелецФайлов",              Объект_1С);
		ПараметрыФайла.Вставить("Автор",                       Неопределено);
		ПараметрыФайла.Вставить("ИмяБезРасширения",            ИмяФайлаБезРасширения);
		ПараметрыФайла.Вставить("РасширениеБезТочки",          РасширениеБезТочки);
		ПараметрыФайла.Вставить("ВремяИзменения",              ВремяИзменения);
		ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", ВремяИзменения);
				
		ПрисоединенныйФайл = РаботаСФайламиСлужебныйВызовСервера.ДобавитьФайл(ПараметрыФайла, АдресФайлаВоВременномХранилище);
		Попытка
			УдалитьФайлы(ИмяФайла);
		Исключение
		КонецПопытки;
		Попытка
			Если ЭтоАдресВременногоХранилища(АдресФайлаВоВременномХранилище) Тогда
				УдалитьИзВременногоХранилища(АдресФайлаВоВременномХранилище);
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;
	#КонецЕсли
КонецПроцедуры

// Синхронизация писем
//
Процедура СинхронизироватьПисьма(мСтруктураСвойств, мНастройка)  Экспорт
	Если НЕ мНастройка.СинхронизироватьПисьма Тогда Возврат; КонецЕсли;	
	ЗаполнитьСоответствиеСОМОбъектыКонтактов(мСтруктураСвойств);
	СоответствиеКонтактовOutlookАдресам = Новый Соответствие();
	бИскатьПоEMail = (мНастройка.Свойство("ИскатьКонтактыПоАдресамEMail") И (мНастройка.ИскатьКонтактыПоАдресамEMail = Истина));
	СоответствияАдресовИКонтактов = Новый Соответствие();
	Состояние("Для прерывания процесса синхронизации нажмите Ctrl+Break");
	Ном				= 1;
	Счетчик			= 1;
	ОбщееКоличество	= 0;
	Для Каждого СтрокаТаблицы Из мСтруктураСвойств.Письма Цикл
		Если СтрокаТаблицы.Пометка Тогда
			ОбщееКоличество = ОбщееКоличество + 1;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаСобытия Из мСтруктураСвойств.Письма Цикл
		Если НЕ СтрокаСобытия.Пометка Тогда Продолжить; КонецЕсли;
		ОбработкаПрерыванияПользователя();
		Состояние(НСтр("ru = 'Запись писем: '") + Строка(Счетчик) + НСтр("ru = ' из '") + Строка(ОбщееКоличество));
		Счетчик = Счетчик + 1;
		// Чтобы не делать больше вызовов сервера чем нужно, создадим структуру на клиенте аналогичную объекту.
		СтруктураОбъекта = Новый Структура("Реквизиты,ТабличныеЧасти", Новый Структура,
			Новый Структура("ПолучателиПисьма, ПолучателиКопий, ПолучателиСкрытыхКопий", Новый Массив, Новый Массив, Новый Массив));
		СтрокаСОМОбъектыСобытий = мСтруктураСвойств.СоответствиеСОМОбъектыПисем[СтрокаСобытия.ID];
		ОбъектOutlook = СтрокаСОМОбъектыСобытий.ОбъектOutlook;
		Попытка
			CRM_тест = ОбъектOutlook.SenderEmailAddress;
		Исключение
			// Пропуск письма, у которого нет адреса отправителя.
			Продолжить;
		КонецПопытки;
		// Удаление объекта Outlook
		Если ЗначениеЗаполнено(СтрокаСобытия.Объект_1С) И мНастройка.УдалятьПомеченныеНаУдалениеОбъекты 
			И CRM_ОбменСMSOutlookКлиент.ПолучитьСвойствоПоСсылке(СтрокаСобытия, "Объект_1С", "ПометкаУдаления") Тогда
			Если НЕ (ОбъектOutlook = Неопределено) Тогда
				// Удаление объекта Outlook.
				ОбъектOutlook.Delete();
			КонецЕсли;
			Продолжить;
		КонецЕсли;	
		СтруктураОбъекта.Реквизиты.Вставить("УчетнаяЗапись", мНастройка.УчетнаяЗаписьПочтыДляСинхронизации);
		
		НайденныеСтроки = НайтиСтроки(мСтруктураСвойств.ТаблицаПапокOutlook,
			Новый Структура("Папка", СтрокаСобытия.ПапкаOutlook));
		ПапкаOutlook = Неопределено;
		Попытка 
			ПапкаOutlook = НайденныеСтроки[0];
		Исключение
			ВызватьИсключение "СинхронизироватьПисьма(): ПапкаOutlook = НайденныеСтроки[0];";
		КонецПопытки;
		
		ПапкаПисьмаТекущая	= ПапкаOutlook.FolderPath;
		Позиция				= Найти(ПапкаПисьмаТекущая, "\");
		Пока Позиция > 0 Цикл
			ПапкаПисьмаТекущая	= Прав(ПапкаПисьмаТекущая, СтрДлина(ПапкаПисьмаТекущая) - Позиция);
			Позиция				= Найти(ПапкаПисьмаТекущая, "\");
		КонецЦикла;
		ПапкаПисьмаВходящее	= мСтруктураСвойств.FolderInbox.FolderPath;
		Позиция				= Найти(ПапкаПисьмаВходящее, "\");
		Пока Позиция > 0 Цикл
			ПапкаПисьмаВходящее = Прав(ПапкаПисьмаВходящее, СтрДлина(ПапкаПисьмаВходящее) - Позиция);
			Позиция				= Найти(ПапкаПисьмаВходящее, "\");
		КонецЦикла;
		
		СписокПапок = Новый СписокЗначений;
		СписокПапок.Добавить(мСтруктураСвойств.MAPINameSpace.GetDefaultFolder(3).EntryID, "Удаленные");
		СписокПапок.Добавить(мСтруктураСвойств.MAPINameSpace.GetDefaultFolder(4).EntryID, "Исходящие");
		СписокПапок.Добавить(мСтруктураСвойств.MAPINameSpace.GetDefaultFolder(5).EntryID, "Отправленные");
		СписокПапок.Добавить(мСтруктураСвойств.MAPINameSpace.GetDefaultFolder(6).EntryID, "Входящие");
		СписокПапок.Добавить(мСтруктураСвойств.MAPINameSpace.GetDefaultFolder(16).EntryID, "Черновики");
		СписокПапок.Добавить(мСтруктураСвойств.MAPINameSpace.GetDefaultFolder(23).EntryID, "НежелательнаяПочта");
		
		ЗаполнитьСтруктуруПисьмаПоОбъектуOutlook(СтруктураОбъекта.Реквизиты, ОбъектOutlook, ПапкаOutlook.Folder, СписокПапок, ПапкаПисьмаТекущая = ПапкаПисьмаВходящее);
		
		Для	Каждого ПолучательПисьма Из ОбъектOutlook.Recipients Цикл
			АдресЭП = ПолучательПисьма.Address;
			КонтактПисьма = Неопределено;
			КонтактOutlook			= Неопределено;
			Попытка 
				КонтактOutlook	= НайтиКонтактOutlookПоАдресу(мСтруктураСвойств, мНастройка, АдресЭП, СоответствиеКонтактовOutlookАдресам);
			Исключение
				КонтактOutlook	= Неопределено;
			КонецПопытки;
			Если НЕ (КонтактOutlook = Неопределено) Тогда
				// Контакты должны быть в списке синхронизации.
				НайденныйЭлемент = ПолучитьКонтактПоOutlookID(мСтруктураСвойств, КонтактOutlook.EntryID);
				Если НЕ (НайденныйЭлемент = Неопределено) Тогда 
					СОМОбъектКонтактов = НайденныйЭлемент;
					СтрокиТЧКонтакты = НайтиСтроки(мСтруктураСвойств.Контакты, Новый Структура("ID",СОМОбъектКонтактов.СтрокаТЧ));
					Если СтрокиТЧКонтакты.Количество() > 0 Тогда 
						КонтактПисьма = СтрокиТЧКонтакты[0].Объект_1С;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Представление = ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата("", АдресЭП, КонтактПисьма);
			СтруктураЗаполнения = Новый Структура("Адрес, Представление, Контакт", АдресЭП, Представление, КонтактПисьма);
			Если ПолучательПисьма.Type = 1 Тогда
				СтруктураОбъекта.ТабличныеЧасти.ПолучателиПисьма.Добавить(СтруктураЗаполнения);
			ИначеЕсли ПолучательПисьма.Type = 2 Тогда
				СтруктураОбъекта.ТабличныеЧасти.ПолучателиКопий.Добавить(СтруктураЗаполнения);
			ИначеЕсли ПолучательПисьма.Type = 3 Тогда
				СтруктураОбъекта.ТабличныеЧасти.ПолучателиСкрытыхКопий.Добавить(СтруктураЗаполнения);
			КонецЕсли;
		КонецЦикла;
		
		//СписокПолучателейПисьма	= ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(CRM_УправлениеЭлектроннойПочтой.ПолучитьПредставлениеСпискаАдресатов(СтруктураОбъекта.ТабличныеЧасти.ПолучателиПисьма),"_");
		//СписокПолучателейКопий	= ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(CRM_УправлениеЭлектроннойПочтой.ПолучитьПредставлениеСпискаАдресатов(СтруктураОбъекта.ТабличныеЧасти.ПолучателиКопий),"_");
		Если ОбъектOutlook.MessageClass = "IPM.Note" Тогда
			СтруктураОбъекта.Реквизиты.Вставить("СписокПолучателейПисьма", ОбъектOutlook.To);
			СтруктураОбъекта.Реквизиты.Вставить("СписокПолучателейКопий", ОбъектOutlook.CC);
		Иначе
			СтруктураОбъекта.Реквизиты.Вставить("СписокПолучателейПисьма", "");
			СтруктураОбъекта.Реквизиты.Вставить("СписокПолучателейКопий", "");
		КонецЕсли;
		СтруктураОбъекта.Реквизиты.Вставить("Непрочитано", ОбъектOutlook.UnRead);
		
		Если ПапкаПисьмаТекущая = ПапкаПисьмаВходящее Тогда
			СтруктураОбъекта.Реквизиты.Вставить("ВходящееИсходящее", "Входящее");
			НачалоСобытия	= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,"ReceivedTime");
			Если НачалоСобытия = Дата('45010101') Тогда
				НачалоСобытия	= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,"CreationTime");
				НачалоСобытия	=  ?(НачалоСобытия = Дата('45010101'), Дата("00010101"), НачалоСобытия);
			КонецЕсли;	
			СтруктураОбъекта.Реквизиты.Вставить("Дата",				НачалоСобытия);
			СтруктураОбъекта.Реквизиты.Вставить("ОтправительАдрес", ОбъектOutlook.SenderEmailAddress);
			СтруктураОбъекта.Реквизиты.Вставить("ОтправительПредставление", ОбъектOutlook.SenderEmailAddress);
			СтруктураОбъекта.Реквизиты.Вставить("ДатаПолучения", НачалоСобытия);
		Иначе
			СтруктураОбъекта.Реквизиты.Вставить("ВходящееИсходящее", "Исходящее");
			НачалоСобытия	= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook,"SentOn");
			Если НачалоСобытия = Дата('45010101') Тогда
				НачалоСобытия	= ПолучитьРеквизитОбъектаOutlook(ОбъектOutlook, "CreationTime");
				НачалоСобытия	=  ?(НачалоСобытия = Дата('45010101'), Дата("00010101"), НачалоСобытия);
			КонецЕсли;	
			СтруктураОбъекта.Реквизиты.Вставить("Дата",				НачалоСобытия);
			СтруктураОбъекта.Реквизиты.Вставить("ОтправительПредставление", ОбъектOutlook.SenderEmailAddress);
			СтруктураОбъекта.Реквизиты.Вставить("ДатаОтправления", НачалоСобытия);
			//СписокПолучателейСкрытыхКопий	= ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(CRM_УправлениеЭлектроннойПочтой.ПолучитьПредставлениеСпискаАдресатов(СтруктураОбъекта.ТабличныеЧасти.ПолучателиСкрытыхКопий),"_");
			Если ОбъектOutlook.MessageClass = "IPM.Note" Тогда
				СтруктураОбъекта.Реквизиты.Вставить("СписокПолучателейСкрытыхКопий", ОбъектOutlook.BCC);
			Иначе
				СтруктураОбъекта.Реквизиты.Вставить("СписокПолучателейСкрытыхКопий", "");
			КонецЕсли;
		КонецЕсли;
		
		Если ОбъектOutlook.MessageClass = "IPM.Note" Тогда
			СтруктураОбъекта.Реквизиты.Вставить("ТекстHTML", ОбъектOutlook.HTMLBody);
			СтруктураОбъекта.Реквизиты.Вставить("Текст", CRM_ВзаимодействияВызовСервера.ПолучитьОбычныйТекстИзHTML(ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(ОбъектOutlook.HTMLBody)));
			Если ОбъектOutlook.BodyFormat = 0 Тогда // Unspecified format
				СтруктураОбъекта.Реквизиты.Вставить("ТипТекста", ПредопределенноеЗначение("Перечисление.ТипыТекстовЭлектронныхПисем.HTML"));
			ИначеЕсли ОбъектOutlook.BodyFormat = 1 Тогда //  Plain format
				СтруктураОбъекта.Реквизиты.Вставить("ТипТекста", ПредопределенноеЗначение("Перечисление.ТипыТекстовЭлектронныхПисем.ПростойТекст"));
			ИначеЕсли ОбъектOutlook.BodyFormat = 2 Тогда // HTML format
				СтруктураОбъекта.Реквизиты.Вставить("ТипТекста", ПредопределенноеЗначение("Перечисление.ТипыТекстовЭлектронныхПисем.HTML"));
			ИначеЕсли ОбъектOutlook.BodyFormat = 3 Тогда // Rich text format (RTF)
				СтруктураОбъекта.Реквизиты.Вставить("ТипТекста", ПредопределенноеЗначение("Перечисление.ТипыТекстовЭлектронныхПисем.РазмеченныйТекст"));
			КонецЕсли;
		Иначе
			СтруктураОбъекта.Реквизиты.Вставить("ТекстHTML", ОбъектOutlook.Body);
			СтруктураОбъекта.Реквизиты.Вставить("Текст", CRM_ВзаимодействияВызовСервера.ПолучитьОбычныйТекстИзHTML(ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыXML(ОбъектOutlook.Body)));
			СтруктураОбъекта.Реквизиты.Вставить("ТипТекста", ПредопределенноеЗначение("Перечисление.ТипыТекстовЭлектронныхПисем.HTML"));
		КонецЕсли;
		
		Ном = Ном + 1;
		ЗаполнитьСтруктуруСобытияДляПисьмаПоНастройке(СтруктураОбъекта.Реквизиты, мНастройка, ОбъектOutlook);
		Попытка
			Объект_1С = CRM_ОбменСMSOutlookСервер.ЗаполнитьПисьмоПоСтруктуре(СтрокаСобытия.Объект_1С, СтруктураОбъекта, Ложь, СтрокаСобытия);
		Исключение
			СтрОписаниеОшибки				= ОписаниеОшибки();
			ПользовательскоеСообщение		= Новый СообщениеПользователю;
			ПользовательскоеСообщение.Текст	= "Синхронизация письма. Ошибка при заполнении СтруктурыОбъекта";
			ПользовательскоеСообщение.Сообщить();
		КонецПопытки;
		ОбъектЗаписан = ?(ЗначениеЗаполнено(Объект_1С), Истина, Ложь);
		Если ОбъектЗаписан И мНастройка.ЗагружатьВложенияПисьмо Тогда
			// Перенос вложений
			ДобавитьВложенияЭлектронногоПисьма(Объект_1С, ОбъектOutlook);
		КонецЕсли;
         // Сохраним связь с объектом Outlook.
		СтруктураЗаполнения = Новый Структура("ПрограммаOutlook,СобственнаяСсылка,СсылкаВOutlook",
			мНастройка.ПрограммаOutlook, Объект_1С,ОбъектOutlook.EntryID);
		CRM_ОбменСMSOutlookСервер.СохранитьСвязьСОбъектомOutlook(СтруктураЗаполнения);
		СтрокаСобытия.Пометка = Ложь;
	КонецЦикла;
	// Сохраняем дату синхронизации.
	мСтруктураСвойств.ДатаПоследнейСинхронизацииПисем =  ТекущаяДата();
КонецПроцедуры
