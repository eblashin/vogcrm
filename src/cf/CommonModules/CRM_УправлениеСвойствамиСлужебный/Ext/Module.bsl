////////////////////////////////////////////////////////////////////////////////
// Подсистема "Свойства"
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// См. одноименную процедуру в общем модуле УправлениеСвойствами.
Процедура ПеренестиЗначенияИзРеквизитовФормыВОбъект(Форма, Объект = Неопределено, ПередЗаписью = Ложь) Экспорт
	
	Приемник = Новый Структура;
	Приемник.Вставить("ПараметрыСвойств", Неопределено);
	ЗаполнитьЗначенияСвойств(Приемник, Форма);
	
	Если НЕ Форма.Свойства_ИспользоватьСвойства
		ИЛИ НЕ Форма.Свойства_ИспользоватьДопРеквизиты
		ИЛИ (ТипЗнч(Приемник.ПараметрыСвойств) = Тип("Структура")
			И Приемник.ПараметрыСвойств.Свойство("ВыполненаОтложеннаяИнициализация")
			И Не Приемник.ПараметрыСвойств.ВыполненаОтложеннаяИнициализация) Тогда
		
		Возврат;
	КонецЕсли;
	
	Если Объект = Неопределено Тогда
		ОписаниеОбъекта = Форма.Объект;
	Иначе
		ОписаниеОбъекта = Объект;
	КонецЕсли;
// +CRM
	Если ТипЗнч(ОписаниеОбъекта) = Тип("ЗадачаОбъект.ЗадачаИсполнителя")
	ИЛИ ТипЗнч(ОписаниеОбъекта) = Тип("БизнесПроцессОбъект.CRM_БизнесПроцесс") Тогда
		
		Если ТипЗнч(ОписаниеОбъекта) = Тип("ЗадачаОбъект.ЗадачаИсполнителя") Тогда
			БизнесПроцесс = ОписаниеОбъекта.БизнесПроцесс;
		Иначе
			БизнесПроцесс = ОписаниеОбъекта.Ссылка;
		КонецЕсли;
		
		НаборДополнительныхРеквизитов = РегистрыСведений.bpmДополнительныеРеквизиты.СоздатьНаборЗаписей();
		НаборДополнительныхРеквизитов.Отбор.БизнесПроцесс.Установить(БизнесПроцесс);
		НаборДополнительныхРеквизитов.Прочитать();
		
		СтарыеЗначения = НаборДополнительныхРеквизитов.Выгрузить();
		НаборДополнительныхРеквизитов.Очистить();
		
		Для каждого Строка Из Форма.Свойства_ОписаниеДополнительныхРеквизитов Цикл
			
			Значение = Форма[Строка.ИмяРеквизитаЗначение];
			
			Если ЗначениеЗаполнено(Значение) Тогда
				Если ТипЗнч(Значение) = Тип("Булево") И Значение = Ложь Тогда
					Продолжить;
				КонецЕсли;
				
				Если Строка.Удалено Тогда
					ЗаполнитьЗначенияСвойств(
						НаборДополнительныхРеквизитов.Добавить(),
						СтарыеЗначения.Найти(Строка.Свойство, "Свойство"));
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = НаборДополнительныхРеквизитов.Добавить();
				НоваяСтрока.БизнесПроцесс	= БизнесПроцесс;
				НоваяСтрока.Свойство		= Строка.Свойство;
				НоваяСтрока.Значение		= Значение;
				
				// Поддержка строк неограниченной длины.
				Свойство = Строка.Свойство.ПолучитьОбъект();
				
				ИспользоватьНеограниченнуюСтроку = УправлениеСвойствамиСлужебный.ИспользоватьНеограниченнуюСтроку(
					Свойство.ТипЗначения, Свойство.МногострочноеПолеВвода);
				
				Если ИспользоватьНеограниченнуюСтроку Тогда
					НоваяСтрока.ТекстоваяСтрока = Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		НаборДополнительныхРеквизитов.Записать();
	Иначе
// -CRM
	СтарыеЗначения = ОписаниеОбъекта.ДополнительныеРеквизиты.Выгрузить();
	ОписаниеОбъекта.ДополнительныеРеквизиты.Очистить();
	
	Для каждого Строка Из Форма.Свойства_ОписаниеДополнительныхРеквизитов Цикл
		
		Значение = Форма[Строка.ИмяРеквизитаЗначение];
		
		Если Значение = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ТипЗначения.Типы().Количество() = 1
		   И (НЕ ЗначениеЗаполнено(Значение) Или Значение = Ложь) Тогда
			
			Продолжить;
		КонецЕсли;
		
		Если Не РеквизитВиденИДоступен(Форма, Строка.ИмяРеквизитаЗначение, ОписаниеОбъекта) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.Удалено Тогда
			Если ЗначениеЗаполнено(Значение) И Не (ПередЗаписью И Форма.Свойства_СкрытьУдаленные) Тогда
				НайденнаяСтрока = СтарыеЗначения.Найти(Строка.Свойство, "Свойство");
				Если НайденнаяСтрока <> Неопределено Тогда
					ЗаполнитьЗначенияСвойств(ОписаниеОбъекта.ДополнительныеРеквизиты.Добавить(), НайденнаяСтрока);
				КонецЕсли;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ОписаниеОбъекта.ДополнительныеРеквизиты.Добавить();
		НоваяСтрока.Свойство = Строка.Свойство;
		НоваяСтрока.Значение = Значение;
		
		// Поддержка строк неограниченной длины.
		ИспользоватьНеограниченнуюСтроку = УправлениеСвойствамиСлужебный.ИспользоватьНеограниченнуюСтроку(
			Строка.ТипЗначения, Строка.МногострочноеПолеВвода);
		
		Если ИспользоватьНеограниченнуюСтроку Тогда
			НоваяСтрока.ТекстоваяСтрока = Значение;
		КонецЕсли;
	КонецЦикла;
// +CRM
	КонецЕсли;
// -CRM
	
	Если ПередЗаписью Тогда
		Форма.Свойства_СкрытьУдаленные = Ложь;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции.

// Проверяет видимость и доступность дополнительного реквизита.
//
Функция РеквизитВиденИДоступен(Форма, ИмяРеквизита, ОписаниеОбъекта)
	
	Доступен = Истина;
	Виден    = Истина;
	Если Форма.Свойства_ОписаниеЗависимыхДополнительныхРеквизитов.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ИмяРеквизитаЗначение", ИмяРеквизита);
	РезультатПоиска = Форма.Свойства_ОписаниеЗависимыхДополнительныхРеквизитов.НайтиСтроки(ПараметрыОтбора);
	Если РезультатПоиска.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	ОписаниеЗависимогоРеквизита = РезультатПоиска[0];
	
	Если ОписаниеЗависимогоРеквизита.УсловиеДоступности <> Неопределено
		И ОписаниеЗависимогоРеквизита.Доступен Тогда
		ЗначенияПараметров = ОписаниеЗависимогоРеквизита.УсловиеДоступности.ЗначенияПараметров;
		Доступен = Вычислить(ОписаниеЗависимогоРеквизита.УсловиеДоступности.КодУсловия);
	КонецЕсли;
	Если ОписаниеЗависимогоРеквизита.УсловиеВидимости <> Неопределено
		И ОписаниеЗависимогоРеквизита.Виден Тогда
		ЗначенияПараметров = ОписаниеЗависимогоРеквизита.УсловиеВидимости.ЗначенияПараметров;
		Виден = Вычислить(ОписаниеЗависимогоРеквизита.УсловиеВидимости.КодУсловия);
	КонецЕсли;
	
	Возврат Доступен И Виден;
	
КонецФункции

#КонецОбласти
