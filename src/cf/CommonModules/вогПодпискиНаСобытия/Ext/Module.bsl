
Процедура вогСтатусОбъектовПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда Возврат; КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	вогСтатусыСогласованияОбъектов.Объект КАК Объект
	|ИЗ
	|	РегистрСведений.вогСтатусыСогласованияОбъектов КАК вогСтатусыСогласованияОбъектов
	|ГДЕ
	|	вогСтатусыСогласованияОбъектов.Объект = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка",Источник.Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		МенеджерЗаписи 						= РегистрыСведений.вогСтатусыСогласованияОбъектов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период 				= ТекущаяДата();
		МенеджерЗаписи.Объект 				= Источник.Ссылка;
		
		//Если ТипЗнч(МенеджерЗаписи.Объект) 	= Тип("СправочникСсылка.Партнеры") Тогда
		//	МенеджерЗаписи.Статус 			= Перечисления.вогСтатусыСогласования.Создан;
		//Иначе 
			МенеджерЗаписи.Статус 			= Перечисления.вогСтатусыСогласования.Зарегистрирован;
		//КонецЕсли;
		
		ДополнительныеПараметры 			= Неопределено;
		
		Если Источник.ДополнительныеСвойства.Свойство("СогласованиеДубля",ДополнительныеПараметры) Тогда
			МенеджерЗаписи.Автор 				= ДополнительныеПараметры.Автор;
			МенеджерЗаписи.РегистраторСтатуса 	= ДополнительныеПараметры.РегистраторСтатуса;
		Иначе
			МенеджерЗаписи.Автор 				= Пользователи.ТекущийПользователь();
			МенеджерЗаписи.РегистраторСтатуса 	= Источник.Ссылка;
		КонецЕсли;
		
		МенеджерЗаписи.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура вогМенеджерОбъектовПриЗаписи(Источник, Отказ) Экспорт
	
	//Возврат;
	
	Если Источник.ОбменДанными.Загрузка 
		Или Источник.ПометкаУдаления // VOG Солодов В.В. 23.04.2019 // Добавил условие
		Или Источник.ДополнительныеСвойства.Свойство("СтруктураОтветственных") Тогда // VOG Солодов В.В. 24.06.2019 task 418
		
		Возврат; 
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	вогМенеджерыОбъектов.Владелец КАК Владелец
	|ИЗ
	|	РегистрСведений.вогМенеджерыОбъектов КАК вогМенеджерыОбъектов
	|ГДЕ
	|	вогМенеджерыОбъектов.Владелец = &Владелец");
	
	Запрос.УстановитьПараметр("Владелец",Источник.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		
		Если Источник.ДополнительныеСвойства.Свойство("Менеджер") И ЗначениеЗаполнено(Источник.ДополнительныеСвойства.Менеджер) Тогда
			Менеджер = Источник.ДополнительныеСвойства.Менеджер;
		Иначе 
			// +++ VOG Кулаков П.Л. 02.07.2020 CRM-746
			Если РольДоступна("ПолныеПрава") Тогда
				Возврат;
			КонецЕсли;
			// --- VOG Кулаков П.Л.
			Менеджер = Пользователи.АвторизованныйПользователь();
		КонецЕсли;
		
		Запись 							= РегистрыСведений.вогМенеджерыОбъектов.СоздатьМенеджерЗаписи();
		Запись.ДатаНачала				= ТекущаяДата();
		Запись.Владелец	  				= Источник.Ссылка;
		Запись.Менеджер					= Менеджер;
		ТекущиеПодразделение			= Менеджер.Подразделение;
		Запись.Подразделение			= Справочники.СтруктураПредприятия.ПолучитьОбособленноеПодразделение(ТекущиеПодразделение);
		Запись.Роль						= Менеджер.CRM_ДолжностнаяПозиция.Роль;
		Запись.НаправлениеДеятельности 	= Менеджер.CRM_НаправлениеДеятельности;
		Запись.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура вогАнкетаПриЗаписиПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда 
		Возврат; 
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Источник.Респондент) ИЛИ НЕ ЗначениеЗаполнено(Источник.ВариантОпроса) Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийСтатус = вогУправлениеОпросамиСервер.ПолучитьСтатусОпроса(Источник.Респондент, Источник.ВариантОпроса);
	
	Если ТекущийСтатус = Неопределено ИЛИ ТекущийСтатус.Анкета = Источник.Ссылка Тогда     
		УстановитьПривилегированныйРежим(Истина);
		МенеджерЗаписи = РегистрыСведений.вогСтатусыОпросов.СоздатьМенеджерЗаписи();
		
		МенеджерЗаписи.Респондент		= Источник.Респондент;
		МенеджерЗаписи.ВариантОпроса	= Источник.ВариантОпроса;
		
		МенеджерЗаписи.Прочитать();
		
		Если Источник.Статус.Блокирующий Тогда
			
			МенеджерЗаписи.Статус 			= Источник.Статус;
			МенеджерЗаписи.Анкета			= Источник.Ссылка;
			
			Если Не МенеджерЗаписи.Выбран() Тогда
				МенеджерЗаписи.Респондент		= Источник.Респондент;
				МенеджерЗаписи.ВариантОпроса	= Источник.ВариантОпроса;
			КонецЕсли; 	
			
			МенеджерЗаписи.Записать();
		Иначе 
			Если МенеджерЗаписи.Выбран() Тогда
				МенеджерЗаписи.Удалить();
			КонецЕсли; 
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

Процедура вогАнкетаПриПроведенииОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда 
		Возврат; 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Источник.Респондент) 
		И Источник.ВариантОпроса.РегистрироватьРеспондентаКОбмену
		И (Источник.ДополнительныеСвойства.Свойство("ЗаписатьКлассификаторы") 
			ИЛИ Источник.ДополнительныеСвойства.Свойство("Проводить") 
			И Источник.ДополнительныеСвойства.Проводить = Истина) Тогда
		
		ОписаниеСтатуса = вогОбщегоНазначения.ПолучитьОписаниеСтатусаСогласованияОбъекта(Источник.Респондент);
		
		Если ОписаниеСтатуса.Статус = Перечисления.вогСтатусыСогласования.Согласован Тогда
			вогИнтеграцияСУчетнойСистемой.ЗарегистрироватьДанныеКОтправкеВУчетнуюСистему(Источник.Респондент, Ложь, Ложь, Ложь);
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

//Кайдашов CRM-539

Процедура вогПриЗаписиНоменклатурыПриЗаписи(Источник, Отказ) Экспорт
	
	Если ЗначениеЗаполнено(Источник.НоменклатурнаяПозиция) тогда
		Запрос = Новый Запрос;	
		Запрос.Текст = "ВЫБРАТЬ
		               |	Номенклатура.НоменклатурнаяПозиция КАК НоменклатурнаяПозиция,
		               |	МИНИМУМ(Номенклатура.ДатаЗапуска) КАК ДатаЗапуска
		               |ИЗ
		               |	Справочник.Номенклатура КАК Номенклатура
		               |ГДЕ
		               |	Номенклатура.НоменклатурнаяПозиция = &НоменклатурнаяПозиция
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	Номенклатура.НоменклатурнаяПозиция";
		Запрос.УстановитьПараметр("НоменклатурнаяПозиция",Источник.НоменклатурнаяПозиция);
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			НоменклатурнаяПозицияОбъект = Выборка.НоменклатурнаяПозиция.ПолучитьОбъект();
			НоменклатурнаяПозицияОбъект.ДатаЗапуска = Выборка.ДатаЗапуска;
			НоменклатурнаяПозицияОбъект.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	// ++ VOG Солодов В.В. 14.10.2020 CRM-956
	НаборЗаписей = РегистрыСведений.КоллекцииНоменклатуры.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Источник.Ссылка);
	НаборЗаписей.Прочитать();
	
	Если НаборЗаписей.Количество() > 0 Тогда
		Запись = НаборЗаписей[0];
	Иначе
		
		Если Источник.Коллекции.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Запись = НаборЗаписей.Добавить();
		Запись.Номенклатура = Источник.Ссылка;
		
	КонецЕсли;
	
	// ++ VOG Солодов В.В. 15.12.2020 CRM-1130
	МассивКоллекций = Новый Массив;
	
	Для Каждого СтрокаТабличнойЧасти Из Источник.Коллекции Цикл
		МассивКоллекций.Добавить(СтрШаблон("%1", СтрокаТабличнойЧасти.КоллекцияПроизводителя));
	КонецЦикла;
	
	ПредставлениеКоллекций = СтрСоединить(МассивКоллекций, "; ");
	// До изменения
	//ТекущиеКоллекции = СтрРазделить(Запись.КоллекцияПроизводителя, "; ", Ложь);
	//МассивКоллекций = Источник.Коллекции.Выгрузить().ВыгрузитьКолонку("Коллекция");
	//ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ТекущиеКоллекции, МассивКоллекций, Истина);
	//ПредставлениеКоллекций = СтрСоединить(ТекущиеКоллекции, "; ");
	// -- VOG Солодов В.В. 15.12.2020 CRM-1130
	Запись.КоллекцияПроизводителя = ПредставлениеКоллекций;
	
	НаборЗаписей.Записать();
	// -- VOG Солодов В.В. 14.10.2020 CRM-956
	
КонецПроцедуры

Процедура вогПриЗаписиBSUПриЗаписи(Источник, Отказ) Экспорт
	
	// ++ VOG Солодов В.В. 12.02.2021 DEV-161
	Если Источник.ДатаЗапуска >= ДобавитьМесяц(НачалоДня(ТекущаяДата()), -6) Тогда
		
		ОтборРегистра = Новый Структура;
		ОтборРегистра.Вставить("НоменклатурнаяПозиция", Источник.Ссылка);
		
		ДанныеВРегистре = РегистрыСведений.СтатусыНоменклатурныхПозицийОбоев.СрезПоследних(, ОтборРегистра);
		
		Если ДанныеВРегистре.Количество() = 0 тогда
			ТекущийСтатус = Неопределено;
		Иначе
			ТекущийСтатус = ДанныеВРегистре[0];
		КонецЕсли;
		
		Если ТекущийСтатус = Неопределено
			Или Не ТекущийСтатус.СтадияЖизненногоЦикла = Перечисления.СтадииЖизненногоЦиклаОбои.Новинка Тогда
			
			МенеджерЗаписи = РегистрыСведений.СтатусыНоменклатурныхПозицийОбоев.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период = ТекущаяДата();
			МенеджерЗаписи.НоменклатурнаяПозиция = Источник.Ссылка;
			МенеджерЗаписи.СтадияЖизненногоЦикла = Перечисления.СтадииЖизненногоЦиклаОбои.Новинка;
			
			Если Не ТекущийСтатус = Неопределено Тогда
				ЗаполнитьЗначенияСвойств(
					МенеджерЗаписи,
					ТекущийСтатус,
					"СтатусПредставленностиВСетях, СтатусПродажПоХолдингу, СтатусПродажПоБренду, СтатусНеликвида");
			КонецЕсли;
			МенеджерЗаписи.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	// До изменения
	//ОтборРегистра = Новый Структура;
	//ОтборРегистра.Вставить("НоменклатурнаяПозиция",Источник);
	//ДанныеВРегистре = РегистрыСведений.СтатусыНоменклатурныхПозицийОбоев.СрезПоследних(,ОтборРегистра);
	//Если ДанныеВРегистре.Количество() = 0 тогда
	//	ТекущийСтатус = Неопределено;
	//Иначе
	//	ТекущийСтатус = ДанныеВРегистре[0].СтадияЖизненногоЦикла;
	//КонецЕсли;
	//// ++ VOG Солодов В.В. 05.02.2021 DEV-146
	//Если Источник.ДатаЗапуска >= ДобавитьМесяц(НачалоДня(ТекущаяДата()), -6) И ТекущийСтатус = Неопределено Тогда
	//// До изменения
	////Если Источник.ДатаЗапуска>=ДобавитьМесяц(НачалоДня(ТекущаяДата()),-3) и ТекущийСтатус = Неопределено тогда
	//// -- VOG Солодов В.В. 05.02.2021 DEV-146
	//	МенеджерЗаписи = РегистрыСведений.СтатусыНоменклатурныхПозицийОбоев.СоздатьМенеджерЗаписи();
	//	МенеджерЗаписи.Период = ТекущаяДата();
	//	МенеджерЗаписи.НоменклатурнаяПозиция = Источник.Ссылка;
	//	МенеджерЗаписи.СтадияЖизненногоЦикла = Перечисления.СтадииЖизненногоЦиклаОбои.Новинка;
	//	МенеджерЗаписи.Записать();
	//КонецЕсли;
	// -- VOG Солодов В.В. 12.02.2021 DEV-161
	
КонецПроцедуры

Процедура ПриЗаписиКоллекцииДляСайтаПриЗаписи(Источник, Отказ) Экспорт
	
	МассивПозиций = Новый Массив;
	
	Для каждого СтрокаСостав из Источник.Состав цикл
		МассивПозиций.Добавить(СтрокаСостав.Номенклатура);
	КонецЦикла;

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КоллекцииДляСайтаСостав.Ссылка КАК Коллекция,
		|	КоллекцииДляСайтаСостав.Номенклатура КАК Номенклатура
		|ИЗ
		|	Справочник.КоллекцииДляСайта.Состав КАК КоллекцииДляСайтаСостав
		|ГДЕ
		|	КоллекцииДляСайтаСостав.Номенклатура В(&СписокПозиций)
		|	И КоллекцииДляСайтаСостав.Ссылка.Активность = ИСТИНА
		|	И КоллекцииДляСайтаСостав.Ссылка.ПометкаУдаления = ЛОЖЬ
		|ИТОГИ ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("СписокПозиций", МассивПозиций);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСсылка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаСсылка.Следующий() Цикл
	
		ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();
		ПредставлениеКоллекции = "";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ПредставлениеКоллекции = ПредставлениеКоллекции + СокрЛП(ВыборкаДетальныеЗаписи.Коллекция) + " ;";			
		КонецЦикла;
		Если Прав(ПредставлениеКоллекции,1) = ";" тогда
			ПредставлениеКоллекции = Лев(ПредставлениеКоллекции,СтрДлина(ПредставлениеКоллекции)-1);
		КонецЕсли;		
		МенеджерЗаписи = РегистрыСведений.КоллекцииНоменклатуры.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Номенклатура = ВыборкаСсылка.Номенклатура;
		МенеджерЗаписи.Коллекции = ПредставлениеКоллекции;
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
КонецПроцедуры

// ++ VOG Солодов В.В. 10.08.2021 DEV-773
Процедура ПередЗаписьюКонтрагента(Источник, Отказ) Экспорт
	
	НеПроверятьНаименование = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		Источник.ДополнительныеСвойства,
		"НеПроверятьНаименование",
		Ложь);
	
	Если НеПроверятьНаименование = Истина Тогда
		Возврат;
	КонецЕсли;
	
	ИсходноеНаименование 	= Источник.Наименование;
	Источник.Наименование 	= СтрЗаменить(ИсходноеНаименование, Символы.Таб, " ");
	
КонецПроцедуры // -- VOG Солодов В.В. 10.08.2021 DEV-773


