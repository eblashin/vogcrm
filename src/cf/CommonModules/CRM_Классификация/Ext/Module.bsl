////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ РЕГЛАМЕНТЫХ ЗАДАНИЙ

// Процедура заполняет регистр сведений "ABCXYZКлассификацияКлиентов" результатами ABC классификации партнеров.
//
// Параметры:
//	Нет.
//
Процедура ВыполнитьABCКлассификациюПартнеров() Экспорт
	Справочники.Партнеры.ВыполнитьABCКлассификацию();
КонецПроцедуры // ВыполнитьABCКлассификациюПартнеров()

// Процедура заполняет регистр сведений "ABCXYZКлассификацияКлиентов" результатами XYZ классификации партнеров.
//
// Параметры:
//	Нет.
//
Процедура ВыполнитьXYZКлассификациюПартнеров() Экспорт
	Справочники.Партнеры.ВыполнитьXYZКлассификацию();
КонецПроцедуры // ВыполнитьXYZКлассификациюПартнеров()

#Область СлужебныеПроцедурыИФункции

// Процедура выполняет классификацию объектов с использованием ABC-анализа.
// Исходными данными для анализа является таблица значений,
// содержащая значения параметра классификации для анализируемых объектов.
// Результат анализа помещается в добавляемую колонку "ABCКласс".
//
// Параметры:
//  ИсточникДанных				- ТаблицаЗначений	- Таблица значений с колонкой "ЗначениеПараметраКлассификации",
//                   								содержащей значения параметра, по которому производится
// 				                  					классификация, для текущего объекта.
//  ИмяПараметраКлассификации	- Строка			- Имя колонки в источнике данных, содержащей значение
//			                             			параметра классификации.
//
Процедура ВыполнитьABCКлассификацию(ИсточникДанных, ИмяПараметраКлассификации) Экспорт
	// Источник данных пуст, классификация не требуется.
	Если ИсточникДанных.Количество() = 0 Тогда Возврат; КонецЕсли;
	// Классификация без разделения.
	Если ИсточникДанных.Колонки.Найти("РазделительКлассификации") = Неопределено Тогда
		ИсточникДанных.Колонки.Добавить("РазделительКлассификации");
		ИсточникДанных.ЗаполнитьЗначения(0, "РазделительКлассификации");
	КонецЕсли;
	// Источник данных упорядочивается по возрастанию разделителя и убыванию параметра классификации.
	ИсточникДанных.Сортировать("РазделительКлассификации Возр, " + ИмяПараметраКлассификации + " Убыв");
	// В колонку "Класс" будет помещен результат классификации.
	Если ИсточникДанных.Колонки.Найти("Класс") = Неопределено Тогда
		ИсточникДанных.Колонки.Добавить("Класс");
	КонецЕсли;
	ИсточникДанных.ЗаполнитьЗначения(Перечисления.ABCКлассификация.CКласс, "Класс");
	// К колонку "ЗначениеПараметраКлассификации" будет помещено значение, по которому выполнена классификация.
	Если ИсточникДанных.Колонки.Найти("ЗначениеПараметраКлассификации") = Неопределено Тогда
		ИсточникДанных.Колонки.Добавить("ЗначениеПараметраКлассификации");
	КонецЕсли;
	ИсточникДанных.ЗаполнитьЗначения(0, "ЗначениеПараметраКлассификации");
	ТекущийРазделительКлассификации = 0;
	ЗначениеПараметраКлассификацииИтог = 0;
	ДоляНарастающимИтогом = Новый Массив;
	ТекущаяДоляНарастающимИтогом = 0;
	ИндексСтрокиИсточникаДанных = 0;
	СмещениеСтрокиИсточникаДанных = 0;
	Пока ИндексСтрокиИсточникаДанных < ИсточникДанных.Количество() Цикл
		// Общий итог по разделителю.
		ЗначениеПараметраКлассификацииИтог = ЗначениеПараметраКлассификацииИтог + ИсточникДанных[ИндексСтрокиИсточникаДанных][ИмяПараметраКлассификации];
		ДоляНарастающимИтогом.Добавить(ИсточникДанных[ИндексСтрокиИсточникаДанных][ИмяПараметраКлассификации]);
		ИсточникДанных[ИндексСтрокиИсточникаДанных].ЗначениеПараметраКлассификации = ИсточникДанных[ИндексСтрокиИсточникаДанных][ИмяПараметраКлассификации];
		// Последняя строка или данные по текущему разделителю классификации закончились.
		Если ИндексСтрокиИсточникаДанных = ИсточникДанных.Количество() - 1 ИЛИ ИсточникДанных[ИндексСтрокиИсточникаДанных].РазделительКлассификации <> ИсточникДанных[ИндексСтрокиИсточникаДанных + 1].РазделительКлассификации Тогда
			ДоляНарастающимИтогомСумма = 0;
			Для Индекс = 0 По ДоляНарастающимИтогом.ВГраница() Цикл
				Если ЗначениеПараметраКлассификацииИтог <> 0 Тогда
					ТекущаяДоляНарастающимИтогом = ТекущаяДоляНарастающимИтогом + ДоляНарастающимИтогом[Индекс] * 100 / ЗначениеПараметраКлассификацииИтог;
				КонецЕсли;
				ДоляНарастающимИтогом[Индекс] = ТекущаяДоляНарастающимИтогом;
				ДоляНарастающимИтогомСумма = ДоляНарастающимИтогомСумма + ТекущаяДоляНарастающимИтогом;
			КонецЦикла;
			СреднееЗначение = ДоляНарастающимИтогомСумма / (ДоляНарастающимИтогом.Количество() + 1);
			ТекущийКласс = Перечисления.ABCКлассификация.AКласс;
			Для Индекс = 0 По ДоляНарастающимИтогом.ВГраница() - 1 Цикл
				Если ДоляНарастающимИтогом[Индекс] > СреднееЗначение Тогда
					Если ТекущийКласс = Перечисления.ABCКлассификация.AКласс Тогда
						ТекущийКласс = Перечисления.ABCКлассификация.BКласс;
					Иначе
						Прервать;
					КонецЕсли;
					СреднееЗначение = ДоляНарастающимИтогомСумма / (ДоляНарастающимИтогом.Количество() - Индекс);
				КонецЕсли;
				ДоляНарастающимИтогомСумма = ДоляНарастающимИтогомСумма - ДоляНарастающимИтогом[Индекс];
				ИсточникДанных[СмещениеСтрокиИсточникаДанных + Индекс].Класс = ТекущийКласс;
			КонецЦикла;
			ТекущийРазделительКлассификации = ТекущийРазделительКлассификации + 1;
			ЗначениеПараметраКлассификацииИтог = 0;
			ДоляНарастающимИтогом = Новый Массив;
			ТекущаяДоляНарастающимИтогом = 0;
			СмещениеСтрокиИсточникаДанных = ИндексСтрокиИсточникаДанных + 1;
		КонецЕсли;
		ИндексСтрокиИсточникаДанных = ИндексСтрокиИсточникаДанных + 1;
	КонецЦикла;
КонецПроцедуры // ВыполнитьABCКлассификацию()

// Функция выполняет классификацию объектов с использованием XYZ-анализа.
// Исходными данными для анализа является результат запроса,
// содержащий итоговые значения параметра классификации по анализируемым
// объектам и периодам.
// Результат анализа помещается в добавляемую колонку "XYZКласс".
//
// Параметры:
//  ИсточникДанных				- ТаблицаЗначений	- Результат запроса, содержащий ключевые поля объекта классификации,
//													периода и поле "ЗначениеПараметраКлассификации", содержащей
//													значения параметра, по которому производится
//													классификация, для текущего объекта.
//  ИмяПараметраКлассификации	- Строка			- Имя колонки в источнике данных, содержащей значение
//													параметра классификации.
//  КлючиОбъектаКлассификации	- Строка			- Строка, содержащая список имен полей, разделенный запятыми,
//													идентифицирующих объект классификации. 
//
// Возвращаемое значение: 
//  ТаблицаЗначений	- Таблица значений, содержащая результат классификации.
//
Функция ВыполнитьXYZКлассификацию(ИсточникДанных, ИмяПараметраКлассификации, Знач КлючиОбъектаКлассификации) Экспорт
	Результат = Новый ТаблицаЗначений;
	Для Каждого Колонка Из ИсточникДанных.ИсточникДанных.Колонки Цикл
		Результат.Колонки.Добавить(Колонка.Имя, Колонка.ТипЗначения);
	КонецЦикла;
	Результат.Колонки.Добавить("Класс");
	Результат.Колонки.Добавить("ЗначениеПараметраКлассификации");
	Если ИсточникДанных.ИсточникДанных.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	ОбъектыКлассификацииВыборка = Новый Массив(СтрЧислоСтрок(СтрЗаменить(КлючиОбъектаКлассификации, ",", Символы.ПС)));
	ИндексОбъектаКлассификации = 0;
	ОбъектыКлассификацииВыборка[ИндексОбъектаКлассификации] = ИсточникДанных.ИсточникДанных.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Истина Цикл
		Если ОбъектыКлассификацииВыборка[ИндексОбъектаКлассификации] = Неопределено Тогда
			// Формирование новой выборки.
			ОбъектыКлассификацииВыборка[ИндексОбъектаКлассификации] = ОбъектыКлассификацииВыборка[ИндексОбъектаКлассификации - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		КонецЕсли;
		Если ОбъектыКлассификацииВыборка[ИндексОбъектаКлассификации].Следующий() Тогда
			Если ИндексОбъектаКлассификации = ОбъектыКлассификацииВыборка.ВГраница() Тогда // Последний уровень.
				НоваяСтрока = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ОбъектыКлассификацииВыборка[ИндексОбъектаКлассификации]);
				ВыборкаПериод = ОбъектыКлассификацииВыборка[ИндексОбъектаКлассификации].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Период", "Все");
				КоличествоПериодов = ВыборкаПериод.Количество();
				СреднееЗначение = ОбъектыКлассификацииВыборка[ИндексОбъектаКлассификации][ИмяПараметраКлассификации] / КоличествоПериодов;
				ЗначениеПараметраКлассификации = 0;
				Пока ВыборкаПериод.Следующий() Цикл
					ЗначениеПараметраКлассификации = ЗначениеПараметраКлассификации + Pow((?(ВыборкаПериод[ИмяПараметраКлассификации] = Null, 0, ВыборкаПериод[ИмяПараметраКлассификации]) - СреднееЗначение), 2);
				КонецЦикла;
				НоваяСтрока[ИмяПараметраКлассификации] = ?(СреднееЗначение <> 0, Sqrt(ЗначениеПараметраКлассификации / КоличествоПериодов) * 100 / СреднееЗначение, 0);
				НоваяСтрока.ЗначениеПараметраКлассификации = НоваяСтрока[ИмяПараметраКлассификации];
			Иначе
				// Перейти на следующий уровень.
				ИндексОбъектаКлассификации = ИндексОбъектаКлассификации + 1;
			КонецЕсли;
		Иначе
			// На верхнем уровне записи закончились.
			// Обработка завершена.
			Если ИндексОбъектаКлассификации = 0 Тогда
				Прервать;
			// На текущем уровне записи закончились.
			// Необходимо перейти к следующей записи на предыдущем уровне.
			Иначе
				ОбъектыКлассификацииВыборка[ИндексОбъектаКлассификации] = Неопределено;
				ИндексОбъектаКлассификации = ИндексОбъектаКлассификации - 1;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Результат.ЗаполнитьЗначения(Перечисления.XYZКлассификация.XКласс, "Класс");
	Результат.Сортировать("РазделительКлассификации Возр, " + ИмяПараметраКлассификации + " Убыв");
	ТекущийРазделительКлассификации = 0;
	ЗначениеПараметраКлассификацииИтог = 0;
	ДоляНарастающимИтогом = Новый Массив;
	ТекущаяДоляНарастающимИтогом = 0;
	ИндексСтрокиРезультата = 0;
	СмещениеСтрокиРезультата = 0;
	Пока ИндексСтрокиРезультата < Результат.Количество() Цикл
		// Общий итог по разделителю.
		ЗначениеПараметраКлассификацииИтог = ЗначениеПараметраКлассификацииИтог + Результат[ИндексСтрокиРезультата][ИмяПараметраКлассификации];
		ДоляНарастающимИтогом.Добавить(Результат[ИндексСтрокиРезультата][ИмяПараметраКлассификации]);
		Результат[ИндексСтрокиРезультата].ЗначениеПараметраКлассификации = Результат[ИндексСтрокиРезультата][ИмяПараметраКлассификации];
		// Последняя строка или данные по текущему разделителю классификации закончились.
		Если ИндексСтрокиРезультата = Результат.Количество() - 1 ИЛИ Результат[ИндексСтрокиРезультата].РазделительКлассификации <> Результат[ИндексСтрокиРезультата + 1].РазделительКлассификации Тогда
			ДоляНарастающимИтогомСумма = 0;
			Для Индекс = 0 По ДоляНарастающимИтогом.ВГраница() Цикл
				Если ЗначениеПараметраКлассификацииИтог <> 0 Тогда
					ТекущаяДоляНарастающимИтогом = ТекущаяДоляНарастающимИтогом + ?(ЗначениеПараметраКлассификацииИтог = 0, 0, ДоляНарастающимИтогом[Индекс] * 100 / ЗначениеПараметраКлассификацииИтог);
				КонецЕсли;
				ДоляНарастающимИтогом[Индекс] = ТекущаяДоляНарастающимИтогом;
				ДоляНарастающимИтогомСумма = ДоляНарастающимИтогомСумма + ТекущаяДоляНарастающимИтогом;
			КонецЦикла;
			СреднееЗначение = ДоляНарастающимИтогомСумма / (ДоляНарастающимИтогом.Количество() + 1);
			ТекущийКласс = Перечисления.XYZКлассификация.ZКласс;
			Для Индекс = 0 По ДоляНарастающимИтогом.ВГраница() - 1 Цикл
				Если ДоляНарастающимИтогом[Индекс] > СреднееЗначение Тогда
					Если ТекущийКласс = Перечисления.XYZКлассификация.ZКласс Тогда
						ТекущийКласс = Перечисления.XYZКлассификация.YКласс;
					Иначе
						Прервать;
					КонецЕсли;
					СреднееЗначение = ДоляНарастающимИтогомСумма / (ДоляНарастающимИтогом.Количество() - Индекс);
				КонецЕсли;
				ДоляНарастающимИтогомСумма = ДоляНарастающимИтогомСумма - ДоляНарастающимИтогом[Индекс];
				Результат[СмещениеСтрокиРезультата + Индекс].Класс = ТекущийКласс;
			КонецЦикла;
			ТекущийРазделительКлассификации = ТекущийРазделительКлассификации + 1;
			ЗначениеПараметраКлассификацииИтог = 0;
			ДоляНарастающимИтогом = Новый Массив;
			ТекущаяДоляНарастающимИтогом = 0;
			СмещениеСтрокиРезультата = ИндексСтрокиРезультата + 1;
		КонецЕсли;
		ИндексСтрокиРезультата = ИндексСтрокиРезультата + 1;
	КонецЦикла;
	Возврат Результат;
КонецФункции // ВыполнитьXYZКлассификацию()

#КонецОбласти
