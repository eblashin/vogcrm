#Область ПрограммныйИнтерфейс

#Область ПроверкаКонтрагентовВДокументах

// Определение вида документа.
//
// Параметры:
//  Форма								 - УправляемаяФорма - Форма документа, для которого необходимо получить описание.
//	Результат							 - Структура - Описывает вид документа. Ключи:
//  		"КонтрагентНаходитсяВШапке"			 	- Булево - Признак того, есть у документа контрагент в шапке
//  		"КонтрагентНаходитсяВТабличнойЧасти"	- Булево - Признак того, есть у документа контрагенты в табличных частях
//  		"СчетФактураНаходитсяВПодвале"		 	- Булево - Признак того, есть у документа счет-фактура в подвале
//  		"ЯвляетсяСчетомФактурой"				- Булево - Признак того, является ли сам документ счетом-фактурой.
Процедура ОпределитьВидДокумента(Форма, Результат) Экспорт
	
	
КонецПроцедуры

// Получение счета-фактуры, находящегося в подвале документа-основания, чья форма передана в качестве
//             параметра.
//
// Параметры:
//  Форма		 - УправляемаяФорма - Форма документа-основания, для которой необходимо получить счет-фактуру.
//  СчетФактура	 - ДокументСсылка - Счет-фактура, полученная для данного документа-основания.
Процедура ПолучитьСчетФактуру(Форма, СчетФактура) Экспорт
	
	
КонецПроцедуры

// Возможность доопределить сформированную подсказку для формы документа.
//
// Параметры:
//  Результат            - Структура - содержит текст подсказки и цвет фона подсказки.
//  СостояниеКонтрагента - ПеречислениеСсылка.СостоянияСуществованияКонтрагента - текущее состояние контрагента.
//  Цвета                - Структура - содержит цвета, используемые при выводе информации о состоянии контрагента.
//
Процедура ПослеФормированияПодсказкиВДокументе(Результат, СостояниеКонтрагента, Цвета) Экспорт
	
	
	
КонецПроцедуры 

#КонецОбласти

#Область ПроверкаКонтрагентовВОтчетах

// Вывод панели проверки в отчете.
//
// Параметры:
//  Форма	 				- УправляемаяФорма - Форма отчета, для которого выводится результат проверки контрагента.
//  СостояниеПроверки		- Строка - Текущее состояние проверки, может принимать следующие значения, либо быть пустой
//                                строкой: ВсеКонтрагентыКорректные
// 			НайденыНекорректныеКонтрагенты
// 			ДопИнформацияПоПроверке
// 			ПроверкаВПроцессеВыполнения
// 			НетДоступаКСервису.
//  СтандартнаяОбработка	- Булево - Если Ложь, то игнорируется стандартное действие и выполняется указанное в данной
//                                  процедуре.
Процедура УстановитьВидПанелиПроверкиКонтрагентовВОтчете(Форма, СтандартнаяОбработка, СостояниеПроверки = "") Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаКонтрагентовВСправочнике

// Отображение результата проверки контрагента в справочнике.
// Реализация тела метода является обязательной.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма справочника, в котором выполнялась проверка контрагента.
//  	Результат проверки хранится в реквизите РеквизитыПроверкиКонтрагентов(Структура) формы контрагента.
//  	Структуру полей РеквизитыПроверкиКонтрагентов см. в процедуре ИнициализироватьРеквизитыФормыКонтрагент ОМ
//  	ПроверкаКонтрагентов.
//  ПредставлениеРезультатаПроверки	 - ФорматированнаяСтрока, Строка - представление результата проверки
//  					контрагента.
//
Процедура ОтобразитьРезультатПроверкиКонтрагентаВСправочнике(Форма, ПредставлениеРезультатаПроверки) Экспорт
	// +CRM не переносить в объединенные решения
	// Устанавливаем текст заголовка.
	
	// ++ Тищенко В.В. 27.12.2018
	//Форма.РезультатПроверкиКонтрагента = ПредставлениеРезультатаПроверки;
	
	ПредставлениеРезультатаПроверки = ПредставлениеРезультатаПроверкиКонтрагента(Форма.РеквизитыПроверкиКонтрагентов.СостояниеКонтрагента,
	                                                                             ДополнительныеПараметрыКонтрагентаПоФорме(Форма));
	//УстановитьСтраницуКартинкиРезультатаПроверки(Форма);
	Форма.Элементы.РезультатПроверки.Видимость 		= Истина;
	Форма.РезультатПроверкиКонтрагента 				= ПредставлениеРезультатаПроверки;

	// -- Тищенко В.В. 
	
	// -CRM не переносить в объединенные решения
	
КонецПроцедуры

// Определяет строковое представление результата проверки контрагента.
//
// Параметры:
//  Форма - УправляемаяФорма - Форма справочника, в котором выполнялась проверка контрагента.
//  	Результат проверки хранится в реквизите РеквизитыПроверкиКонтрагентов(Структура) формы контрагента.
//  	Структуру полей РеквизитыПроверкиКонтрагентов см. в процедуре ИнициализироватьРеквизитыФормыКонтрагент ОМ
//  	ПроверкаКонтрагентов.
//  Текст - Строка - представление результата проверки контрагента.
//
Процедура ПриЗаполненииТекстаРезультатаПроверки(Форма, Текст) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедуры

// Получение объекта (ДанныеФормыСтруктура) и ссылки(ДокументСсылка, СправочникСсылка) документа или
// справочника,  в котором выполняется проверка контрагента, по форме.
// Обязательна к заполнению.
//
// Параметры:
//	Форма     - УправляемаяФорма - Форма документа или справочника, в котором выполняется проверка контрагента.
//	Результат - Структура - Объект и Ссылка, полученные по форме документа.
//		Ключи: "Объект" (Тип ДанныеФормыСтруктура) и "Ссылка" (Тип ДокументСсылка, СправочникСсылка).
//
Процедура ПриОпределенииОбъектаИСсылкиПоФорме(Форма, Результат) Экспорт
	// +CRM не переносить в объединенные решения
	
	// ++ Тищенко В.В. 27.12.2018
	// ИсточникОбъект 	= Форма.Объект; оригинал
	// сточникСсылка 	= ИсточникОбъект.Ссылка; оригинал
	
	Если Форма.ИмяФормы = "Справочник.вогТорговыеТочки.Форма.вогФормаБыстрогоВвода" Тогда
		ИсточникОбъект = Форма;
		ИсточникСсылка 	= Форма.Объект.Ссылка; 
	Иначе
		ИсточникОбъект 	= Форма.Объект;
		ИсточникСсылка 	= ИсточникОбъект.Ссылка; 
	КонецЕсли;	
	// -- Тищенко В.В. 

	
	Результат.Вставить("Объект", ИсточникОбъект); 
	Результат.Вставить("Ссылка", ИсточникСсылка);
	// -CRM не переносить в объединенные решения
КонецПроцедуры

// Возможность дополнить параметры запуска фонового задания при проверке справочника.
//
// Параметры:
//  ДополнительныеПараметрыЗапуска - Структура - содержит параметры запуска.
//  Форма                          - УправляемаяФорма - форма, из которой запускается фоновое задание.
//
Процедура ДополнитьПараметрыЗапускаФоновогоЗадания(ДополнительныеПараметрыЗапуска, Форма) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// ++ Тищенко В.В.
Функция ДополнительныеПараметрыКонтрагентаПоФорме(Форма)
	
	ДополнительныеПараметры = Новый Структура("ИНН, КПП, ЮрФизЛицо");
	
	Если Форма.ИмяФормы = "Справочник.вогТорговыеТочки.Форма.вогФормаБыстрогоВвода" Тогда
		ДополнительныеПараметры.Вставить("ИНН"			,Форма.CRM_ИНН);	
		ДополнительныеПараметры.Вставить("КПП"			,Форма.CRM_КПП);
		ДополнительныеПараметры.Вставить("ЮрФизЛицо"	,вогОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Форма.ЮрЛицоОрганизационноПравоваяФорма,"ЮрФизЛицо",Истина));
	КонецЕсли;
	
	Возврат ДополнительныеПараметры;
	
КонецФункции // -- Тищенко В.В.

// ++ Тищенко В.В.
Функция ПредставлениеРезультатаПроверкиКонтрагента(СостояниеКонтрагента,ДополнительныеПараметры,Знач ИсходныйТекст = "")
	
	Результат = ИсходныйТекст;
	
	ЦветТекста = ЦветНадписиРезультатаПроверкиПоСостояниюКонтрагента(СостояниеКонтрагента);
	
	// Формируем строку
	МассивПодстрок = Новый Массив;
	Если ЗначениеЗаполнено(ИсходныйТекст) Тогда
		МассивПодстрок.Добавить(Новый ФорматированнаяСтрока(ИсходныйТекст));
		МассивПодстрок.Добавить("   ");
	КонецЕсли;
	
	ТекстСостояниеКонтрагента = СтрокаСостояниеКонтрагента(СостояниеКонтрагента,ДополнительныеПараметры);
	
	МассивПодстрок.Добавить(Новый ФорматированнаяСтрока(Строка(ТекстСостояниеКонтрагента),,ЦветТекста,, 
	ПроверкаКонтрагентовКлиентСервер.ПутьКИнструкции()));
	
	Результат = Новый ФорматированнаяСтрока(МассивПодстрок);
	
	Возврат Результат;
	
КонецФункции // -- Тищенко В.В.

// ++ Тищенко В.В.
Функция ЦветНадписиРезультатаПроверкиПоСостояниюКонтрагента(СостояниеКонтрагента)
	
	Цвета = ПроверкаКонтрагентовВызовСервера.ЦветаРезультатовПроверки();
	
	Если СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.НеДействуетИлиИзмененКПП") Тогда
		ЦветТекста = Цвета.ЦветТекстаКонтрагентаПрекратившегоДеятельность;
	ИначеЕсли СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.КонтрагентЕстьВБазеФНС") 
		ИЛИ СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.КонтрагентНеПодлежитПроверке") Тогда
		ЦветТекста = Цвета.ЦветТекстаКонтрагентаДействующего;
	Иначе
		ЦветТекста = Цвета.ЦветТекстаНекорректногоКонтрагента;
	КонецЕсли;
	
	Возврат ЦветТекста;
	
КонецФункции // -- Тищенко В.В.

// ++ Тищенко В.В.
Функция СтрокаСостояниеКонтрагента(СостояниеКонтрагента, ДополнительныеПараметры)
	
	ТекстСостояние = Строка(СостояниеКонтрагента);
	
	Если СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.НеДействуетИлиИзмененКПП") Тогда
		
		ТекстСостояние = НСтр("ru = 'По данным ФНС контрагент не действует. Возможно был изменен КПП.'");
		
	ИначеЕсли СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.ПустойИННИлиКПП") Тогда
		
		ТекстСостояние = НСтр("ru = 'Проверка контрагента по данным ФНC не осуществлялась.'");
		
		Если ДополнительныеПараметры.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") Тогда
			
			ТекстПроблемы = "";
			
			Если ПустаяСтрока(ДополнительныеПараметры.ИНН) И ПустаяСтрока(ДополнительныеПараметры.КПП) Тогда
				ТекстПроблемы = НСтр("ru = 'Не заполнены ИНН и КПП.'");
			ИначеЕсли ПустаяСтрока(ДополнительныеПараметры.ИНН) Тогда
				ТекстПроблемы = НСтр("ru = 'Не заполнен ИНН.'");
			ИначеЕсли ПустаяСтрока(ДополнительныеПараметры.КПП) Тогда
				ТекстПроблемы = НСтр("ru = 'Не заполнен КПП.'");
			КонецЕсли;
			
		ИначеЕсли ДополнительныеПараметры.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель") Тогда
			
			Если ПустаяСтрока(ДополнительныеПараметры.ИНН) Тогда
				ТекстПроблемы = НСтр("ru = 'Не заполнен ИНН.'");
			КонецЕсли;
			
		КонецЕсли;
		
		ТекстСостояние = ТекстСостояние + ?(ПустаяСтрока(ТекстПроблемы),"", " " + ТекстПроблемы);
		
	ИначеЕсли  СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.КонтрагентНеПодлежитПроверке") Тогда
		
		ТекстСостояние = НСтр("ru = 'Не подлежит проверке по данным ФНС'")
		
	ИначеЕсли СостояниеКонтрагента = ПредопределенноеЗначение("Перечисление.СостоянияСуществованияКонтрагента.КонтрагентСодержитОшибкиВДанных") Тогда
		
		ТекстПроблемы = ".";
		
		Если ДополнительныеПараметры.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") Тогда
			
			ТекстПроблемы = " " + НСтр("ru = 'ИНН или КПП.'");
			
		ИначеЕсли ДополнительныеПараметры.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель") Тогда
			
			ТекстПроблемы = " " + НСтр("ru = 'ИНН.'");
			
		КонецЕсли;
		
		ТекстСостояние = НСтр("ru = 'Проверка по данным ФНС закончилась неудачей'") + ". " + ТекстСостояние + ?(ПустаяСтрока(ТекстПроблемы),"", " " + ТекстПроблемы);
		
	КонецЕсли;
	
	Возврат ТекстСостояние;

КонецФункции // -- Тищенко В.В.

#КонецОбласти
