////////////////////////////////////////////////////////////////////////////////
// Подсистема "ВОГ".
//  
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Обработчики подписок на события подсистемы.

Процедура ПередЗаписьюБизнесПроцесса(Источник, Отказ) Экспорт
	
	#Если Сервер И Не Сервер Тогда
		//Отладка. этот кода никогда не выполняется
		Источник = БизнесПроцессы.CRM_БизнесПроцесс.СоздатьБизнесПроцесс();
	#КонецЕсли
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.Стартован
		И Источник.Завершен 
		И ТипЗнч(Источник.Предмет) = Тип("ДокументСсылка.вогРаспределениеЗадач") Тогда
		
		//Возможно надо завершить задачу
		//Для этого:
		//1.текущий БП меняет статус на завершен (в источнике Завершен -  Истина, в запросе - ложь)
		//2. Главная задача еще не выполнена 
		//3. Нет в системе других бизнеспроцессов го этой задаче которые стартованы и не завершены
		//4. В документе установлен признак завершать автоматически
		
		//Установим блокировку на остальные БП и на саму распределенную задачу 
		УстановитьПривилегированныйРежим(Истина);
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("БизнесПроцесс.CRM_БизнесПроцесс");
		ЭлементБлокировки.УстановитьЗначение("ГлавнаяЗадача", Источник.ГлавнаяЗадача);
		ЭлементБлокировки = Блокировка.Добавить("Задача.ЗадачаИсполнителя");
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Источник.ГлавнаяЗадача);
		
		Блокировка.Заблокировать();
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	1 КАК Поле1
		               |ИЗ
		               |	БизнесПроцесс.CRM_БизнесПроцесс КАК CRM_БизнесПроцесс
		               |ГДЕ
		               |	CRM_БизнесПроцесс.Ссылка = &Ссылка
		               |	И НЕ CRM_БизнесПроцесс.Завершен
		               |	И НЕ CRM_БизнесПроцесс.ГлавнаяЗадача.Выполнена
		               |	И ВЫРАЗИТЬ(CRM_БизнесПроцесс.Предмет КАК Документ.вогРаспределениеЗадач).ЗавершатьЗадачуАвтоматически
		               |	И НЕ 1 В
		               |				(ВЫБРАТЬ ПЕРВЫЕ 1
		               |					1 КАК Поле1
		               |				ИЗ
		               |					БизнесПроцесс.CRM_БизнесПроцесс КАК ОстальныеНезавершенныеБППоЭтойЗадача
		               |				ГДЕ
		               |					ОстальныеНезавершенныеБППоЭтойЗадача.Ссылка <> &Ссылка
		               |					И ОстальныеНезавершенныеБППоЭтойЗадача.ГлавнаяЗадача = &Задача
		               |					И ОстальныеНезавершенныеБППоЭтойЗадача.Стартован
		               |					И НЕ ОстальныеНезавершенныеБППоЭтойЗадача.Завершен)";
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);               
		Запрос.УстановитьПараметр("Задача", Источник.ГлавнаяЗадача);               

		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда 
			Источник.ДополнительныеСвойства.Вставить("БлокировкаБизнесПроцессов", Блокировка); //Сохраним блокировку
			Источник.ДополнительныеСвойства.Вставить("НужноЗавершитьГлавнуюЗадачу", Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписиБизнесПроцесса(Источник, Отказ) Экспорт
	
	Перем НужноЗавершитьГлавнуюЗадачу;
	
	#Если Сервер И Не Сервер Тогда
		//Отладка. этот кода никогда не выполняется
		Источник = БизнесПроцессы.CRM_БизнесПроцесс.СоздатьБизнесПроцесс();
	#КонецЕсли
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Источник.ДополнительныеСвойства.Свойство("НужноЗавершитьГлавнуюЗадачу",НужноЗавершитьГлавнуюЗадачу);
	
	Если НужноЗавершитьГлавнуюЗадачу = Истина Тогда
		CRM_БизнесПроцессыИЗадачиВызовСервера.ВыполнитьЗадачу(Источник.ГлавнаяЗадача);
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриЗаписиОбъектаКалендаря(Источник, Отказ) Экспорт
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.CRM_ЭтапКалендарногоПлана") Тогда
		
		НаборЗаписей = РегистрыСведений.CRM_СобытияКалендаря.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Источник.Ссылка);
		
		Если Не Источник.ПометкаУдаления Тогда
			
			Для Каждого Пользователь Из Источник.ПользователиЭтапа Цикл
				Если ТипЗнч(Пользователь.Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда 
						
					НоваяСтрока = НаборЗаписей.Добавить();
					НоваяСтрока.НаВесьДень              = Истина;
					НоваяСтрока.ПериодНачало			= Источник.Дата;
					НоваяСтрока.ПериодОкончание			= Документы.CRM_ЭтапКалендарногоПлана.ПолучитьДатуОкончанияЭтапа(Источник);
					НоваяСтрока.Пользователь			= Пользователь.Пользователь;
					НоваяСтрока.Объект					= Источник.Ссылка;
					НоваяСтрока.Партнер                 = Источник.Проект.CRM_Партнер;

					НоваяСтрока.Тема					= Источник.Тема;
					//НоваяСтрока.НаВесьДень				= Источник.НаВесьДень;
					//НоваяСтрока.СтатусКонтрольнойТочки	= Источник.Статус;
					НоваяСтрока.Важность				= Источник.Важность;
					
					НоваяСтрока.Проект					= Источник.Проект;
					НоваяСтрока.Подразделение			= Источник.Подразделение;
					
					НоваяСтрока.Завершено				= (Источник.Статус = Перечисления.CRM_СтатусыЭтаповКалендарногоПлана.Завершен);
					
				КонецЕсли;
				
			КонецЦикла;
	
		КонецЕсли;
		
		НаборЗаписей.Записать();

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РассчетВыполненияЗадач

Процедура РассчитатьЗаписатьВыполнениеЗадачи(ОписаниеДанных, ЗадачаСсылка, Знач ПроцессСсылка = Неопределено) Экспорт
	
	ПроцентВыполнения = 0;
	Если Не ЗначениеЗаполнено(ПроцессСсылка) Тогда
		ПроцессСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗадачаСсылка, "БизнесПроцесс");;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Процесс", ПроцессСсылка);
	Запрос.УстановитьПараметр("Задача" , ЗадачаСсылка);
	
	Если ОписаниеДанных = "Повестка" Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПроцессПовестка.Вопрос,
			|	ПроцессПовестка.Ответ
			|ПОМЕСТИТЬ ДанныеПовесткиПроцесса
			|ИЗ
			|	БизнесПроцесс.CRM_БизнесПроцесс.вогПовестка КАК ПроцессПовестка
			|ГДЕ
			|	ПроцессПовестка.Ссылка = &Процесс
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СУММА(ВложенныйЗапрос.КоличествоЗаписейПроцесса) КАК КоличествоЗаписейПроцесса,
			|	СУММА(ВложенныйЗапрос.КоличествоЗаписейЗадачи) КАК КоличествоЗаписейЗадачи
			|ИЗ
			|	(ВЫБРАТЬ
			|		КОЛИЧЕСТВО(*) КАК КоличествоЗаписейПроцесса,
			|		0 КАК КоличествоЗаписейЗадачи
			|	ИЗ
			|		ДанныеПовесткиПроцесса КАК ДанныеПовесткиПроцесса
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		0,
			|		КОЛИЧЕСТВО(*)
			|	ИЗ
			|		ДанныеПовесткиПроцесса КАК ДанныеПовесткиПроцесса
			|	ГДЕ
			|		(ВЫРАЗИТЬ(ДанныеПовесткиПроцесса.Ответ КАК СТРОКА(1024))) <> """") КАК ВложенныйЗапрос";
		
		
	Иначе	
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СУММА(ВложенныйЗапрос.КоличествоЗаписейПроцесса) КАК КоличествоЗаписейПроцесса,
			|	СУММА(ВложенныйЗапрос.КоличествоЗаписейЗадачи) КАК КоличествоЗаписейЗадачи
			|ИЗ
			|	(ВЫБРАТЬ
			|		КОЛИЧЕСТВО(*) КАК КоличествоЗаписейПроцесса,
			|		0 КАК КоличествоЗаписейЗадачи
			|	ИЗ
			|		РегистрСведений." + ОписаниеДанных.ИмяРегистраПроцесса + " КАК ДанныеПоПроцессам
			|	ГДЕ
			|		ДанныеПоПроцессам.Процесс = &Процесс
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		0,
			|		КОЛИЧЕСТВО(*)
			|	ИЗ
			|		РегистрСведений." + ОписаниеДанных.ИмяРегистраЗадачи + " КАК ДанныеПоЗадачам
			|	ГДЕ
			|		ДанныеПоЗадачам.Процесс = &Процесс
			|		И ДанныеПоЗадачам.Задача = &Задача) КАК ВложенныйЗапрос";
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		ПроцентВыполнения = ?(Выборка.КоличествоЗаписейПроцесса = 0, 0, Выборка.КоличествоЗаписейЗадачи / Выборка.КоличествоЗаписейПроцесса)* 100;	
	КонецЕсли;	
	
	ЗаписатьПроцентВыполненияЗадачи(ЗадачаСсылка, ПроцентВыполнения);
	
КонецПроцедуры

Процедура ЗаписатьПроцентВыполненияЗадачи(ЗадачаСсылка, ПроцентВыполнения = 100) Экспорт

	Набор = РегистрыСведений.вогВыполнениеЗадач.СоздатьНаборЗаписей();
	Набор.Отбор.Задача.Установить(ЗадачаСсылка);
	Набор.Очистить();
	
	Если ПроцентВыполнения > 0 Тогда
		Запись = Набор.Добавить();
		Запись.Задача = ЗадачаСсылка;
		Запись.ПроцентВыполнения = ПроцентВыполнения;
		Запись.ПроцентВыполненияПредставление = Формат(ПроцентВыполнения, "ЧЦ=15; ЧДЦ=2; ЧГ=") + " %";
		
	КонецЕсли;
	
	Набор.Записать();

КонецПроцедуры

#КонецОбласти