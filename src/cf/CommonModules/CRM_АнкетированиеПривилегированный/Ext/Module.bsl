
&НаСервере
// Процедура записывает реквизиты объекта анкетирования.
//
// Параметры:
//	Анкета.
//
Процедура ЗаписатьРеквизитыОбъектаАнкетирования(Анкета) Экспорт
	
	ТаблицаРеквизитовОбъекта = Новый ТаблицаЗначений;
	ТаблицаРеквизитовОбъекта.Колонки.Добавить("ИмяСправочника");
	ТаблицаРеквизитовОбъекта.Колонки.Добавить("ИмяРеквизита");
	ТаблицаРеквизитовОбъекта.Колонки.Добавить("ЗначениеРеквизита");
	ТаблицаРеквизитовОбъекта.Колонки.Добавить("ТипОтвета");
	//*** Описание
	//*** 12 апреля 2019 г.
	//*** Блашин Евгений Игоревич VOG Начало
	ТаблицаРеквизитовОбъекта.Колонки.Добавить("ИмяРеквизитаВопроса");
	//*** Блашин Евгений Игоревич VOG Окончание 
	
	// Выберем вопросы, ответы на которые необходимо записать в объект.
	// ++ VOG Солодов В.В. 24.09.2020 CRM-935
	// Исключение неактуальных версий
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вогАнкетаСостав.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|	вогАнкетаСостав.Ответ КАК Ответ,
		|	вогАнкетаСостав.ОткрытыйОтвет КАК ОткрытыйОтвет,
		|	вогАнкетаСостав.ОтветПолучен КАК ОтветПолучен,
		|	ВопросыДляАнкетирования.CRM_ИмяСправочника КАК CRM_ИмяСправочника,
		|	ВопросыДляАнкетирования.CRM_ИмяРеквизита КАК CRM_ИмяРеквизита,
		|	вогАнкетаСостав.Ссылка.НомерВерсииОпроса КАК НомерВерсииОпроса,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(ВопросыДляАнкетирования.CRM_ИмяРеквизита, 1, 23) = ""ДополнительныйРеквизит_""
		|			ТОГДА ""ДР""
		|		КОГДА ПОДСТРОКА(ВопросыДляАнкетирования.CRM_ИмяРеквизита, 1, 21) = ""КонтактнаяИнформация_""
		|			ТОГДА ""КИ""
		|		ИНАЧЕ ""РС""
		|	КОНЕЦ КАК ТипОтвета
		|ПОМЕСТИТЬ ВТ_СоставАнкеты
		|ИЗ
		|	Документ.вогАнкета.Состав КАК вогАнкетаСостав
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
		|		ПО вогАнкетаСостав.ЭлементарныйВопрос = ВопросыДляАнкетирования.Ссылка
		|ГДЕ
		|	вогАнкетаСостав.Ссылка = &Анкета
		|	И НЕ ВопросыДляАнкетирования.CRM_ИмяСправочника = "" ""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СоставАнкеты.ЭлементарныйВопрос КАК ЭлементарныйВопрос
		|ПОМЕСТИТЬ ВТ_ИсключаемыеВопросы
		|ИЗ
		|	ВТ_СоставАнкеты КАК ВТ_СоставАнкеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВопросыДляАнкетирования.НеактуальныеНомераВерсийОпроса КАК НеактуальныеНомераВерсийОпроса
		|		ПО ВТ_СоставАнкеты.ЭлементарныйВопрос = НеактуальныеНомераВерсийОпроса.Ссылка
		|			И (НеактуальныеНомераВерсийОпроса.НомерВерсииОпроса = ВТ_СоставАнкеты.НомерВерсииОпроса)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_СоставАнкеты.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
		|	ВТ_СоставАнкеты.Ответ КАК ЗначениеРеквизита,
		|	ВТ_СоставАнкеты.ОткрытыйОтвет КАК ОткрытыйОтвет,
		|	ВТ_СоставАнкеты.ОтветПолучен КАК ОтветПолучен,
		|	ВТ_СоставАнкеты.CRM_ИмяСправочника КАК ИмяСправочника,
		|	ВТ_СоставАнкеты.CRM_ИмяРеквизита КАК ИмяРеквизита,
		|	ВТ_СоставАнкеты.ТипОтвета КАК ТипОтвета
		|ИЗ
		|	ВТ_СоставАнкеты КАК ВТ_СоставАнкеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсключаемыеВопросы КАК ВТ_ИсключаемыеВопросы
		|		ПО ВТ_СоставАнкеты.ЭлементарныйВопрос = ВТ_ИсключаемыеВопросы.ЭлементарныйВопрос
		|ГДЕ
		|	ВТ_ИсключаемыеВопросы.ЭлементарныйВопрос ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("Анкета", Анкета.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтрокаТаблицаРеквизитовОбъекта = ТаблицаРеквизитовОбъекта.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицаРеквизитовОбъекта, ВыборкаДетальныеЗаписи);
		
		СтрокаТаблицаРеквизитовОбъекта.ИмяРеквизитаВопроса 	= вогУправлениеОпросамиПовтИспСеанс.ПолучитьИмяРеквизитаПоСсылке(
			ВыборкаДетальныеЗаписи.ЭлементарныйВопрос, "Вопрос_");
		
	КонецЦикла;
	// До изменения
	//Для Каждого СтрокаСостав Из Анкета.Состав Цикл
	//	
	//	Если ЗначениеЗаполнено(СтрокаСостав.ЭлементарныйВопрос) Тогда
	//		
	//		ИмяСправочника 		= СтрокаСостав.ЭлементарныйВопрос.CRM_ИмяСправочника;
	//		ИмяРеквизита   		= СтрокаСостав.ЭлементарныйВопрос.CRM_ИмяРеквизита;
	//		
	//		Если ПустаяСтрока(ИмяСправочника) Тогда
	//			
	//			Продолжить;
	//			
	//		КонецЕсли;
	//		
	//		СтрокаТаблицаРеквизитовОбъекта = ТаблицаРеквизитовОбъекта.Добавить();
	//		СтрокаТаблицаРеквизитовОбъекта.ИмяСправочника = ИмяСправочника;
	//		СтрокаТаблицаРеквизитовОбъекта.ИмяРеквизита = ИмяРеквизита;
	//		СтрокаТаблицаРеквизитовОбъекта.ЗначениеРеквизита = СтрокаСостав.Ответ;		
	//		//*** Описание
	//		//*** 12 апреля 2019 г.
	//		//*** Блашин Евгений Игоревич VOG Начало
	//		СтрокаТаблицаРеквизитовОбъекта.ИмяРеквизитаВопроса = вогУправлениеОпросамиПовтИспСеанс.ПолучитьИмяРеквизитаПоСсылке(СтрокаСостав.ЭлементарныйВопрос,"Вопрос_");
	//		//*** Блашин Евгений Игоревич VOG Окончание 
	//		
	//		Если Найти(ИмяРеквизита, "ДополнительныйРеквизит_") = 1 Тогда
	//			
	//			// дополнительный реквизит.
	//			
	//			СтрокаТаблицаРеквизитовОбъекта.ТипОтвета = "ДР"
	//			
	//		ИначеЕсли Найти(ИмяРеквизита, "КонтактнаяИнформация_") = 1 Тогда
	//			
	//			// контактная информация.
	//			
	//			СтрокаТаблицаРеквизитовОбъекта.ТипОтвета = "КИ"
	//			
	//		Иначе
	//			
	//			// реквизит справочника.
	//			
	//			СтрокаТаблицаРеквизитовОбъекта.ТипОтвета = "РС"
	//			
	//		КонецЕсли;	
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;
	// -- VOG Солодов В.В. 24.09.2020 CRM-935
	
	Если ТаблицаРеквизитовОбъекта.Количество() > 0 Тогда
		
		ОбъектАнкетирования = Анкета.Респондент.ПолучитьОбъект();
		
		ИмяСправочникаМетаданные = ОбъектАнкетирования.Метаданные().Имя;
		
		// запишем простые реквизиты.
		
		МассивСтрокРеквизитов = ТаблицаРеквизитовОбъекта.НайтиСтроки(Новый Структура("ТипОтвета", "РС")); 
		
		Для Каждого СтрокаТаблицаРеквизитовОбъекта Из МассивСтрокРеквизитов Цикл
			
			Если СтрокаТаблицаРеквизитовОбъекта.ИмяСправочника = ИмяСправочникаМетаданные Тогда
				
				Попытка
					
					ОбъектАнкетирования[СтрокаТаблицаРеквизитовОбъекта.ИмяРеквизита] = СтрокаТаблицаРеквизитовОбъекта.ЗначениеРеквизита;
					
				Исключение
					
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение анкет'"), 
					УровеньЖурналаРегистрации.Ошибка,,, 
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
				КонецПопытки;
				
			КонецЕсли;	
			
		КонецЦикла;		
		
		// Запишем дополнительные реквизиты.
		
		МассивСтрокРеквизитов = ТаблицаРеквизитовОбъекта.НайтиСтроки(Новый Структура("ТипОтвета", "ДР")); 
		
		Для Каждого СтрокаТаблицаРеквизитовОбъекта Из МассивСтрокРеквизитов Цикл
			
			Если СтрокаТаблицаРеквизитовОбъекта.ИмяСправочника = ИмяСправочникаМетаданные Тогда
				
				Попытка
					
					ИмяДопРеквизита = СтрЗаменить(СтрокаТаблицаРеквизитовОбъекта.ИмяРеквизита, "ДополнительныйРеквизит_", ""); 
					
					ДопРеквизит = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ИмяДопРеквизита);
					
					ЗначениеДопРеквизита = СтрокаТаблицаРеквизитовОбъекта.ЗначениеРеквизита;
					
					СтрокаДополнительныеРеквизиты = ОбъектАнкетирования.ДополнительныеРеквизиты.Найти(ДопРеквизит, "Свойство");
					
					Если СтрокаДополнительныеРеквизиты = Неопределено Тогда
						
						СтрокаДополнительныеРеквизиты = ОбъектАнкетирования.ДополнительныеРеквизиты.Добавить();
						
						СтрокаДополнительныеРеквизиты.Свойство = ДопРеквизит;
						
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(ЗначениеДопРеквизита) ИЛИ (ТипЗнч(ЗначениеДопРеквизита) = Тип("Булево") И ЗначениеДопРеквизита = Ложь) Тогда
						
						ОбъектАнкетирования.ДополнительныеРеквизиты.Удалить(СтрокаДополнительныеРеквизиты);
						
					Иначе						
						
						СтрокаДополнительныеРеквизиты.Значение = ЗначениеДопРеквизита;
						
						// Поддержка строк неограниченной длины.
						Свойство = ДопРеквизит.ПолучитьОбъект();
						
						Если УправлениеСвойствамиСлужебный.ИспользоватьНеограниченнуюСтроку(Свойство.ТипЗначения, Свойство.МногострочноеПолеВвода) Тогда
							
							СтрокаДополнительныеРеквизиты.ТекстоваяСтрока = ЗначениеДопРеквизита;
							
						КонецЕсли;
						
					КонецЕсли;					
							
				Исключение
					
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение анкет'"), 
					УровеньЖурналаРегистрации.Ошибка,,, 
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
				КонецПопытки;
				
			КонецЕсли;	
			
		КонецЦикла;		
		
		// Запишем контактную информацию.
		
		МассивСтрокРеквизитов = ТаблицаРеквизитовОбъекта.НайтиСтроки(Новый Структура("ТипОтвета", "КИ")); 
		
		// Создадим таблицу для поиска вида контактной информации.

		ИмяСправочника = ОбъектАнкетирования.Метаданные().Имя;
		
		ГруппаВидовКИ = Новый Массив;
		
		ГруппаВидовКИ.Добавить(Справочники.ВидыКонтактнойИнформации["Справочник" + ИмяСправочника]);
		
		Если ИмяСправочника = "Партнеры" Тогда
			
			ГруппаВидовКИ.Добавить(Справочники.ВидыКонтактнойИнформации["CRM_Справочник" + ИмяСправочника + "Компания"]);
			ГруппаВидовКИ.Добавить(Справочники.ВидыКонтактнойИнформации["CRM_Справочник" + ИмяСправочника + "ЧастноеЛицо"]);
			
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст =					
		"ВЫБРАТЬ
		|	ВидыКонтактнойИнформации.Ссылка КАК ВидКонтактнойИнформации,
		|	ВидыКонтактнойИнформации.Наименование
		|ИЗ
		|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
		|ГДЕ
		|	ВидыКонтактнойИнформации.Родитель В (&ГруппаВидовКИ)";
		
		Запрос.УстановитьПараметр("ГруппаВидовКИ", ГруппаВидовКИ);
		
		ТаблицаВидовКонтактнойИнформации = Запрос.Выполнить().Выгрузить();
		
		Для Каждого СтрокаТаблицаРеквизитовОбъекта Из МассивСтрокРеквизитов Цикл
			
			Если СтрокаТаблицаРеквизитовОбъекта.ИмяСправочника = ИмяСправочникаМетаданные Тогда
				
				Попытка
					
					ИмяДопРеквизита = СокрЛП(СтрЗаменить(СтрокаТаблицаРеквизитовОбъекта.ИмяРеквизита, "КонтактнаяИнформация_", ""));
									
					ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
					
					Для Каждого СтрокаТаблицыВидовКИ Из ТаблицаВидовКонтактнойИнформации Цикл
						
						Если СокрЛП(СтрокаТаблицыВидовКИ.Наименование) = ИмяДопРеквизита Тогда 
							
							ВидКонтактнойИнформации = СтрокаТаблицыВидовКИ.ВидКонтактнойИнформации;
							
							Прервать;							
							
						КонецЕсли;
						
					КонецЦикла;				
					
					ТипКонтактнойИнформации = ВидКонтактнойИнформации.Тип;
					
					ЗначениеКонтактнойИнформации = СтрокаТаблицаРеквизитовОбъекта.ЗначениеРеквизита;
					
					СтрокаКонтактнойИнформации = ОбъектАнкетирования.КонтактнаяИнформация.Найти(ВидКонтактнойИнформации, "Вид");
					
					Если СтрокаКонтактнойИнформации = Неопределено Тогда
						
						СтрокаКонтактнойИнформации = ОбъектАнкетирования.КонтактнаяИнформация.Добавить();
						
						СтрокаКонтактнойИнформации.Вид = ВидКонтактнойИнформации;
						
						СтрокаКонтактнойИнформации.Тип = ТипКонтактнойИнформации;
						
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(ЗначениеКонтактнойИнформации) Тогда
						
						ОбъектАнкетирования.КонтактнаяИнформация.Удалить(СтрокаКонтактнойИнформации);
						
					Иначе						
						
						СтрокаКонтактнойИнформации.Представление = ЗначениеКонтактнойИнформации;						
						
					КонецЕсли;
					
					// Заполним реквизиты, соответствующие типу контактной информации.
					
					Если ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
						//*** Описание
						//*** 12 апреля 2019 г.
						//*** Блашин Евгений Игоревич VOG Начало
						
						
						//Если Анкета.ДополнительныеСвойства.Свойство("КонтактнаяИнформацияОписаниеДополнительныхРеквизитов") Тогда // ++ VOG Солодов В.В. 08.10.2020 CRM-961 // Закомментировал
														
							НайденныеСтроки = Анкета.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита",СтрокаТаблицаРеквизитовОбъекта.ИмяРеквизитаВопроса));
							
							Для каждого СтрокаДопОписания Из НайденныеСтроки Цикл
								//Кайдашов 23/07/2020+++
								//++ Бей 445 08072019 - добавлено заполнение реквизита ЗначениеПолей																
								Если ИмяСправочника = "вогТорговыеТочки" 
									или ИмяСправочника = "вогРаспределительныеЦентры" Тогда
									ЗаполнитьЗначенияСвойств(СтрокаКонтактнойИнформации,СтрокаДопОписания ,"Широта,Долгота,ЗначенияПолей,Представление");
								Иначе
									ЗаполнитьЗначенияСвойств(СтрокаКонтактнойИнформации,СтрокаДопОписания, "ЗначенияПолей,Представление");
								КонецЕсли;
								//--      
								
								// ++ VOG Солодов В.В. 03.03.2020 CRM-196
								ЗаполнитьЗначенияСвойств(СтрокаКонтактнойИнформации, СтрокаДопОписания, "Значение,Представление");
								// -- VOG Солодов В.В. 03.03.2020
								//Кайдашов 23/07/2020---
								
							КонецЦикла; 
							
						//КонецЕсли; 
						
						//*** Блашин Евгений Игоревич VOG Окончание	
					ИначеЕсли ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
						
						
					ИначеЕсли ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
						
						
					ИначеЕсли ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Факс Тогда	
						
						
					ИначеЕсли ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
						
					
					ИначеЕсли ТипКонтактнойИнформации = Перечисления.ТипыКонтактнойИнформации.Другое Тогда	
						
						
					КонецЕсли;	
							
				Исключение
					
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение анкет'"), 
					УровеньЖурналаРегистрации.Ошибка,,, 
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
				КонецПопытки;
				
			КонецЕсли;	
			
		КонецЦикла;
		
		Попытка
			
			ОбъектАнкетирования.Записать();
			
			СтрокаСообщения = НСтр("ru = 'Записаны реквизиты %1 ""%2"".'");
			
			Если ИмяСправочникаМетаданные = "КонтактныеЛицаПартнеров" Тогда
				
				ПервыйПараметр = "контактного лица";
				
			ИначеЕсли ИмяСправочникаМетаданные = "Партнеры" Тогда
				
				ПервыйПараметр = "клиента";
				
			Иначе
				
				ПервыйПараметр = "пользователя";
				
			КонецЕсли;	
			
			СтрокаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СтрокаСообщения, ПервыйПараметр, ОбъектАнкетирования.Наименование);
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение анкет'"),
			УровеньЖурналаРегистрации.Информация, , ,
			СтрокаСообщения);
			
		Исключение
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение анкет'"), 
			УровеньЖурналаРегистрации.Ошибка,,, 
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		КонецПопытки;
			
	КонецЕсли;
	
КонецПроцедуры // ЗаписатьРеквизитыОбъектаАнкетирования(Анкета) Экспорт

// Функция получает реквизит из справочника.
//
// Параметры:
//	ОбъектАнкетирования.
//	Вопрос.
//
Функция ПолучитьРеквизитИзСправочника(ОбъектАнкетирования, Вопрос) Экспорт
	
	ИмяСправочника = Вопрос.CRM_ИмяСправочника;
	ИмяРеквизита   = Вопрос.CRM_ИмяРеквизита;
	
	ЗначениеИзСправочника = Неопределено;
	
	Попытка
		
		ИмяСправочникаМетаданные = ОбъектАнкетирования.Метаданные().Имя;
		
		Если ИмяСправочника = ИмяСправочникаМетаданные Тогда
			
			Если Найти(ИмяРеквизита, "ДополнительныйРеквизит_") = 1 Тогда
				
				// дополнительный реквизит
				
				ИмяДопРеквизита = СтрЗаменить(ИмяРеквизита, "ДополнительныйРеквизит_", ""); 
				
				ДопРеквизит = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ИмяДопРеквизита);
				
				СтрокаДополнительныеРеквизиты = ОбъектАнкетирования.ДополнительныеРеквизиты.Найти(ДопРеквизит, "Свойство");
				
				Если Не СтрокаДополнительныеРеквизиты = Неопределено Тогда
					
					ЗначениеИзСправочника = СтрокаДополнительныеРеквизиты.Значение;
					
				КонецЕсли;
			
			ИначеЕсли Найти(ИмяРеквизита, "КонтактнаяИнформация_") = 1 Тогда
				
				// контактная информация				
				
				ИмяДопРеквизита = СтрЗаменить(ИмяРеквизита, "КонтактнаяИнформация_", ""); 
				
				ГруппаВидовКИ = Новый Массив;
				
				ГруппаВидовКИ.Добавить(Справочники.ВидыКонтактнойИнформации["Справочник" + ИмяСправочникаМетаданные]);
				
				Если ИмяСправочника = "Партнеры" Тогда
					
					ГруппаВидовКИ.Добавить(Справочники.ВидыКонтактнойИнформации["CRM_Справочник" + ИмяСправочникаМетаданные + "Компания"]);
					ГруппаВидовКИ.Добавить(Справочники.ВидыКонтактнойИнформации["CRM_Справочник" + ИмяСправочникаМетаданные + "ЧастноеЛицо"]);
					
				КонецЕсли;
				
				Запрос = Новый Запрос;
				Запрос.Текст =					
				"ВЫБРАТЬ
				|	ВидыКонтактнойИнформации.Ссылка КАК ВидКонтактнойИнформации,
				|	ВидыКонтактнойИнформации.Наименование
				|ИЗ
				|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
				|ГДЕ
				|	ВидыКонтактнойИнформации.Родитель В (&ГруппаВидовКИ)";
				
				Запрос.УстановитьПараметр("ГруппаВидовКИ", ГруппаВидовКИ);
				
				ТаблицаВидовКонтактнойИнформации = Запрос.Выполнить().Выгрузить();
				
				ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.ПустаяСсылка();
				
				Для Каждого СтрокаТаблицыВидовКИ Из ТаблицаВидовКонтактнойИнформации Цикл
					
					Если СокрЛП(СтрокаТаблицыВидовКИ.Наименование) = ИмяДопРеквизита Тогда 
						
						ВидКонтактнойИнформации = СтрокаТаблицыВидовКИ.ВидКонтактнойИнформации;
						
						Прервать;							
						
					КонецЕсли;
					
				КонецЦикла;				
							
				СтрокаКонтактнойИнформации = ОбъектАнкетирования.КонтактнаяИнформация.Найти(ВидКонтактнойИнформации, "Вид");
				
				Если Не СтрокаКонтактнойИнформации = Неопределено Тогда
					
					ЗначениеИзСправочника = СтрокаКонтактнойИнформации.Представление;
					
				КонецЕсли;
				
			Иначе
				
				// реквизит справочника
				
				ЗначениеИзСправочника = ОбъектАнкетирования[ИмяРеквизита];			
				
			КонецЕсли;	
			
		КонецЕсли;	
		
	Исключение
		
	КонецПопытки;	
	
	Возврат	ЗначениеИзСправочника;
	
КонецФункции // ПолучитьРеквизитИзСправочника(Реквизит, Вопрос)	
	
	
