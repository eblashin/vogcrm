// +++ VOG Кулаков П.Л. 28.12.2020 DEV-48
&НаСервере
Процедура НачальнаяСтраницаПользователяПриСозданииНаСервере(Форма, СтраницаГлавное = Ложь) Экспорт
	
	Если СтраницаГлавное ИЛИ Форма.Параметры.Свойство("НачальнаяСтраница") И Форма.Параметры.НачальнаяСтраница Тогда
	Иначе
		Возврат;
	КонецЕсли;
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("МенюHTML",Новый ОписаниеТипов("Строка")));
	Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	// +++ VOG Кулаков П.Л. 25.01.2021 DEV-79
	ГруппаМенюHTML = Форма.Элементы.Найти("ГруппаМенюHTML");
	Если ГруппаМенюHTML = Неопределено Тогда
		ГруппаЭлементов = Форма.Элементы.Добавить("ГруппаЭлементов",Тип("ГруппаФормы"),Форма);
		ГруппаЭлементов.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаЭлементов.ОтображатьЗаголовок = Ложь;
		ГруппаЭлементов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		ГруппаМенюHTML = Форма.Элементы.Добавить("ГруппаМенюHTML",Тип("ГруппаФормы"),ГруппаЭлементов);
		ГруппаМенюHTML.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаМенюHTML.ОтображатьЗаголовок = Ложь;
		
		ГруппаЭлементовФормы = Форма.Элементы.Добавить("ГруппаЭлементовФормы",Тип("ГруппаФормы"),ГруппаЭлементов);
		ГруппаЭлементовФормы.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаЭлементовФормы.ОтображатьЗаголовок = Ложь;
		Для Каждого Элемент Из Форма.Элементы Цикл
			Если Элемент.Родитель = Форма Тогда
				Форма.Элементы.Переместить(Элемент,ГруппаЭлементовФормы);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	ПолеМеню = Форма.Элементы.Добавить("МенюHTML", Тип("ПолеФормы"), ГруппаМенюHTML);
	
	ПолеМеню.Вид = ВидПоляФормы.ПолеHTMLДокумента;
	ПолеМеню.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	ПолеМеню.Ширина = 10;
	ПолеМеню.РастягиватьПоГоризонтали = Ложь;
	ПолеМеню.ЦветРамки = Новый Цвет(255,255,255);
	ПолеМеню.ТолькоПросмотр = Истина;
	ПолеМеню.ПутьКДанным = "МенюHTML";
	ПолеМеню.УстановитьДействие("ПриНажатии","Подключаемый_МенюHTMLПриНажатии"); 	
	МакетHTML = Обработки.вогНачальнаяСтраницаПользователя.ПолучитьМакет("МенюHTML");
	ТекстДокумента = МакетHTML.ПолучитьТекст();
	
	СтрокаКартинкиГлавное = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаГлавное.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаГлавное",СтрокаКартинкиГлавное);
	
	СтрокаКартинкиКалендарь = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаКалендарь.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаКалендарь",СтрокаКартинкиКалендарь);
	
	СтрокаКартинкиКлиенты = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаКлиенты.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаКлиенты",СтрокаКартинкиКлиенты);
	
	СтрокаКартинкиАссортимент = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаАссортимент.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаАссортимент",СтрокаКартинкиАссортимент);
	
	СтрокаКартинкиОтчеты = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаОтчеты.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаОтчеты",СтрокаКартинкиОтчеты);
	
	СтрокаКартинкиПочта = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПочта.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаПочта",СтрокаКартинкиПочта);
	
	СтрокаКартинкиПланирование = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПланирование.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаПланирование",СтрокаКартинкиПланирование);
	
	СтрокаКартинкиОбои = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПодменюОбои.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаОбои",СтрокаКартинкиОбои);
	
	СтрокаКартинкиПлитка = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПодменюПлитка.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаПлитка",СтрокаКартинкиПлитка);
	
	СтрокаКартинкиПодменюКлиенты = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПодменюКлиенты.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаПодменюКлиенты",СтрокаКартинкиПодменюКлиенты);
	
	СтрокаКартинкиТорговыеТочки = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПодменюТорговыеТочки.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаТорговыеТочки",СтрокаКартинкиТорговыеТочки);
	
	СтрокаКартинкиЮридическиеЛица = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПодменюЮридическиеЛица.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаЮридическиеЛица",СтрокаКартинкиЮридическиеЛица);
	
	СтрокаКартинкиКлиентДистрибьютора = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПодменюКлиентДистрибьютора.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаКлиентДистрибьютора",СтрокаКартинкиКлиентДистрибьютора);
	
	СтрокаКартинкиКлиентБрендЗоны = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПодменюБрендЗоны.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкБрендЗоны",СтрокаКартинкиКлиентБрендЗоны);
	
	СтрокаКартинкиРаспределительныеЦентры = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПодменюРаспределительныеЦентры.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаРаспределительныеЦентры",СтрокаКартинкиРаспределительныеЦентры);
	
	СтрокаКартинкиРынки = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПодменюРынки.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаРынки",СтрокаКартинкиРынки);
	
	СтрокаКартинкиПоставщики = Base64Строка(БиблиотекаКартинок.НачальнаяСтраницаПодменюПоставщики.ПолучитьДвоичныеДанные());
	ТекстДокумента = СтрЗаменить(ТекстДокумента,"КартинкаПоставщики",СтрокаКартинкиПоставщики);
	
	Форма.МенюHTML = ТекстДокумента;
	
КонецПроцедуры // --- VOG Кулаков П.Л.

// +++ VOG Кулаков П.Л. 28.12.2020 DEV-48
&НаКлиенте
Процедура НачальнаяСтраницаПользователяПриОткрытии(Форма,ИмяПунктаМеню) Экспорт
	
	Пользователь = ПользователиКлиентСервер.ТекущийПользователь();
	НаправлениеДеятельности = ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Пользователь,"CRM_НаправлениеДеятельности",Истина);
	Если НаправлениеДеятельности <> ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Плитка") Тогда
		ПунктБрендЗона = Форма.Элементы.МенюHTML.Документ.document.getElementById("brand_zone");
		ПунктБрендЗона.className = "client";
	КонецЕсли;
	
	СписокПунктовМеню = Форма.Элементы.МенюHTML.Документ.document.getElementsByClassName("menuItem");
	Для Каждого ПунктМеню Из СписокПунктовМеню Цикл
		ПунктМеню.className = СтрЗаменить(ПунктМеню.className," active","");
		ТекстHTML = НРег(ПунктМеню.innerHTML);
		ИндексПерносаСтроки = СтрНайти(ТекстHTML,"<br>");
		Если ИндексПерносаСтроки = 0 Тогда 
			Возврат;
		КонецЕсли;
		НаименованиеПунктаМеню = Прав(ТекстHTML,СтрДлина(ТекстHTML) - ИндексПерносаСтроки - 3);
		Если НаименованиеПунктаМеню = ИмяПунктаМеню И ПунктМеню.id <> "main_client" Тогда
			ПунктМеню.className = ПунктМеню.className + " active";
			Если ПунктМеню.parentNode.className = "range" Тогда
				СписокПодпунктов = Форма.Элементы.МенюHTML.Документ.document.getElementsByClassName("range");
				Для Каждого Подпункт Из СписокПодпунктов Цикл
					Подпункт.style.display = "block";
				КонецЦикла;
				СписокПодпунктов = Форма.Элементы.МенюHTML.Документ.document.getElementsByClassName("client");
				Для Каждого Подпункт Из СписокПодпунктов Цикл
					Подпункт.style.display = "none";
				КонецЦикла;
				ЭлементАссортимент = Форма.Элементы.МенюHTML.Документ.document.getElementById("main_range");
				Если СтрНайти(ЭлементАссортимент.className,"visit") = 0 Тогда
					ЭлементАссортимент.className = ЭлементАссортимент.className + " visit";
				КонецЕсли;
			ИначеЕсли ПунктМеню.parentNode.className = "client" Тогда
				СписокПодпунктов = Форма.Элементы.МенюHTML.Документ.document.getElementsByClassName("range");
				Для Каждого Подпункт Из СписокПодпунктов Цикл
					Подпункт.style.display = "none";
				КонецЦикла;
				СписокПодпунктов = Форма.Элементы.МенюHTML.Документ.document.getElementsByClassName("client");
				Для Каждого Подпункт Из СписокПодпунктов Цикл
					Подпункт.style.display = "block";
				КонецЦикла;
				ЭлементКлиенты = Форма.Элементы.МенюHTML.Документ.document.getElementById("main_client");
				Если СтрНайти(ЭлементКлиенты.className,"visit") = 0 Тогда
					ЭлементКлиенты.className = ЭлементКлиенты.className + " visit";
				КонецЕсли;
			Иначе
				СписокПодпунктов = Форма.Элементы.МенюHTML.Документ.document.getElementsByClassName("range");
				Для Каждого Подпункт Из СписокПодпунктов Цикл
					Подпункт.style.display = "none";
				КонецЦикла;
				СписокПодпунктов = Форма.Элементы.МенюHTML.Документ.document.getElementsByClassName("client");
				Для Каждого Подпункт Из СписокПодпунктов Цикл
					Подпункт.style.display = "none";
				КонецЦикла;
				ЭлементАссортимент = Форма.Элементы.МенюHTML.Документ.document.getElementById("main_range");
				ЭлементАссортимент.className = СтрЗаменить(ЭлементАссортимент.className," visit","");
				ЭлементКлиенты = Форма.Элементы.МенюHTML.Документ.document.getElementById("main_client");
				ЭлементКлиенты.className = СтрЗаменить(ЭлементКлиенты.className," visit","");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // --- VOG Кулаков П.Л.

// +++ VOG Кулаков П.Л. 28.12.2020 DEV-48
&НаКлиенте
Процедура МенюHTMLПриНажатии(Форма, ТекущаяСтраница) Экспорт
	
	МассивПунктовМеню = Форма.Элементы.МенюHTML.Документ.document.getElementsByClassName("menuItem active");
	Если МассивПунктовМеню.length = 0 Тогда
		Возврат;
	КонецЕсли;
	ТекстHTML = НРег(МассивПунктовМеню[0].innerHTML);
	ИндексПерносаСтроки = СтрНайти(ТекстHTML,"<br>");
	Если ИндексПерносаСтроки = 0 Тогда 
		Возврат;
	КонецЕсли;
	ПунктМеню = Прав(ТекстHTML,СтрДлина(ТекстHTML) - ИндексПерносаСтроки - 3);
	Если ПунктМеню = ТекущаяСтраница Тогда
		Возврат;
	КонецЕсли;
	
	ТипОтношений = Неопределено;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НачальнаяСтраница",Истина);
	
	вог_глТекущийИдентификаторНачальнойСтраницы = ПунктМеню;
	Если ПунктМеню = "главное" Тогда
		ИмяФормы = "Обработка.вогНачальнаяСтраницаПользователя.Форма.ФормаHTML";
	ИначеЕсли ПунктМеню = "календарь" Тогда
		ИмяФормы = "Обработка.CRM_КалендарьМенеджера.Форма.Форма";
	ИначеЕсли ПунктМеню = "почта" Тогда
		ИмяФормы = "Обработка.CRM_МенеджерПочты.Форма.Форма";
	ИначеЕсли ПунктМеню = "отчеты" Тогда
		ИмяФормы = "Обработка.вогНачальнаяСтраницаПользователя.Форма.Отчеты";
		ПараметрыФормы.Вставить("ПутьКПодсистеме", "скОтчетыРабочегоСтола");
	ИначеЕсли ПунктМеню = "плитка" Тогда
		ИмяФормы = "Обработка.вогНачальнаяСтраницаПользователя.Форма.АссортиментПлитка";
	ИначеЕсли ПунктМеню = "обои" Тогда
		ИмяФормы = "Обработка.вогНачальнаяСтраницаПользователя.Форма.АссортиментОбои";
	ИначеЕсли ПунктМеню = "клиенты" Тогда
		ИмяФормы = "Обработка.вогНачальнаяСтраницаПользователя.Форма.Клиенты";
	ИначеЕсли ПунктМеню = "торговые точки" Тогда
		ИмяФормы = "Обработка.вогНачальнаяСтраницаПользователя.Форма.КлиентыТорговыеТочки";
	ИначеЕсли ПунктМеню = "юридические лица" Тогда
		ИмяФормы = "Обработка.вогНачальнаяСтраницаПользователя.Форма.КлиентыЮридическиеЛица";
	ИначеЕсли ПунктМеню = "бренд-зоны" Тогда
		ИмяФормы = "Обработка.вогНачальнаяСтраницаПользователя.Форма.КлиентыБрендЗоны";
	ИначеЕсли ПунктМеню = "раcпред. центры" Тогда
		ИмяФормы = "Справочник.вогРаспределительныеЦентры.Форма.ФормаСписка";
	ИначеЕсли ПунктМеню = "рынки" Тогда
		ИмяФормы = "Справочник.вогРынки.Форма.ФормаСписка";
	ИначеЕсли ПунктМеню = "поставщики" Тогда
		ИмяФормы = "Справочник.Партнеры.ФормаСписка";
		ТипОтношений = ПредопределенноеЗначение("Справочник.CRM_ТипыОтношений.Поставщик");
	ИначеЕсли ПунктМеню = "клиент дистрибьют." Тогда
		ИмяФормы = "Справочник.Партнеры.ФормаСписка";
		ТипОтношений = ПредопределенноеЗначение("Справочник.CRM_ТипыОтношений.КлиентДистрибьютора");
	ИначеЕсли ПунктМеню = "планы" Тогда
		ИмяФормы = "Обработка.вогНачальнаяСтраницаПользователя.Форма.Планирование";
	КонецЕсли;
	
	// +++ VOG Кулаков П.Л. 13.01.2021 DEV-79
	Если ИмяФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипОтношений <> Неопределено Тогда
		ПараметрыФормы.Вставить("ТипОтношений", ТипОтношений);
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	ТекущаяФорма = вог_глСтекФормНачальнойСтраницы.Получить(вог_глТекущийИдентификаторНачальнойСтраницы);
	Если ТекущаяФорма = Неопределено Тогда
		ТекущаяФорма = ПолучитьФорму(ИмяФормы,ПараметрыФормы,,,Форма.Окно);
		вог_глСтекФормНачальнойСтраницы.Вставить(вог_глТекущийИдентификаторНачальнойСтраницы,ТекущаяФорма);
	КонецЕсли;
	ТекущаяФорма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
	
	Если ТекущаяФорма.Открыта() Тогда
		НачальнаяСтраницаПользователяПриОткрытии(ТекущаяФорма,ПунктМеню);
		ТекущаяФорма.Активизировать();	
	Иначе	
		ТекущаяФорма.Открыть();
	КонецЕсли;
	
КонецПроцедуры // --- VOG Кулаков П.Л.

&НаКлиенте
Процедура ПередНачаломРаботыСистемы() Экспорт
	
	#Если Не ТолстыйКлиентОбычноеПриложение Тогда
		
		ПараметрыРаботыКлиентаПриЗапуске = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
		Если ПараметрыРаботыКлиентаПриЗапуске.ЗапускатьРабочийСтолМенеджера Тогда
			КлиентскоеПриложение.УстановитьРежимОсновногоОкна(РежимОсновногоОкнаКлиентскогоПриложения.Обычный);
		КонецЕсли;
		
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриНачалеРаботыСистемы() Экспорт
	
	ПараметрыРаботыКлиентаПриЗапуске = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	Если ПараметрыРаботыКлиентаПриЗапуске.ЗапускатьРабочийСтолМенеджера Тогда
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			
		#Иначе
			ОткрытьФорму("Обработка.вогНачальнаяСтраницаПользователя.Форма.ФормаHTML",,,,,,, РежимОткрытияОкнаФормы.Независимый);
		#КонецЕсли
		
	КонецЕсли;
	
КонецПроцедуры