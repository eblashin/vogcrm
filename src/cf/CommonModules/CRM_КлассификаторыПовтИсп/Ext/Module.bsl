
#Область ПрограммныйИнтерфейс

Функция СпискиУправленияКлассификацией() Экспорт

	Список = Новый СписокЗначений;
	
	Список.Добавить("СписокНоменклатура"		 , НСтр("ru = 'Номенклатура'"));
	Список.Добавить("СписокКоллекцииНоменклатуры", НСтр("ru = 'Коллекции номенклатуры'"));
	Список.Добавить("СписокПартнеры"			 , НСтр("ru = 'Клиенты'"));
	Список.Добавить("СписокТорговыеТочки"		 , НСтр("ru = 'Торговые точки'"));
	Список.Добавить("СписокЮридическиеЛица"		 , НСтр("ru = 'Юридические лица'"));
	Список.Добавить("СписокБрендЗоны"		 , НСтр("ru = 'БрендЗоны'"));
	//Список.Добавить("СписокРаспределительныеЦентры" , НСтр("ru = 'Распределительные центры'"));
	//Список.Добавить("СписокКонтактныеЛицаПартнеров"	, НСтр("ru = 'Контактные лица'"));
	
	Возврат Список;		
	
КонецФункции // ИменаСписковУправленияКлассификацией()

Функция ПринадлежностьКлассификаторов() Экспорт
	Возврат ПланыВидовХарактеристик.CRM_Классификаторы.ПринадлежностьКлассификаторов();
КонецФункции // ПринадлежностьКлассификаторов()

#КонецОбласти

#Область СинхронизацияКлассификаторов

Функция ПолучитьПрокси(СообщениеОбОшибке = "") Экспорт
	
	ДанныеПодключения = Константы.CRM_ДанныеПодключенияСистемыКлассификаторов.Получить().Получить();
	Если ДанныеПодключения = Неопределено Тогда
		СообщениеОбОшибке = НСтр("ru='По указанному адресу сервис недоступен.';en='The service is not available.'");
		Возврат Неопределено;
		
	КонецЕсли;
	
	Пользователь = ДанныеПодключения.Логин;
	Пароль       = ДанныеПодключения.Пароль;
	Адрес 		 = ДанныеПодключения.Адрес;
	
	Если ПустаяСтрока(Адрес) Тогда
		Возврат Неопределено;
	Конецесли;
	
	Адрес = СокрЛП(Адрес) + "/ws/CRM_ClassifiersExchange?wsdl";
	
	Попытка
		Определения = Новый WSОпределения(Адрес, Пользователь, Пароль);
		Прокси = Новый WSПрокси(Определения, "http://www.rarus.ru/ClassifiersExchange", "CRM_ClassifiersExchange", "CRM_ClassifiersExchangeSoap");
		Прокси.Пользователь = Пользователь;
		Прокси.Пароль = Пароль;
		Возврат Прокси;
	Исключение
		Инфо = ИнформацияОбОшибке();
		Описание = Инфо.Причина.Описание;
		Если Найти(Описание, "При создании описания сервиса произошла ошибка")
			ИЛИ Найти(Описание, "Ошибка HTTP") Тогда
			СообщениеОбОшибке = НСтр("ru='По указанному адресу сервис недоступен.';en='The service is not available.'");
		Иначе
			СообщениеОбОшибке = Инфо.Причина.Описание;
		КонецЕсли;
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции // ПолучитьПрокси()

#КонецОбласти