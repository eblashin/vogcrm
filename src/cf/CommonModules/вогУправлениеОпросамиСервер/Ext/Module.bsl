
#Область ПрограммныйИнтерфейс

Процедура СформироватьДанныеОпроса(Параметры, АдресХранилища) Экспорт
	
	//Херанем задержку
	//ТекущийСтарт = ТекущаяДата();
	//
	//Пауза = 0;
	// 
	//Пока Пауза < 10 Цикл
	//	Пауза = ТекущаяДата() - ТекущийСтарт;  	
	//КонецЦикла; 
	
	
	ОпросСсылка				= Параметры.Опрос;
	Респондент				= Параметры.Респондент;
	Проект                  = Параметры.Проект;
	РеквизитыВариантаОпроса = Параметры.РеквизитыВариантаОпроса;
	Дата                  	= Параметры.Дата;
	
	// ++ Харченко Д.И. №  - 10.09.2018 / 
	// Убрал ограничение по респонденту, для проверки дублей ТТ
	// (Не РеквизитыВариантаОпроса.РегистрироватьНовогоРеспондента = Истина 
 	// И Не ЗначениеЗаполнено(Респондент)) ИЛИ
	Если Не ЗначениеЗаполнено(РеквизитыВариантаОпроса.Ссылка) Тогда
		// -- Харченко Д.И. №  - 10.09.2018
		ПоместитьВоВременноеХранилище(Неопределено, АдресХранилища);
		Возврат;
		
	КонецЕсли;
	
	СтруктураДанных = Новый Структура;
	
	#Область СтруктураРазделов
		// ++ Харченко Д.И. № 000002197 - 04.09.2018 / Получение структуры разделов
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ВариантОпроса", РеквизитыВариантаОпроса.Ссылка);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	вогВариантыОпросовСтруктураРазделов.Раздел КАК Раздел,
		|	вогВариантыОпросовСтруктураРазделов.ПолныйКод КАК ПолныйКод,
		|	вогВариантыОпросовСтруктураРазделов.Значение КАК Значение,
		|	ЕСТЬNULL(вогВариантыОпросовСтруктураРазделов.Значение.ИмяКартинкиВБиблиотеке, """") КАК ИмяКартинки,
		|	вогВариантыОпросовСтруктураРазделов.ТипСтроки КАК ТипСтроки,
		|	вогВариантыОпросовСтруктураРазделов.Синоним КАК Синоним,
		|	вогВариантыОпросовСтруктураРазделов.Значение.УстановленаЗависимость КАК ИмеетУсловиеОтображения
		|ИЗ
		|	ПланВидовХарактеристик.вогВариантыОпросов.СтруктураРазделов КАК вогВариантыОпросовСтруктураРазделов
		|ГДЕ
		|	вогВариантыОпросовСтруктураРазделов.Ссылка = &ВариантОпроса";
		
		ТаблицаСтруктурыАнкеты = Запрос.Выполнить().Выгрузить();
		
		СтруктураДанных.Вставить("ТаблицаСтруктурыАнкеты", ТаблицаСтруктурыАнкеты);
		
			
	#КонецОбласти
	
	#Область ВсеВопросы
	
	ТаблицаВопросов = ПустойБланкТаблицыВопросов();
	ТаблицаЭлементарныхВопросов = Новый ТаблицаЗначений;
	// -- Харченко Д.И. № 000002197 - 04.09.2018	
	
	Если РеквизитыВариантаОпроса.ИспользоватьВопросы Тогда
		#Область Вопросы
		
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ВариантОпроса", РеквизитыВариантаОпроса.Ссылка);
		
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НаборВопросов.Вопрос КАК Вопрос,
			|	НаборВопросов.Вопрос.ТипОтвета КАК ТипОтвета,
			|	НаборВопросов.Вопрос.Представление КАК Представление,
			|	НаборВопросов.Вопрос.Формулировка КАК Формулировка,
			|	НаборВопросов.Вопрос.ИспользоватьАлгоритмОбработкиОтветов КАК ИспользоватьАлгоритмОбработкиОтветов,
			|	НаборВопросов.Вопрос.АлгоритмОбработкиОтветов КАК АлгоритмОбработкиОтветов,
			|	НаборВопросов.Вопрос.ИспользоватьПоискПоОбъектуОпроса КАК ИспользоватьПоискПоОбъектуОпроса,
			|	НаборВопросов.Вопрос.ИспользоватьОтборПоВариантамОтвета КАК ИспользоватьОтборПоВариантамОтвета,
			|	НаборВопросов.Вопрос.ИспользоватьСозданиеОбъектаОпроса КАК ИспользоватьСозданиеОбъектаОпроса,
			|	НаборВопросов.Вопрос.ПрикреплятьФайлы КАК ПрикреплятьФайлы,
			|	НаборВопросов.Вопрос.СхемаКомпоновкиДанных КАК СхемаКомпоновкиДанных,
			|	НаборВопросов.Вопрос.ХранилищеСхемыКомпоновкиДанных КАК ХранилищеСхемыКомпоновкиДанных,
			|	НаборВопросов.Вопрос.ХранилищеНастроекКомпоновкиДанных КАК ХранилищеНастроекКомпоновкиДанных,
			// ++ Харченко Д.И. № 000002197 - 04.09.2018 / 	получение разделов
			|	вогВариантыОпросовСтруктураРазделов.Раздел КАК Раздел,
			|	НаборВопросов.Вопрос.УстановитьНаборДанныхОтветов КАК УстановитьНаборДанныхОтветов,
			|	НаборВопросов.Вопрос.Обязательный КАК Обязательный,
			|	вогВариантыОпросовСтруктураРазделов.ПолныйКод КАК ПолныйКод,
			// ++ VOG Солодов В.В. 06.12.2019 CRM-20
			|	НаборВопросов.Вопрос.вогЗаполнятьПоДокументуОснованию КАК ЗаполнятьПоДокументуОснованию
			// -- VOG Солодов В.В. 06.12.2019
			|ИЗ
			|	ПланВидовХарактеристик.вогВариантыОпросов.НаборВопросов КАК НаборВопросов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.вогВариантыОпросов.СтруктураРазделов КАК вогВариантыОпросовСтруктураРазделов
			|		ПО НаборВопросов.Ссылка = вогВариантыОпросовСтруктураРазделов.Ссылка
			|			И НаборВопросов.Вопрос = вогВариантыОпросовСтруктураРазделов.Значение
			// -- Харченко Д.И. № 000002197 - 04.09.2018
			|ГДЕ
			|	НаборВопросов.Ссылка = &ВариантОпроса
			|	И НаборВопросов.Вопрос ССЫЛКА Справочник.вогВопросы
			|
			|УПОРЯДОЧИТЬ ПО
			|	НаборВопросов.НомерСтроки";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			//Формирование набора данных вопроса
			// ++ VOG Солодов В.В. 06.12.2019 CRM-20
			НаборДанных = СформироватьНаборДанныхВопроса(Выборка, Параметры.РеквизитыВариантаОпроса, Респондент, Проект, , ОпросСсылка, Дата, Параметры.ДокументОснование);
			// До изменения
			//НаборДанных = СформироватьНаборДанныхВопроса(Выборка, Параметры.РеквизитыВариантаОпроса, Респондент, Проект, , ОпросСсылка, Дата);
			// -- VOG Солодов В.В. 06.12.2019
			
			//*** Описание
			//*** 28 августа 2018 г.
			//*** Блашин Евгений Игоревич VOG Начало
			// не формируется пустая таблица 
			
			//Если НаборДанных.Количество() = 0 Тогда
			//	Продолжить;
			//КонецЕсли;

			
			//*** Блашин Евгений Игоревич VOG Окончание  			
						
			Запрос = Новый Запрос;
			
			// ++ VOG Солодов В.В. 06.12.2019 CRM-20
			Если Не ЗначениеЗаполнено(ОпросСсылка)
				И ЗначениеЗаполнено(Параметры.ДокументОснование)
				И Выборка.ЗаполнятьПоДокументуОснованию Тогда
				Запрос.УстановитьПараметр("Опрос", Параметры.ДокументОснование);
			Иначе
				Запрос.УстановитьПараметр("Опрос", ОпросСсылка);
			КонецЕсли;
			// До изменения
			//Запрос.УстановитьПараметр("Опрос" 	   , ОпросСсылка);
			// -- VOG Солодов В.В. 06.12.2019
			Запрос.УстановитьПараметр("Вопрос"	   , Выборка.Вопрос);
			Запрос.УстановитьПараметр("НаборДанных", НаборДанных);
			
			
			//Кайдашов
			Если Выборка.Вопрос.ДинамическоеФормированиеВариантовОтветов тогда
				тзНаборСоставВопроса = СформироватьНаборДанныхВариантыОтветов(Выборка.Вопрос);
				Запрос.УстановитьПараметр("НаборСоставВопроса",тзНаборСоставВопроса);
			КонецЕсли;
			
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	НаборДанных.ОбъектОпроса,
				|	НаборДанных.Ответ" 
				//Кайдашов 407				
				+?(НаборДанных.Колонки.Найти("ВариантОтвета")=Неопределено," ",",НаборДанных.ВариантОтвета")
				//////
				+ СформироватьВыбранныеПоля(НаборДанных.Колонки, "НаборДанных.") + "
				|ПОМЕСТИТЬ втНаборДанных
				|ИЗ
				|	&НаборДанных КАК НаборДанных
				|;
				|"
				+ //Кайдашов
				?(Выборка.Вопрос.ДинамическоеФормированиеВариантовОтветов
				," ВЫБРАТЬ РАЗРЕШЕННЫЕ 
				|	НаборСоставВопроса.ВариантОтвета
				|ПОМЕСТИТЬ втСоставВопроса
				|ИЗ
				|	&НаборСоставВопроса как НаборСоставВопроса
				|;"				
				,"  ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СоставВопроса.ВариантОтвета
				|ПОМЕСТИТЬ втСоставВопроса
				|ИЗ
				|	Справочник.вогВопросы.СоставВопроса КАК СоставВопроса
				|ГДЕ
				|	СоставВопроса.Ссылка = &Вопрос
				|;") +
				
				" ВЫБРАТЬ
				|	втНаборДанных.Ответ КАК Ответ,
				|	втНаборДанных.ОбъектОпроса КАК ОбъектОпроса" + СформироватьВыбранныеПоля(НаборДанных.Колонки, "втНаборДанных.") + ",
				//START Кайдашов 15/07/19 455 - исправил, теперь поле ВариантОтвета - составной тип данных имеет
				// ++ Бей #407 
				//|	ЕСТЬNULL(втСоставВопроса.ВариантОтвета, Значение(Справочник.вогВариантыОтветов.ПустаяСсылка)) КАК ВариантОтвета
				|	ЕСТЬNULL(втСоставВопроса.ВариантОтвета, Неопределено) КАК ВариантОтвета
				// --
				//END Кайдашов
				|ПОМЕСТИТЬ втНаборДанныхПолный
				|ИЗ
				|	втНаборДанных КАК втНаборДанных
				|		ЛЕВОЕ СОЕДИНЕНИЕ втСоставВопроса КАК втСоставВопроса" +
				//Кайдашов 407				
				?(НаборДанных.Колонки.Найти("ВариантОтвета")=Неопределено," ПО (ИСТИНА) "," ПО втНаборДанных.ВариантОтвета = втСоставВопроса.ВариантОтвета ")
				//////
				+"
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	СоставОпроса.ОбъектОпроса КАК ОбъектОпроса,
				|	СоставОпроса.ВариантОтвета КАК ВариантОтвета,
				|	СоставОпроса.Ответ КАК Ответ,
				|	СоставОпроса.ИдентификаторСтроки КАК ИдентификаторСтроки
				|ПОМЕСТИТЬ втДанныеОпроса
				|ИЗ
				|	Документ.вогАнкета.СоставОпроса КАК СоставОпроса
				|ГДЕ
				|	СоставОпроса.Ссылка = &Опрос
				// ++ VOG Солодов В.В. 16.04.2020 CRM-576
				|	И СоставОпроса.Вопрос = &Вопрос
				// -- VOG Солодов В.В. 16.04.2020
				|	И (СоставОпроса.ОбъектОпроса, СоставОпроса.ВариантОтвета) В
				|			(ВЫБРАТЬ
				|				втНаборДанныхПолный.ОбъектОпроса,
				|				втНаборДанныхПолный.ВариантОтвета
				|			ИЗ
				|				втНаборДанныхПолный КАК втНаборДанныхПолный)
				|
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	втНаборДанныхПолный.Ответ КАК Ответ,
				|	втНаборДанныхПолный.ОбъектОпроса КАК ОбъектОпроса" + СформироватьВыбранныеПоля(НаборДанных.Колонки, "втНаборДанныхПолный.") + ",
				|	втНаборДанныхПолный.ВариантОтвета,
				|	ЕСТЬNULL(втДанныеОпроса.ИдентификаторСтроки, """") КАК ИдентификаторСтроки,
				|	ВЫБОР
				|		КОГДА втДанныеОпроса.ВариантОтвета ЕСТЬ NULL
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ИСТИНА
				|	КОНЕЦ КАК Пометка
				|ИЗ
				|	втНаборДанныхПолный КАК втНаборДанныхПолный
				|		ЛЕВОЕ СОЕДИНЕНИЕ втДанныеОпроса КАК втДанныеОпроса
				|		ПО втНаборДанныхПолный.ОбъектОпроса = втДанныеОпроса.ОбъектОпроса
				|			И втНаборДанныхПолный.ВариантОтвета = втДанныеОпроса.ВариантОтвета
				|ИТОГИ
				|МАКСИМУМ(ИдентификаторСтроки), МАКСИМУМ(Ответ)" + СформироватьВыбранныеПоля(НаборДанных.Колонки,,, "МАКСИМУМ") + "
				|ПО
				|	ОбъектОпроса";
			
			СтруктураВопроса = Новый Структура;
			СтруктураВопроса.Вставить("ТипОтвета" 	  	  					, Выборка.ТипОтвета);
			СтруктураВопроса.Вставить("Представление"	  					, Выборка.Представление);
			СтруктураВопроса.Вставить("Формулировка" 	  					, Выборка.Формулировка);
			СтруктураВопроса.Вставить("ИспользоватьАлгоритмОбработкиОтветов", Выборка.ИспользоватьАлгоритмОбработкиОтветов);
			СтруктураВопроса.Вставить("АлгоритмОбработкиОтветов"			, Выборка.АлгоритмОбработкиОтветов);
			СтруктураВопроса.Вставить("ИспользоватьПоискПоОбъектуОпроса" 	, Выборка.ИспользоватьПоискПоОбъектуОпроса);
			СтруктураВопроса.Вставить("ИспользоватьСозданиеОбъектаОпроса" 	, Выборка.ИспользоватьСозданиеОбъектаОпроса);
			СтруктураВопроса.Вставить("ИспользоватьОтборПоВариантамОтвета" 	, Выборка.ИспользоватьОтборПоВариантамОтвета);
			СтруктураВопроса.Вставить("ПрикреплятьФайлы" 					, Выборка.ПрикреплятьФайлы);
			
			СтруктураКолонок = Новый Структура;
			
			
			Для каждого Колонка Из НаборДанных.Колонки Цикл
				
				СтруктураОписанияКолонки = Новый Структура("Заголовок,Имя,ТипЗначения,Ширина");
				
				ЗаполнитьЗначенияСвойств(СтруктураОписанияКолонки,Колонка);
				
				СтруктураКолонок.Вставить(Колонка.Имя,СтруктураОписанияКолонки);
				
			
			КонецЦикла; 
						
			СтруктураВопроса.Вставить("Колонки" 	      					, СтруктураКолонок);
			
			СтруктураСоставаВопроса = ПолучитьСтруктуруСоставаВопроса(Выборка.Вопрос, ОпросСсылка);
			
			СтруктураВопроса.Вставить("СоставВопроса" 	  					, СтруктураСоставаВопроса.СоставВопроса);
			СтруктураВопроса.Вставить("ДополнительнаяИнформация" 	  		, СтруктураСоставаВопроса.ДополнительнаяИнформация);
			СтруктураВопроса.Вставить("КомандыВопроса" 	  					, Выборка.Вопрос.КомандыВопроса.Выгрузить());
			СтруктураВопроса.Вставить("ОбработчикиСобытий" 	  				, вогУправлениеОпросамиПовтИсп.ОбработчикиСобытийВопроса(Выборка.Вопрос));
			СтруктураВопроса.Вставить("ДеревоНабораДанных"					, Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам));
			
			НоваяСтрокаВопроса 						= ТаблицаВопросов.Добавить(); 
			НоваяСтрокаВопроса.Вопрос 				= Выборка.Вопрос;
			НоваяСтрокаВопроса.СтруктураПараметров 	= СтруктураВопроса;
			
			// ++ Харченко Д.И. № 000002197 - 04.09.2018 / 
			НоваяСтрокаВопроса.Раздел 				= Выборка.Раздел;
			НоваяСтрокаВопроса.ПолныйКод 			= Выборка.ПолныйКод;
			НоваяСтрокаВопроса.Обязательный 		= Выборка.Обязательный;
			// -- Харченко Д.И. № 000002197 - 04.09.2018
			
			// ++ VOG Солодов В.В. 17.12.2019 task 799
			НоваяСтрокаВопроса.ЗаполнятьПоДокументуОснованию = Выборка.ЗаполнятьПоДокументуОснованию;
			// -- VOG Солодов В.В. 17.12.2019
			
		КонецЦикла;
		
		#КонецОбласти
			
		#Область ЭлементарныеВопросы
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ВариантОпроса", РеквизитыВариантаОпроса.Ссылка);
		Запрос.УстановитьПараметр("Опрос" 	   , ОпросСсылка);
		
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВопросыДляАнкетирования.Наименование КАК Наименование,
			|	ВопросыДляАнкетирования.Ссылка.Обязательный КАК Обязательный,
			|	ВопросыДляАнкетирования.Ссылка КАК ЭлементарныйВопрос,
			|	""Вопрос"" КАК ТипСтроки,
			|	ВопросыДляАнкетирования.Длина КАК Длина,
			|	ВопросыДляАнкетирования.ТипЗначения КАК ТипЗначения,
			|	ВопросыДляАнкетирования.ТребуетсяКомментарий КАК ТребуетсяКомментарий,
			|	ВопросыДляАнкетирования.ПояснениеКомментария КАК ПояснениеКомментария,
			|	ВопросыДляАнкетирования.МинимальноеЗначение КАК МинимальноеЗначение,
			|	ВопросыДляАнкетирования.МаксимальноеЗначение КАК МаксимальноеЗначение,
			|	ВопросыДляАнкетирования.ТипОтвета КАК ТипОтвета,
			|	ВопросыДляАнкетирования.Формулировка КАК Формулировка,
			|	ВопросыДляАнкетирования.Точность КАК Точность,
			|	ВопросыДляАнкетирования.Ссылка.CRM_ИмяСправочника КАК CRM_ИмяСправочника,
			|	ВопросыДляАнкетирования.Ссылка.CRM_ИмяРеквизита КАК CRM_ИмяРеквизита,
			|	ВопросыДляАнкетирования.Ссылка.CRM_ВидКонтактнойИнформации КАК CRM_ВидКонтактнойИнформации,
			|	ВопросыДляАнкетирования.Ссылка.ИспользоватьОбработкуЗаполнения КАК ИспользоватьОбработкуЗаполнения,
			|	вогВариантыОпросовСтруктураРазделов.Раздел КАК Раздел,
			|	вогВариантыОпросовСтруктураРазделов.ПолныйКод КАК ПолныйКод,
			|	ВопросыДляАнкетирования.Ссылка.ОбработчикПриИзменении КАК ОбработчикПриИзменении,
//START Кайдашов 29/07/19 481			
			|	ВопросыДляАнкетирования.Ссылка.ОбработчикНачаловыбора КАК ОбработчикНачалоВыбора,
			|	ВопросыДляАнкетирования.вогПроверкаНаДубль КАК вогПроверкаНаДубль,
			|	вогАнкетаСостав.ОтветПолучен КАК ОтветПолучен,
// ++ VOG Солодов В.В. 18.11.2019 task 888
			|	ВопросыДляАнкетирования.ОтветДляОчистки КАК ОтветДляОчистки, 
// -- VOG Солодов В.В. 19.11.2019
// ++ VOG Солодов В.В. 17.12.2019 task 799
			|	ВопросыДляАнкетирования.вогЗаполнятьПоДокументуОснованию КАК ЗаполнятьПоДокументуОснованию
// -- VOG Солодов В.В. 17.12.2019
			|ИЗ
			|	ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.вогВариантыОпросов.СтруктураРазделов КАК вогВариантыОпросовСтруктураРазделов
			|		ПО ВопросыДляАнкетирования.Ссылка = вогВариантыОпросовСтруктураРазделов.Значение
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.вогАнкета.Состав КАК вогАнкетаСостав
			|		ПО ВопросыДляАнкетирования.Ссылка = вогАнкетаСостав.ЭлементарныйВопрос
			|			И (вогАнкетаСостав.Ссылка = &Опрос)
			|ГДЕ
			|	вогВариантыОпросовСтруктураРазделов.Ссылка = &ВариантОпроса
			|
			|УПОРЯДОЧИТЬ ПО
			|	вогВариантыОпросовСтруктураРазделов.НомерСтроки";
		
			ТаблицаЭлементарныхВопросов = Запрос.Выполнить().Выгрузить();
			
		#КонецОбласти
		
	КонецЕсли;	
	
	СтруктураДанных.Вставить("ТаблицаЭлементарныхВопросов", ТаблицаЭлементарныхВопросов);
	СтруктураДанных.Вставить("ТаблицаВопросов", ТаблицаВопросов);
	
	#КонецОбласти
	
	#Область Классификаторы
	
	// ++ Харченко Д.И. № 000002197 - 04.09.2018 / 
	
	ТаблицаКлассификаторов = Новый ТаблицаЗначений;
	
	Если  ПолучитьФункциональнуюОпцию("CRM_ИспользоватьКлассификаторы") 
		И вогУправлениеОпросамиПовтИспСеанс.ПользовательИмеетПраваЧитатьКлассификатор() Тогда
		
		//Определение состава классификторов объекта
		МассивСтрокКлассификаторовДляУдаления = Новый Массив;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ВариантОпроса", РеквизитыВариантаОпроса.Ссылка);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	CRM_Классификаторы.Ссылка КАК Классификатор,
		|	CRM_Классификаторы.СпособФормирования КАК СпособФормирования,
		|	CRM_Классификаторы.ИспользуемаяАналитика КАК ИспользуемаяАналитика,
		|	CRM_Классификаторы.Обязательный КАК Обязательный,
		|	CRM_Классификаторы.ГоризонтальноеРазмещение КАК ГоризонтальноеРазмещение,
		|	CRM_Классификаторы.ТипЗначения КАК ТипЗначения,
		|	CRM_Классификаторы.ХранилищеНастроекКомпоновкиДанных КАК ХранилищеНастроекКомпоновкиДанных,
		|	вогВариантыОпросовСтруктураРазделов.Синоним КАК Синоним
		|ИЗ
		|	ПланВидовХарактеристик.CRM_Классификаторы КАК CRM_Классификаторы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.вогВариантыОпросов.СтруктураРазделов КАК вогВариантыОпросовСтруктураРазделов
		|		ПО вогВариантыОпросовСтруктураРазделов.Значение = CRM_Классификаторы.Ссылка
		|ГДЕ
		|	НЕ CRM_Классификаторы.ПометкаУдаления
		|	И вогВариантыОпросовСтруктураРазделов.Ссылка = &ВариантОпроса";
		
		УстановитьПривилегированныйРежим(Истина);
		
		ТаблицаКлассификаторов = Запрос.Выполнить().Выгрузить();                    
		ТаблицаКлассификаторов.Колонки.Добавить("Аналитика", Метаданные.ПланыВидовХарактеристик.CRM_АналитикаКлассификаторов.Тип);
		
		Для каждого СтрокаКлассификатора Из ТаблицаКлассификаторов Цикл
			//Формирование таблицы объекта		
			НастройкиКомпоновкиДанных = СтрокаКлассификатора.ХранилищеНастроекКомпоновкиДанных.Получить();
			Если НастройкиКомпоновкиДанных <> Неопределено  И ЗначениеЗаполнено(Респондент) Тогда
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(НастройкиКомпоновкиДанных.Отбор, "Объект", Респондент);
			КонецЕсли;
			
			ТаблицаОбъекта = CRM_ОбщегоНазначенияСервер.ВыполнитьЗапросВКомпоновкеДанных(
			CRM_КлассификаторыВызовСервера.СформироватьТекстЗапросаПринадлежностиКлассификатора(СтрокаКлассификатора.Классификатор, СтрокаКлассификатора.ТипЗначения), 
			?(НастройкиКомпоновкиДанных <> Неопределено, НастройкиКомпоновкиДанных.Отбор, Неопределено)
			);
			
			Если ТаблицаОбъекта.Количество() = 0 Тогда
				МассивСтрокКлассификаторовДляУдаления.Добавить(СтрокаКлассификатора);
				Продолжить;
			КонецЕсли;
			
			СтрокаКлассификатора.Аналитика = CRM_КлассификаторыВызовСервера.ПолучитьЗначениеИспользуемойАналитикиКлассификатора(СтрокаКлассификатора.Классификатор);
			
		КонецЦикла;
		
		Для каждого СтрокаКлассификаторовДляУдаления Из МассивСтрокКлассификаторовДляУдаления Цикл
			ТаблицаКлассификаторов.Удалить(СтрокаКлассификаторовДляУдаления);
		КонецЦикла;
		
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
	СтруктураДанных.Вставить("ТаблицаКлассификаторов", ТаблицаКлассификаторов);
	
	// -- Харченко Д.И. № 000002197 - 04.09.2018
	
	ТаблицаЗначенийКлассификаторов = Новый ТаблицаЗначений;
	
	Если РеквизитыВариантаОпроса.ИспользоватьКлассификаторы Тогда		
		Если Не ЗначениеЗаполнено(ОпросСсылка) Тогда
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Респондент", Респондент);
			Запрос.УстановитьПараметр("мсвКлассификаторовАнкеты", ТаблицаКлассификаторов.ВыгрузитьКолонку("Классификатор"));
			
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	CRM_ОбъектыЗначенийКлассификаторов.ЗначениеКлассификатора КАК ЗначениеКлассификатора
				|ИЗ
				|	РегистрСведений.CRM_ОбъектыЗначенийКлассификаторов КАК CRM_ОбъектыЗначенийКлассификаторов
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.CRM_Классификаторы КАК CRM_Классификаторы
				|		ПО CRM_ОбъектыЗначенийКлассификаторов.ЗначениеКлассификатора.Владелец = CRM_Классификаторы.Ссылка
				|ГДЕ
				|	CRM_ОбъектыЗначенийКлассификаторов.Объект = &Респондент
				//*** Описание
				//*** 18 июня 2019 г.
				//*** Блашин Евгений Игоревич VOG Начало
				|	И CRM_Классификаторы.Ссылка В(&мсвКлассификаторовАнкеты)";
				//*** Блашин Евгений Игоревич VOG Окончание
				
				
			ТаблицаЗначенийКлассификаторов = Запрос.Выполнить().Выгрузить();	
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураДанных.Вставить("ТаблицаЗначенийКлассификаторов", ТаблицаЗначенийКлассификаторов);
	
	#КонецОбласти	
	
	//Если УникальныйИдентификатор <> Неопределено Тогда
	//	
	//	СтруктураДанных.Вставить("НовыйАдрес");  
	//	
	//    АдресХранилища = ПоместитьВоВременноеХранилище(СтруктураДанных, УникальныйИдентификатор);
	//	
	//Иначе 	
		ПоместитьВоВременноеХранилище(СтруктураДанных, АдресХранилища);	
	//КонецЕсли; 
	
КонецПроцедуры

Функция СформироватьНаборДанныхВопроса(Выборка, РеквизитыВариантаОпроса, Респондент, Проект, ОбъектОпроса = Неопределено, ОпросСсылка=Неопределено, Дата=Неопределено, ДокументОснование) Экспорт

	СхемаИНастройки = Справочники.вогВопросы.ОписаниеИСхемаКомпоновкиДанныхНастройки(
		Выборка.ХранилищеСхемыКомпоновкиДанных, Выборка.ХранилищеНастроекКомпоновкиДанных, Выборка.СхемаКомпоновкиДанных);
		
	//Параметры данных				
	СхемаКомпоновкиДанныхПараметры = СхемаИНастройки.СхемаКомпоновкиДанных.Параметры;
	
	Если СхемаИНастройки.СхемаКомпоновкиДанных.Параметры.Найти("Респондент") <> Неопределено Тогда
		СхемаКомпоновкиДанныхПараметры.Респондент.Значение = Респондент;
	КонецЕсли;
	
	// ++ Харченко Д.И. №  - 05.09.2018 / 
	Если СхемаИНастройки.СхемаКомпоновкиДанных.Параметры.Найти("НаправлениеДеятельности") <> Неопределено Тогда
		СхемаКомпоновкиДанныхПараметры.НаправлениеДеятельности.Значение = РеквизитыВариантаОпроса.НаправлениеДеятельности;
	КонецЕсли;
	
	Если СхемаИНастройки.СхемаКомпоновкиДанных.Параметры.Найти("Дата") <> Неопределено Тогда
		СхемаКомпоновкиДанныхПараметры.Дата.Значение = Дата;
	КонецЕсли;
	
	// -- Харченко Д.И. №  - 05.09.2018
	
	Если СхемаИНастройки.СхемаКомпоновкиДанных.Параметры.Найти("Проект") <> Неопределено Тогда
		СхемаКомпоновкиДанныхПараметры.Проект.Значение = Проект;
	КонецЕсли;
	
	Если СхемаИНастройки.СхемаКомпоновкиДанных.Параметры.Найти("Ссылка") <> Неопределено Тогда
		
		// ++ VOG Солодов В.В. 06.12.2019 CRM-20
		Если Не ЗначениеЗаполнено(ОпросСсылка)
			И ЗначениеЗаполнено(ДокументОснование)
			И Выборка.ЗаполнятьПоДокументуОснованию Тогда
			СхемаКомпоновкиДанныхПараметры.Ссылка.Значение = ДокументОснование;
		Иначе
			СхемаКомпоновкиДанныхПараметры.Ссылка.Значение = ОпросСсылка;
		КонецЕсли;
		// До изменения
		//СхемаКомпоновкиДанныхПараметры.Ссылка.Значение = ОпросСсылка;
		// -- VOG Солодов В.В. 06.12.2019
	КонецЕсли;
	
	//Кайдашов
	Если СхемаИНастройки.СхемаКомпоновкиДанных.Параметры.Найти("Вопрос") <> Неопределено Тогда
		СхемаКомпоновкиДанныхПараметры.Вопрос.Значение = Выборка.Вопрос;
	КонецЕсли;
	
	URLСхемаКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаИНастройки.СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());
	НовыйИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемаКомпоновкиДанных);
	
	// Восстановим пользовательские настройки отборов
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(НовыйИсточникДоступныхНастроек);
	Если НЕ СхемаИНастройки.НастройкиКомпоновкиДанных = Неопределено Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаИНастройки.НастройкиКомпоновкиДанных);
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаИНастройки.СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КонецЕсли;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	Если ЗначениеЗаполнено(ОбъектОпроса) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Настройки.Отбор, "ОбъектОпроса", ОбъектОпроса);
	КонецЕсли;
	
	// ++ Харченко Д.И. №  - 14.09.2018 / 
		
	Если Выборка.УстановитьНаборДанныхОтветов Тогда
		
		СтруктураВрешнихИсточниковДанных = Новый Структура;
		
		Если НЕ ОпросСсылка=Неопределено Тогда
			ТаблицаПоВопросу = ОпросСсылка.СоставОпроса.Выгрузить(Новый Структура("Вопрос", Выборка.Вопрос));
			СтруктураВрешнихИсточниковДанных.Вставить("НаборОтветов", ТаблицаПоВопросу);
		КонецЕсли;
		
	КонецЕсли;
	
	// -- Харченко Д.И. №  - 14.09.2018
	
	//Получение набора данных	
	//*** Описание
	//*** 13 июня 2019 г.
	//*** Блашин Евгений Игоревич VOG Начало
	Если Выборка.Вопрос.ПривилегированныйРежим Тогда
	 	УстановитьПривилегированныйРежим(Истина);
	КонецЕсли;	
	//*** Блашин Евгений Игоревич VOG Окончание 
	 
	
	
	Возврат НаборДанныхВопроса(СхемаИНастройки.СхемаКомпоновкиДанных, Настройки, СтруктураВрешнихИсточниковДанных);

КонецФункции // СформироватьНаборДанныхВопроса()

Функция ПолучитьСтруктуруСоставаВопроса(Вопрос, ОпросСсылка)

	СтруктураСоставаВопроса = Новый Структура;
	
	СоставВопроса 			 = Новый Массив;
	ДополнительнаяИнформацияВопроса = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Вопрос", Вопрос);
	Запрос.УстановитьПараметр("Опрос" , ОпросСсылка);
	
	//Кайдашов
	Если Вопрос.ДинамическоеФормированиеВариантовОтветов тогда
		тзНаборСоставВопроса = СформироватьНаборДанныхВариантыОтветов(Вопрос);
		Запрос.УстановитьПараметр("НаборСоставВопроса",тзНаборСоставВопроса);
	КонецЕсли;
	
	
	Запрос.Текст = ?(Вопрос.ДинамическоеФормированиеВариантовОтветов,
		"ВЫБРАТЬ
		|	СоставВопроса.ВариантОтвета
		|ПОМЕСТИТЬ СоставВопроса
		|ИЗ
		|	&НаборСоставВопроса КАК СоставВопроса
		|;
		|"
	    ,
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СоставВопроса.ВариантОтвета КАК ВариантОтвета
		|ПОМЕСТИТЬ СоставВопроса
		|ИЗ
		|	Справочник.вогВопросы.СоставВопроса КАК СоставВопроса
		|ГДЕ
		|	СоставВопроса.Ссылка = &Вопрос
		|
		|;
		|") + "
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НаборДополнительнойИнформации.Ссылка КАК ВариантОтвета,
		|	НаборДополнительнойИнформации.Свойство.ТипЗначения КАК ТипЗначения,
		|	НаборДополнительнойИнформации.Свойство КАК Свойство
		|ПОМЕСТИТЬ ДополнительнаяИнформация
		|ИЗ
		|	Справочник.вогВариантыОтветов.НаборДополнительнойИнформации КАК НаборДополнительнойИнформации
		|ГДЕ
		|	НаборДополнительнойИнформации.Ссылка В
		|			(ВЫБРАТЬ
		|				СоставВопроса.ВариантОтвета
		|			ИЗ
		|				СоставВопроса КАК СоставВопроса)
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НаборДополнительнойИнформации.Свойство КАК Свойство,
		|	НаборДополнительнойИнформации.Свойство.ТипЗначения КАК ТипЗначения
		|ИЗ
		|	Справочник.вогВопросы.НаборДополнительнойИнформации КАК НаборДополнительнойИнформации
		|ГДЕ
		|	НаборДополнительнойИнформации.Ссылка = &Вопрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоставВопроса.ВариантОтвета КАК ВариантОтвета,
		|	ДополнительнаяИнформация.ТипЗначения КАК ТипЗначения,
		|	ДополнительнаяИнформация.Свойство КАК Свойство
		|ИЗ
		|	СоставВопроса КАК СоставВопроса
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДополнительнаяИнформация КАК ДополнительнаяИнформация
		|		ПО СоставВопроса.ВариантОтвета = ДополнительнаяИнформация.ВариантОтвета
		|ИТОГИ ПО
		|	ВариантОтвета";
	
	
	Пакеты = Запрос.ВыполнитьПакет();
	
	ВыборкаНаборДополнительнойИнформации = Пакеты[2].Выбрать();
	Пока ВыборкаНаборДополнительнойИнформации.Следующий() Цикл
		ДополнительнаяИнформацияВопроса.Добавить(
			Новый Структура("Свойство, ТипЗначения", ВыборкаНаборДополнительнойИнформации.Свойство, ВыборкаНаборДополнительнойИнформации.ТипЗначения));
			
	КонецЦикла;
	
	СтруктураСоставаВопроса.Вставить("ДополнительнаяИнформация", ДополнительнаяИнформацияВопроса);
	
	ВыборкаВариантОтвета = Пакеты[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВариантОтвета.Следующий() Цикл
		
		ДополнительнаяИнформация = Новый Массив;
		ВыборкаЗаписи = ВыборкаВариантОтвета.Выбрать();
		Пока ВыборкаЗаписи.Следующий() Цикл
			Если ВыборкаЗаписи.Свойство = null Тогда
				Продолжить;
			КонецЕсли;
			
			ДополнительнаяИнформация.Добавить(
				Новый Структура("Свойство, ТипЗначения", ВыборкаЗаписи.Свойство, ВыборкаЗаписи.ТипЗначения));
			
		КонецЦикла;
		
		СоставВопроса.Добавить(
			Новый Структура("ВариантОтвета, ДополнительнаяИнформация", ВыборкаВариантОтвета.ВариантОтвета, ДополнительнаяИнформация)
		);
		
	КонецЦикла;
	
	СтруктураСоставаВопроса.Вставить("СоставВопроса", СоставВопроса);
	
	Возврат СтруктураСоставаВопроса;
	
КонецФункции // ПолучитьСтруктуруСоставаВопроса()

Функция ПолучитьНаборыСвойствДляОпроса(ОбъектОпрос) Экспорт
	
	Респондент = ОбъектОпрос.Респондент;
	ИмяНабора  = СтрЗаменить(ОбщегоНазначения.ИмяТаблицыПоСсылке(Респондент), ".", "_");
	
	Наборы = Новый СписокЗначений;
	Наборы.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений[ИмяНабора]);
	
	Возврат Наборы;
	
КонецФункции // ПолучитьНаборыСвойствДляПартнеров()

Функция ПолучитьОписаниеСвойствОпроса(ОбъектОпрос) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВариантОпроса", ОбъектОпрос.ВариантОпроса);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НаборДополнительныхРеквизитов.ДополнительныйРеквизит
		|ИЗ
		|	ПланВидовХарактеристик.вогВариантыОпросов.НаборДополнительныхРеквизитов КАК НаборДополнительныхРеквизитов
		|ГДЕ
		|	НаборДополнительныхРеквизитов.Ссылка = &ВариантОпроса";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ДополнительныйРеквизит");
	
КонецФункции // ПолучитьОписаниеСвойствОпроса()

Функция ПустойБланкТаблицыВопросов()

	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Вопрос");
	Таблица.Колонки.Добавить("СтруктураПараметров");
	// ++ Харченко Д.И. № 000002197 - 04.09.2018 / 
	Таблица.Колонки.Добавить("Раздел");	
	Таблица.Колонки.Добавить("Обязательный");	
	Таблица.Колонки.Добавить("ПолныйКод");	
	// -- Харченко Д.И. № 000002197 - 04.09.2018
	// ++ VOG Солодов В.В. 17.12.2019 task 799
	Таблица.Колонки.Добавить("ЗаполнятьПоДокументуОснованию");
	// -- VOG Солодов В.В. 17.12.2019

	Возврат Таблица;
	
КонецФункции // БланкТаблицыВопросов()

Функция ОпределитьВариантОпроса(ТипРеспондента, Классификатор, НаправлениеДеятельности) Экспорт
	
	СписокПринадлежность = Новый СписокЗначений;
	СписокПринадлежность.Добавить(ОбщегоНазначения.ИмяТаблицыПоСсылке(Новый(ТипРеспондента)));
	
	СписокВариантов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	вогВариантыОпросовНаборКлассификаторов.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_ОтборПоКлассификатору
		|ИЗ
		|	ПланВидовХарактеристик.вогВариантыОпросов.НаборКлассификаторов КАК вогВариантыОпросовНаборКлассификаторов
		|ГДЕ
		|	вогВариантыОпросовНаборКлассификаторов.Ссылка.НаправлениеДеятельности = &НаправлениеДеятельности
		|	И вогВариантыОпросовНаборКлассификаторов.Классификатор = &Классификатор
		|	И ВЫБОР
		|			КОГДА &ДляПересертификации
		|				ТОГДА вогВариантыОпросовНаборКлассификаторов.Ссылка.ДляПересертификации = ИСТИНА
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	вогВариантыОпросовТипыРеспондента.Ссылка КАК Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.вогВариантыОпросов.ТипыРеспондента КАК вогВариантыОпросовТипыРеспондента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОтборПоКлассификатору КАК ВТ_ОтборПоКлассификатору
		|		ПО вогВариантыОпросовТипыРеспондента.Ссылка = ВТ_ОтборПоКлассификатору.Ссылка
		|			И (вогВариантыОпросовТипыРеспондента.ТипРеспондента В (&СписокПринадлежность))";
	
	Запрос.УстановитьПараметр("Классификатор", 				Классификатор);
	Запрос.УстановитьПараметр("НаправлениеДеятельности", 	НаправлениеДеятельности);
	Запрос.УстановитьПараметр("СписокПринадлежность", 		СписокПринадлежность);
	Запрос.УстановитьПараметр("ДляПересертификации", 		ТипРеспондента = Тип("СправочникСсылка.Партнеры"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДанных = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДанных.Следующий() Цикл
		СписокВариантов.Добавить(ВыборкаДанных.Ссылка);
	КонецЦикла;
	
	Возврат СписокВариантов;
	
КонецФункции

Функция ПолучитьСтатусОпроса(Респондент, ВариантОпроса, Статусы = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Респондент) ИЛИ НЕ ЗначениеЗаполнено(ВариантОпроса) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= "ВЫБРАТЬ
	|	вогСтатусыОпросов.Статус КАК Статус,
	|	вогСтатусыОпросов.Анкета КАК Анкета,
	|	вогСтатусыОпросов.Анкета.Представление КАК АнкетаПредставление
	|ИЗ
	|	РегистрСведений.вогСтатусыОпросов КАК вогСтатусыОпросов
	|ГДЕ
	|	вогСтатусыОпросов.Респондент = &Респондент
	|	И вогСтатусыОпросов.ВариантОпроса = &ВариантОпроса
	|	И вогСтатусыОпросов.Статус.Блокирующий
	|	И вогСтатусыОпросов.Статус В(&Статусы)";
	
	Запрос.УстановитьПараметр("Респондент"		, Респондент);
	Запрос.УстановитьПараметр("ВариантОпроса"	, ВариантОпроса);
	
	// Не знаю, пригодится или нет, но на всякий случай оставляю способ поиска произвольного статуса, вне зависимости от того, Блокирующий он или нет
	Если Статусы = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И вогСтатусыОпросов.Статус В(&Статусы)", "");
	Иначе 
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И вогСтатусыОпросов.Статус.Блокирующий", "");
		Запрос.УстановитьПараметр("Статусы", Статусы);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		СтатусОпроса = Новый Структура("Статус, Анкета, АнкетаПредставление");
		ЗаполнитьЗначенияСвойств(СтатусОпроса, Выборка);
		Возврат СтатусОпроса; 
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции // ПолучитьСтатусОпроса()

#КонецОбласти

#Область ВспомогательныеПрцедурыФункции

Функция СформироватьВыбранныеПоля(Колонки, ИмяТаблицы = "", ИсключитьОбъектОпроса = Истина, АгрегатнаяФункция = "")
	
	ВыбранныеПоля = "";
	Для каждого Колонка Из Колонки Цикл
		Если ИсключитьОбъектОпроса 
		  И (Колонка.Имя = "ОбъектОпроса"
		  ИЛИ Колонка.Имя = "Ответ" 
		  ИЛИ Колонка.Имя = "ВариантОтвета") 	  Тогда
			Продолжить;
		КонецЕсли;
		
		ВыбранныеПоля = ВыбранныеПоля + ",";
		ВыбранноеПоле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1%2", ИмяТаблицы, Колонка.Имя);
		Если ЗначениеЗаполнено(АгрегатнаяФункция) Тогда
			ВыбранноеПоле = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("%1(%2)", АгрегатнаяФункция, ВыбранноеПоле)			
		
		КонецЕсли;
		
		ВыбранныеПоля = ВыбранныеПоля + ВыбранноеПоле;
	
	КонецЦикла;
	
	Возврат ВыбранныеПоля;

КонецФункции // СформироватьВыбранныеПоля()

Функция НаборДанныхВопроса(СКД, Настройки, СтруктураВрешнихИсточниковДанных=Неопределено)

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СКД,Настройки,,,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")
	);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	
	// ++ Харченко Д.И. №  - 14.09.2018 / Добавил внешние источники и возможность функций
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, СтруктураВрешнихИсточниковДанных,, Истина);
	// -- Харченко Д.И. №  - 14.09.2018
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Если ТаблицаЗначений.Колонки.Найти("Ответ") = Неопределено Тогда
		// создаем колонку заглушку для запроса
		ТаблицаЗначений.Колонки.Добавить("Ответ", Новый ОписаниеТипов("Булево"),, 777); // Ширина означает служебную колонку, -1 не работает
	КонецЕсли;
	
	Возврат ТаблицаЗначений;

КонецФункции

// Функция - Получить тип вопроса анкеты по элементу анкеты
//
// Параметры:
//  ЭлементАнкеты	 - 	 - 
// 
// Возвращаемое значение:
//   - 
//
Функция ПолучитьТипВопросаАнкетыПоЭлементуАнкеты(ЭлементАнкеты) Экспорт 
	
	Если ТипЗнч(ЭлементАнкеты) = Тип("СправочникСсылка.вогВопросы") Тогда
		
		Возврат ПредопределенноеЗначение("Перечисление.вогТипыВопросовАнкеты.Вопрос");
		
	ИначеЕсли ТипЗнч(ЭлементАнкеты) = Тип("ПланВидовХарактеристикСсылка.CRM_Классификаторы") Тогда
		
		Возврат ПредопределенноеЗначение("Перечисление.вогТипыВопросовАнкеты.Классификатор");
		
	ИначеЕсли ТипЗнч(ЭлементАнкеты) = Тип("СправочникСсылка.вогРазделыАнкет") Тогда
		
		Возврат ПредопределенноеЗначение("Перечисление.вогТипыВопросовАнкеты.Раздел");
		
	ИначеЕсли ТипЗнч(ЭлементАнкеты) = Тип("ПланВидовХарактеристикСсылка.ВопросыДляАнкетирования") Тогда
		
		Возврат ПредопределенноеЗначение("Перечисление.вогТипыВопросовАнкеты.ЭлементарныйВопрос");
		
	Иначе
		
		Возврат ПредопределенноеЗначение("Перечисление.вогТипыВопросовАнкеты.ПустаяСсылка");
		
	КонецЕсли;
		
КонецФункции

Функция ПолучитьСписокВыбораКартинок() Экспорт
	
	СписокИтог = Новый СписокЗначений;
	
	СписокИтог.Добавить("", "Нет");
	
	Для Каждого стр из Метаданные.ОбщиеКартинки Цикл 
		СписокИтог.Добавить(стр.Имя, стр.Синоним, , БиблиотекаКартинок[стр.Имя]);
	КонецЦикла;
	
	Возврат СписокИтог;
	
КонецФункции

Процедура ЗаполнитьОбъектПоВыборкеВопросов(ЗаполняемыйОбъект, ВыборкаВопрос) Экспорт
	
	Пока ВыборкаВопрос.Следующий() Цикл
		
		Вопрос = ВыборкаВопрос.Вопрос;
		
		Если ТипЗнч(Вопрос) = Тип("ПланВидовХарактеристикСсылка.ВопросыДляАнкетирования") Тогда
			
			ВыборкаОтвет = ВыборкаВопрос.Выбрать();
			
			Пока ВыборкаОтвет.Следующий() Цикл
				
				Если Вопрос.ТипОтвета = ПредопределенноеЗначение("Перечисление.ТипыОтветовНаВопрос.CRM_ВидКонтактнойИнформации") Тогда
					
					СтрокаИнформации = ЗаполняемыйОбъект.КонтактнаяИнформация.Добавить();
					СтрокаИнформации.Вид = Вопрос.CRM_ВидКонтактнойИнформации;
					СтрокаИнформации.Тип = СтрокаИнформации.Вид.Тип;
					СтрокаИнформации.Представление = ВыборкаОтвет.Ответ;
					
				ИначеЕсли ЗначениеЗаполнено(Вопрос.CRM_ИмяРеквизита) Тогда 
					
					ЗаполняемыйОбъект[Вопрос.CRM_ИмяРеквизита] = ВыборкаОтвет.Ответ;
					
				Иначе 
					//чтото=1;
				КонецЕсли;
				
			КонецЦикла;
			
		ИначеЕсли  ТипЗнч(Вопрос) = Тип("СправочникСсылка.вогВопросы") Тогда
			
			ВыборкаОтвет = ВыборкаВопрос.Выбрать();
			
			Пока ВыборкаОтвет.Следующий() Цикл
				
				
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьРеквизитыВариантаОпроса(ВариантОпроса) Экспорт 
	
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ИспользоватьВопросы");
	СтруктураРеквизитов.Вставить("ИспользоватьКлассификаторы");
	СтруктураРеквизитов.Вставить("ИспользоватьДополнительныеРеквизиты");
	СтруктураРеквизитов.Вставить("РегистрироватьНовогоРеспондента");
	СтруктураРеквизитов.Вставить("ТипЗначения");
	СтруктураРеквизитов.Вставить("Ссылка");
	//--> VOG Бей В.В.  24.08.2018 16:28:47 ID заявки:000002167
	СтруктураРеквизитов.Вставить("УказатьНаправлениеДеятельности");
	СтруктураРеквизитов.Вставить("НаправлениеДеятельности");
	//<-- VOG Бей В.В.  24.08.2018 16:29:00 ID заявки:000002167
	// ++ VOG Солодов В.В. 06.04.2020 CRM-470
	СтруктураРеквизитов.Вставить("СсылкаНаИнструкцию");
	// -- VOG Солодов В.В. 06.04.2020
	
	РеквизитыВариантаОпроса = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВариантОпроса, СтруктураРеквизитов);
	
	Возврат РеквизитыВариантаОпроса;

КонецФункции

Функция ПолучитьПараметрыВыполненияИнициализацииАнкеты(Объект, РеквизитыВариантаОпроса) Экспорт 
	
	ПараметрыВыполнения = Новый Структура;	
	ПараметрыВыполнения.Вставить("Опрос"				  , Объект.Ссылка);
	ПараметрыВыполнения.Вставить("Респондент"			  , Объект.Респондент);
	ПараметрыВыполнения.Вставить("Проект"			  	  , Объект.Проект);
	ПараметрыВыполнения.Вставить("Дата"			  	  	  , Объект.Дата);
	ПараметрыВыполнения.Вставить("РеквизитыВариантаОпроса", РеквизитыВариантаОпроса);
	// ++ VOG Солодов В.В. 06.12.2019 CRM-20
	ПараметрыВыполнения.Вставить("ДокументОснование", 		Объект.ДокументОснование);
	// -- VOG Солодов В.В. 06.12.2019

	Возврат ПараметрыВыполнения;
	
КонецФункции

// ++ VOG Солодов В.В. 24.09.2020 CRM-935
Функция ИсключитьКлассификаторыДляНеиспользуемойВерсииОпроса(ТаблицаКлассификаторов, ВариантОпроса, НомерВерсииОпроса) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаКлассификаторов.Классификатор КАК Классификатор,
	|	ТаблицаКлассификаторов.КлассификаторПредставление КАК КлассификаторПредставление,
	|	ТаблицаКлассификаторов.Значение КАК Значение,
	|	ТаблицаКлассификаторов.ЗначениеПредставление КАК ЗначениеПредставление,
	|	ТаблицаКлассификаторов.Аналитика КАК Аналитика,
	|	ТаблицаКлассификаторов.ИспользуемаяАналитика КАК ИспользуемаяАналитика,
	|	ТаблицаКлассификаторов.ВидОтображения КАК ВидОтображения,
	|	ТаблицаКлассификаторов.СпособФормирования КАК СпособФормирования,
	|	ТаблицаКлассификаторов.ХранитьИсториюИзменения КАК ХранитьИсториюИзменения,
	|	ТаблицаКлассификаторов.Ответственный КАК Ответственный,
	|	ТаблицаКлассификаторов.ДополнительныйРеквизит КАК ДополнительныйРеквизит,
	|	ТаблицаКлассификаторов.ЗначениеРеквизита КАК ЗначениеРеквизита,
	|	ТаблицаКлассификаторов.Включен КАК Включен,
	|	ТаблицаКлассификаторов.КлючСтроки КАК КлючСтроки,
	|	ТаблицаКлассификаторов.КлючКлассификатора КАК КлючКлассификатора,
	|	ТаблицаКлассификаторов.ОтветПолучен КАК ОтветПолучен
	|ПОМЕСТИТЬ ТаблицаКлассификаторов
	|ИЗ
	|	&ТаблицаКлассификаторов КАК ТаблицаКлассификаторов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКлассификаторов.Классификатор КАК Классификатор,
	|	ТаблицаКлассификаторов.Значение КАК Значение,
	|	вогВариантыОпросовНаборКлассификаторов.НомерВерсииОпроса + &Разделитель КАК Текст
	|ПОМЕСТИТЬ ВТ_Строка
	|ИЗ
	|	ТаблицаКлассификаторов КАК ТаблицаКлассификаторов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.вогВариантыОпросов.НаборКлассификаторов КАК вогВариантыОпросовНаборКлассификаторов
	|		ПО ТаблицаКлассификаторов.Классификатор = вогВариантыОпросовНаборКлассификаторов.Классификатор
	|			И (вогВариантыОпросовНаборКлассификаторов.Ссылка = &ВариантОпроса)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	0 КАК Номер
	|ПОМЕСТИТЬ ВТ_Цифры
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	1
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	2
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	3
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	4
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	5
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	6
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	7
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	8
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	9
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Набор1.Номер * 100 + Набор2.Номер * 10 + Набор3.Номер КАК Номер
	|ПОМЕСТИТЬ ВТ_Номера
	|ИЗ
	|	ВТ_Цифры КАК Набор1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цифры КАК Набор2
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Цифры КАК Набор3
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Классификатор КАК Классификатор,
	|	ВложенныйЗапрос.Значение КАК Значение,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ВложенныйЗапрос.Текст, ВложенныйЗапрос.Н + 1, 1) = "" ""
	|			ТОГДА ПОДСТРОКА(ВложенныйЗапрос.Текст, ВложенныйЗапрос.Н + 2, ВложенныйЗапрос.К - ВложенныйЗапрос.Н - 1 - 1)
	|		ИНАЧЕ ПОДСТРОКА(ВложенныйЗапрос.Текст, ВложенныйЗапрос.Н + 1, ВложенныйЗапрос.К - ВложенныйЗапрос.Н - 1)
	|	КОНЕЦ КАК ИсключаемаяВерсияОпроса
	|ПОМЕСТИТЬ ВТ_ИсключаемыеКлассификаторы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_Номера.Номер КАК Н,
	|		МИНИМУМ(Н.Номер) КАК К,
	|		МАКСИМУМ(Н.Номер) КАК Макс,
	|		ВТ_Строка.Текст КАК Текст,
	|		ВТ_Строка.Классификатор КАК Классификатор,
	|		ВТ_Строка.Значение КАК Значение
	|	ИЗ
	|		ВТ_Номера КАК ВТ_Номера
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Строка КАК ВТ_Строка
	|			ПО (ПОДСТРОКА(ВТ_Строка.Текст, ВТ_Номера.Номер, 1) ПОДОБНО ""["" + &Разделитель + ""]""
	|					ИЛИ ВТ_Номера.Номер = 0)
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Номера КАК Н
	|			ПО (ПОДСТРОКА(ВТ_Строка.Текст, Н.Номер, 1) ПОДОБНО ""["" + &Разделитель + ""]"")
	|				И (Н.Номер > ВТ_Номера.Номер)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТ_Номера.Номер,
	|		ВТ_Строка.Текст,
	|		ВТ_Строка.Классификатор,
	|		ВТ_Строка.Значение) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаКлассификаторов.Классификатор КАК Классификатор,
	|	ТаблицаКлассификаторов.КлассификаторПредставление КАК КлассификаторПредставление,
	|	ТаблицаКлассификаторов.Значение КАК Значение,
	|	ТаблицаКлассификаторов.ЗначениеПредставление КАК ЗначениеПредставление,
	|	ТаблицаКлассификаторов.Аналитика КАК Аналитика,
	|	ТаблицаКлассификаторов.ИспользуемаяАналитика КАК ИспользуемаяАналитика,
	|	ТаблицаКлассификаторов.ВидОтображения КАК ВидОтображения,
	|	ТаблицаКлассификаторов.СпособФормирования КАК СпособФормирования,
	|	ТаблицаКлассификаторов.ХранитьИсториюИзменения КАК ХранитьИсториюИзменения,
	|	ТаблицаКлассификаторов.Ответственный КАК Ответственный,
	|	ТаблицаКлассификаторов.ДополнительныйРеквизит КАК ДополнительныйРеквизит,
	|	ТаблицаКлассификаторов.ЗначениеРеквизита КАК ЗначениеРеквизита,
	|	ТаблицаКлассификаторов.Включен КАК Включен,
	|	ТаблицаКлассификаторов.КлючСтроки КАК КлючСтроки,
	|	ТаблицаКлассификаторов.КлючКлассификатора КАК КлючКлассификатора,
	|	ТаблицаКлассификаторов.ОтветПолучен КАК ОтветПолучен
	|ИЗ
	|	ТаблицаКлассификаторов КАК ТаблицаКлассификаторов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсключаемыеКлассификаторы КАК ВТ_ИсключаемыеКлассификаторы
	|		ПО ТаблицаКлассификаторов.Классификатор = ВТ_ИсключаемыеКлассификаторы.Классификатор
	|			И ТаблицаКлассификаторов.Значение = ВТ_ИсключаемыеКлассификаторы.Значение
	|			И ((ВЫРАЗИТЬ(ВТ_ИсключаемыеКлассификаторы.ИсключаемаяВерсияОпроса КАК СТРОКА(10))) = &НомерВерсииОпроса)
	|ГДЕ
	|	ВТ_ИсключаемыеКлассификаторы.Значение ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ТаблицаКлассификаторов", ТаблицаКлассификаторов);
	Запрос.УстановитьПараметр("ВариантОпроса", 			ВариантОпроса);
	Запрос.УстановитьПараметр("НомерВерсииОпроса", 		Строка(НомерВерсииОпроса));
	Запрос.УстановитьПараметр("Разделитель", 			",");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции
// -- VOG Солодов В.В. 24.09.2020 CRM-935

#КонецОбласти

#Область РаботаСУсловиямВопросов

Процедура ЗаполнитьДанныеУсловийВопросовПриСозданииНаСервере(Форма) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Форма.АдресСхемыКомпоновкиУсловий) Тогда
		СхемаКомпоновкиДанных = ПолучитьОбщийМакет("вогСхемаАнализаЗависимостиВопросов");
		Форма.АдресСхемыКомпоновкиУсловий = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Форма.УникальныйИдентификатор);
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьДанныеУсловийВопросовПриЧтении(Форма, ТекущийОбъект) Экспорт 
	
	вогУправлениеОпросамиСервер.ЗаполнитьДанныеУсловийВопросовПриСозданииНаСервере(Форма);
	
	СохраненныеНастройки = ТекущийОбъект.НастройкиОтбораЗависимости.Получить();
	
	Если НЕ СохраненныеНастройки = Неопределено Тогда
		
		Источник = Новый ИсточникДоступныхНастроекКомпоновкиДанных(Форма.АдресСхемыКомпоновкиУсловий);
		
		Форма.НастройкиУсловийЗависимости.Инициализировать(Источник);
		
		CRM_ОбщегоНазначенияКлиентСервер.СкопироватьОтборКомпоновкиДанных(Форма.НастройкиУсловийЗависимости.Настройки.Отбор.Элементы, СохраненныеНастройки.Отбор.Элементы);
		CRM_ОбщегоНазначенияКлиентСервер.СкопироватьПараметрыКомпоновки(Форма.НастройкиУсловийЗависимости.Настройки.ПараметрыДанных, СохраненныеНастройки.ПараметрыДанных);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеУсловийВопросовПередЗаписью(Форма, ТекущийОбъект) Экспорт 
	
	Если Форма.Объект.УстановленаЗависимость Тогда
		
		ДанныеДляСохранения = Форма.НастройкиУсловийЗависимости.Настройки;
		
		ТекущийОбъект.УстановленаЗависимость = Ложь;
		Форма.Объект.УстановленаЗависимость = Ложь;
		
		// Проверяем что не пустой отбор
		Для Каждого Стр из ДанныеДляСохранения.Отбор.Элементы Цикл 
			
			Если  Стр.Использование Тогда	
				ТекущийОбъект.УстановленаЗависимость = Истина;
				Форма.Объект.УстановленаЗависимость = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе 
		
		ДанныеДляСохранения = Неопределено;
		
	КонецЕсли;
	
	ТекущийОбъект.НастройкиОтбораЗависимости = Новый ХранилищеЗначения(ДанныеДляСохранения);
	
КонецПроцедуры

Функция ПоложительноеЗначениеОтображенияПоУсловиям(ДанныеПроверки, СтруктураСТаблицами) Экспорт 
	
	Результат = Ложь;
	
	СтруктураМакета = вогУправлениеОпросамиПовтИспСеанс.ПолучитьКомпоновщикПоЭлементуАнкеты(ДанныеПроверки);
	
	Если СтруктураМакета = Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(СтруктураМакета.МакетКомпоновки, СтруктураСТаблицами,, Истина);
	
	ТаблицаИтог = Новый ТаблицаЗначений;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаИтог);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ПоискПараметра = СтруктураМакета.МакетКомпоновки.ЗначенияПараметров.Найти("ИнвертироватьУсловие");
	
	Если СтруктураМакета.ЗначенияПараметров.Свойство("ИнвертироватьУсловие") И СтруктураМакета.ЗначенияПараметров.ИнвертироватьУсловие Тогда
		Возврат НЕ ТаблицаИтог.Количество();
	Иначе 
		Возврат Истина И ТаблицаИтог.Количество();
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСтруктуруДанныхПолученныхОтветовДляОбработкиУсловий(Объект) Экспорт
	
	//START Кайдашов 13/01/20 CRM-150	
	СтруктураСДанными = Новый Структура();
	
	ТаблицаЭлементарныхВопросов = Новый ТаблицаЗначений;
	ТаблицаЭлементарныхВопросов.Колонки.Добавить("ЭлементарныйВопрос",Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ВопросыДляАнкетирования"));
	ТаблицаЭлементарныхВопросов.Колонки.Добавить("ЭлементраныйОтвет",Метаданные.ПланыВидовХарактеристик.ВопросыДляАнкетирования.Тип);
	
	
	ТаблицаВопросов				= Новый ТаблицаЗначений;
	ТаблицаВопросов.Колонки.Добавить("Вопрос",Новый ОписаниеТипов("СправочникСсылка.вогВопросы"));
	ТаблицаВопросов.Колонки.Добавить("ОбъектОпроса",Метаданные.ОпределяемыеТипы.вогВариантыОтвета.Тип);
	ТаблицаВопросов.Колонки.Добавить("ВариантОтвета",Метаданные.ОпределяемыеТипы.вогОбъектыОпроса.Тип);
	
	ТаблицаКлассификаторовДляУсловий		= Новый ТаблицаЗначений;
	ТаблицаКлассификаторовДляУсловий.Колонки.Добавить("Классификатор",Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.CRM_Классификаторы"));
	ТаблицаКлассификаторовДляУсловий.Колонки.Добавить("ЗначениеКлассификатора",Метаданные.ПланыВидовХарактеристик.CRM_Классификаторы.Тип);
			
	Для Каждого Стр из Объект.Состав Цикл 
		НоваяСтрока 					= ТаблицаЭлементарныхВопросов.Добавить();	
		НоваяСтрока.ЭлементарныйВопрос 	= Стр.ЭлементарныйВопрос;
		НоваяСтрока.ЭлементраныйОтвет 	= Стр.Ответ;
	КонецЦикла;
	
	Для Каждого Стр из Объект.СоставОпроса Цикл 
		НоваяСтрока 					= ТаблицаВопросов.Добавить();	
		НоваяСтрока.Вопрос 				= Стр.Вопрос;
		НоваяСтрока.ОбъектОпроса 		= Стр.ОбъектОпроса;
		НоваяСтрока.ВариантОтвета 		= Стр.ВариантОтвета;
	КонецЦикла;
	
	//Блашин надо впихнуть даже если не заполнен для наложения условий
	
	 Запрос = Новый Запрос;
	 Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	вогВариантыОпросовНаборКлассификаторов.Классификатор КАК Классификатор
	 |ПОМЕСТИТЬ вт_СоставИзВарианта
	 |ИЗ
	 |	ПланВидовХарактеристик.вогВариантыОпросов.НаборКлассификаторов КАК вогВариантыОпросовНаборКлассификаторов
	 |ГДЕ
	 |	вогВариантыОпросовНаборКлассификаторов.Ссылка = &ВариантОпроса
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	CRM_ОбъектыЗначенийКлассификаторов.ЗначениеКлассификатора.Владелец КАК Классификатор,
	 |	CRM_ОбъектыЗначенийКлассификаторов.ЗначениеКлассификатора КАК ЗначениеКлассификатора
	 |ПОМЕСТИТЬ вт_ЗначенияКлассификаторов
	 |ИЗ
	 |	РегистрСведений.CRM_ОбъектыЗначенийКлассификаторов КАК CRM_ОбъектыЗначенийКлассификаторов
	 |ГДЕ
	 |	CRM_ОбъектыЗначенийКлассификаторов.Объект = &Респондент
	 |;
	 |
	 |////////////////////////////////////////////////////////////////////////////////
	 |ВЫБРАТЬ
	 |	вт_СоставИзВарианта.Классификатор КАК Классификатор,
	 |	ЕСТЬNULL(вт_ЗначенияКлассификаторов.ЗначениеКлассификатора,ЗНАЧЕНИЕ(Справочник.CRM_ЗначенияКлассификаторов.ПустаяСсылка)) КАК ЗначениеКлассификатора
	 |ИЗ
	 |	вт_СоставИзВарианта КАК вт_СоставИзВарианта
	 |		ЛЕВОЕ СОЕДИНЕНИЕ вт_ЗначенияКлассификаторов КАК вт_ЗначенияКлассификаторов
	 |		ПО вт_СоставИзВарианта.Классификатор = вт_ЗначенияКлассификаторов.Классификатор";
	 
	 Запрос.УстановитьПараметр("Респондент",Объект.Респондент);
	 Запрос.УстановитьПараметр("ВариантОпроса",Объект.ВариантОпроса);
	 
	 Результат = Запрос.Выполнить();
	 Выборка = Результат.Выбрать();
	 
	 Пока Выборка.Следующий() Цикл
		 НоваяСтрока 						= ТаблицаКлассификаторовДляУсловий.Добавить();
		 ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
	 КонецЦикла;
	 
	//Блашин 	
	//Для Каждого Стр из Объект.СоставКлассификаторов Цикл 
	//	НоваяСтрока 						= ТаблицаКлассификаторовДляУсловий.Добавить();	
	//	НоваяСтрока.ЗначениеКлассификатора 	= Стр.ЗначениеКлассификатора;
	//	НоваяСтрока.Классификатор 			= Стр.ЗначениеКлассификатора.Владелец;
	//КонецЦикла;
	
	СтруктураСДанными.Вставить("ТаблицаЭлементарныхВопросов", ТаблицаЭлементарныхВопросов);
	СтруктураСДанными.Вставить("ТаблицаВопросов", ТаблицаВопросов);
	СтруктураСДанными.Вставить("ТаблицаКлассификаторов", ТаблицаКлассификаторовДляУсловий);
	// ++ VOG Солодов 25.03.2019
	//START Кайдашов 09/01/20 CRM 150
	СтруктураСДанными.Вставить("ТаблицаРеквизиты", ПолучитьТаблицуРеквизитовРеспондента(Объект.Респондент,Объект.НомерВерсииОпроса,Объект.ВариантОпроса));
	// -- VOG Солодов 25.03.2019
	
	ЗапросОбъединениеТаблиц = Новый Запрос("ВЫБРАТЬ
	                                       |	ТаблицаВопросов.Вопрос КАК Вопрос,
	                                       |	ТаблицаВопросов.ОбъектОпроса КАК ОбъектОпроса,
	                                       |	ТаблицаВопросов.ВариантОтвета КАК ВариантОтвета
	                                       |ПОМЕСТИТЬ втТаблицаВопросов
	                                       |ИЗ
	                                       |	&ТаблицаВопросов КАК ТаблицаВопросов
	                                       |;
	                                       |
	                                       |////////////////////////////////////////////////////////////////////////////////
	                                       |ВЫБРАТЬ
	                                       |	ТаблицаЭлементарныхВопросов.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
	                                       |	ТаблицаЭлементарныхВопросов.ЭлементраныйОтвет КАК ЭлементраныйОтвет
	                                       |ПОМЕСТИТЬ втТаблицаЭлементарныхВопросов
	                                       |ИЗ
	                                       |	&ТаблицаЭлементарныхВопросов КАК ТаблицаЭлементарныхВопросов
	                                       |;
	                                       |
	                                       |////////////////////////////////////////////////////////////////////////////////
	                                       |ВЫБРАТЬ
	                                       |	Классификаторы.ЗначениеКлассификатора КАК ЗначениеКлассификатора,
	                                       |	Классификаторы.Классификатор КАК Классификатор
	                                       |ПОМЕСТИТЬ втКлассификаторы
	                                       |ИЗ
	                                       |	&Классификаторы КАК Классификаторы
	                                       |;
	                                       |
	                                       |////////////////////////////////////////////////////////////////////////////////
	                                       |ВЫБРАТЬ
	                                       |	ТаблицаРеквизиты.Респондент КАК Респондент,
	                                       |	ТаблицаРеквизиты.НомерВерсииОпроса КАК НомерВерсииОпроса,
	                                       |	ТаблицаРеквизиты.ВариантОпроса КАК ВариантОпроса  //Кайдашов CRM-193
	                                       |ПОМЕСТИТЬ втРеквизиты
	                                       |ИЗ
	                                       |	&ТаблицаРеквизиты КАК ТаблицаРеквизиты
	                                       |;
	                                       |
	                                       |////////////////////////////////////////////////////////////////////////////////
	                                       |ВЫБРАТЬ
	                                       |	втТаблицаЭлементарныхВопросов.ЭлементарныйВопрос КАК ЭлементарныйВопрос,
	                                       |	втТаблицаЭлементарныхВопросов.ЭлементраныйОтвет КАК ЭлементраныйОтвет,
	                                       |	втТаблицаВопросов.Вопрос КАК Вопрос,
	                                       |	втТаблицаВопросов.ОбъектОпроса КАК ОбъектОпроса,
	                                       |	втТаблицаВопросов.ВариантОтвета КАК ВариантОтвета,
	                                       |	втРеквизиты.Респондент КАК Респондент,
	                                       |	втРеквизиты.НомерВерсииОпроса КАК НомерВерсииОпроса,
	                                       |	втРеквизиты.ВариантОпроса КАК ВариантОпроса, // Кайдашов CRM-193
	                                       |	втКлассификаторы.ЗначениеКлассификатора КАК ЗначениеКлассификатора,
	                                       |	втКлассификаторы.Классификатор КАК Классификатор
	                                       |ИЗ
	                                       |	втТаблицаВопросов КАК втТаблицаВопросов
	                                       |		ПОЛНОЕ СОЕДИНЕНИЕ втТаблицаЭлементарныхВопросов КАК втТаблицаЭлементарныхВопросов
	                                       |		ПО (ИСТИНА)
	                                       |		ПОЛНОЕ СОЕДИНЕНИЕ втКлассификаторы КАК втКлассификаторы
	                                       |		ПО (ИСТИНА)
	                                       |			И (ИСТИНА),
	                                       |	втРеквизиты КАК втРеквизиты");
	ЗапросОбъединениеТаблиц.УстановитьПараметр("ТаблицаВопросов",СтруктураСДанными.ТаблицаВопросов);
	ЗапросОбъединениеТаблиц.УстановитьПараметр("ТаблицаЭлементарныхВопросов",СтруктураСДанными.ТаблицаЭлементарныхВопросов);
	ЗапросОбъединениеТаблиц.УстановитьПараметр("Классификаторы",СтруктураСДанными.ТаблицаКлассификаторов);
	ЗапросОбъединениеТаблиц.УстановитьПараметр("ТаблицаРеквизиты",СтруктураСДанными.ТаблицаРеквизиты);
	РезультатОбъединениеТаблиц = ЗапросОбъединениеТаблиц.Выполнить();
	втТаблицаДанных = РезультатОбъединениеТаблиц.Выгрузить();
	СтруктураСДанными.Вставить("ТаблицаДанных",втТаблицаДанных);
	
	Возврат СтруктураСДанными;
	
КонецФункции

// ++ VOG Солодов 25.03.2019
Функция ПолучитьТаблицуРеквизитовРеспондента(РеспондентСсылка,НомерВерсииОпроса=0,ВариантОпроса = Неопределено)
	
	ТаблицаРеквизитов = Новый ТаблицаЗначений;
	ТаблицаРеквизитов.Колонки.Добавить("Респондент",Метаданные.ПланыВидовХарактеристик.вогВариантыОпросов.Тип);
	ТаблицаРеквизитов.Колонки.Добавить("НомерВерсииОпроса",Новый ОписаниеТипов("Число"));
	ТаблицаРеквизитов.Колонки.Добавить("ВариантОпроса", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.вогВариантыОпросов")); //Кайдашов CRM-193
	
	//Кайдашов CRM-103
	//Если РеспондентСсылка = Неопределено Тогда
	//	Возврат ТаблицаРеквизитов;
	//КонецЕсли;
	
	НоваяСтрока = ТаблицаРеквизитов.Добавить();
	НоваяСтрока.Респондент = РеспондентСсылка;
	НоваяСтрока.НомерВерсииОпроса = НомерВерсииОпроса;
	НоваяСтрока.ВариантОпроса = ВариантОпроса;
	
	Возврат ТаблицаРеквизитов;
	
КонецФункции
// -- VOG Солодов 25.03.2019
//END Кайдашов CRM-150
#КонецОбласти

#Область РаботаСЭлементарнымиВопросами

Функция ОтветНаЭлементарныйВопросПоИдентификатору(ТекущийОбъект, ИдентификаторВопроса, СвязанноеЗначение = Ложь) Экспорт
	
	ВопросGUID 					= Новый УникальныйИдентификатор(ИдентификаторВопроса);
	
	ВопросСсылка			 	= ПланыВидовХарактеристик.ВопросыДляАнкетирования.ПолучитьСсылку(ВопросGUID);
	
	НайденныеСтроки 			= ТекущийОбъект.Состав.НайтиСтроки(Новый Структура("ЭлементарныйВопрос", ВопросСсылка));
	
	Ответ = Неопределено;
	
	Для Каждого СтрокаВопрос Из НайденныеСтроки Цикл
		
		Если СвязанноеЗначение  Тогда
			Ответ = СтрокаВопрос.Ответ.СвязанноеЗначение; 
		Иначе 
			Ответ = СтрокаВопрос.Ответ;
		КонецЕсли; 
		
	КонецЦикла;
	
	Возврат Ответ;
	
КонецФункции // ()
 
#КонецОбласти




//START Кайдашов 24/06/19
Функция СформироватьНаборДанныхВариантыОтветов(Вопрос) Экспорт

	СхемаИНастройки = Новый Структура;
	СхемаИНастройки.Вставить("СхемаКомпоновкиДанных",     Неопределено);
	СхемаИНастройки.Вставить("НастройкиКомпоновкиДанных", Неопределено);
	СхемаИНастройки.СхемаКомпоновкиДанных = Вопрос.ХранилищеСхемыКомпоновкиДанныхВариантовОтветов.Получить();
	СхемаИНастройки.НастройкиКомпоновкиДанных = Вопрос.ХранилищеНастроекКомпоновкиДанныхВариантовОтветов.Получить();
		
	//Параметры данных				
	СхемаКомпоновкиДанныхПараметры = СхемаИНастройки.СхемаКомпоновкиДанных.Параметры;
	
	Если СхемаИНастройки.СхемаКомпоновкиДанных.Параметры.Найти("Вопрос") <> Неопределено Тогда
		СхемаКомпоновкиДанныхПараметры.Вопрос.Значение = Вопрос;
	КонецЕсли;
	
	URLСхемаКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаИНастройки.СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());
	НовыйИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемаКомпоновкиДанных);
	
	// Восстановим пользовательские настройки отборов
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(НовыйИсточникДоступныхНастроек);
	Если НЕ СхемаИНастройки.НастройкиКомпоновкиДанных = Неопределено Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаИНастройки.НастройкиКомпоновкиДанных);
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаИНастройки.СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КонецЕсли;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	
	Возврат НаборДанныхВопроса(СхемаИНастройки.СхемаКомпоновкиДанных, Настройки);

КонецФункции // СформироватьНаборДанныхВопроса()
//END Кайдашов
