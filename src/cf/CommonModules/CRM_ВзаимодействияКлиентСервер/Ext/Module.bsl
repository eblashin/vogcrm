// Формирует представление адресата электронной почты.
//
// Параметры:
//  Имя     - Строка - имя адресата.
//  Адрес   - Строка - адрес электронной почты адресата.
//  Контакт - СправочникСсылка - контакт, которому принадлежит имя и адрес почты.
//
// Возвращаемое значение:
//   Строка - сформированное представление адресата электронной почты.
//
Функция ПолучитьПредставлениеАдресата(Имя, Адрес, Контакт) Экспорт
	
	АдресСоСкобками = "<" + Адрес + ">";
	Результат = ?(Имя = Адрес ИЛИ Имя = "", Адрес, ?(ПустаяСтрока(Адрес),Имя, СокрЛП(СтрЗаменить(Имя, АдресСоСкобками, "")) + " " + АдресСоСкобками));
	Если ЗначениеЗаполнено(Контакт) И ТипЗнч(Контакт) <> Тип("Строка") Тогда
		Результат = Результат + " [" + ПолучитьПредставлениеКонтакта(Контакт) + "]";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьПредставлениеКонтакта(Контакт)

	Возврат Строка(Контакт);

КонецФункции

// Формирует представление списка адресатов электронной почты для коллекции адресатов.
//
// Параметры:
//  ТаблицаАдресатов    - ТаблицаЗначений - таблица с данным адресатов.
//  ВключатьИмяКонтакта - Булево - признак необходимости включения в представление данных контакта.
//  Контакт             - СправочникСсылка - контакт, которому принадлежит имя и адрес почты.
//
// Возвращаемое значение:
//  Строка - сформированное представление списка адресатов электронной почты.
//
Функция ПолучитьПредставлениеСпискаАдресатов(ТаблицаАдресатов, ВключатьИмяКонтакта = Истина) Экспорт

	Представление = "";
	Для Каждого СтрокаТаблицы Из ТаблицаАдресатов Цикл
		Представление = Представление 
	              + ПолучитьПредставлениеАдресата(СтрокаТаблицы.Представление,
	                                              СтрокаТаблицы.Адрес, 
	                                             ?(ВключатьИмяКонтакта, СтрокаТаблицы.Контакт, "")) + ", ";
	КонецЦикла;

	// +CRM уберем запятую в конце.
	Представление = СокрЛП(Представление);
	
	Если Прав(Представление, 1) = "," Тогда
		ДлинаСтрокиБезЗапятой = СтрДлина(Представление) - 1;
		Представление = Лев(Представление, ДлинаСтрокиБезЗапятой);
	КонецЕсли;

	Возврат Представление;

КонецФункции

// Проверяет, является ли переданная ссылка предметом взаимодействий.
//
// Параметры:
//  ОбъектСсылка - Ссылка - ссылка, для которой выполняется проверка,
//                          является ли она ссылкой на предмет взаимодействий.
//
// Возвращаемое значение:
//   Булево   - Истина если является, Ложь в обратном случае.
//
Функция ЯвляетсяПредметом(ОбъектСсылка) Экспорт
	
	CRM_ВзаимодействияСервер.ЯвляетсяПредметом(ОбъектСсылка);
	
КонецФункции 

// При необходимости дополняет массив строковых представлений типов предметов взаимодействий.
// Используется, если в конфигурации определен хотя бы один предмет взаимодействий. Например, заказы, вакансии и т.п.
//
// Параметры:
//  ТипыПредметов  - Массив - массив, в который добавляются строковые представления типов предметов взаимодействий.
//
Процедура ПриОпределенииВозможныхПредметов(ТипыПредметов) Экспорт
	
	// +CRM не переносить в объединенные решения
	ТипыПредметов.Добавить("СправочникСсылка.МаркетинговыеМероприятия");
	ТипыПредметов.Добавить("СправочникСсылка.Проекты");
	// -CRM не переносить в объединенные решения
	
	// +CRM
	ТипыПредметов.Добавить("ДокументСсылка.CRM_РассылкаЭлектронныхПисем");
	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Документы", "CRM_СчетНаОплатуПокупателю") Тогда
		ТипыПредметов.Добавить("ДокументСсылка.CRM_СчетНаОплатуПокупателю");
	КонецЕсли;
	ТипыПредметов.Добавить("ДокументСсылка.CRM_Телемаркетинг");
	ТипыПредметов.Добавить("БизнесПроцессСсылка.CRM_БизнесПроцесс");
	// -CRM
	
КонецПроцедуры

// Дополняет описания возможных типов контактов.
// Используется, если в конфигурации определен хотя бы один тип контактов взаимодействий,
// помимо справочника Пользователи. Например, партнеры, контактные лица и т.п.
//
// Параметры:
//  ТипыКонтактов - Массив - массив структур, в котором описываются возможные типы контактов.
//    Каждая структура содержит описание одного типа контактов и содержит следующие поля:
//       *Тип                                - Тип    - тип ссылки контакта.
//       *ВозможностьИнтерактивногоСоздания  - Булево - признак возможности интерактивного создания контакта из
//                                                      документов - взаимодействий.
//       *Имя                                 - Строка - имя типа контакта , как оно определено в метаданных.
//       *Представление                       - Строка - представление типа контакта для отображения пользователю.
//       *Иерархический                       - Булево - признак того, является ли справочник иерархическим.
//       *ЕстьВладелец                        - Булево - признак того, что у контакта есть владелец.
//       *ИмяВладельца                        - Строка - имя владельца контакта, как оно определено в метаданных.
//       *ИскатьПоДомену                      - Булево - признак того, что по данному типу контакта будет осуществляться
//                                                       поиск по домену.
//       *Связь                               - Строка - описывает возможную связь данного контакта с другим контактом, в
//                                                       случае когда текущий контакт является реквизитом другого контакта.
//                                                       Описывается следующей строкой "ИмяТаблицы.ИмяРеквизита".
//       *ИмяРеквизитаПредставлениеКонтакта   - Строка - имя реквизита контакта, из которого будет получено
//                                                       представление контакта.
//
Процедура ПриОпределенииВозможныхКонтактов(ТипыКонтактов) Экспорт
	// +CRM не переносить в объединенные решения
	ВзаимодействияКлиентСервер.ДобавитьЭлементМассиваОписанияВозможныхТиповКонтактов(ТипыКонтактов,
	                                                                                 Тип("СправочникСсылка.Партнеры"),
	                                                                                 Истина,
	                                                                                 "Партнеры",
	                                                                                 НСтр("ru = 'Партнеры'"),
	                                                                                 Ложь,
	                                                                                 Ложь,
	                                                                                 "",
	                                                                                 Истина,
	                                                                                 "",
	                                                                                 "НаименованиеПолное");
	
	ВзаимодействияКлиентСервер.ДобавитьЭлементМассиваОписанияВозможныхТиповКонтактов(ТипыКонтактов,
	                                                                                 Тип("СправочникСсылка.КонтактныеЛицаПартнеров"),
	                                                                                 Истина,
	                                                                                 "КонтактныеЛицаПартнеров",
	                                                                                 НСтр("ru = 'Контактные лица'"),
	                                                                                 Ложь,
																					 // { VOG RMV 2019-03-06
																					 //Истина,
																					 //"Партнеры",
																					 Ложь,
	                                                                                 "",
																					 // } VOG RMV 2019-03-06
	                                                                                 Истина,
	                                                                                 "");
	
	ВзаимодействияКлиентСервер.ДобавитьЭлементМассиваОписанияВозможныхТиповКонтактов(ТипыКонтактов,
	                                                                                 Тип("СправочникСсылка.ФизическиеЛица"),
	                                                                                 Истина,
	                                                                                 "ФизическиеЛица",
	                                                                                 НСтр("ru = 'Физические лица'"),
	                                                                                 Истина,
	                                                                                 Ложь,
	                                                                                 "",
	                                                                                 Ложь,
	                                                                                 "");
	// -CRM не переносить в объединенные решения
	
	ВзаимодействияКлиентСервер.ДобавитьЭлементМассиваОписанияВозможныхТиповКонтактов(ТипыКонтактов,
	                                                                                 Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты"),
	                                                                                 Истина,
	                                                                                 "CRM_ПотенциальныеКлиенты",
	                                                                                 НСтр("ru = 'Потенциальные клиенты'"),
	                                                                                 Ложь,
	                                                                                 Ложь,
	                                                                                 "",
	                                                                                 Ложь,
	                                                                                 "");
КонецПроцедуры
