
#Область ПрограммныйИнтерфейс

Процедура ОбработкаКомандыЗапускаБизнесПроцесса(Форма, Команда, Знач Ссылка) Экспорт
	
	СтрокаЗапуска = НайтиСтрокуДанныхЗапуска(Форма, Команда.Имя);
	Если СтрокаЗапуска = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не определены данные для запуска бизнес-процесса'"));	
		Возврат;
		
	КонецЕсли;
	
	//Контроль заполненности (только для согласований)
	Если СтрокаЗапуска.ЯвляетсяСогласованием Тогда
		Если СтрокаЗапуска.ПроцентЗаполненностиОбщий < 100.00 Тогда
			ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Запуск процесса согласования невозможен, т.к. не заполнены необходимые данные. 
                                                                                                |Заполнено реквизитов %1 из %2. '"), СтрокаЗапуска.ЗаполненоРеквизитов, СтрокаЗапуска.ВсегоРеквизитов);
			ПоказатьПредупреждение(, ТекстПредупреждения, 15);
			Возврат;
		
		КонецЕсли;		
	
	КонецЕсли;
	
	// ++ VOG Солодов В.В. 04.04.2019
	СтруктураЗапуска = Новый Структура;
	СтруктураЗапуска.Вставить("Ссылка", 		Ссылка);
	СтруктураЗапуска.Вставить("КартаМаршрута", 	СтрокаЗапуска.КартаМаршрута);
	СтруктураЗапуска.Вставить("Настройка", 		СтрокаЗапуска.Настройка);
	
	Если скМеханизмЗапускаБизнесПроцессовОбъектовСервер.ЕстьНезавершенныеПроцессыПоОбъекту(СтруктураЗапуска) Тогда
		Возврат;
	КонецЕсли;
	// -- VOG Солодов В.В. 04.04.2019
	
	Если СтрокаЗапуска.РежимЗапуска = ПредопределенноеЗначение("Перечисление.скРежимыЗапускаБизнесПроцесса.Стандартный") Тогда
		СтруктураОснования = Новый Структура("Основание, КартаМаршрута", Ссылка, СтрокаЗапуска.КартаМаршрута);
		ПараметрыФормы	   = Новый Структура("Основание", СтруктураОснования);
			
		ОткрытьФорму("БизнесПроцесс.CRM_БизнесПроцесс.ФормаОбъекта",
			ПараметрыФормы,
			Форма,
			Форма.УникальныйИдентификатор
		);
		
	ИначеЕсли СтрокаЗапуска.РежимЗапуска = ПредопределенноеЗначение("Перечисление.скРежимыЗапускаБизнесПроцесса.Произвольный") Тогда  	
		Если Не ЗначениеЗаполнено(СтрокаЗапуска.АлгоритмЗапуска) Тогда
			ВызватьИсключение НСтр("ru = 'Не определен алгоритм запуска бизнес-процесса по настройке: '") + СтрокаЗапуска.Настройка;	
		КонецЕсли;
		
		//Подготовка вх. данных
		СтруктураЗапуска = Новый Структура("ИмяКоманды, КартаМаршрута, Настройка, АлгоритмЗапуска");
		ЗаполнитьЗначенияСвойств(СтруктураЗапуска, СтрокаЗапуска);
		
		//Выполнение
		Результат 		= Неопределено;
		АлгоритмЗапуска = СтрокаЗапуска.АлгоритмЗапуска;
		Пока Истина Цикл
			ПервыйСимволДирективы    = Найти(АлгоритмЗапуска, "[");
			ПоследнийСимволДирективы = Найти(АлгоритмЗапуска, "]");
			
			Если ПервыйСимволДирективы = 0 Или ПоследнийСимволДирективы = 0 Тогда
				Прервать;
			Иначе
				Директива = Сред(АлгоритмЗапуска, ПервыйСимволДирективы + 1, ПоследнийСимволДирективы - ПервыйСимволДирективы - 1);
				
				ПервыйСимволАлгоритма    = Найти(АлгоритмЗапуска, "["          + Директива + "]");
				ПоследнийСимволАлгоритма = Найти(АлгоритмЗапуска, "[Окончание" + Директива + "]");
				
				Алгоритм = Сред(АлгоритмЗапуска, ПервыйСимволАлгоритма + СтрДлина(Директива) + 2, ПоследнийСимволАлгоритма - ПервыйСимволАлгоритма - СтрДлина("[Окончание") - 1);
				
				//Запуск алгоритма
				Если Директива = "НаКлиенте" Тогда
					Результат = ОбработкаКомандыПроизвольногоЗапускаБизнесПроцесса(
						Алгоритм, Форма, СтруктураЗапуска, Ссылка, Результат);	
						
				ИначеЕсли Директива = "НаСервере" Тогда
					Результат = скМеханизмЗапускаБизнесПроцессовОбъектовСервер.ОбработкаКомандыПроизвольногоЗапускаБизнесПроцесса(
						Алгоритм, СтруктураЗапуска, Ссылка, Результат);	
				Иначе
					АлгоритмЗапуска = СтрЗаменить(АлгоритмЗапуска, "[" + Директива + "]" + Алгоритм + "[Окончание" + Директива + "]", "");
				КонецЕсли;
				
				АлгоритмЗапуска = СтрЗаменить(АлгоритмЗапуска, "[" + Директива + "]" + Алгоритм + "[Окончание" + Директива + "]", "");
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Не определен режим запуска бизнес-процесса по настройке: '") + СтрокаЗапуска.Настройка;	
	КонецЕсли;	
			
КонецПроцедуры

Функция ОбработкаКомандыПроизвольногоЗапускаБизнесПроцесса(АлгоритмЗапуска, Форма, СтруктураЗапуска, Предмет, Результат)
	
	Попытка
		Выполнить(АлгоритмЗапуска);			
	Исключение
		ТекстСообщения = НСтр("ru = 'Ошибка выполнения обработчика произвольного запуска """ + СтруктураЗапуска.КартаМаршрута + """по настройке'") + " " + СтруктураЗапуска.Настройка + Символы.ПС + ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					
	КонецПопытки;	

	Возврат Результат;	
	
КонецФункции

#КонецОбласти

#Область ВспомогательныеПрцедурыФункции

Функция НайтиСтрокуДанныхЗапуска(Форма, Имя)
	
	Перем Строка;
	
	Строки = Форма.скДанныеЗапуска.НайтиСтроки(
		Новый Структура("ИмяКоманды", Имя)
	);
	
	Если Строки.Количество() > 0 Тогда
		Строка = Строки[0];	
	КонецЕсли;	
	
	Возврат Строка;
	
КонецФункции // НайтиСтрокуДанныхЗапуска()

#КонецОбласти
