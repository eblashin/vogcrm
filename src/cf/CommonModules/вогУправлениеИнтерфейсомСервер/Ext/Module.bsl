#Область ИНТЕРФЕС_ВЗАИМОДЕЙСТВИЯ
	
Процедура ПодключитьДополнительныеКоманды(Форма, ЭлементПодменю) Экспорт
	
	//СписокКоманд = ПолучитьСписокКомандПоСсылке(Форма.Объект.Ссылка);
	Если Форма.Объект.Свойство("Ссылка") Тогда
		СсылкаНаОбъект = Форма.Объект.Ссылка;
	Иначе
		СсылкаНаОбъект = Неопределено;
	КонецЕсли;
	
	СписокКоманд = Справочники.вогДополнительныеКоманды.ПолучитьСписокКомандПоСсылке(СсылкаНаОбъект);
	
	ИмяОписания = "ТаблицаКомандДополнительныеКоманды";
	
	ТипОбщийПараметр = Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.вогТипыЗначенийПараметровВопросов.Тип);
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	
	// ++ VOG Солодов В.В. 29.03.2019 Закомментированный код вынес в отдельную процедуру
	// 
	//МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяОписания, Новый ОписаниеТипов("ТаблицаЗначений")));
	//
	//МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ИмяКоманды", 	Новый ОписаниеТипов("Строка"), 	ИмяОписания));
	//МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Заголовок", 	Новый ОписаниеТипов("Строка"), 	ИмяОписания));
	//МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Обработчик", 	Новый ОписаниеТипов("Строка"), 	ИмяОписания));
	//
	//МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Параметр1", 	ТипОбщийПараметр, 				ИмяОписания));
	//МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Параметр2", 	ТипОбщийПараметр, 				ИмяОписания));
	//МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Параметр3", 	ТипОбщийПараметр, 				ИмяОписания));
	//МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Параметр4", 	ТипОбщийПараметр, 				ИмяОписания));
	//МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Параметр5", 	ТипОбщийПараметр, 				ИмяОписания));
	//
	//Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	СформироватьВспомогательныеДанные(Форма, ИмяОписания, МассивДобавляемыхРеквизитов, ТипОбщийПараметр);
	
	Если СсылкаНаОбъект <> Неопределено Тогда
		СформироватьВспомогательныеДанныеЗапускаБизнесПроцессов(Форма, МассивДобавляемыхРеквизитов);
		СтруктураКонтроля = СформироватьСтруктуруКонтроляРеквизитовОбъекта(СсылкаНаОбъект);
	КонецЕсли;
	
	Если МассивДобавляемыхРеквизитов.Количество() > 0 Тогда
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	КонецЕсли;
	// -- VOG Солодов В.В. 29.03.2019
	
	Для Каждого СтрокаКоманды из СписокКоманд Цикл 
		
		// ++ VOG Солодов В.В. 02.07.2019 task 428
		ГруппаКоманд = ОпределитьГруппуРазмещенияКоманды(Форма, ЭлементПодменю, СтрокаКоманды);
		// До изменения
		
		// -- VOG Солодов В.В. 02.07.2019
		
		ИмяКоманды = "ДополнительнаяКоманда_" + СтрЗаменить(СтрокаКоманды.УникальныйИдентификатор, "-", "_");
		
		КомандаСозданиеОбъектаОпроса = Форма.Команды.Добавить(ИмяКоманды);
		КомандаСозданиеОбъектаОпроса.Действие		= "Подключаемый_ОбработчикДополнительнойКоманды";
		КомандаСозданиеОбъектаОпроса.Заголовок		= СтрокаКоманды.ИмяКоманды;
		
		Если ЗначениеЗаполнено(СтрокаКоманды.ИмяКартинки) Тогда
			КомандаСозданиеОбъектаОпроса.Картинка 		= БиблиотекаКартинок[СтрокаКоманды.ИмяКартинки];
			КомандаСозданиеОбъектаОпроса.Отображение 	= ОтображениеКнопки.КартинкаИТекст;
		КонецЕсли;

		НоваяСтрокаКоманды 								= Форма[ИмяОписания].Добавить();
		
		НоваяСтрокаКоманды.ИмяКоманды 					= ИмяКоманды;
		
		НоваяСтрокаКоманды.Заголовок 					= СтрокаКоманды.ИмяКоманды;
		НоваяСтрокаКоманды.Обработчик 					= СтрокаКоманды.Обработчик;
		НоваяСтрокаКоманды.Параметр1 					= СтрокаКоманды.Параметр1;
		НоваяСтрокаКоманды.Параметр2 					= СтрокаКоманды.Параметр2;
		НоваяСтрокаКоманды.Параметр3 					= СтрокаКоманды.Параметр3;
		НоваяСтрокаКоманды.Параметр4 					= СтрокаКоманды.Параметр4;
		НоваяСтрокаКоманды.Параметр5 					= СтрокаКоманды.Параметр5;
		
		// ++ VOG Солодов В.В. 02.07.2019 task 428
		КнопкаЭлементФормы = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ГруппаКоманд);
		// До изменения
		//КнопкаЭлементФормы = Форма.Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), ЭлементПодменю);
		// -- VOG Солодов В.В. 02.07.2019
		КнопкаЭлементФормы.ИмяКоманды  	= ИмяКоманды;
		
		// ++ VOG Солодов В.В. 29.03.2019
		Если СсылкаНаОбъект <> Неопределено Тогда
			ДобавитьКомандыБизнесПроцессов(Форма, СтруктураКонтроля, НоваяСтрокаКоманды);
		КонецЕсли;
		// -- VOG Солодов В.В. 29.03.2019
		
	КонецЦикла;
	
КонецПроцедуры

// ++ VOG Солодов В.В. 29.03.2019
Процедура ФормаОбъектаПослеЗаписиНаСервере(Форма, ЭлементПодменю) Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ТаблицаКомандДополнительныеКоманды") Тогда
		
		Для Каждого СтрокаДанныхЗапуска Из Форма.ТаблицаКомандДополнительныеКоманды Цикл
			
			Команда = Форма.Команды.Найти(СтрокаДанныхЗапуска.ИмяКоманды);
			
			Если Команда <> Неопределено Тогда
				Форма.Команды.Удалить(Команда);
			КонецЕсли;
			
			Кнопка = Форма.Элементы.Найти(СтрокаДанныхЗапуска.ИмяКоманды);
			
			Если Кнопка <> Неопределено Тогда
				Форма.Элементы.Удалить(Кнопка);
			КонецЕсли;
			
		КонецЦикла;
		
		Форма.ТаблицаКомандДополнительныеКоманды.Очистить();
		
	КонецЕсли;
		
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "скДанныеЗапуска") Тогда
		Форма.скДанныеЗапуска.Очистить();
	КонецЕсли;
	
	ПодключитьДополнительныеКоманды(Форма, ЭлементПодменю);
	
КонецПроцедуры
// -- VOG Солодов В.В. 29.03.2019

Процедура ВыполнитьКодКомандыНаСервере(Значение, ДополнительноеЗначение, ЭтотОбъект, ЭтаФорма, Объект) Экспорт 
	
	Если ДополнительноеЗначение.Свойство("Параметр1") Тогда
		Параметр1 = ДополнительноеЗначение.Параметр1;
	КонецЕсли;
	Если ДополнительноеЗначение.Свойство("Параметр2") Тогда
		Параметр2 = ДополнительноеЗначение.Параметр2;
	КонецЕсли;
	Если ДополнительноеЗначение.Свойство("Параметр3") Тогда
		Параметр3 = ДополнительноеЗначение.Параметр3;
	КонецЕсли;
	Если ДополнительноеЗначение.Свойство("Параметр4") Тогда
		Параметр4 = ДополнительноеЗначение.Параметр4;
	КонецЕсли;
	Если ДополнительноеЗначение.Свойство("Параметр5") Тогда
		Параметр5 = ДополнительноеЗначение.Параметр5;
	КонецЕсли;

	Попытка
		
		Выполнить(ДополнительноеЗначение.КодВыполнения);
		
	Исключение
		
		ТекстСообщения = НСтр("ru = 'Ошибка выполнения обработчика опиания оповещения'") + ОписаниеОшибки();
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СЛУЖЕБНЫЕ_ПРОЦЕДУРЫ_И_ФУНКЦИИ

// ++ VOG Солодов В.В. 29.03.2019
Процедура СформироватьВспомогательныеДанные(Форма, ИмяОписания, МассивДобавляемыхРеквизитов, ТипОбщийПараметр)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, ИмяОписания) Тогда
		Возврат;	
	КонецЕсли;
	
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(ИмяОписания, Новый ОписаниеТипов("ТаблицаЗначений")));
	
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ИмяКоманды", 	Новый ОписаниеТипов("Строка"), 	ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Заголовок", 	Новый ОписаниеТипов("Строка"), 	ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Обработчик", 	Новый ОписаниеТипов("Строка"), 	ИмяОписания));
	
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Параметр1", 	ТипОбщийПараметр, 				ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Параметр2", 	ТипОбщийПараметр, 				ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Параметр3", 	ТипОбщийПараметр, 				ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Параметр4", 	ТипОбщийПараметр, 				ИмяОписания));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Параметр5", 	ТипОбщийПараметр, 				ИмяОписания));
	
КонецПроцедуры

Процедура СформироватьВспомогательныеДанныеЗапускаБизнесПроцессов(Форма, МассивДобавляемыхРеквизитов)

	ИмяТаблицы = "скДанныеЗапуска";
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, ИмяТаблицы) Тогда
		Возврат;	
	КонецЕсли;
	
	МассивДобавляемыхРеквизитов.Добавить(
		Новый РеквизитФормы(ИмяТаблицы, 					Новый ОписаниеТипов("ТаблицаЗначений")));
	МассивДобавляемыхРеквизитов.Добавить(
		Новый РеквизитФормы("ИмяКоманды", 					ОбщегоНазначения.ОписаниеТипаСтрока(150), 											ИмяТаблицы));
	МассивДобавляемыхРеквизитов.Добавить(
		Новый РеквизитФормы("КартаМаршрута", 				Новый ОписаниеТипов("СправочникСсылка.CRM_КартыМаршрутов"), 						ИмяТаблицы));	
	МассивДобавляемыхРеквизитов.Добавить(
		Новый РеквизитФормы("Настройка", 					Новый ОписаниеТипов("СправочникСсылка.скНастройкиЗапускаБизнесПроцессовОбъектов"), 	ИмяТаблицы));	
	МассивДобавляемыхРеквизитов.Добавить(
		Новый РеквизитФормы("РежимЗапуска", 				Новый ОписаниеТипов("ПеречислениеСсылка.скРежимыЗапускаБизнесПроцесса"), 			ИмяТаблицы));	
	МассивДобавляемыхРеквизитов.Добавить(
		Новый РеквизитФормы("ВсегоРеквизитов", 				ОбщегоНазначения.ОписаниеТипаЧисло(15, 2), 											ИмяТаблицы));	
	МассивДобавляемыхРеквизитов.Добавить(
		Новый РеквизитФормы("ЗаполненоРеквизитов", 			ОбщегоНазначения.ОписаниеТипаЧисло(15, 2), 											ИмяТаблицы));	
	МассивДобавляемыхРеквизитов.Добавить(
		Новый РеквизитФормы("ПроцентЗаполненностиОбщий", 	ОбщегоНазначения.ОписаниеТипаЧисло(15, 2), 											ИмяТаблицы));	
	МассивДобавляемыхРеквизитов.Добавить(
		Новый РеквизитФормы("ЯвляетсяСогласованием", 		Новый ОписаниеТипов("Булево"), 														ИмяТаблицы));	
	МассивДобавляемыхРеквизитов.Добавить(
		Новый РеквизитФормы("АлгоритмЗапуска", 				Новый ОписаниеТипов("Строка"), 														ИмяТаблицы));	
	
КонецПроцедуры

Функция СформироватьСтруктуруКонтроляРеквизитовОбъекта(СсылкаНаОбъект) Экспорт
	
	СтруктураКонтроля = Новый Структура;
	СтруктураКонтроля.Вставить("ВсегоРеквизитов", 			0);	
	СтруктураКонтроля.Вставить("ЗаполненоРеквизитов", 		0);	
	СтруктураКонтроля.Вставить("ПроцентЗаполненностиОбщий", 100.00);	
		
	ПараметрыКонтроля = вогКонтрольЗаполненностиРеквизитовОбъектовПовтИсп.ПараметрыКонтроляЗаполненностиРеквизитов();
	
	Если ПараметрыКонтроля <> Неопределено Тогда
		
		ПараметрыКонтроляПроцессов = ПараметрыКонтроля.ПараметрыКонтроляПроцесса.Получить(СсылкаНаОбъект.Метаданные().ПолноеИмя());
		
		Если ПараметрыКонтроляПроцессов <> Неопределено Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЗаполненностьРеквизитовПроцессовОбъектов.ВсегоРеквизитов,
				|	ЗаполненностьРеквизитовПроцессовОбъектов.ЗаполненоРеквизитов,
				|	ЗаполненностьРеквизитовПроцессовОбъектов.ПроцентЗаполненностиОбщий
				|ИЗ
				|	РегистрСведений.вогЗаполненностьРеквизитовПроцессовОбъектов КАК ЗаполненностьРеквизитовПроцессовОбъектов
				|ГДЕ
				|	ЗаполненностьРеквизитовПроцессовОбъектов.Объект = &Объект";
			
			Запрос.УстановитьПараметр("Объект", СсылкаНаОбъект);
			
			ВыборкаКонтроль = Запрос.Выполнить().Выбрать();
			
			Если ВыборкаКонтроль.Следующий() Тогда
				ЗаполнитьЗначенияСвойств(СтруктураКонтроля, ВыборкаКонтроль); 	
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураКонтроля;
	
КонецФункции

Процедура ДобавитьКомандыБизнесПроцессов(Форма, СтруктураКонтроля, СтрокаКоманды)
	
	МассивПараметровКоманды = Новый Массив;
	
	Для Счетчик = 1 По 5 Цикл
		
		НомерПараметра = "Параметр" + Строка(Счетчик);
		
		Если ЗначениеЗаполнено(СтрокаКоманды[НомерПараметра]) Тогда
			МассивПараметровКоманды.Добавить(СтрокаКоманды[НомерПараметра]);
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиЗапускаБизнесПроцессов.Настройка КАК Настройка,
		|	НастройкиЗапускаБизнесПроцессов.Настройка.Представление КАК НастройкаПредставление,
		|	НастройкиЗапускаБизнесПроцессов.КартаМаршрута КАК КартаМаршрута,
		|	НастройкиЗапускаБизнесПроцессов.КартаМаршрута.Наименование КАК Наименование,
		|	НастройкиЗапускаБизнесПроцессов.Настройка.РежимЗапуска КАК РежимЗапуска,
		|	НастройкиЗапускаБизнесПроцессов.Настройка.АлгоритмЗапуска КАК АлгоритмЗапуска,
		|	НастройкиЗапускаБизнесПроцессов.Настройка.СхемаКомпоновкиДанных КАК СхемаКомпоновкиДанных,
		|	НастройкиЗапускаБизнесПроцессов.Настройка.ХранилищеСхемыКомпоновкиДанных КАК ХранилищеСхемыКомпоновкиДанных,
		|	НастройкиЗапускаБизнесПроцессов.Настройка.ХранилищеНастроекКомпоновкиДанных КАК ХранилищеНастроекКомпоновкиДанных,
		|	НастройкиЗапускаБизнесПроцессов.КартаМаршрута.вогЯвляетсяСогласованием КАК ЯвляетсяСогласованием
		|ИЗ
		|	РегистрСведений.скНастройкиЗапускаБизнесПроцессов КАК НастройкиЗапускаБизнесПроцессов
		|ГДЕ
		|	НастройкиЗапускаБизнесПроцессов.Настройка В(&МассивНастроек)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";	
	
	Запрос.УстановитьПараметр("МассивНастроек", МассивПараметровКоманды);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;	
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Форма.скДанныеЗапуска.Добавить();
		НоваяСтрока.ИмяКоманды				  = СтрокаКоманды.ИмяКоманды;
		НоваяСтрока.КартаМаршрута		      = Выборка.КартаМаршрута;
		НоваяСтрока.Настройка				  = Выборка.Настройка;
		НоваяСтрока.РежимЗапуска			  = Выборка.РежимЗапуска;
		
		НоваяСтрока.ВсегоРеквизитов 		  = СтруктураКонтроля.ВсегоРеквизитов;
		НоваяСтрока.ЗаполненоРеквизитов 	  = СтруктураКонтроля.ЗаполненоРеквизитов;
		НоваяСтрока.ПроцентЗаполненностиОбщий = СтруктураКонтроля.ПроцентЗаполненностиОбщий;
		
		НоваяСтрока.ЯвляетсяСогласованием	  = Выборка.ЯвляетсяСогласованием;
		НоваяСтрока.АлгоритмЗапуска			  = Выборка.АлгоритмЗапуска;
		
	КонецЦикла;
	
КонецПроцедуры
// -- VOG Солодов В.В. 29.03.2019

Функция ПолучитьСписокКомандПоСсылке(СсылкаНаОбъект) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вогДополнительныеКоманды.УникальныйИдентификатор КАК УникальныйИдентификатор,
		|	вогДополнительныеКоманды.Порядок КАК Порядок,
		|	вогДополнительныеКоманды.Параметр1 КАК Параметр1,
		|	вогДополнительныеКоманды.Параметр2 КАК Параметр2,
		|	вогДополнительныеКоманды.Параметр3 КАК Параметр3,
		|	вогДополнительныеКоманды.Параметр4 КАК Параметр4,
		|	вогДополнительныеКоманды.Параметр5 КАК Параметр5,
		|	вогДополнительныеКоманды.Обработчик КАК Обработчик,
		|	вогДополнительныеКоманды.ИмяКартинки КАК ИмяКартинки,
		|	вогДополнительныеКоманды.ИмяКоманды КАК ИмяКоманды,
		|	вогДополнительныеКоманды.Источник КАК Источник
		|ИЗ
		|	РегистрСведений.вогДополнительныеКоманды КАК вогДополнительныеКоманды
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(вогДополнительныеКоманды.Источник) = &Тип
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок,
		|	ИмяКоманды";
	
	Запрос.УстановитьПараметр("Тип", ТипЗнч(СсылкаНаОбъект));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса;	
	
КонецФункции

// ++ VOG Солодов В.В. 02.07.2019 task 428
Функция ОпределитьГруппуРазмещенияКоманды(Форма, ЭлементПодменю, СтрокаКоманды)
	
	Если Не ЗначениеЗаполнено(СтрокаКоманды.Родитель) Тогда
		Возврат ЭлементПодменю;
	КонецЕсли;
	
	ИдентификаторГруппы 	= СтрЗаменить(СтрокаКоманды.Родитель.УникальныйИдентификатор(), "-", "_" );
	ИмяЭлементаГруппы 		= "ГруппаДополнительныхКоманд_" + ИдентификаторГруппы;
	
	ЭлементГруппа = Форма.Элементы.Найти(ИмяЭлементаГруппы);
	
	Если ЭлементГруппа <> Неопределено Тогда
		Возврат ЭлементГруппа;
	Иначе
		
		ЭлементГруппа 				= Форма.Элементы.Добавить(ИмяЭлементаГруппы, Тип("ГруппаФормы"), ЭлементПодменю);
		ЭлементГруппа.Вид 			= ВидГруппыФормы.Подменю;
		ЭлементГруппа.Заголовок 	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаКоманды.Родитель, "Наименование");
		ЭлементГруппа.Картинка 		= БиблиотекаКартинок.Подменю;
		
		Возврат ЭлементГруппа;
		
	КонецЕсли;
	
КонецФункции // -- VOG Солодов В.В. 02.07.2019

#КонецОбласти