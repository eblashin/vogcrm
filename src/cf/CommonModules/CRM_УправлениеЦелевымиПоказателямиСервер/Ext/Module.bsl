
// Показатель - показатель для которого строится диаграмма
// Диаграмма - объект диаграмма для отрисовки
//
Процедура ПостроитьДиаграммуПоказателя(Показатель, Диаграмма, МассивМенеджеров = Неопределено, МассивПодразделений = Неопределено, ДатаРасчета = Неопределено, ТаблицаДанных = Неопределено) Экспорт
	
	Если ДатаРасчета = Неопределено Тогда
		ДатаРасчета = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	КонецЕсли;	
	Если МассивМенеджеров = Неопределено ИЛИ МассивМенеджеров.Количество() = 0 Тогда
		МассивМенеджеров = ПолучитьМассивПользователей(Истина);
	КонецЕсли;	
	Если ТаблицаДанных = Неопределено Тогда
		ТаблицаДанных = ПолучитьТаблицуПоказателя(Показатель, ДатаРасчета, МассивМенеджеров, МассивПодразделений);
	КонецЕсли;	
	
	Диаграмма.Очистить();
	Диаграмма.ТипДиаграммы = ТипДиаграммы.Измерительная; 
	Для Каждого Полоса Из Диаграмма.ПолосыИзмерительнойДиаграммы Цикл
		Диаграмма.ПолосыИзмерительнойДиаграммы.Удалить(Полоса);
	КонецЦикла;
	
	Диаграмма.ОтображатьЗаголовок = Ложь;
	Диаграмма.ОтображатьЛегенду = Ложь;
	Диаграмма.ПоложениеПодписейШкалыЗначенийИзмерительнойДиаграммы=ПоложениеПодписейШкалыЗначенийИзмерительнойДиаграммы.ВнутриШкалы;
	
	СисИнфо = Новый СистемнаяИнформация;
	
	Если Лев(СисИнфо.ВерсияПриложения, 6) = "8.3.10" Тогда
		Выполнить("Диаграмма.ОсьЗначений.СпособОпределенияМинимальногоЗначения = СпособОпределенияОграничивающегоЗначенияДиаграммы.ИспользоватьЗначение");
		Выполнить("Диаграмма.ОсьЗначений.СпособОпределенияМаксимальногоЗначения = СпособОпределенияОграничивающегоЗначенияДиаграммы.ИспользоватьЗначение");
		Диаграмма.ОсьЗначений.МинимальноеЗначение = 0;
		Диаграмма.АвтоУстановкаТекстаСерий  = Ложь;
		Диаграмма.АвтоУстановкаТекстаТочек  = Ложь
		
	Иначе
		Диаграмма.АвтоУстановкаИменСерий = Ложь;
		Диаграмма.АвтоУстановкаИменТочек = Ложь;
		Диаграмма.АвтоМаксимальноеЗначение = Ложь; 
		Диаграмма.АвтоМинимальноеЗначение = Ложь; 
		Диаграмма.МинимальноеЗначение = 0;
	КонецЕсли;	
	
	
	КонтролируемыйПоказатель = Показатель.КонтролируемыйПоказатель;
	
	Если Показатель.КратностьЗначений = "НеИзменять" Тогда
		КратностьЗначений = 1;
	ИначеЕсли Показатель.КратностьЗначений = "Тысячи" Тогда	
		КратностьЗначений = 1000; 
	ИначеЕсли Показатель.КратностьЗначений = "Миллионы" Тогда	
		КратностьЗначений = 1000000;	
	КонецЕсли;
	
	Если Показатель.ДробнаяЧасть = "Целое" Тогда
		ДробнаяЧасть = 0;
	ИначеЕсли Показатель.ДробнаяЧасть = "Десятые" Тогда	
		ДробнаяЧасть = 1; 
	ИначеЕсли Показатель.ДробнаяЧасть = "Сотые" Тогда	
		ДробнаяЧасть = 2;	
	ИначеЕсли Показатель.ДробнаяЧасть = "Тысячные" Тогда	
		ДробнаяЧасть = 3;	
	КонецЕсли;
	
	Если  Показатель.ЦелевойТренд = "Максимум" Тогда
		
		ПлановоеЗначение = Окр(ТаблицаДанных.Итог("ЗначениеПоказателя")/КратностьЗначений, ДробнаяЧасть, 1);
		ТекущееЗначение = Окр(ТаблицаДанных.Итог(КонтролируемыйПоказатель)/КратностьЗначений, ДробнаяЧасть, 1);
		
		ПерваяОтсечка = Окр(ПлановоеЗначение*0.5, ДробнаяЧасть, 1);
		
		
		 
		
		Если Лев(СисИнфо.ВерсияПриложения, 6) = "8.3.10" Тогда
			Диаграмма.ОсьЗначений.МаксимальноеЗначение = Макс(ПлановоеЗначение, ТекущееЗначение);
			
		Иначе
			Диаграмма.МаксимальноеЗначение = Макс(ПлановоеЗначение, ТекущееЗначение);
		КонецЕсли;
		
		
		// Создать три полосы. 
		Полосы = Диаграмма.ПолосыИзмерительнойДиаграммы; 
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = 0; 
		НоваяПолоса.Конец = ПерваяОтсечка; 
		НоваяПолоса.ЦветФона = WebЦвета.Красный; 
		
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = ПерваяОтсечка; 
		НоваяПолоса.Конец = Окр(ПлановоеЗначение*0.8, ДробнаяЧасть, 1);
		НоваяПолоса.ЦветФона = WebЦвета.Желтый; 
		
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = Окр(ПлановоеЗначение*0.8, ДробнаяЧасть, 1); 
		НоваяПолоса.Конец = Макс(ПлановоеЗначение, ТекущееЗначение); 
		НоваяПолоса.ЦветФона = WebЦвета.Зеленый;
	ИначеЕсли  Показатель.ЦелевойТренд = "Минимум" Тогда
		
		ПлановоеЗначение = Окр(ТаблицаДанных.Итог("ЗначениеПоказателя")/КратностьЗначений, ДробнаяЧасть, 1);
		ТекущееЗначение = Окр(ТаблицаДанных.Итог(КонтролируемыйПоказатель)/КратностьЗначений, ДробнаяЧасть, 1);
		
		ПерваяОтсечка = Окр(ПлановоеЗначение*1.2, ДробнаяЧасть, 1);
		
		Если ПлановоеЗначение = 0 Тогда
			Если Лев(СисИнфо.ВерсияПриложения, 6) = "8.3.10" Тогда
				Диаграмма.ОсьЗначений.МаксимальноеЗначение =  Макс(5, ТекущееЗначение);
				
			Иначе
				Диаграмма.МаксимальноеЗначение =  Макс(5, ТекущееЗначение);
			КонецЕсли;
			Полосы = Диаграмма.ПолосыИзмерительнойДиаграммы; 
			НоваяПолоса = Полосы.Добавить(); 
			НоваяПолоса.Начало = 0; 
			НоваяПолоса.Конец = Окр(1, ДробнаяЧасть, 1); 
			НоваяПолоса.ЦветФона = WebЦвета.Зеленый; 
			
			НоваяПолоса = Полосы.Добавить(); 
			НоваяПолоса.Начало = Окр(1, ДробнаяЧасть, 1); 
			НоваяПолоса.Конец = Окр(3, ДробнаяЧасть, 1); 
			НоваяПолоса.ЦветФона = WebЦвета.Желтый; 
			
			НоваяПолоса = Полосы.Добавить(); 
			НоваяПолоса.Начало = Окр(3, ДробнаяЧасть, 1); 
			НоваяПолоса.Конец = Макс(Окр(5, ДробнаяЧасть, 1), ТекущееЗначение); 
			НоваяПолоса.ЦветФона = WebЦвета.Красный;
		Иначе	
		
			Если Лев(СисИнфо.ВерсияПриложения, 6) = "8.3.10" Тогда
				Диаграмма.ОсьЗначений.МаксимальноеЗначение = Макс(Окр(ПлановоеЗначение*2, ДробнаяЧасть, 1), ТекущееЗначение);
				
			Иначе
				Диаграмма.МаксимальноеЗначение = Макс(Окр(ПлановоеЗначение*2, ДробнаяЧасть, 1), ТекущееЗначение);
			КонецЕсли;
			
			Полосы = Диаграмма.ПолосыИзмерительнойДиаграммы; 
			НоваяПолоса = Полосы.Добавить(); 
			НоваяПолоса.Начало = 0; 
			НоваяПолоса.Конец = Окр(ПлановоеЗначение*1.2, ДробнаяЧасть, 1); 
			НоваяПолоса.ЦветФона = WebЦвета.Зеленый; 
			
			НоваяПолоса = Полосы.Добавить(); 
			НоваяПолоса.Начало = Окр(ПлановоеЗначение*1.2, ДробнаяЧасть, 1); 
			НоваяПолоса.Конец = Окр(ПлановоеЗначение*1.5, ДробнаяЧасть, 1); 
			НоваяПолоса.ЦветФона = WebЦвета.Желтый; 
			
			НоваяПолоса = Полосы.Добавить(); 
			НоваяПолоса.Начало = Окр(ПлановоеЗначение*1.5, ДробнаяЧасть, 1); 
			НоваяПолоса.Конец = Макс(Окр(ПлановоеЗначение*2, ДробнаяЧасть, 1), ТекущееЗначение); 
			НоваяПолоса.ЦветФона = WebЦвета.Красный;
		КонецЕсли;	
		// Создать три полосы. 
		
	Иначе
		
		ПлановоеЗначениеМин = Окр(ТаблицаДанных.Итог("ЗначениеПоказателя")/КратностьЗначений, ДробнаяЧасть, 1);
		ПлановоеЗначениеМакс = Окр(ТаблицаДанных.Итог("ЗначениеПоказателяМаксимум")/КратностьЗначений, ДробнаяЧасть, 1);
		ТекущееЗначение = Окр(ТаблицаДанных.Итог(КонтролируемыйПоказатель)/КратностьЗначений, ДробнаяЧасть, 1);
		
		
		
		Если Лев(СисИнфо.ВерсияПриложения, 6) = "8.3.10" Тогда
			Диаграмма.ОсьЗначений.МаксимальноеЗначение = Макс(ПлановоеЗначениеМакс*2, ТекущееЗначение);
			
		Иначе
			Диаграмма.МаксимальноеЗначение = Макс(ПлановоеЗначениеМакс*2, ТекущееЗначение);
		КонецЕсли;
		
		
		// Создать три полосы. 
		Полосы = Диаграмма.ПолосыИзмерительнойДиаграммы; 
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = 0; 
		НоваяПолоса.Конец = Окр(ПлановоеЗначениеМин*0.5, ДробнаяЧасть, 1); 
		НоваяПолоса.ЦветФона = WebЦвета.Красный; 
		
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = Окр(ПлановоеЗначениеМин*0.5, ДробнаяЧасть, 1); 
		НоваяПолоса.Конец =  Окр(ПлановоеЗначениеМин*0.8, ДробнаяЧасть, 1); 
		НоваяПолоса.ЦветФона = WebЦвета.Желтый;
		
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = Окр(ПлановоеЗначениеМин*0.8, ДробнаяЧасть, 1); 
		НоваяПолоса.Конец = Окр(ПлановоеЗначениеМакс*1.2, ДробнаяЧасть, 1); 
		НоваяПолоса.ЦветФона = WebЦвета.Зеленый; 
		
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = Окр(ПлановоеЗначениеМакс*1.2, ДробнаяЧасть, 1); 
		НоваяПолоса.Конец =  Окр(ПлановоеЗначениеМакс*1.5, ДробнаяЧасть, 1); 
		НоваяПолоса.ЦветФона = WebЦвета.Желтый;
		
		НоваяПолоса = Полосы.Добавить(); 
		НоваяПолоса.Начало = Окр(ПлановоеЗначениеМакс*1.5, ДробнаяЧасть, 1); 
		НоваяПолоса.Конец = Макс(ПлановоеЗначениеМакс*2, ТекущееЗначение); 
		НоваяПолоса.ЦветФона = WebЦвета.Красный;	
	КонецЕсли;
	Серия = Диаграмма.УстановитьСерию("Факт");
	Точка = Диаграмма.УстановитьТочку("Факт");
	Диаграмма.УстановитьЗначение(Точка, Серия, ТекущееЗначение, Показатель,"Текущее значение - "+ТекущееЗначение);
	Диаграмма.Обновление = Истина;	
	
КонецПроцедуры	


Функция ПолучитьТаблицуПоказателя(Показатель, ДатаРасчета, МассивМенеджеров, МассивПодразделений = Неопределено, ДляДинамики = Ложь, ЗаДень = Ложь) Экспорт
	
	Если Показатель.КонтролируемыйПоказатель = "" Тогда
		ТаблицаПоказателя = Новый ТаблицаЗначений;
		ТаблицаПоказателя.Колонки.Добавить("ЗначениеПоказателя");
		ТаблицаПоказателя.Колонки.Добавить("ЗначениеПоказателяМаксимум");
		ТаблицаПоказателя.Колонки.Добавить("Количество");
		ТаблицаПоказателя.Колонки.Добавить("Сумма");
		Стр = ТаблицаПоказателя.Добавить();
		Стр.ЗначениеПоказателя = 0;
		Стр.ЗначениеПоказателяМаксимум = 0;
		Стр.Количество = 0;
		Стр.Сумма = 0;
		Возврат ТаблицаПоказателя;
	КонецЕсли;	
	
	СКД = Показатель.ХранилищеСхемыКомпоновкиДанных.Получить();
	НастройкиСКД = Показатель.ХранилищеНастроекКомпоновкиДанных.Получить();
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
    КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКД));
    КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиСКД);

    НастройкиКомпоновщика = КомпоновщикНастроек.Настройки;
    ПараметрыНастройки = НастройкиКомпоновщика.ПараметрыДанных;

    ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	Если ЗначениеПараметра <>  Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		Если Показатель.ПериодАнализа = "Месяц" Тогда
			ЗначениеПараметра.Значение = НачалоМесяца(ДатаРасчета);
		ИначеЕсли Показатель.ПериодАнализа = "День" Тогда	
			ЗначениеПараметра.Значение = НачалоДня(ДатаРасчета);
		ИначеЕсли Показатель.ПериодАнализа = "Квартал" Тогда	
			ЗначениеПараметра.Значение = НачалоКвартала(ДатаРасчета);
		ИначеЕсли Показатель.ПериодАнализа = "Год" Тогда	
			ЗначениеПараметра.Значение = НачалоГода(ДатаРасчета);	
		КонецЕсли;
	КонецЕсли;
	
	ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	Если ЗначениеПараметра <>  Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		Если ЗаДень Тогда
			ЗначениеПараметра.Значение = КонецДня(ДатаРасчета);
		Иначе
			Если Показатель.ПериодАнализа = "Месяц" Тогда
				ЗначениеПараметра.Значение = ?(ДляДинамики, КонецДня(ДатаРасчета), КонецМесяца(ДатаРасчета));
			ИначеЕсли Показатель.ПериодАнализа = "Квартал" Тогда
				ЗначениеПараметра.Значение = ?(ДляДинамики, КонецДня(ДатаРасчета), КонецКвартала(ДатаРасчета));	
			ИначеЕсли Показатель.ПериодАнализа = "Год" Тогда
				ЗначениеПараметра.Значение = ?(ДляДинамики, КонецДня(ДатаРасчета), КонецГода(ДатаРасчета));	
			ИначеЕсли Показатель.ПериодАнализа = "День" Тогда	
				ЗначениеПараметра.Значение = КонецДня(ДатаРасчета);
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
	ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ТекущаяДата"));
	Если ЗначениеПараметра <>  Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		ЗначениеПараметра.Значение = ДатаРасчета;
	КонецЕсли;
	
	ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Показатель"));
	Если ЗначениеПараметра <>  Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		ЗначениеПараметра.Значение = Показатель;
	КонецЕсли;
	
	ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Менеджеры"));
	Если ЗначениеПараметра <>  Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		ЗначениеПараметра.Значение = МассивМенеджеров;
	КонецЕсли;
	
	ЗначениеПараметра = ПараметрыНастройки.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Подразделения"));
	Если ЗначениеПараметра <>  Неопределено Тогда
		ЗначениеПараметра.Использование = Истина;
		ЗначениеПараметра.Значение = МассивПодразделений;
	КонецЕсли;

    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
    МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СКД, НастройкиКомпоновщика,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);

    ТаблицаРезультат = Новый ТаблицаЗначений;
    ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;

    ПроцессорВывода.УстановитьОбъект(ТаблицаРезультат);
    ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Возврат ТаблицаРезультат;	
	
КонецФункции


Функция ПолучитьТаблицуПоказателяПредыдущаяДата(Показатель, ДатаРасчета, МассивМенеджеров, МассивПодразделений = Неопределено, ДляДинамики = Ложь) Экспорт
	
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьТаблицуПоказателяПредыдущаяДата(Показатель, ДатаРасчета, МассивМенеджеров, МассивПодразделений, ДляДинамики);	
	
КонецФункции


Функция ПолучитьМассивПользователей(ТолькоТекущего = Истина) Экспорт
	
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьМассивПользователей(ТолькоТекущего);
	
КонецФункции

//
// -1 - отрицательная, 0 - нет динамики, 1 - положительная
//
Функция ПолучитьДинамикуПоказателя(Показатель, ДатаРасчета, Менеджер = Неопределено, Подразделение = Неопределено) Экспорт
	
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьДинамикуПоказателя(Показатель, ДатаРасчета, Менеджер, Подразделение);
	
КонецФункции	

Функция ПолучитьТаблицуРабочихДней(ДатаРасчета, Период, Подразделение) Экспорт
	
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьТаблицуРабочихДней(ДатаРасчета, Период, Подразделение);
	
КонецФункции

//
// Возвращает 1 - красная зона, 2 желтая зона, 3 зеленая зона
//
Функция ПолучитьЦветПоказателя(Показатель, ДатаРасчета, Менеджер = Неопределено, Подразделение = Неопределено, ТаблицаДанных = Неопределено) Экспорт
	
	Возврат CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПолучитьЦветПоказателя(Показатель, ДатаРасчета, Менеджер, Подразделение, ТаблицаДанных);

КонецФункции


Процедура РасчетКлючевыхПоказателей() Экспорт
	
	ЗапросПоказатели = Новый Запрос;
	ЗапросПоказатели.УстановитьПараметр("НачалоПериода", НачалоМесяца(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса()));
	ЗапросПоказатели.УстановитьПараметр("КонецПериода", КонецМесяца(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса()));
	ЗапросПоказатели.Текст = "ВЫБРАТЬ
	|	CRM_ИспользуемыеКлючевыеПоказатели.Показатель КАК Показатель,
	|	CRM_ИспользуемыеКлючевыеПоказатели.Менеджер
	|ИЗ
	|	РегистрСведений.CRM_ИспользуемыеКлючевыеПоказатели КАК CRM_ИспользуемыеКлючевыеПоказатели
	|ГДЕ
	|	CRM_ИспользуемыеКлючевыеПоказатели.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И CRM_ИспользуемыеКлючевыеПоказатели.Менеджер <> ЗНАЧЕНИЕ(Справочник.пользователи.ПустаяСсылка)
	|ИТОГИ ПО
	|	Показатель";
	ВыборкаПоказатели = ЗапросПоказатели.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоказатели.Следующий() Цикл
		ВыборкаМенеджеры = ВыборкаПоказатели.Выбрать();
		Пока ВыборкаМенеджеры.Следующий() Цикл
			МассивМенеджеров = Новый Массив;
			МассивМенеджеров.Добавить(ВыборкаМенеджеры.Менеджер);
			ТаблицаПоказателя = ПолучитьТаблицуПоказателя(ВыборкаПоказатели.Показатель, CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса(), МассивМенеджеров, , , Истина);
			МенеджерЗаписи = РегистрыСведений.CRM_ЗначенияКлючевыхПоказателей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Активность = истина;
			МенеджерЗаписи.ДатаЗначения = НачалоДня(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса());
			МенеджерЗаписи.Менеджер = ВыборкаМенеджеры.Менеджер;
			МенеджерЗаписи.Показатель = ВыборкаПоказатели.Показатель;
			МенеджерЗаписи.Значение = ТаблицаПоказателя[0][ВыборкаПоказатели.Показатель.КонтролируемыйПоказатель];
			МенеджерЗаписи.Записать(Истина);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ПересчетКлючевыхПоказателей(Параметры, АдресХранилища, ЭтоРегламентноеЗадание = Ложь) Экспорт
	ДатаНачала = НачалоМесяца(ДобавитьМесяц(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса(), -Константы.CRM_ГлубинаПересчетаПоказателей.Получить()));
	ДатаОкончания = КонецМесяца(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса());
	
	
	ЗапросПоказатели = Новый Запрос;
	ЗапросПоказатели.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаНачала));
	ЗапросПоказатели.УстановитьПараметр("КонецПериода", КонецМесяца(ДатаОкончания));
	ЗапросПоказатели.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	CRM_ЗначенияКлючевыхПоказателей.Менеджер,
	|	CRM_ЗначенияКлючевыхПоказателей.Подразделение,
	|	CRM_ЗначенияКлючевыхПоказателей.ДатаЗначения,
	|	CRM_ЗначенияКлючевыхПоказателей.Показатель
	|ИЗ
	|	РегистрСведений.CRM_ЗначенияКлючевыхПоказателей КАК CRM_ЗначенияКлючевыхПоказателей
	|ГДЕ
	|	CRM_ЗначенияКлючевыхПоказателей.ДатаЗначения МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НЕ CRM_ЗначенияКлючевыхПоказателей.Показатель.РасчитыватьРегламентнымЗаданием";
	ВыборкаПоказатели = ЗапросПоказатели.Выполнить().Выгрузить();
	Для Каждого строка Из ВыборкаПоказатели Цикл
		МенеджерЗаписи = РегистрыСведений.CRM_ЗначенияКлючевыхПоказателей.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.ДатаЗначения = строка.ДатаЗначения;
		МенеджерЗаписи.Менеджер = строка.Менеджер;
		МенеджерЗаписи.Показатель = строка.Показатель;
		МенеджерЗаписи.Подразделение = строка.Подразделение;

		МенеджерЗаписи.Прочитать();
		Если МенеджерЗаписи.Выбран() Тогда
			МенеджерЗаписи.Удалить();
		КонецЕсли;	
	КонецЦикла;

	
	ЗапросПоказатели = Новый Запрос;
	ЗапросПоказатели.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаНачала));
	ЗапросПоказатели.УстановитьПараметр("КонецПериода", КонецМесяца(ДатаОкончания));
	ЗапросПоказатели.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	CRM_ИспользуемыеКлючевыеПоказатели.Показатель КАК Показатель,
	|	CRM_ИспользуемыеКлючевыеПоказатели.Менеджер
	|ИЗ
	|	РегистрСведений.CRM_ИспользуемыеКлючевыеПоказатели КАК CRM_ИспользуемыеКлючевыеПоказатели
	|ГДЕ
	|	CRM_ИспользуемыеКлючевыеПоказатели.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И CRM_ИспользуемыеКлючевыеПоказатели.Менеджер <> ЗНАЧЕНИЕ(Справочник.пользователи.ПустаяСсылка)
	|	И НЕ CRM_ИспользуемыеКлючевыеПоказатели.Показатель.РасчитыватьРегламентнымЗаданием
	|
	|СГРУППИРОВАТЬ ПО
	|	CRM_ИспользуемыеКлючевыеПоказатели.Менеджер,
	|	CRM_ИспользуемыеКлючевыеПоказатели.Показатель";
	ВыборкаПоказатели = ЗапросПоказатели.Выполнить().Выгрузить();
	
	Для Каждого строка Из ВыборкаПоказатели Цикл
		ДатаНачалаТМП = ДатаНачала;
		Пока КонецДня(ДатаНачалаТМП) <= КонецДня(ДатаОкончания) Цикл
			МассивМенеджеров = Новый Массив;
			МассивМенеджеров.Добавить(строка.Менеджер);
			ТаблицаПоказателя = ПолучитьТаблицуПоказателя(строка.Показатель, ДатаНачалаТМП, МассивМенеджеров,,, Истина);
			МенеджерЗаписи = РегистрыСведений.CRM_ЗначенияКлючевыхПоказателей.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Активность = истина;
			МенеджерЗаписи.ДатаЗначения = НачалоДня(ДатаНачалаТМП);
			МенеджерЗаписи.Менеджер = строка.Менеджер;
			МенеджерЗаписи.Показатель = строка.Показатель;
			МенеджерЗаписи.Значение = ТаблицаПоказателя[0][строка.Показатель.КонтролируемыйПоказатель];
			МенеджерЗаписи.Записать(Истина);
			ДатаНачалаТМП = КонецДня(ДатаНачалаТМП) + 1;
		КонецЦикла;	
	КонецЦикла;
	Константы.CRM_ДатаАктуальностиЦелевыхПоказателей.Установить(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса());
	ТекстыОшибок = "Пересчет данных по показателям закончен.";	
	Если НЕ ЭтоРегламентноеЗадание Тогда
		ПоместитьВоВременноеХранилище(ТекстыОшибок, АдресХранилища);
	КонецЕсли;	
КонецПроцедуры

Процедура CRM_ПересчетЗначенийКлючевыхПоказателей() Экспорт
	АдресХранилища = "";
	Параметры = Новый Структура;
	ПересчетКлючевыхПоказателей(Параметры, АдресХранилища, Истина);
КонецПроцедуры
