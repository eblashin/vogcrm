
#Область ТиповыеОбработчики

#Область ОбработкиЗаполнения

Процедура СправочникОбработкаЗаполнения(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	#Область МаркетинговыеМероприятия
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.МаркетинговыеМероприятия") Тогда
		ТекПользователь = CRM_ОбщегоНазначенияСервер.ТекущийПользователь();
		Если Не ЗначениеЗаполнено(Источник.CRM_Автор) Тогда
			Источник.CRM_Автор = ТекПользователь;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Источник.Ответственный) Тогда
			Источник.Ответственный = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнойОтветственный");
			Если НЕ ЗначениеЗаполнено(Источник.Ответственный) Тогда
				Источник.Ответственный = ТекПользователь;
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Источник.CRM_Валюта) Тогда
			Источник.CRM_Валюта = Константы.ВалютаУправленческогоУчета.Получить();
			ВалютаРасчетовКурсКратность = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса(), Новый Структура("Валюта", Источник.CRM_Валюта));
			Если Не ЗначениеЗаполнено(Источник.CRM_Кратность) Тогда
				Источник.CRM_Кратность = ?(ВалютаРасчетовКурсКратность.Кратность = 0, 1, ВалютаРасчетовКурсКратность.Кратность);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Источник.CRM_Курс) Тогда
				Источник.CRM_Курс = ?(ВалютаРасчетовКурсКратность.Курс = 0, 1, ВалютаРасчетовКурсКратность.Курс);
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Источник.CRM_Проект) Тогда 
			ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнойПроект");
			Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
				Источник.CRM_Проект = ЗначениеНастройки;
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Источник.CRM_Подразделение) Тогда 
			ЗначениеНастройки = ТекПользователь.Подразделение;
			Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
				Источник.CRM_Подразделение = ЗначениеНастройки;
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Источник.CRM_Важность) Тогда
			Источник.CRM_Важность = Перечисления.ВариантыВажностиВзаимодействия.Обычная;
		КонецЕсли; 
		
		Если Не ЗначениеЗаполнено(Источник.Ссылка) Тогда
			Источник.ДатаНачала	  = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
			Источник.ДатаОкончания = Источник.ДатаНачала;
			МетаданныеОбъекта = Источник.Ссылка.Метаданные();
			Если CRM_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("ПлановаяДатаНачала", МетаданныеОбъекта) Тогда
				Источник.ПлановаяДатаНачала = Источник.ДатаНачала;
			КонецЕсли;
			Если CRM_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("ПлановаяДатаОкончания", МетаданныеОбъекта) Тогда
				Источник.ПлановаяДатаОкончания = Источник.ДатаНачала;
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	#КонецОбласти
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	#Область УчетныеЗаписиЭлектроннойПочты
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.УчетныеЗаписиЭлектроннойПочты") Тогда
		// При инициализации учётной записи настройка ставится в "Истина".
		Источник.ОставлятьКопииСообщенийНаСервере = Истина;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область КонтактныеЛицаПартнеров
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.КонтактныеЛицаПартнеров") Тогда
		Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
			СтруктураНомера	= сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(ДанныеЗаполнения.АбонентКакСвязаться);
			Телефон = сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(ДанныеЗаполнения.АбонентКакСвязаться);		
			Источник.Наименование = ДанныеЗаполнения.АбонентПредставление;
			НоваяКИ = Источник.КонтактнаяИнформация.Добавить();
			НоваяКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон");
			СтруктураНомера = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(Телефон);
			Если Найти(СтруктураНомера.КодГорода, "9") = 1 Тогда
				НоваяКИ.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.МобильныйТелефонКонтактногоЛица");
			Иначе	
				НоваяКИ.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица");
			КонецЕсли;			
			НоваяКИ.НомерТелефонаБезКодов	= СтруктураНомера.НомерТелефона;		
			Если ЗначениеЗаполнено(СтруктураНомера.КодГорода) Тогда
				НоваяКИ.Представление	= ?(ЗначениеЗаполнено(СтруктураНомера.КодСтраны),СтруктураНомера.КодСтраны + " (", "(") + СтруктураНомера.КодГорода + ") " + СтруктураНомера.НомерТелефона;
			Иначе	
				НоваяКИ.Представление	= Телефон;
			КонецЕсли;	
			НоваяКИ.НомерТелефона = Телефон;
			ЗначенияПолей	= Новый СписокЗначений;
			ЗначенияПолей.Добавить(СтруктураНомера.КодСтраны,		"КодСтраны");
			ЗначенияПолей.Добавить(СтруктураНомера.КодГорода,		"КодГорода");
			ЗначенияПолей.Добавить(СтруктураНомера.НомерТелефона,	"НомерТелефона");
			НоваяКИ.ЗначенияПолей	= ЗначенияПолей;				
		КонецЕсли;		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Проекты
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.Проекты") Тогда
		Если Не Источник.ЭтоГруппа Тогда
			Источник.ПлановаяДатаНачала = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
			Источник.Ответственный = CRM_ОбщегоНазначенияСервер.ТекущийПользователь();
			
			//+вог
			СтруктураРеквизитов = Новый Структура;
			СтруктураРеквизитов.Вставить("Подразделение");
			СтруктураРеквизитов.Вставить("CRM_НаправлениеДеятельности");
			
			РеквизитыОтветственный = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник.Ответственный, СтруктураРеквизитов);
			
			Источник.CRM_Подразделение = РеквизитыОтветственный.Подразделение;
			Источник.CRM_Направление   = РеквизитыОтветственный.CRM_НаправлениеДеятельности;
			//-вог
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Партнеры
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.Партнеры") Тогда
		Если НЕ Источник.ЭтоГруппа Тогда
			
			// +СофтФон
			Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Телефон") И ЗначениеЗаполнено(ДанныеЗаполнения.Телефон) Тогда
				Если Найти(ДанныеЗаполнения.Телефон, ";") > 0 Тогда
					МассивСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДанныеЗаполнения.Телефон, ";");
				ИначеЕсли Найти(ДанныеЗаполнения.Телефон, ",") > 0 Тогда
					МассивСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ДанныеЗаполнения.Телефон, ",");
				Иначе
					МассивСтроки = Новый Массив;
					МассивСтроки.Добавить(ДанныеЗаполнения.Телефон);
				КонецЕсли;	
				Для Каждого ЭлементМассива Из МассивСтроки Цикл
					СтрокаТелефон	= Источник.КонтактнаяИнформация.Добавить();
					СтрокаТелефон.Тип	= Перечисления.ТипыКонтактнойИнформации.Телефон;
					СтруктураНомера	= сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(ЭлементМассива);
					Если ЗначениеЗаполнено(Источник.ЮрФизЛицо) Тогда
						Если Источник.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания Тогда
							СтрокаТелефон.Вид	= Справочники.ВидыКонтактнойИнформации.ТелефонПартнера;
						ИначеЕсли Найти(СтруктураНомера.КодГорода, "9") = 1 Тогда
							СтрокаТелефон.Вид	= Справочники.ВидыКонтактнойИнформации.CRM_МобильныйТелефонЧастногоЛица;
						Иначе	
							СтрокаТелефон.Вид	= Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица;
						КонецЕсли;	
					Иначе
						Если Найти(СтруктураНомера.КодГорода, "9") = 1 Тогда
							Источник.ЮрФизЛицо	= Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо;
							СтрокаТелефон.Вид	= Справочники.ВидыКонтактнойИнформации.CRM_МобильныйТелефонЧастногоЛица;
						Иначе	
							Источник.ЮрФизЛицо	= Перечисления.КомпанияЧастноеЛицо.Компания;
							СтрокаТелефон.Вид	= Справочники.ВидыКонтактнойИнформации.ТелефонПартнера;
						КонецЕсли;
					КонецЕсли;	
					СтрокаТелефон.НомерТелефона			= ЭлементМассива;
					СтрокаТелефон.НомерТелефонаБезКодов	= СтруктураНомера.НомерТелефона;
					Если ЗначениеЗаполнено(СтруктураНомера.КодГорода) Тогда
						СтрокаТелефон.Представление	= СтруктураНомера.КодСтраны + " (" + СтруктураНомера.КодГорода + ") " + СтруктураНомера.НомерТелефона;
					Иначе	
						СтрокаТелефон.Представление	= ЭлементМассива;
					КонецЕсли;	
					ЗначенияПолей	= Новый СписокЗначений;
					ЗначенияПолей.Добавить(СтруктураНомера.КодСтраны,		"КодСтраны");
					ЗначенияПолей.Добавить(СтруктураНомера.КодГорода,		"КодГорода");
					ЗначенияПолей.Добавить(СтруктураНомера.НомерТелефона,	"НомерТелефона");
					СтрокаТелефон.ЗначенияПолей	= ЗначенияПолей;
				КонецЦикла;	
			КонецЕсли;
			// -СофтФон
			
			// Заполнение КИ при преобразовании КЛ в партнёра.
			Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ПреобразованиеКЛ") Тогда			
				Для Каждого СтрокаСоответствия Из ДанныеЗаполнения.ПреобразованиеКЛ Цикл
					НоваяКИ	= Источник.КонтактнаяИнформация.Добавить();
					Если Найти(СтрокаСоответствия.Ключ, " CRM_ОсновнойДляСвязи") > 0 Тогда
						ПредставлениеКИ = СтрЗаменить(СтрокаСоответствия.Ключ, " CRM_ОсновнойДляСвязи", "");
						CRM_ОсновнойДляСвязи = Истина;
					Иначе
						ПредставлениеКИ = СтрокаСоответствия.Ключ;
						CRM_ОсновнойДляСвязи = Ложь;
					КонецЕсли;					
					Если (СтрокаСоответствия.Значение = Справочники.ВидыКонтактнойИнформации.ТелефонПартнера) Тогда
						НоваяКИ.Тип						= Перечисления.ТипыКонтактнойИнформации.Телефон;
						НоваяКИ.Вид						= СтрокаСоответствия.Значение;
						НоваяКИ.НомерТелефона			= ПредставлениеКИ;
						НоваяКИ.Представление			= ПредставлениеКИ;					
						НоваяКИ.CRM_ОсновнойДляСвязи	= CRM_ОсновнойДляСвязи;
					ИначеЕсли (СтрокаСоответствия.Значение = Справочники.ВидыКонтактнойИнформации.CRM_МобильныйТелефонЧастногоЛица) Тогда
						НоваяКИ.Тип						= Перечисления.ТипыКонтактнойИнформации.Телефон;
						НоваяКИ.Вид						= СтрокаСоответствия.Значение;
						НоваяКИ.НомерТелефона			= ПредставлениеКИ;
						НоваяКИ.Представление			= ПредставлениеКИ;					
						НоваяКИ.CRM_ОсновнойДляСвязи	= CRM_ОсновнойДляСвязи;					
					ИначеЕсли (СтрокаСоответствия.Значение = Справочники.ВидыКонтактнойИнформации.EmailПартнера) Тогда					
						НоваяКИ.Тип						= Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
						НоваяКИ.Вид						= СтрокаСоответствия.Значение;
						НоваяКИ.АдресЭП					= ПредставлениеКИ;
						НоваяКИ.Представление			= ПредставлениеКИ;
						НоваяКИ.CRM_ОсновнойДляСвязи	= CRM_ОсновнойДляСвязи;					
					ИначеЕсли (СтрокаСоответствия.Значение = Справочники.ВидыКонтактнойИнформации.CRM_МестоРожденияЧастногоЛица) Тогда					
						НоваяКИ.Тип						= Перечисления.ТипыКонтактнойИнформации.Адрес;
						НоваяКИ.Вид						= СтрокаСоответствия.Значение;
						НоваяКИ.Представление			= ПредставлениеКИ;
						НоваяКИ.CRM_ОсновнойДляСвязи	= CRM_ОсновнойДляСвязи;					
					КонецЕсли;					
				КонецЦикла;				
			КонецЕсли;			
		КонецЕсли;	
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ФизическиеЛица
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.ФизическиеЛица") Тогда
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
			СтруктураНомера = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(ДанныеЗаполнения.АбонентКакСвязаться);
			Телефон = сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(ДанныеЗаполнения.АбонентКакСвязаться);
			Источник.Наименование = ДанныеЗаполнения.АбонентПредставление;
			НоваяКИ = Источник.КонтактнаяИнформация.Добавить();
			НоваяКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон");
			СтруктураНомера = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(Телефон);
			Если Найти(СтруктураНомера.КодГорода, "9") = 1 Тогда
				НоваяКИ.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица");
			Иначе 
				НоваяКИ.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонДомашнийФизическиеЛица");
			КонецЕсли;   
			НоваяКИ.НомерТелефонаБезКодов = СтруктураНомера.НомерТелефона;
			Если ЗначениеЗаполнено(СтруктураНомера.КодГорода) Тогда
				НоваяКИ.Представление = ?(ЗначениеЗаполнено(СтруктураНомера.КодСтраны),СтруктураНомера.КодСтраны + " (", "(") + СтруктураНомера.КодГорода + ") " + СтруктураНомера.НомерТелефона;
			Иначе 
				НоваяКИ.Представление = Телефон;
			КонецЕсли; 
			НоваяКИ.НомерТелефона = Телефон;
			ЗначенияПолей = Новый СписокЗначений;
			ЗначенияПолей.Добавить(СтруктураНомера.КодСтраны,  "КодСтраны");
			ЗначенияПолей.Добавить(СтруктураНомера.КодГорода,  "КодГорода");
			ЗначенияПолей.Добавить(СтруктураНомера.НомерТелефона, "НомерТелефона");
			НоваяКИ.ЗначенияПолей = ЗначенияПолей;
		КонецЕсли;
		
	КонецЕсли;

	#КонецОбласти
	
	#Область Пользователи
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.Пользователи") Тогда
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
			СтруктураНомера	= сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(ДанныеЗаполнения.АбонентКакСвязаться);
			Телефон = сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(ДанныеЗаполнения.АбонентКакСвязаться);		
			Источник.Наименование = ДанныеЗаполнения.АбонентПредставление;
			НоваяКИ = Источник.КонтактнаяИнформация.Добавить();
			НоваяКИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон");
			СтруктураНомера = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(Телефон);
			Если Найти(СтруктураНомера.КодГорода, "9") = 1 Тогда
				НоваяКИ.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонПользователя");
			Иначе	
				НоваяКИ.Вид = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.CRM_ТелефонПользователяРабочий");
			КонецЕсли;			
			НоваяКИ.НомерТелефонаБезКодов	= СтруктураНомера.НомерТелефона;		
			Если ЗначениеЗаполнено(СтруктураНомера.КодГорода) Тогда
				НоваяКИ.Представление	= ?(ЗначениеЗаполнено(СтруктураНомера.КодСтраны),СтруктураНомера.КодСтраны + " (", "(") + СтруктураНомера.КодГорода + ") " + СтруктураНомера.НомерТелефона;
			Иначе	
				НоваяКИ.Представление	= Телефон;
			КонецЕсли;	
			НоваяКИ.НомерТелефона = Телефон;
			ЗначенияПолей	= Новый СписокЗначений;
			ЗначенияПолей.Добавить(СтруктураНомера.КодСтраны,		"КодСтраны");
			ЗначенияПолей.Добавить(СтруктураНомера.КодГорода,		"КодГорода");
			ЗначенияПолей.Добавить(СтруктураНомера.НомерТелефона,	"НомерТелефона");
			НоваяКИ.ЗначенияПолей	= ЗначенияПолей;				
		КонецЕсли;
		Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			Источник.Подразделение = ДанныеЗаполнения;
		КонецЕсли;
	КонецЕсли;
		
	#КонецОбласти
	
КонецПроцедуры


Процедура ДокументОбработкаЗаполнения(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	#Область ЭлектронноеПисьмоИсходящее
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		Если ДанныеЗаполнения = Неопределено Тогда
			
			ОсновнаяУчетнаяЗапись = ХранилищеОбщихНастроек.Загрузить("ОсновнаяУчетнаяЗапись", "ОсновнаяУчетнаяЗапись");
			Если НЕ ОсновнаяУчетнаяЗапись = Неопределено Тогда
				Источник.УчетнаяЗапись = ОсновнаяУчетнаяЗапись;
			Иначе
				СписокУчетныхЗаписей = Новый СписокЗначений;
				CRM_УправлениеЭлектроннойПочтой.ПолучитьДоступныеУчетныеЗаписиДляОтправки(СписокУчетныхЗаписей);
				Если СписокУчетныхЗаписей.Количество() > 0 Тогда
					Источник.УчетнаяЗапись = СписокУчетныхЗаписей[0].Значение;
				Иначе
					Источник.УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
			Источник.ОтправительПредставление = ПолучитьПредставлениеДляУчетнойЗаписи(Источник.УчетнаяЗапись);
			
			Возврат;
		КонецЕсли;
		СтандартнаяОбработка = Ложь;
		
		CRM_ОбщегоНазначенияСервер.ЗаполнитьШапкуДокумента(Источник, ДанныеЗаполнения);
		
		Если ТипДанныхЗаполнения = Тип("Структура") И ДанныеЗаполнения.Свойство("Команда") Тогда
			Если ДанныеЗаполнения.Команда = "Переслать" Тогда
				
				Источник.CRM_ТипОтвета = Перечисления.CRM_ТипыОтвета.ПересылкаПисьма;
				
			ИначеЕсли ДанныеЗаполнения.Команда = "Ответить" ИЛИ ДанныеЗаполнения.Команда = "ОтветитьВсем" Тогда
				
				Источник.CRM_ТипОтвета = Перечисления.CRM_ТипыОтвета.ОтветНаПисьмо;
				
			КонецЕсли;
		КонецЕсли;
		
		// Заполним текст исходящего на основании изначального входящего.
		Если ТипДанныхЗаполнения = Тип("Структура") И ДанныеЗаполнения.Свойство("ОснованиеВходящее") 
			И ТипЗнч(ДанныеЗаполнения.ОснованиеВходящее) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
			ЗаполнитьНаОснованииПисьма(Источник, ДанныеЗаполнения.ОснованиеВходящее, "Ответить");
			
			Если ДанныеЗаполнения.Свойство("Основание") И ЗначениеЗаполнено(ДанныеЗаполнения.Основание) Тогда
				//Источник.УдалитьПредмет = ДанныеЗаполнения.Основание;
			КонецЕсли;
		КонецЕсли;
		// -CRM	
		Если (ТипДанныхЗаполнения = Тип("Структура")) И (ДанныеЗаполнения.Свойство("Основание")) И
			(ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") ИЛИ
			ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее")) Тогда
			
			//Источник.УдалитьПредмет = ДанныеЗаполнения.Основание;
			
			CRM_Взаимодействия.CRM_ЗаполнитьРеквизитыПоУмолчанию(Источник, Неопределено);
			ЗаполнитьНаОснованииПисьма(Источник, ДанныеЗаполнения.Основание, ДанныеЗаполнения.Команда);
			// +CRM	
		ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.CRM_РассылкаЭлектронныхПисем") Тогда
			Источник.Дата					= CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
			//Источник.УдалитьПредмет			= ДанныеЗаполнения.Ссылка;
			Источник.УчетнаяЗапись			= ДанныеЗаполнения.УчетнаяЗапись;
			Источник.ОтправительПредставление= ДанныеЗаполнения.ОтправительПредставление;
			//Источник.CRM_Папка				= CRM_УправлениеЭлектроннойПочтой.ПолучитьПапкуЭлектронногоПисьма(ДанныеЗаполнения.УчетнаяЗапись,"Исходящие");
			Источник.Ответственный			= ДанныеЗаполнения.Ответственный;
			Источник.Важность				= ДанныеЗаполнения.Важность;
			Источник.Тема					= ДанныеЗаполнения.Тема;
			Источник.СтатусПисьма			= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Черновик;
			Источник.Кодировка				= ДанныеЗаполнения.Кодировка;
			Источник.ТипТекста				= ДанныеЗаполнения.ТипТекста;
			Источник.Текст					= ДанныеЗаполнения.ТекстHTML;
			Источник.ТекстHTML				= ДанныеЗаполнения.ТекстHTML;
		ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.CRM_Интерес") Тогда
			Источник.Дата			= CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
			//Источник.УдалитьПредмет	= ДанныеЗаполнения.Ссылка;
			Источник.Ответственный	= ДанныеЗаполнения.Ответственный;
			Источник.Тема			= ДанныеЗаполнения.Тема;
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Описание) Тогда
				Источник.Текст			= ДанныеЗаполнения.Описание;
				ДокументHTML			= Взаимодействия.ПолучитьДокументHTMLИзОбычногоТекста(Источник.Текст);
				ТекстHTML				= Взаимодействия.ПолучитьТекстHTMLИзОбъектаДокументHTML(ДокументHTML);
				Источник.ТекстHTML = СтрЗаменить(ТекстHTML, "size=""2""","");
			КонецЕсли;
			Источник.СтатусПисьма	= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Черновик;
			EMail					= "";
			КонтактнаяИнформацияКонтакт = Неопределено;
			КонтактнаяИнформацияПредставление = "";
			
			Для Каждого СтрокаКИ Из ДанныеЗаполнения.КонтактноеЛицо.КонтактнаяИнформация Цикл
				Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица Тогда
					EMail = СтрокаКИ.Представление;
					КонтактнаяИнформацияКонтакт = ДанныеЗаполнения.КонтактноеЛицо;
					КонтактнаяИнформацияПредставление = ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.КонтактноеЛицо.Наименование, EMail, "");
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ПустаяСтрока(EMail) Тогда
				
				Для Каждого СтрокаКИ Из ДанныеЗаполнения.Партнер.КонтактнаяИнформация Цикл
					Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailПартнера Тогда
						EMail = СтрокаКИ.Представление;
						КонтактнаяИнформацияКонтакт = ДанныеЗаполнения.Партнер;
						КонтактнаяИнформацияПредставление = ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.Партнер.Наименование, EMail, "");
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		
			Если ПустаяСтрока(EMail) Тогда
				
				Для Каждого СтрокаКИ Из ДанныеЗаполнения.ПотенциальныйКлиент.КонтактнаяИнформация Цикл
					Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.CRM_EmailПотенциальногоКлиента Тогда
						EMail = СтрокаКИ.Представление;
						КонтактнаяИнформацияКонтакт = ДанныеЗаполнения.ПотенциальныйКлиент;
						КонтактнаяИнформацияПредставление = ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.ПотенциальныйКлиент.Наименование, EMail, "");
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
			Если НЕ ПустаяСтрока(EMail) Тогда
				
				НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
				НоваяСтрока.Адрес			= EMail;
				НоваяСтрока.Контакт			= КонтактнаяИнформацияКонтакт;
				НоваяСтрока.Представление	= КонтактнаяИнформацияПредставление;
				
				Источник.СписокПолучателейПисьма = НоваяСтрока.Представление;
				
			КонецЕсли;			
		ИначеЕсли ТипДанныхЗаполнения = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс")
			ИЛИ ТипДанныхЗаполнения = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			Если ТипДанныхЗаполнения = Тип("ЗадачаСсылка.ЗадачаИсполнителя") И ДанныеЗаполнения.CRM_Личная Тогда
				Источник.Дата					= CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
				//Источник.УдалитьПредмет			= ДанныеЗаполнения.Ссылка;
				Источник.Ответственный			= ДанныеЗаполнения.Исполнитель;
				Источник.СтатусПисьма			= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Черновик;
				Источник.CRM_Проект				= ДанныеЗаполнения.CRM_Проект;
				Источник.Тема 					= ДанныеЗаполнения.Наименование;
				EMail							= "";
				Для Каждого СтрокаКИ Из ДанныеЗаполнения.CRM_КонтактноеЛицо.КонтактнаяИнформация Цикл
					Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица Тогда
						EMail = СтрокаКИ.Представление;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если ПустаяСтрока(EMail) Тогда
					Для Каждого СтрокаКИ Из ДанныеЗаполнения.CRM_Партнер.КонтактнаяИнформация Цикл
						Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailПартнера Тогда
							EMail = СтрокаКИ.Представление;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					Если НЕ ПустаяСтрока(EMail) Тогда
						НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
						НоваяСтрока.Адрес			= EMail;
						НоваяСтрока.Контакт			= ДанныеЗаполнения.CRM_Партнер;
						НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.CRM_Партнер.Наименование, EMail, "");
					КонецЕсли;
				Иначе
					НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
					НоваяСтрока.Адрес			= EMail;
					НоваяСтрока.Контакт			= ДанныеЗаполнения.CRM_КонтактноеЛицо;
					НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.CRM_КонтактноеЛицо.Наименование, EMail, "");
				КонецЕсли;
				Если НЕ ПустаяСтрока(EMail) Тогда
					Источник.СписокПолучателейПисьма = НоваяСтрока.Представление;
				КонецЕсли;			
				
			Иначе	
				Если ТипДанныхЗаполнения = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс") Тогда
					CRM_ОбщегоНазначенияСервер.ЗаполнитьОбъектБизнесПроцесса(Источник, ДанныеЗаполнения);
				Иначе
					CRM_ОбщегоНазначенияСервер.ЗаполнитьОбъектБизнесПроцесса(Источник, ДанныеЗаполнения.БизнесПроцесс, ДанныеЗаполнения);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.КоммерческоеПредложениеКлиенту") Тогда
			
			Источник.Дата					= CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
			//Источник.УдалитьПредмет			= ДанныеЗаполнения.Ссылка;
			Источник.Ответственный			= ДанныеЗаполнения.Менеджер;
			Источник.СтатусПисьма			= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Черновик;
			Источник.CRM_Проект				= ДанныеЗаполнения.CRM_Проект;
			EMail							= "";
			Для Каждого СтрокаКИ Из ДанныеЗаполнения.КонтактноеЛицо.КонтактнаяИнформация Цикл
				Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица Тогда
					EMail = СтрокаКИ.Представление;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ПустаяСтрока(EMail) Тогда
				Для Каждого СтрокаКИ Из ДанныеЗаполнения.Партнер.КонтактнаяИнформация Цикл
					Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailПартнера Тогда
						EMail = СтрокаКИ.Представление;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если НЕ ПустаяСтрока(EMail) Тогда
					НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
					НоваяСтрока.Адрес			= EMail;
					НоваяСтрока.Контакт			= ДанныеЗаполнения.Партнер;
					НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.Партнер.Наименование, EMail, "");
				КонецЕсли;
			Иначе
				НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
				НоваяСтрока.Адрес			= EMail;
				НоваяСтрока.Контакт			= ДанныеЗаполнения.КонтактноеЛицо;
				НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.КонтактноеЛицо.Наименование, EMail, "");
			КонецЕсли;
			Если НЕ ПустаяСтрока(EMail) Тогда
				Источник.СписокПолучателейПисьма = НоваяСтрока.Представление;
			КонецЕсли;			
			
			Если ЗначениеЗаполнено(ДанныеЗаполнения.ДокументОснование) Тогда
				
				Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.CRM_Интерес") Тогда
					
					Источник.Тема = ДанныеЗаполнения.ДокументОснование.Тема;
					
					СтрокаТеста = НСтр("ru = 'Интерес от '") + Формат(ДанныеЗаполнения.ДокументОснование.Дата,"ДЛФ=D") + Символы.ПС +
					НСтр("ru = 'Тема: '") + СокрЛП(ДанныеЗаполнения.ДокументОснование.Тема) + Символы.ПС +
					НСтр("ru = 'Содержание: '") + СокрЛП(ДанныеЗаполнения.ДокументОснование.Описание);
					
					Источник.Текст = СтрокаТеста;
					
				ИначеЕсли  ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
					
					ЗаполнитьПараметрыИзПисьма(Источник, ДанныеЗаполнения.ДокументОснование, Ложь, Ложь, "Re: ", Ложь, "Ответить");
					
				ИначеЕсли  ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
					
					ЗаполнитьПараметрыИзПисьма(Источник, ДанныеЗаполнения.ДокументОснование, Ложь, Ложь, "Re: ", Ложь, "Ответить");
					
				КонецЕсли;	
				
			КонецЕсли;
			
		// +CRM не переносить в объединенные решения
		ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.CRM_СчетНаОплатуПокупателю") Тогда
			
			Источник.Дата					= CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
			//Источник.УдалитьПредмет			= ДанныеЗаполнения.Ссылка;
			Источник.Ответственный			= ДанныеЗаполнения.Ответственный;
			Источник.СтатусПисьма			= Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Черновик;
			EMail							= "";
			Источник.CRM_Проект				= ДанныеЗаполнения.Проект;
			Для Каждого СтрокаКИ Из ДанныеЗаполнения.КонтактноеЛицо.КонтактнаяИнформация Цикл
				Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица Тогда
					EMail = СтрокаКИ.Представление;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ПустаяСтрока(EMail) Тогда
				Для Каждого СтрокаКИ Из ДанныеЗаполнения.Партнер.КонтактнаяИнформация Цикл
					Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailПартнера Тогда
						EMail = СтрокаКИ.Представление;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если НЕ ПустаяСтрока(EMail) Тогда
					НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
					НоваяСтрока.Адрес			= EMail;
					НоваяСтрока.Контакт			= ДанныеЗаполнения.Партнер;
					НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.Партнер.Наименование, EMail, "");
				КонецЕсли;				
			Иначе
				НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
				НоваяСтрока.Адрес			= EMail;
				НоваяСтрока.Контакт			= ДанныеЗаполнения.КонтактноеЛицо;
				НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.КонтактноеЛицо.Наименование, EMail, "");
			КонецЕсли;
			Если НЕ ПустаяСтрока(EMail) Тогда
				Источник.СписокПолучателейПисьма = НоваяСтрока.Представление;
			КонецЕсли;			
			
			Если ЗначениеЗаполнено(ДанныеЗаполнения.ДокументОснование) И ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.CRM_Интерес") Тогда
				
				Источник.Тема = ДанныеЗаполнения.ДокументОснование.Тема;
				
				СтрокаТеста = НСтр("ru = 'Интерес от '") + Формат(ДанныеЗаполнения.ДокументОснование.Дата,"ДЛФ=D") + Символы.ПС +
				НСтр("ru = 'Тема: '") + СокрЛП(ДанныеЗаполнения.ДокументОснование.Тема) + Символы.ПС +
				НСтр("ru = 'Содержание: '") + СокрЛП(ДанныеЗаполнения.ДокументОснование.Описание);
				
				Источник.Текст = СтрокаТеста;
				
			КонецЕсли;
		// -CRM не переносить в объединенные решения
			
		ИначеЕсли (ТипДанныхЗаполнения = Тип("Структура")) И (ДанныеЗаполнения.Свойство("Основание")) И
			(ТипЗнч(ДанныеЗаполнения.Основание) = Тип("СправочникСсылка.ВнешниеПользователи")) Тогда
			
			// Отсылаем приглашение на анкетирование.
			ОбъектАвторизации = ДанныеЗаполнения.Основание.ОбъектАвторизации;
			
			ИмяОбъектаАвторизации = "";
			
			Если ТипЗнч(ОбъектАвторизации) = Тип("СправочникСсылка.Партнеры") Тогда
				
				EMail = "";
				Для Каждого СтрокаКИ Из ОбъектАвторизации.КонтактнаяИнформация Цикл
					Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailПартнера Тогда
						EMail = СтрокаКИ.Представление;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если ЗначениеЗаполнено(EMail) Тогда
					НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
					НоваяСтрока.Адрес			= EMail;
					НоваяСтрока.Контакт			= ОбъектАвторизации;
					НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ОбъектАвторизации.Наименование, EMail, "");
					
					Источник.СписокПолучателейПисьма = НоваяСтрока.Представление;
				КонецЕсли;
				
				ИмяОбъектаАвторизации = ?(ПустаяСтрока(ОбъектАвторизации.НаименованиеПолное), ОбъектАвторизации.Наименование, ОбъектАвторизации.НаименованиеПолное);
				
			ИначеЕсли  ТипЗнч(ОбъектАвторизации) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				
				EMail = "";
				Для Каждого СтрокаКИ Из ОбъектАвторизации.КонтактнаяИнформация Цикл
					Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица Тогда
						EMail = СтрокаКИ.Представление;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если ЗначениеЗаполнено(EMail) Тогда
					НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
					НоваяСтрока.Адрес			= EMail;
					НоваяСтрока.Контакт			= ОбъектАвторизации;
					НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ОбъектАвторизации.Наименование, EMail, "");
					
					Источник.СписокПолучателейПисьма = НоваяСтрока.Представление;
				КонецЕсли;
				
				ИмяОбъектаАвторизации = ОбъектАвторизации.Наименование;
				
			ИначеЕсли  ТипЗнч(ОбъектАвторизации) = Тип("СправочникСсылка.Пользователи") Тогда
				
				EMail = "";
				Для Каждого СтрокаКИ Из ОбъектАвторизации.КонтактнаяИнформация Цикл
					Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailПользователя Тогда
						EMail = СтрокаКИ.Представление;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если ЗначениеЗаполнено(EMail) Тогда
					НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
					НоваяСтрока.Адрес			= EMail;
					НоваяСтрока.Контакт			= ОбъектАвторизации;
					НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ОбъектАвторизации.Наименование, EMail, "");
					
					Источник.СписокПолучателейПисьма = НоваяСтрока.Представление;
				КонецЕсли;
				
				ИмяОбъектаАвторизации = ОбъектАвторизации.Наименование;
				
			КонецЕсли;
			
			АдресWebДоступа = Константы.CRM_АдресWebДоступа.Получить();
			
			Если ПустаяСтрока(АдресWebДоступа) Тогда
				
				АдресWebДоступа = "{адрес web-доступа в настройках системы не заполнен}";
				
			КонецЕсли;
			
			Организация = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
			
			НаименованиеОрганизации = ?(ПустаяСтрока(Организация.НаименованиеПолное), Организация.Наименование, Организация.НаименованиеПолное);
			
			Источник.Тема = "Приглашение к анкетированию";
			
			Источник.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTML;
			
			Если ДанныеЗаполнения.Свойство("ШаблонАнкеты") И ЗначениеЗаполнено(ДанныеЗаполнения.ШаблонАнкеты) Тогда
				
				ТекстHTML = ДанныеЗаполнения.ШаблонАнкеты.CRM_ШаблонРассылки.Текст;
				
				// заполним автотекст
				
				СтруктураЗаполненияАвтотекста = Новый Структура;
				СтруктураЗаполненияАвтотекста.Вставить("Партнер", Справочники.Партнеры.ПустаяСсылка());
				СтруктураЗаполненияАвтотекста.Вставить("КонтактноеЛицо", Справочники.КонтактныеЛицаПартнеров.ПустаяСсылка());
				
				Клиент = ОбъектАвторизации;
				
				Если ТипЗнч(Клиент) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
					
					СтруктураЗаполненияАвтотекста.КонтактноеЛицо = Клиент;
					
				Иначе
					
					СтруктураЗаполненияАвтотекста.Партнер = Клиент;
					
				КонецЕсли;
				
				ТаблицаАвтотекста = Новый ТаблицаЗначений;
				
				ТаблицаАвтотекста.Колонки.Добавить("Тэг");
				ТаблицаАвтотекста.Колонки.Добавить("ИмяКоманды");
				ТаблицаАвтотекста.Колонки.Добавить("ЗаголовокКоманды");
				ТаблицаАвтотекста.Колонки.Добавить("Действие");
				
				CRM_АвтотекстПереопределяемый.СформироватьСписокАвтотекста(ТаблицаАвтотекста, Перечисления.CRM_НазначенияАвтотекста.АвтотекстЭлектронноеПисьмо);
				
				Для Каждого СтрокаАвтотекста Из ТаблицаАвтотекста Цикл
					
					Если Найти(ТекстHTML, СтрокаАвтотекста.Тэг) > 0 Тогда
						
						ЗначениеТэга = CRM_АвтотекстПереопределяемый.ПолучитьЗначениеТэга(СтрокаАвтотекста, СтруктураЗаполненияАвтотекста);
						
						ТекстHTML = СтрЗаменить(ТекстHTML, СтрокаАвтотекста.Тэг, ЗначениеТэга);
						
					КонецЕсли;
					
				КонецЦикла;
				
				Источник.Текст = Взаимодействия.ПолучитьОбычныйТекстИзHTML(ТекстHTML);
			КонецЕсли;
			
			// -CRM	
		Иначе
			
			Если Источник.ПолучателиПисьма.Количество() = 0 Тогда
			
				EMail = "";
				ПолучателиПисьмаКонтакт = Неопределено;
				ПолучателиПисьмаПредставление = "";
				
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеЗаполнения, "КонтактноеЛицо") 
				   И ТипЗнч(ДанныеЗаполнения.КонтактноеЛицо) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
					
					Для Каждого СтрокаКИ Из ДанныеЗаполнения.КонтактноеЛицо.КонтактнаяИнформация Цикл
						Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица Тогда
							EMail = СтрокаКИ.Представление;
							ПолучателиПисьмаКонтакт = ДанныеЗаполнения.КонтактноеЛицо;
							ПолучателиПисьмаПредставление = ДанныеЗаполнения.КонтактноеЛицо.Наименование;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
				
				Если ПустаяСтрока(EMail) Тогда
					
					Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДанныеЗаполнения, "Партнер") 
					   И ТипЗнч(ДанныеЗаполнения.КонтактноеЛицо) = Тип("СправочникСсылка.Партнеры") Тогда
						
						Для Каждого СтрокаКИ Из ДанныеЗаполнения.Партнер.КонтактнаяИнформация Цикл
							Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailПартнера Тогда
								EMail = СтрокаКИ.Представление;
								ПолучателиПисьмаКонтакт = ДанныеЗаполнения.Партнер;
								ПолучателиПисьмаПредставление = ДанныеЗаполнения.Партнер.Наименование;
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЕсли;
				
				Если Не ПустаяСтрока(EMail) Тогда
			
					НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
					НоваяСтрока.Адрес			= EMail;
					НоваяСтрока.Контакт			= ПолучателиПисьмаКонтакт;
					НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ПолучателиПисьмаПредставление, EMail, "");
					
					Источник.СписокПолучателейПисьма = НоваяСтрока.Представление;
					
				КонецЕсли;
				
			КонецЕсли;	
				
			
			Если Источник.ПолучателиПисьма.Количество() = 0 Тогда
				Взаимодействия.ЗаполнитьРеквизитыПоУмолчанию(Источник, ДанныеЗаполнения);
			КонецЕсли;
			
		КонецЕсли;
		// +CRM	
		//Если НЕ (ДанныеЗаполнения = Неопределено 
		//	ИЛИ ТипДанныхЗаполнения = Тип("Структура")
		//	ИЛИ ТипДанныхЗаполнения = Тип("СправочникСсылка.Партнеры")
		//	ИЛИ ТипДанныхЗаполнения = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")) Тогда
		//	Источник.УдалитьПредмет = ДанныеЗаполнения;
		//КонецЕсли;
		Если Источник.ПолучателиПисьма.Количество() = 0
			И НЕ ЗначениеЗаполнено(Источник.СписокПолучателейПисьма)
			И ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
			И ДанныеЗаполнения.Свойство("КонтактноеЛицо")
			И ЗначениеЗаполнено(ДанныеЗаполнения.КонтактноеЛицо) Тогда
			EMail = "";
			Для Каждого СтрокаКИ Из ДанныеЗаполнения.КонтактноеЛицо.КонтактнаяИнформация Цикл
				Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица Тогда
					EMail = СтрокаКИ.Представление;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ЗначениеЗаполнено(EMail) Тогда
				НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
				НоваяСтрока.Адрес			= EMail;
				НоваяСтрока.Контакт			= ДанныеЗаполнения.КонтактноеЛицо;
				НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.КонтактноеЛицо.Наименование, EMail, "");
				
				Источник.СписокПолучателейПисьма = НоваяСтрока.Представление;
			КонецЕсли;
		КонецЕсли;
		Если Источник.ПолучателиПисьма.Количество() = 0
			И НЕ ЗначениеЗаполнено(Источник.СписокПолучателейПисьма)
			И ТипДанныхЗаполнения = Тип("Структура")
			И ДанныеЗаполнения.Свойство("Партнер")
			И ЗначениеЗаполнено(ДанныеЗаполнения.Партнер) Тогда
			EMail = "";
			Для Каждого СтрокаКИ Из ДанныеЗаполнения.Партнер.КонтактнаяИнформация Цикл
				Если СтрокаКИ.Вид = Справочники.ВидыКонтактнойИнформации.EmailПартнера Тогда
					EMail = СтрокаКИ.Представление;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ЗначениеЗаполнено(EMail) Тогда
				НоваяСтрока					= Источник.ПолучателиПисьма.Добавить();
				НоваяСтрока.Адрес			= EMail;
				НоваяСтрока.Контакт			= ДанныеЗаполнения.Партнер;
				НоваяСтрока.Представление	= ВзаимодействияКлиентСервер.ПолучитьПредставлениеАдресата(ДанныеЗаполнения.Партнер.Наименование, EMail, "");
				
				Источник.СписокПолучателейПисьма = НоваяСтрока.Представление;
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Источник.CRM_Проект)
			И ТипДанныхЗаполнения = Тип("Структура")
			И ДанныеЗаполнения.Свойство("Проект")
			И ЗначениеЗаполнено(ДанныеЗаполнения.Проект) Тогда
			Источник.CRM_Проект = ДанныеЗаполнения.Проект;
		КонецЕсли;
		// -CRM
		Источник.Важность = Перечисления.ВариантыВажностиВзаимодействия.Обычная;
		Источник.СтатусПисьма = Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Черновик;
		Если ПустаяСтрока(Источник.Кодировка) Тогда
			Источник.Кодировка = "utf-8";
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Источник.УчетнаяЗапись) Тогда
			ОсновнаяУчетнаяЗапись = ХранилищеОбщихНастроек.Загрузить("ОсновнаяУчетнаяЗапись", "ОсновнаяУчетнаяЗапись");
			Если НЕ ОсновнаяУчетнаяЗапись = Неопределено Тогда
				Источник.УчетнаяЗапись = ОсновнаяУчетнаяЗапись;
			Иначе
				СписокУчетныхЗаписей = Новый СписокЗначений;
				CRM_УправлениеЭлектроннойПочтой.ПолучитьДоступныеУчетныеЗаписиДляОтправки(СписокУчетныхЗаписей);
				Если СписокУчетныхЗаписей.Количество() > 0 Тогда
					Источник.УчетнаяЗапись = СписокУчетныхЗаписей[0].Значение;
				Иначе
					Источник.УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Источник.ОтправительПредставление = ПолучитьПредставлениеДляУчетнойЗаписи(Источник.УчетнаяЗапись);
		
		// +CRM
		ОсновнойОтветственныйТекущий = CRM_МетодыМодулейОбъектовДокументов.ПолучитьОсновногоОтветственного();
		Если ЗначениеЗаполнено(ОсновнойОтветственныйТекущий) Тогда
			Источник.Ответственный = ОсновнойОтветственныйТекущий;
		КонецЕсли;
	#КонецОбласти	
		
	#Область КоммерческоеПредложениеКлиенту
	
ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.КоммерческоеПредложениеКлиенту") Тогда	
	Если ДанныеЗаполнения = Неопределено Тогда
		Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
			Ответственный = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнойОтветственный");
			CRM_ОбщегоНазначенияСервер.ЗаполнитьШапкуДокумента(Источник, ДанныеЗаполнения);
			Источник.Менеджер = Ответственный;
			Источник.CRM_Подразделение =  Ответственный.Подразделение;
			Источник.Валюта = Константы.ВалютаУправленческогоУчета.Получить();
			ВалютаРасчетовКурсКратность = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса(), Новый Структура("Валюта", Источник.Валюта));
			Источник.Кратность = ?(ВалютаРасчетовКурсКратность.Кратность = 0, 1, ВалютаРасчетовКурсКратность.Кратность);
			Источник.Курс = ?(ВалютаРасчетовКурсКратность.Курс = 0, 1, ВалютаРасчетовКурсКратность.Курс);
		КонецЕсли;
	Иначе	
		
		CRM_ОбщегоНазначенияСервер.ЗаполнитьШапкуДокумента(Источник, ДанныеЗаполнения);
		
		Если ЗначениеЗаполнено(Источник.CRM_Проект) Тогда
			Если ЗначениеЗаполнено(Источник.CRM_Проект.CRM_Партнер) И Не ЗначениеЗаполнено(Источник.Партнер) Тогда
				Источник.Партнер = Источник.CRM_Проект.CRM_Партнер;
				Источник.КонтактноеЛицо = Источник.CRM_Проект.CRM_КонтактноеЛицоПартнера;
			КонецЕсли;
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			
			ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
			Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
				Если Источник.Организация <> ЗначениеНастройки Тогда
					Источник.Организация = ЗначениеНастройки;
				КонецЕсли;
			Иначе
				Источник.Организация = CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию();
			КонецЕсли;
			
			Источник.CRM_Подразделение = ДанныеЗаполнения.Подразделение;
			Источник.ДокументОснование = ДанныеЗаполнения.Ссылка;
			Источник.Партнер = ДанныеЗаполнения.Партнер;
			Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
				Источник.Договор = ДанныеЗаполнения.Партнер.ДоговорПоУмолчанию;
				Если ЗначениеЗаполнено(Источник.Договор) Тогда
					Источник.Валюта = Источник.Договор.ВалютаРасчетов;
				КонецЕсли;
				СтруктураПоВалюте = РегистрыСведений.КурсыВалют.ПолучитьПоследнее(Источник.Дата, Новый Структура("Валюта", Источник.Валюта));
				Источник.Курс = СтруктураПоВалюте.Курс;
				Источник.Кратность = СтруктураПоВалюте.Кратность;
			КонецЕсли;
			Источник.КонтактноеЛицо = ДанныеЗаполнения.КонтактноеЛицо;
			Источник.Менеджер = ДанныеЗаполнения.Ответственный;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			
			Если ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.КоммерческоеПредложениеКлиенту") И ДанныеЗаполнения.Свойство("ИдВарианта") Тогда
				МассивСтрок = Источник.Товары.НайтиСтроки(Новый Структура("CRM_ИДВарианта", ДанныеЗаполнения.ИдВарианта));
				Если МассивСтрок.Количество() = 0 Тогда
					Для каждого Стр Из ДанныеЗаполнения.ДокументОснование.Товары Цикл
						НоваяСтрока = Источник.Товары.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
						НоваяСтрока.CRM_ИДВарианта = ДанныеЗаполнения.ИдВарианта;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
			
			Источник.Менеджер	 		= ДанныеЗаполнения.Ответственный;
			Источник.ДокументОснование 	= ДанныеЗаполнения;
			Источник.CRM_Проект			= ДанныеЗаполнения.CRM_Проект;
			
			Если ЗначениеЗаполнено(ДанныеЗаполнения.ОтправительКонтакт) Тогда
				Если ТипЗнч(ДанныеЗаполнения.ОтправительКонтакт) = Тип("СправочникСсылка.Партнеры") Тогда
					Источник.Партнер			= ДанныеЗаполнения.ОтправительКонтакт;
					Источник.КонтактноеЛицо	= ДанныеЗаполнения.ОтправительКонтакт.CRM_ОсновноеКонтактноеЛицо;
				ИначеЕсли ТипЗнч(ДанныеЗаполнения.ОтправительКонтакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
					Источник.Партнер			= ДанныеЗаполнения.ОтправительКонтакт.Владелец;
					Источник.КонтактноеЛицо	= ДанныеЗаполнения.ОтправительКонтакт;
				КонецЕсли;
			КонецЕсли;
			
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
			
			Источник.Менеджер	 		= ДанныеЗаполнения.Ответственный;
			Источник.ДокументОснование 	= ДанныеЗаполнения;
			Источник.CRM_Проект			= ДанныеЗаполнения.CRM_Проект;
			
			// Если получатель один, то можно подставить его в документ.
			Если ДанныеЗаполнения.ПолучателиПисьма.Количество() = 1 Тогда
				Если ЗначениеЗаполнено(ДанныеЗаполнения.ПолучателиПисьма[0].Контакт) Тогда
					Если ТипЗнч(ДанныеЗаполнения.ПолучателиПисьма[0].Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
						Источник.Партнер			= ДанныеЗаполнения.ПолучателиПисьма[0].Контакт;
						Источник.КонтактноеЛицо	= ДанныеЗаполнения.ПолучателиПисьма[0].Контакт.CRM_ОсновноеКонтактноеЛицо;
					ИначеЕсли ТипЗнч(ДанныеЗаполнения.ПолучателиПисьма[0].Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
						Источник.Партнер			= ДанныеЗаполнения.ПолучателиПисьма[0].Контакт.Владелец;
						Источник.КонтактноеЛицо	= ДанныеЗаполнения.ПолучателиПисьма[0].Контакт;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс")
			ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
			
			Если ТипЗнч(ДанныеЗаполнения) = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс") Тогда
				CRM_ОбщегоНазначенияСервер.ЗаполнитьОбъектБизнесПроцесса(Источник, ДанныеЗаполнения);
			Иначе
				CRM_ОбщегоНазначенияСервер.ЗаполнитьОбъектБизнесПроцесса(Источник, ДанныеЗаполнения.БизнесПроцесс, ДанныеЗаполнения);
			КонецЕсли;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Источник.КонтактноеЛицо) И ЗначениеЗаполнено(Источник.Партнер) Тогда
			Если ЗначениеЗаполнено(Источник.Партнер.CRM_ОсновноеКонтактноеЛицо) Тогда
				Источник.КонтактноеЛицо = Источник.Партнер.CRM_ОсновноеКонтактноеЛицо;
			Иначе
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
				|	КонтактныеЛицаПартнеров.Ссылка
				|ИЗ
				|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
				|ГДЕ
				|	КонтактныеЛицаПартнеров.Владелец = &Владелец";
				
				Запрос.УстановитьПараметр("Владелец",Источник.Партнер);
				ВыборкаИзРезультатаЗапроса = Запрос.Выполнить().Выбрать();
				
				ВыборкаИзРезультатаЗапроса.Следующий();
				
				Источник.КонтактноеЛицо = ВыборкаИзРезультатаЗапроса.Ссылка;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
			Источник.ЗаполнитьУсловияПродажПоУмолчанию();
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Источник.Менеджер) Тогда
			ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнойОтветственный");
			Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
				Источник.Менеджер = ЗначениеНастройки;
			Иначе
				Источник.Менеджер = CRM_ОбщегоНазначенияСервер.ТекущийПользователь();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область ПередЗаписью

Процедура ДокументыПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	#Область ЭлектронныеПисьма
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее") ИЛИ ТипЗнч(Источник) = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		Источник.ТекстHTML = CRM_УправлениеЭлектроннойПочтой.УдалитьНекорректныеКартинкиИзТекстаHTML(Источник.ТекстHTML);
		Источник.Текст = CRM_УправлениеЭлектроннойПочтой.УдалитьНекорректныеКартинкиИзТекстаHTML(Источник.Текст);
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

Процедура СправочникПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	#Область Партнеры
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.Партнеры") Тогда
		
		ЭтоНовый = Источник.ЭтоНовый();
		Если ЭтоНовый Тогда
			Источник.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
		КонецЕсли;
		
		// +CRM не переносить в объединенные решения
		Если ЭтоНовый И Не Источник.ЭтоГруппа Тогда
			ИспользоватьОграниченияДоступа = Константы.CRM_ИспользоватьОграниченияДоступа.Получить();
			УстанавливатьУровеньДоступаПользователя = Константы.CRM_УстанавливатьУровеньДоступаПользователя.Получить();
			Если ИспользоватьОграниченияДоступа И УстанавливатьУровеньДоступаПользователя Тогда
				ТекущийПользователь = CRM_ОбщегоНазначенияСервер.ТекущийПользователь();
				УровеньДоступа = ТекущийПользователь.CRM_УровеньДоступа;
				Если ЗначениеЗаполнено(УровеньДоступа) И (Источник.CRM_УровниДоступа.Найти(УровеньДоступа, "УровеньДоступа") = Неопределено) Тогда
					НовыйУровень = Источник.CRM_УровниДоступа.Добавить(); 	
					НовыйУровень.УровеньДоступа = УровеньДоступа;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
		// -CRM не переносить в объединенные решения
		
		Если НЕ Источник.ЭтоГруппа Тогда
			Если Источник.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо Тогда
				Источник.CRM_ФизЛицо			= Истина;
				Если НЕ ЗначениеЗаполнено(Источник.НаименованиеПолное) Тогда
					Источник.НаименованиеПолное	= Источник.Наименование;
				КонецЕсли;
			Иначе
				// Очистим реквизиты физ. лица.
				Источник.CRM_ФизЛицо = Ложь;
				Источник.Пол = Перечисления.ПолФизическогоЛица.ПустаяСсылка();
				Источник.ДатаРождения = '00010101';
				Источник.CRM_НапоминатьОДнеРождения = Ложь;
				Источник.CRM_Имя		  = "";
				Источник.CRM_Фамилия	  = "";
				Источник.CRM_Отчество  = "";
			КонецЕсли;
			//РасчетПроцентаЗаполненияПортрет(Источник);
			//РасчетПроцентаЗаполненияКИ(Источник);
			//+вог
			//СформироватьТипОтношенийПредставление(Источник);
			вогСформироватьТипОтношенийПредставление(Источник);
			//-вог
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область УчетныеЗаписиЭлектроннойПочты
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.УчетныеЗаписиЭлектроннойПочты") Тогда
		Источник.Наименование = СокрЛП(Источник.Наименование);
		Источник.АдресЭлектроннойПочты = СокрЛП(Источник.АдресЭлектроннойПочты);
		Источник.ИмяПользователя = СокрЛП(Источник.ИмяПользователя);
		Источник.ПользовательSMTP = СокрЛП(Источник.ПользовательSMTP);
		Источник.СерверВходящейПочты = СокрЛП(Источник.СерверВходящейПочты);
		Источник.СерверИсходящейПочты = СокрЛП(Источник.СерверИсходящейПочты);
		
		ЭтоНовый = Источник.ЭтоНовый();
		Если ЭтоНовый Тогда
			Источник.CRM_ДатаНачальнойЗагрузки = ДобавитьМесяц(НачалоДня(ТекущаяДатаСеанса()), -1);
			Источник.ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
		КонецЕсли;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПапкиЭлектронныхПисем
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.ПапкиЭлектронныхПисем") Тогда
		
		Если Источник.ПометкаУдаления И НЕ Источник.Владелец.ПометкаУдаления Тогда		
			Если ЗначениеЗаполнено(Источник.CRM_Вид) Тогда
				Отказ = Истина;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Нельзя удалять предопределенные папки электронной почты!'"));		
			Иначе	
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ПредметыПапкиВзаимодействий.Взаимодействие
				|ИЗ
				|	РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
				|ГДЕ
				|	ПредметыПапкиВзаимодействий.ПапкаЭлектронногоПисьма = &ПапкаЭлектронногоПисьма";
				
				Запрос.УстановитьПараметр("ПапкаЭлектронногоПисьма", Источник.Ссылка);
				Результат = Запрос.Выполнить();
				ВыборкаДетальныеЗаписи = Результат.Выбрать();
				Если  ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
					Отказ = Истина;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Папка содержит электронные письма. Удаление недоступно!'"));		
				КонецЕсли;;
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область КонтактныеЛицаПартнеров
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.КонтактныеЛицаПартнеров") Тогда
		
		// Запись реквизита "ДатаРождения" на основе строки из ТЧ CRM_КлючевыеСобытия
		ВидСобытия = Справочники.CRM_ВидыКлючевыхСобытий.НайтиПоНаименованию(Нстр("ru = 'День рождения контактного лица'"), Истина);
		Если НЕ (ВидСобытия = Справочники.CRM_ВидыКлючевыхСобытий.ПустаяСсылка()) Тогда
			НайтиСтроку = Источник.CRM_КлючевыеСобытия.НайтиСтроки(Новый Структура("ВидСобытия", ВидСобытия));
			Если Источник.ДатаРождения <> Источник.Ссылка.ДатаРождения Тогда
				Если НайтиСтроку.Количество() > 0 Тогда
					НовСтрока = НайтиСтроку[0];
				Иначе
					НовСтрока = Источник.CRM_КлючевыеСобытия.Добавить();
					НовСтрока.ВидСобытия = ВидСобытия;
				КонецЕсли;
				НовСтрока.ДатаСобытия = Источник.ДатаРождения;
			ИначеЕсли НайтиСтроку.Количество() > 0 Тогда		
				Источник.ДатаРождения = НайтиСтроку[0].ДатаСобытия; 
			КонецЕсли;
		КонецЕсли;
		
		КонтактныеЛицаПартнеровРасчетПроцентаЗаполненияПортрет(Источник);
		КонтактныеЛицаПартнеровРасчетПроцентаЗаполненияКИ(Источник);
		
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Справочники.КонтактныеЛицаПартнеров.Реквизиты", "ДолжностьПоВизитке") И ЗначениеЗаполнено(Источник.CRM_Должность) Тогда
			Источник.ДолжностьПоВизитке = Источник.CRM_Должность.Наименование;
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтруктураПредприятия
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.СтруктураПредприятия") Тогда
		
		Если НЕ ЗначениеЗаполнено(Источник.CRM_МаксимальноеКоличествоБалловВДень) Тогда
			Источник.CRM_МаксимальноеКоличествоБалловВДень = 48;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Источник.CRM_ПроцентПревышенияКоличестваБаллов) Тогда
			Источник.CRM_ПроцентПревышенияКоличестваБаллов = 10;
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

Процедура РегистрыСведенийПередЗаписью(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	#Область СвязиМеждуПартнерами
	
	Если ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.СвязиМеждуПартнерами") Тогда
		
		Таблица = Источник.Выгрузить();
		Если Таблица.Количество() > 0 Тогда
			Для Каждого СтрокаТаблицы Из Таблица Цикл
				Если СтрокаТаблицы.ВидСвязи = Справочники.ВидыСвязейМеждуПартнерами.CRM_Холдинг Тогда
					Если Не ЗначениеЗаполнено(СтрокаТаблицы.ПервыйПартнер) Или Не ЗначениеЗаполнено(СтрокаТаблицы.ВторойПартнер) Тогда
						ТекстСообщения = НСтр("ru = 'При записи связи между клиентами произошла ошибка:'") + Символы.ПС;
						ТекстСообщения = ТекстСообщения
						+ НСтр("ru = 'Вид связи '")
						+ """" + Строка(СтрокаТаблицы.ВидСвязи) + """: "
						+ НСтр("ru = 'Не выбран клиент!'");
						//
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
						
						Отказ = Истина;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ИмяРегистра
	#КонецОбласти
	
КонецПроцедуры

#КонецОбласти

#Область ПриЗаписи

Процедура СправочникПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	#Область КонтактныеЛицаПартнеров
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.КонтактныеЛицаПартнеров") Тогда
		Если Не Отказ И ПолучитьФункциональнуюОпцию("CRM_ВестиИсториюРеквизитовКлиентов") Тогда
			CRM_КлиентыСервер.ЗаписатьИсториюРеквизитовПартнера(Источник.Ссылка, Новый Структура("КонтактноеЛицоПартнера"), ?(Источник.ДополнительныеСвойства.Свойство("ДатаЗаписиИстории"), Источник.ДополнительныеСвойства.ДатаЗаписиИстории, Неопределено));
		КонецЕсли;
	КонецЕсли;
	#КонецОбласти
	
	#Область Партнеры
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.Партнеры") Тогда		
		// ++ Тищенко В.В. 22.02.2019
		Возврат;
		// -- Тищенко В.В. 
		
		// +CRM не переносить в объединенные решения
		// Заполним договор по умолчанию для нового контрагента, если он не заполнен.
		Если Источник.ДополнительныеСвойства.Свойство("ЭтоНовыйОбъект") И Источник.ДополнительныеСвойства.ЭтоНовыйОбъект = ИСТИНА И Источник.ДополнительныеСвойства.ЭтоНовыйОбъект=Истина И НЕ Источник.ЭтоГруппа Тогда
			//Источник.ДополнительныеСвойства.Удалить("ЭтоНовый");
			Договор = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
			Договор.Наименование = "Основной договор" ;
			Договор.ВалютаРасчетов = Константы.ВалютаУправленческогоУчета.Получить();
			мОрганизация = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(CRM_ОбщегоНазначенияСервер.ТекущийПользователь(), "ОсновнаяОрганизация");
			Если ЗначениеЗаполнено(мОрганизация) Тогда
				Договор.Организация = мОрганизация;
			Иначе		
				Договор.Организация = CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию();
			КонецЕсли;	
			Договор.ДатаДоговора = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
			ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнойВидЦенПродажи");
			Договор.ВидЦен = ?(ЗначениеЗаполнено(ЗначениеНастройки), ЗначениеНастройки, Справочники.ВидыЦен.Оптовая);;
			Договор.Владелец = Источник.Ссылка;
			Договор.Записать();
			// Харченко ПО РЛС НЕ проходит. еще автоматический доступ не выдан а уже записи и чтения ссылки
			//Источник.ДоговорПоУмолчанию = Договор.Ссылка;
			//Источник.Записать();
		КонецЕсли;
		// -CRM не переносить в объединенные решения
		
		Если Не Отказ И ПолучитьФункциональнуюОпцию("CRM_ВестиИсториюРеквизитовКлиентов") Тогда
			CRM_КлиентыСервер.ЗаписатьИсториюРеквизитовПартнера(Источник.Ссылка, Новый Структура("Партнер"), ?(Источник.ДополнительныеСвойства.Свойство("ДатаЗаписиИстории"), Источник.ДополнительныеСвойства.ДатаЗаписиИстории, Неопределено));
		КонецЕсли;
		
		Если Источник.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо Тогда
			// Если с этим физ. лицом связаны контактные лица - нужно обновить в них информацию.
			СвязанныеКонтактныеЛица = РегистрыСведений.CRM_СвязиФизЛицСКонтактнымиЛицамиПартнеров.ПолучитьКонтактныеЛица(Источник.Ссылка);
			Для Каждого СвязанноеКонтактноеЛицо Из СвязанныеКонтактныеЛица Цикл
				CRM_МетодыМодулейМенеджеровСправочников.КонтактныеЛицаПартнеровЗаполнитьПоФизЛицу(СвязанноеКонтактноеЛицо, Источник.Ссылка);
			КонецЦикла;
		КонецЕсли;
	
	КонецЕсли;
	#КонецОбласти
	
	#Область УчетныеЗаписиЭлектроннойПочты
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.УчетныеЗаписиЭлектроннойПочты") Тогда
		
		Если Источник.ДополнительныеСвойства.Свойство("ЭтоНовый") И Источник.ДополнительныеСвойства.ЭтоНовый Тогда
			
			ТекПользователь = ПользователиКлиентСервер.ТекущийПользователь();
			НаборРегистра = РегистрыСведений.CRM_УчетныеЗаписиЭлектроннойПочты.СоздатьНаборЗаписей();
			НаборРегистра.Отбор.УчетнаяЗапись.Установить(Источник.Ссылка);
			НаборРегистра.Прочитать();
			ТаблицаНабора = НаборРегистра.Выгрузить();
			НаборРегистра.Очистить();
			СтрокаНабора = НаборРегистра.Добавить();
			СтрокаНабора.УчетнаяЗапись	= Источник.Ссылка;
			СтрокаНабора.Пользователь	= ТекПользователь;
			СтрокаНабора.Администрирование	= Истина;
			СтрокаНабора.Запись	= Истина;
			СтрокаТаблицыНабора = ТаблицаНабора.Найти(Источник.Ссылка, "УчетнаяЗапись");
			СтрокаНабора.Основная = ?(СтрокаТаблицыНабора = Неопределено, Ложь, СтрокаТаблицыНабора.Основная);
			НаборРегистра.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ДокументПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ТипИсточника = ТипЗнч(Источник);
	
	#Область ЭлектронноеПисьмоВходящее	
	Если ТипИсточника = Тип("ДокументОбъект.ЭлектронноеПисьмоВходящее") Тогда
	КонецЕсли;
	#КонецОбласти
	
	#Область ЭлектронноеПисьмоИсходящее	
	Если ТипИсточника = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
	КонецЕсли;
	#КонецОбласти
	
	#Область ДокументИмя	
	
	#КонецОбласти
	
КонецПроцедуры

Процедура РегистрыСведенийПриЗаписи(Источник, Отказ, Замещение) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ТипИсточника = ТипЗнч(Источник);
	
	#Область ПредметыПапкиВзаимодействий
	Если ТипИсточника = Тип("РегистрСведенийНаборЗаписей.ПредметыПапкиВзаимодействий") Тогда
		
		//Для каждого Запись из Источник Цикл
		//	Если Запись.ПапкаЭлектронногоПисьма.CRM_Вид <> Перечисления.CRM_ВидыПапокЭлектроннойПочты.Удаленные И Запись.Взаимодействие.ПометкаУдаления Тогда
		//		Взаимодействие = Запись.Взаимодействие.ПолучитьОбъект();
		//		Взаимодействие.УстановитьПометкуУдаления(Ложь);
		//	КонецЕсли;
		//КонецЦикла;

	КонецЕсли;
	#КонецОбласти

	#Область СвязиМеждуПартнерами
	
	Если ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.СвязиМеждуПартнерами") Тогда
		Таблица = Источник.Выгрузить();
		Если Таблица.Количество() > 0 Тогда
			Для Каждого СтрокаТаблицы Из Таблица Цикл
				Если СтрокаТаблицы.ВидСвязи = Справочники.ВидыСвязейМеждуПартнерами.CRM_Холдинг Тогда
					Холдинг = CRM_МетодыМодулейМенеджеровРегистров.ПолучитьГоловнойХолдинг(СтрокаТаблицы.ВторойПартнер);
					Если СтрокаТаблицы.ВторойПартнер <> Холдинг Тогда
						РегистрыСведений.CRM_ХолдингиПартнеров.УстановитьХолдингПартнера(СтрокаТаблицы.ВторойПартнер, Холдинг);
					КонецЕсли;
				Иначе
					Если ЗначениеЗаполнено(СтрокаТаблицы.ПервыйПартнер) Тогда
						Холдинг = CRM_МетодыМодулейМенеджеровРегистров.ПолучитьХолдингПартнера(СтрокаТаблицы.ПервыйПартнер);
						РегистрыСведений.CRM_ХолдингиПартнеров.УстановитьХолдингПартнера(СтрокаТаблицы.ПервыйПартнер, Холдинг);
					КонецЕсли;
					Если ЗначениеЗаполнено(СтрокаТаблицы.ВторойПартнер) Тогда
						Холдинг = CRM_МетодыМодулейМенеджеровРегистров.ПолучитьХолдингПартнера(СтрокаТаблицы.ВторойПартнер);
						РегистрыСведений.CRM_ХолдингиПартнеров.УстановитьХолдингПартнера(СтрокаТаблицы.ВторойПартнер, Холдинг);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		Иначе
			Попытка	ПартнерСсылка = Источник.Отбор.ПервыйПартнер.Значение;
			Исключение ПертнерСсылка = Неопределено;
			КонецПопытки;
			Если ЗначениеЗаполнено(ПартнерСсылка) Тогда
				
				Если Источник.Отбор.ВидСвязи.Значение = Справочники.ВидыСвязейМеждуПартнерами.CRM_Холдинг Тогда
					Холдинг = CRM_МетодыМодулейМенеджеровРегистров.ПолучитьГоловнойХолдинг(ПартнерСсылка);
					Если ПартнерСсылка <> Холдинг Тогда
						РегистрыСведений.CRM_ХолдингиПартнеров.УстановитьХолдингПартнера(ПартнерСсылка, Холдинг);
					КонецЕсли;
				Иначе 
					Холдинг = CRM_МетодыМодулейМенеджеровРегистров.ПолучитьХолдингПартнера(ПартнерСсылка);
					РегистрыСведений.CRM_ХолдингиПартнеров.УстановитьХолдингПартнера(ПартнерСсылка, Холдинг);
				КонецЕсли;
			КонецЕсли;
			Попытка	ПартнерСсылка = Источник.Отбор.ВторойПартнер.Значение;
			Исключение ПертнерСсылка = Неопределено;
			КонецПопытки;
			Если ЗначениеЗаполнено(ПартнерСсылка) Тогда
				Если Источник.Отбор.ВидСвязи.Значение = Справочники.ВидыСвязейМеждуПартнерами.CRM_Холдинг Тогда
					Холдинг = CRM_МетодыМодулейМенеджеровРегистров.ПолучитьГоловнойХолдинг(ПартнерСсылка);
					Если ПартнерСсылка <> Холдинг Тогда
						РегистрыСведений.CRM_ХолдингиПартнеров.УстановитьХолдингПартнера(ПартнерСсылка, Холдинг);
					КонецЕсли;
				Иначе 
					Холдинг = CRM_МетодыМодулейМенеджеровРегистров.ПолучитьХолдингПартнера(ПартнерСсылка);
					РегистрыСведений.CRM_ХолдингиПартнеров.УстановитьХолдингПартнера(ПартнерСсылка, Холдинг);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
	//++ VOG Иванов С.А. 29.10.2019 ID заявки: 000000775
	#Область вогСвязиКонтактныхЛиц
	Если ТипЗнч(Источник) = Тип("РегистрСведенийНаборЗаписей.вогСвязиКонтактныхЛиц") Тогда
		Таблица = Источник.Выгрузить();
		Если Таблица.Количество() > 0 Тогда
			СтруктураОтбора = Новый Структура("КонтактноеЛицо, ОбъектСвязи, CRM_РольКонтактногоЛица, Период");
			Для Каждого СтрокаТаблицы Из Таблица Цикл
				ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаТаблицы);
				РегистрыСведений.вогРолиКонтактныхЛиц.СоздатьЗаписьРолиКонтактногоЛица(СтруктураОтбора);
				Если СтрокаТаблицы.CRM_РольКонтактногоЛица = Справочники.РолиКонтактныхЛицПартнеров.ПодписантДоговора И ТипЗнч(СтрокаТаблицы.ОбъектСвязи) = Тип("СправочникСсылка.вогЮридическиеЛица") Тогда
					РегистрыСведений.вогКонтактныеЛицаПодписанты.СоздатьЗаписьПодписантаКонтактногоЛица(СтруктураОтбора);		
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	#КонецОбласти
	//-- VOG Иванов С.А. 29.10.2019 ID заявки: 000000775 
КонецПроцедуры

#КонецОбласти

#Область ПриКопировании

Процедура СправочникПриКопировании(Источник, ОбъектКопирования) Экспорт
	
	#Область ПапкиЭлектронныхПисем
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.ПапкиЭлектронныхПисем") Тогда
		Источник.CRM_Вид = Неопределено;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область МаркетинговыеМероприятия
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.МаркетинговыеМероприятия") Тогда
		ТекПользователь		  = CRM_ОбщегоНазначенияСервер.ТекущийПользователь();
		Источник.Ответственный = ТекПользователь;
		Источник.CRM_Автор     = ТекПользователь;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Проекты
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.Проекты") Тогда
		Источник.Ответственный = CRM_ОбщегоНазначенияСервер.ТекущийПользователь();
		Источник.CRM_Подразделение = Источник.Ответственный.Подразделение;
		Источник.CRM_ТекущийЭтап = Неопределено;
		Источник.Комментарий = "";
		Источник.CRM_КомментарийHTML = "";
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Партнеры
	
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.Партнеры") Тогда
		Если Не Источник.ЭтоГруппа Тогда
		
			Источник.ОсновнойМенеджер = CRM_ОбщегоНазначенияСервер.ТекущийПользователь();
			Источник.ДатаРегистрации  = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
			
		КонецЕсли;	
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ДокументПриКопировании(Источник, ОбъектКопирования) Экспорт
	
	#Область ЭлектронноеПисьмоИсходящее
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЭлектронноеПисьмоИсходящее") Тогда
		CRM_ОбщегоНазначенияСервер.ЗаполнитьАвтораИОтветственного(Источник);
		Источник.СтатусПисьма           = Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Черновик;
		Источник.ДатаОтправления        = Неопределено;
		Источник.ИдентификаторСообщения = "";
	КонецЕсли;
	
	#КонецОбласти
	
	#Область КоммерческоеПредложениеКлиенту
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.КоммерческоеПредложениеКлиенту") Тогда
		// Заполним автора и ответственного.
		CRM_ОбщегоНазначенияСервер.ЗаполнитьАвтораИОтветственного(Источник);

	КонецЕсли;
	
	#КонецОбласти
КонецПроцедуры

#КонецОбласти

#КонецОбласти //ТиповыеОбработчики

#Область ПрочиеМетодыОбъектов

#Область Партнеры

Процедура РасчетПроцентаЗаполненияПортрет(Объект)
	
	// по клиенту
	СзЗаполнение	= Новый СписокЗначений;
	//СзЗаполнение.Добавить("БизнесРегион");
	//СзЗаполнение.Добавить("CRM_Важность");
	//СзЗаполнение.Добавить("CRM_СтатусРаботы");
	//СзЗаполнение.Добавить("CRM_ОсновнаяОтрасль");
	//СзЗаполнение.Добавить("CRM_СегментРынка");
	//СзЗаполнение.Добавить("CRM_ЧисленностьСотрудников");
	//СзЗаполнение.Добавить("CRM_ЧисленностьРабочихМест");
	СписокНаборовСвойств = CRM_УправлениеСвойствамиПереопределяемый.ПолучитьНаборыСвойствДляПартнеров(Объект.ЮрФизЛицо);
	
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Свойство
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДополнительныеРеквизиты.Свойство КАК Свойство
	|	ИЗ
	|		Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|	ГДЕ
	|		НЕ ДополнительныеРеквизиты.Ссылка.ЭтоГруппа
	|		И ДополнительныеРеквизиты.Ссылка В ИЕРАРХИИ(&ГруппаНабора)
	|		И НЕ ДополнительныеРеквизиты.Ссылка В
	|					(ВЫБРАТЬ
	|						CRM_РасположениеРеквизитовКлиентов.ДопРеквизит
	|					ИЗ
	|						РегистрСведений.CRM_РасположениеРеквизитовКлиентов КАК CRM_РасположениеРеквизитовКлиентов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДополнительныеРеквизитыИСведения.Ссылка
	|	ИЗ
	|		ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|	ГДЕ
	|		ДополнительныеРеквизитыИСведения.НаборСвойств В ИЕРАРХИИ(&ГруппаНабора)) КАК ВложенныйЗапрос");
	
	Запрос.УстановитьПараметр("ГруппаНабора", СписокНаборовСвойств);
	ВыборкаРеквизитов = Запрос.Выполнить().Выбрать();
	СписокДопРеквизитов = Новый СписокЗначений;
	Пока ВыборкаРеквизитов.Следующий() Цикл
		СписокДопРеквизитов.Добавить(ВыборкаРеквизитов.Свойство);	
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_РасположениеРеквизитовКлиентов.ИмяРеквизита,
	|	CRM_РасположениеРеквизитовКлиентов.ДопРеквизит
	|ИЗ
	|	РегистрСведений.CRM_РасположениеРеквизитовКлиентов КАК CRM_РасположениеРеквизитовКлиентов
	|ГДЕ
	|	CRM_РасположениеРеквизитовКлиентов.Колонка <> ""Дополнительно""
	|	И CRM_РасположениеРеквизитовКлиентов.ДопРеквизит В(&СписокДопРеквизитов)";
	Запрос.УстановитьПараметр("СписокДопРеквизитов", СписокДопРеквизитов);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(Выборка.ДопРеквизит) Тогда
			СзЗаполнение.Добавить(Выборка.ИмяРеквизита);
		КонецЕсли;	
	КонецЦикла;	
	СзЗаполнение.Добавить("БизнесРегион");
	ИндВсего	= СзЗаполнение.Количество();
	Инд			= 0;
	
	Для каждого Элем Из СзЗаполнение Цикл
		Если ТипЗнч(Объект[Элем.Значение])=Тип("Дата") Тогда
			Если Объект[Элем.Значение]<>Дата(1,1,1) Тогда
				Инд	= Инд + 1;
			КонецЕсли;  
			Продолжить;
		КонецЕсли; 
		Если ТипЗнч(Объект[Элем.Значение])=Тип("Строка") Тогда
			Если Не ПустаяСтрока(Объект[Элем.Значение]) Тогда
				Инд	= Инд + 1;
			КонецЕсли;  
			Продолжить;
		КонецЕсли; 
		Если ТипЗнч(Объект[Элем.Значение])=Тип("Булево") Тогда
			Инд	= Инд + 1;
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект[Элем.Значение]) Тогда
			Инд	= Инд + 1;
		КонецЕсли; 
	КонецЦикла;
	
	// по доп. реквизитам.
	СзЗаполнение.Очистить();
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.ДопРеквизит) Тогда
			СзЗаполнение.Добавить(Выборка.ДопРеквизит);
		КонецЕсли;	
	КонецЦикла;	
	ИндВсего	= ИндВсего + СзЗаполнение.Количество();
	Для каждого Элем Из СзЗаполнение Цикл
		СтрокаДР = Объект.ДополнительныеРеквизиты.Найти(Элем.Значение, "Свойство");
		Если СтрокаДР = Неопределено Тогда Продолжить КонецЕсли;
		Если ТипЗнч(СтрокаДР.Значение)=Тип("Дата") Тогда
			Если СтрокаДР.Значение<>Дата(1,1,1) Тогда
				Инд	= Инд + 1;
			КонецЕсли;  
			Продолжить;
		КонецЕсли; 
		Если ТипЗнч(СтрокаДР.Значение)=Тип("Строка") Тогда
			Если Не ПустаяСтрока(СтрокаДР.Значение) Тогда
				Инд	= Инд + 1;
			КонецЕсли;  
			Продолжить;
		КонецЕсли; 
		Если ТипЗнч(СтрокаДР.Значение)=Тип("Булево") Тогда
			Инд	= Инд + 1;
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаДР.Значение) Тогда
			Инд	= Инд + 1;
		КонецЕсли; 
	КонецЦикла;
	
	// по контактным лицам
	
	CRM_ОбработкиЗаполненияЗаписиКопированияОбъектовПолныеПрава.ДобавитьРасчетПоКонтактнымЛицам(Объект.Ссылка, ИндВсего, Инд);
	 	
	Объект.CRM_ПроцентЗаполненностиПортрет = 100*Инд/ИндВсего;
	
КонецПроцедуры

Процедура РасчетПроцентаЗаполненияКИ(Объект)
	
	Объект.CRM_ПроцентЗаполненностиКИ = 100;
	Заполнено = 0;
	Проверено = 0;
	
	// По контактам
	МассивВидовКИ = Новый Массив;
	ВыборкаКИ = Справочники.ВидыКонтактнойИнформации.Выбрать(Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров);
	Пока ВыборкаКИ.Следующий() Цикл
		Если ВыборкаКИ.CRM_Основной Тогда
			МассивВидовКИ.Добавить(ВыборкаКИ.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивВидовКИ.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	CRM_ОбработкиЗаполненияЗаписиКопированияОбъектовПолныеПрава.ДобавитьРасчетПоКонтактнымЛицамПОКИ(Объект.Ссылка, МассивВидовКИ, Заполнено, Проверено);
		
	// По клиентам
	МассивВидовКИ = Новый Массив;
	ВыборкаКИ = Справочники.ВидыКонтактнойИнформации.Выбрать(Справочники.ВидыКонтактнойИнформации.СправочникПартнеры);
	Пока ВыборкаКИ.Следующий() Цикл
		Если ВыборкаКИ.CRM_Основной Тогда
			МассивВидовКИ.Добавить(ВыборкаКИ.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Если Объект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.Компания Тогда
		ВыборкаКИ = Справочники.ВидыКонтактнойИнформации.Выбрать(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыКомпания);
		Пока ВыборкаКИ.Следующий() Цикл
			Если ВыборкаКИ.CRM_Основной Тогда
				МассивВидовКИ.Добавить(ВыборкаКИ.Ссылка);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Объект.ЮрФизЛицо = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо Тогда
		ВыборкаКИ = Справочники.ВидыКонтактнойИнформации.Выбрать(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыЧастноеЛицо);
		Пока ВыборкаКИ.Следующий() Цикл
			Если ВыборкаКИ.CRM_Основной Тогда
				МассивВидовКИ.Добавить(ВыборкаКИ.Ссылка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Эл Из МассивВидовКИ Цикл
		Если Объект.КонтактнаяИнформация.Найти(Эл, "Вид") <> Неопределено Тогда
			Заполнено = Заполнено + 1;
		КонецЕсли; 
		Проверено = Проверено + 1;
	КонецЦикла;
	
	// Итог
	Если Проверено = Заполнено Тогда
		Объект.CRM_ПроцентЗаполненностиКИ = 100;
	ИначеЕсли Заполнено = 0 Тогда
		Объект.CRM_ПроцентЗаполненностиКИ = 0;
	ИначеЕсли Проверено <> Заполнено Тогда
		Объект.CRM_ПроцентЗаполненностиКИ = 100*Заполнено/Проверено;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьТипОтношенийПредставление(Объект)
	
	CRM_ВсеТипыОтношений = Новый СписокЗначений;
	CRM_ВсеТипыОтношений.Добавить("Поставщик",			"Поставщик");
	CRM_ВсеТипыОтношений.Добавить("Клиент",				"Покупатель");
	CRM_ВсеТипыОтношений.Добавить("Конкурент",			"Конкурент");
	CRM_ВсеТипыОтношений.Добавить("ПрочиеОтношения",	"Прочие отношения");
	CRM_ВсеТипыОтношений.Добавить("CRM_Госорганы",		"Госорганы");
	CRM_ВсеТипыОтношений.Добавить("CRM_Учредитель",		"Учредитель");
	CRM_ТипыОтношений = "";
	Для Каждого ТипОтношений Из CRM_ВсеТипыОтношений Цикл
		Если Объект[ТипОтношений.Значение] Тогда
			CRM_ТипыОтношений = CRM_ТипыОтношений  + "; " + ТипОтношений.Представление;
		КонецЕсли;	
	КонецЦикла;	
	Если СтрДлина(CRM_ТипыОтношений) > 0 Тогда
		CRM_ТипыОтношений = Сред(CRM_ТипыОтношений, 3);
	КонецЕсли;	
	Объект.CRM_ТипОтношенийПредставление = CRM_ТипыОтношений;
	
КонецПроцедуры

#КонецОбласти

#Область ЭлектронноеПисьмоИсходящееМетодыЗаполнения 

Процедура ЗаполнитьНаОснованииПисьма(Объект, Основание, ТипОтвета)
	
	// +CRM
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
	// -CRM
	ПереноситьОтправителя = Истина;
	ПереноситьВсехПолучателей = Ложь;
	// +CRM
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		ПереноситьОтправителя		= Ложь;
		ПереноситьВсехПолучателей	= Истина;
	КонецЕсли;
	// -CRM
	ПереноситьВложения = Ложь;
	ДобавлятьКТеме = "Re: ";
	
	Если ТипОтвета = "ОтветитьВсем" Тогда
		ПереноситьВсехПолучателей = Истина;
	ИначеЕсли ТипОтвета = "Переслать" Тогда
		ДобавлятьКТеме = "Fw: ";
		ПереноситьОтправителя = Ложь;
		// +CRM
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
			ПереноситьВсехПолучателей = Ложь;
		Иначе	
		// -CRM
		ПереноситьВложения = Истина;
		// +CRM
		КонецЕсли;
		// -CRM
	КонецЕсли;
	
	ЗаполнитьПараметрыИзПисьма(Объект, Основание, ПереноситьОтправителя, ПереноситьВсехПолучателей,
		ДобавлятьКТеме, ПереноситьВложения,ТипОтвета);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИзПисьма(Объект, Письмо, ПереноситьОтправителяВПолучатели, 
	
	ПереноситьВсехПолучателейПисьмаВПолучатели, ДобавлятьКТеме, ПереноситьВложения, ТипОтвета)
	
	ИмяОбъектаМетаданных = Письмо.Метаданные().Имя;
	
	Запрос = Новый Запрос;
	// +CRM
	//Запрос.Текст ="ВЫБРАТЬ
	//|	ЭлектронноеПисьмо.ИдентификаторСообщения,
	//|	ЭлектронноеПисьмо.ИдентификаторыОснований,
	//|	ЭлектронноеПисьмо.Кодировка,
	//|	ЭлектронноеПисьмо.Предмет,
	//|	ЭлектронноеПисьмо.Тема,
	//|	ЭлектронноеПисьмо.УчетнаяЗапись,
	//|	ЭлектронноеПисьмо.ТипТекста,
	//|	ЭлектронноеПисьмо.Ссылка" +?(ПереноситьОтправителяВПолучатели,",
	//|	ЭлектронноеПисьмо.ОтправительАдрес,
	//|	ЭлектронноеПисьмо.ОтправительКонтакт,
	//|	ЭлектронноеПисьмо.ОтправительПредставление", "") + "
	//|ИЗ
	//|	Документ." + ИмяОбъектаМетаданных + " КАК ЭлектронноеПисьмо
	//|ГДЕ
	//|	ЭлектронноеПисьмо.Ссылка = &Ссылка";
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЭлектронноеПисьмоВходящее.ИдентификаторСообщения,
	|	ЭлектронноеПисьмоВходящее.ИдентификаторыОснований,
	|	ЭлектронноеПисьмоВходящее.Кодировка,";
	Если ТипЗнч(Письмо) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ЭлектронноеПисьмоВходящее.ОтправительАдрес,
		|	ЭлектронноеПисьмоВходящее.ОтправительКонтакт,
		|	ЭлектронноеПисьмоВходящее.ОтправительПредставление,";
	ИначеЕсли ТипЗнч(Письмо) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	"""" КАК ОтправительАдрес,
		|	"""" КАК ОтправительКонтакт,
		|	"""" КАК ОтправительПредставление,";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|	ЭлектронноеПисьмоВходящее.Ссылка,
	|	ЭлектронноеПисьмоВходящее.Текст,
	|	ЭлектронноеПисьмоВходящее.ТекстHTML,
	|	ЭлектронноеПисьмоВходящее.ТипТекста,
	|	ЭлектронноеПисьмоВходящее.Тема,
	|	ЭлектронноеПисьмоВходящее.УчетнаяЗапись,
	|	ЭлектронноеПисьмоВходящее.ПолучателиПисьма.(
	|		Адрес,
	|		Представление,
	|		Контакт
	|	),
	|	ЭлектронноеПисьмоВходящее.ПолучателиКопий.(
	|		Адрес,
	|		Представление,
	|		Контакт
	|	)
	|ИЗ";
	Если ТипЗнч(Письмо) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее";
	ИначеЕсли ТипЗнч(Письмо) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	Документ.ЭлектронноеПисьмоИсходящее КАК ЭлектронноеПисьмоВходящее";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|ГДЕ
	|	ЭлектронноеПисьмоВходящее.Ссылка = &Ссылка";
	Запрос.Текст = ТекстЗапроса;
	// -CRM
	Запрос.УстановитьПараметр("Ссылка", Письмо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ИдентификаторОснования       = Выборка.ИдентификаторСообщения;
	ИдентификаторыОснований      = СокрЛП(Выборка.ИдентификаторыОснований + " <" + ИдентификаторОснования + ">");
	Объект.Кодировка             = Выборка.Кодировка;
	// +CRM
	//Предмет                      = Выборка.Предмет;
	Если Объект.CRM_РедактироватьТекстИсходногоПисьма Тогда 
		Объект.Текст			= CRM_МетодыМодулейОбъектовДокументов.СформироватьТекстПисьма(Выборка, ДобавлятьКТеме, Письмо);
	Иначе
		Объект.Текст          	= "";
	КонецЕсли;
	Объект.ТекстHTML           	= "";
	
	//Тема                         = ДобавлятьКТеме + Выборка.Тема;
	Объект.Тема                 = CRM_МетодыМодулейОбъектовДокументов.ПолучитьТемуПисьма(Выборка.Тема, ДобавлятьКТеме);
	// -CRM
	Объект.УчетнаяЗапись        = Выборка.УчетнаяЗапись;
	Объект.ВзаимодействиеОснование = Выборка.Ссылка;
	Объект.ВключатьТелоИсходногоПисьма = Истина;
	//ТипТекста                    = Выборка.ТипТекста;
	Объект.ТипТекста            = Перечисления.ТипыТекстовЭлектронныхПисем.HTML;
	
	Если ПереноситьОтправителяВПолучатели Тогда
		ДобавитьПолучателя(Объект, Выборка.ОтправительАдрес, Выборка.ОтправительПредставление, Выборка.ОтправительКонтакт);
	КонецЕсли;
	
	Если ПереноситьВсехПолучателейПисьмаВПолучатели Тогда
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	УчетныеЗаписиЭлектроннойПочты.АдресЭлектроннойПочты
		|ПОМЕСТИТЬ АдресТекущегоПолучателя
		|ИЗ
		|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
		|ГДЕ
		|	УчетныеЗаписиЭлектроннойПочты.Ссылка В
		|			(ВЫБРАТЬ
		|				ЭлектронноеПисьмо.УчетнаяЗапись
		|			ИЗ
		|				Документ." + ИмяОбъектаМетаданных + " КАК ЭлектронноеПисьмо
		|			ГДЕ
		|				ЭлектронноеПисьмо.Ссылка = &Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭлектронноеПисьмоПолучателиПисьма.Адрес,
		|	ЭлектронноеПисьмоПолучателиПисьма.Представление,
		|	ЭлектронноеПисьмоПолучателиПисьма.Контакт,
		|	""ПолучательПисьма"" КАК ТипПолучателя
		|ИЗ
		|	Документ." + ИмяОбъектаМетаданных + ".ПолучателиПисьма КАК ЭлектронноеПисьмоПолучателиПисьма
		|ГДЕ
		|	ЭлектронноеПисьмоПолучателиПисьма.Ссылка = &Ссылка
		|	И (НЕ ЭлектронноеПисьмоПолучателиПисьма.Адрес В
		|				(ВЫБРАТЬ
		|					АдресТекущегоПолучателя.АдресЭлектроннойПочты
		|				ИЗ
		|					АдресТекущегоПолучателя КАК АдресТекущегоПолучателя))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭлектронноеПисьмоПолучателиКопий.Адрес,
		|	ЭлектронноеПисьмоПолучателиКопий.Представление,
		|	ЭлектронноеПисьмоПолучателиКопий.Контакт,
		|	""ПолучательКопии"" КАК ТипПолучателя
		|ИЗ
		|	Документ." + ИмяОбъектаМетаданных + ".ПолучателиКопий КАК ЭлектронноеПисьмоПолучателиКопий
		|ГДЕ
		|	ЭлектронноеПисьмоПолучателиКопий.Ссылка = &Ссылка
		|	И (НЕ ЭлектронноеПисьмоПолучателиКопий.Адрес В
		|				(ВЫБРАТЬ
		|					АдресТекущегоПолучателя.АдресЭлектроннойПочты
		|				ИЗ
		|					АдресТекущегоПолучателя КАК АдресТекущегоПолучателя))";
		
		Запрос.УстановитьПараметр("АдресОтправителяЭтогоПисьма",Письмо.УчетнаяЗапись.АдресЭлектроннойПочты);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ДобавитьПолучателейИзТаблицы(Объект, РезультатЗапроса.Выгрузить());
		КонецЕсли;
		
	КонецЕсли;
	
	СписокПолучателейПисьма = ВзаимодействияКлиентСервер.ПолучитьПредставлениеСпискаАдресатов(Объект.ПолучателиПисьма, Ложь);
	СписокПолучателейКопий = ВзаимодействияКлиентСервер.ПолучитьПредставлениеСпискаАдресатов(Объект.ПолучателиКопий, Ложь);
	
КонецПроцедуры

Функция ПолучитьПредставлениеДляУчетнойЗаписи(УчетнаяЗапись)

	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Возврат "";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УчетныеЗаписиЭлектроннойПочты.ИмяПользователя,
	|	УчетныеЗаписиЭлектроннойПочты.АдресЭлектроннойПочты
	|ИЗ
	|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	|ГДЕ
	|	УчетныеЗаписиЭлектроннойПочты.Ссылка = &УчетнаяЗапись";
	Запрос.УстановитьПараметр("УчетнаяЗапись", УчетнаяЗапись);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Представление = Выборка.ИмяПользователя;
	Если ПустаяСтрока(Представление) Тогда
		Возврат Выборка.АдресЭлектроннойПочты;
	Иначе
		Возврат Представление + " <" + Выборка.АдресЭлектроннойПочты + ">";
	КонецЕсли;

КонецФункции

Процедура ДобавитьПолучателя(Объект, Адрес, Представление, Контакт)
	
	Если Объект.ПолучателиПисьма.Найти(Адрес, "Адрес") = Неопределено Тогда
		НоваяСтрока = Объект.ПолучателиПисьма.Добавить();
		НоваяСтрока.Адрес = Адрес;
		НоваяСтрока.Контакт = Контакт;
		НоваяСтрока.Представление = Представление;
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Контакт) Тогда
			НоваяСтрока.Контакт = Адрес;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьПолучателейИзТаблицы(Объект, Таблица)
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		Если СтрокаТаблицы.ТипПолучателя = "ПолучательПисьма" Тогда
			НоваяСтрока = Объект.ПолучателиПисьма.Добавить();
		ИначеЕсли СтрокаТаблицы.ТипПолучателя = "ПолучательКопии" Тогда
			НоваяСтрока = Объект.ПолучателиКопий.Добавить();
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.Контакт) Тогда
			НоваяСтрока.Контакт = СтрокаТаблицы.Адрес;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КонтактныеЛицаПартнеров 

Процедура КонтактныеЛицаПартнеровРасчетПроцентаЗаполненияПортрет(Объект)
	
	Инд			= 0;
	
	Если ЗначениеЗаполнено(Объект.CRM_ТипОтношенийПредставление) Тогда
		Инд = Инд + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.CRM_Должность) Тогда
		Инд = Инд + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Пол) Тогда
		Инд = Инд + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.CRM_Состояние) Тогда
		Инд = Инд + 1;
	КонецЕсли;
	
	Объект.CRM_ПроцентЗаполненностиПортрет = 100*Инд/4;
	
КонецПроцедуры

Процедура КонтактныеЛицаПартнеровРасчетПроцентаЗаполненияКИ(Объект)
	
	Объект.CRM_ПроцентЗаполненностиКИ = 100;
	Заполнено = 0;
	Проверено = 0;
	
	МассивВидовКИ = Новый Массив;
	ВыборкаКИ = Справочники.ВидыКонтактнойИнформации.Выбрать(Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров);
	Пока ВыборкаКИ.Следующий() Цикл
		Если ВыборкаКИ.CRM_Основной И ВыборкаКИ.Используется И НЕ ВыборкаКИ.ПометкаУдаления Тогда
			МассивВидовКИ.Добавить(ВыборкаКИ.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Эл Из МассивВидовКИ Цикл
		Если Объект.КонтактнаяИнформация.Найти(Эл, "Вид") <> Неопределено Тогда
			Заполнено = Заполнено + 1;
		КонецЕсли; 
		Проверено = Проверено + 1;
	КонецЦикла;
	
	// Итог
	Если Проверено = Заполнено Тогда
		Объект.CRM_ПроцентЗаполненностиКИ = 100;
	ИначеЕсли Заполнено = 0 Тогда
		Объект.CRM_ПроцентЗаполненностиКИ = 0;
	ИначеЕсли Проверено <> Заполнено Тогда
		Объект.CRM_ПроцентЗаполненностиКИ = 100*Заполнено/Проверено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти //ПрочиеМетодыОбъектов


//+вог
#Область ТипыОтношений
	
Процедура вогСформироватьТипОтношенийПредставление(Объект)
	
	CRM_ТипыОтношений = "";
	Если НЕ Объект.Метаданные().ТабличныеЧасти.Найти("вогТипыОтношений") = Неопределено Тогда
		Для каждого СтрокаТЧ Из Объект.вогТипыОтношений Цикл
			CRM_ТипыОтношений = CRM_ТипыОтношений  + "; " + СтрокаТЧ.ТипОтношений;
			
		КонецЦикла;
		
	Иначе	
		CRM_ВсеТипыОтношений = Новый СписокЗначений;
		CRM_ВсеТипыОтношений.Добавить("Поставщик",			"Поставщик");
		CRM_ВсеТипыОтношений.Добавить("Клиент",				"Покупатель");
		CRM_ВсеТипыОтношений.Добавить("Конкурент",			"Конкурент");
		CRM_ВсеТипыОтношений.Добавить("ПрочиеОтношения",	"Прочие отношения");
		CRM_ВсеТипыОтношений.Добавить("CRM_Госорганы",		"Госорганы");
		CRM_ВсеТипыОтношений.Добавить("CRM_Учредитель",		"Учредитель");
		
		Для Каждого ТипОтношений Из CRM_ВсеТипыОтношений Цикл
			Если Объект[ТипОтношений.Значение] Тогда
				CRM_ТипыОтношений = CRM_ТипыОтношений  + "; " + ТипОтношений.Представление;
			КонецЕсли;	
		КонецЦикла;	
		
	КонецЕсли;
	
	Если СтрДлина(CRM_ТипыОтношений) > 0 Тогда
		CRM_ТипыОтношений = Сред(CRM_ТипыОтношений, 3);
	КонецЕсли;	
	
	Объект.CRM_ТипОтношенийПредставление = CRM_ТипыОтношений;
	
КонецПроцедуры

#КонецОбласти

//-вог
