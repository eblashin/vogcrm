
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ИерархическийПросмотр")
		И Параметры.ИерархическийПросмотр = Ложь Тогда
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ТипАдреса") И (Параметры.Отбор.ТипАдреса = "ТолькоНаселенныйПункт" или  Параметры.Отбор.ТипАдреса = "НаселенныйПункт") Тогда //Павелко, Таск 000000945, 26.11.2019
		ВыборТолькоНаселенныхПунктов = Истина;
		Параметры.Отбор.Удалить("ТипАдреса");
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка) //Павелко, Таск 000000945, 26.11.2019
	
	Если ВыборТолькоНаселенныхПунктов И Не Элемент.ТекущиеДанные.ТипАдреса = "НаселенныйПункт" Тогда
		Сообщить("Нужно выбрать населенный пункт");
		СтандартнаяОбработка = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНаселенныйПункт(Команда)
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("РежимВыбора", Истина); 
			
	ОписаниеОповещенияВыборГорода = Новый ОписаниеОповещения("ОповещениеОписаниеОповещенияВыборГорода", ЭтотОбъект);
			
	ОткрытьФорму("Справочник.вогНаселенныеПункты.Форма.ФормаВводаНовогоЭлемента", ПараметрыОткрытияФормы, ЭтаФорма, ЭтаФорма.УникальныйИдентификатор,,, ОписаниеОповещенияВыборГорода);
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеОписаниеОповещенияВыборГорода(Значение, Доп) Экспорт
	
	Если Значение=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Список.ТекущаяСтрока = Значение;
	
КонецПроцедуры

#КонецОбласти