&НаКлиенте
Процедура НайтиАдрес(УстановитьКоординаты = Ложь)
	
	КоличествоОтветов = 20;
	
	СоответствиеТочностьПоиска = Новый Соответствие;
	СоответствиеТочностьПоиска.Вставить("locality","Населенный пункт");
	СоответствиеТочностьПоиска.Вставить("province","Округ");
	СоответствиеТочностьПоиска.Вставить("country","Страна");
	Попытка
		ДолготаШирота=СтрРазделить(СтрокаПоискаАдреса,",",Ложь);
		Д = Число(ДолготаШирота[1]);
		Ш= Число(ДолготаШирота[0]);
		ВключатьСтрану = Ложь;
	Исключение
		ВключатьСтрану = Истина;
	КонецПопытки;
	Запрос = Новый HTTPЗапрос("/1.x/?format=json&apikey=9269d3fb-b762-4397-aeab-02365cc80205&geocode="+
	?(ВключатьСтрану и ОграничитьПоискСтранойРФ,"Россия,","")+СокрЛП(СтрокаПоискаАдреса));
	ssl1 = Новый ЗащищенноеСоединениеOpenSSL(
	Новый СертификатКлиентаWindows(СпособВыбораСертификатаWindows.Авто),
	Новый СертификатыУдостоверяющихЦентровWindows());	
	АдресOutput = КаталогВременныхФайлов() + "geores.xml";			
	Соед = Новый HTTPСоединение("geocode-maps.yandex.ru",,,,,,ssl1,Истина);
	Ответ = Соед.Получить(Запрос,АдресOutput);
	Чтение = Новый ЧтениеJSON;
	Чтение.ОткрытьФайл(АдресOutput);
	тДанные = ПрочитатьJSON(Чтение,Ложь);
	Данные = тДанные.response.GeoObjectCollection.featureMember;
	СписокНайденныхАдресов.Очистить();
	Для каждого КомпонентыАдр из Данные цикл
		Если СписокНайденныхАдресов.Количество()=КоличествоОтветов тогда
			Прервать;
		КонецЕсли;
		Если КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.kind <> "locality" тогда
			Продолжить;	
		КонецЕсли;
		КомпонентыАдреса = КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.Address.Components;
		НовыйАдрес = СписокНайденныхАдресов.Добавить();
		Попытка
			НовыйАдрес.ПочтовыйИндекс = КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.Thoroughfare.Premise.PostalCode.PostalCodeNumber;
		Исключение
			А=2;
		КонецПопытки;
		НовыйАдрес.Представление = ?(НовыйАдрес.ПочтовыйИндекс<>"",НовыйАдрес.ПочтовыйИндекс+",","")+КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.text;
		НовыйАдрес.Комментарий = СоответствиеТочностьПоиска[КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.kind]; 
		ДолготаШирота=КомпонентыАдр.GeoObject.Point.pos;
		МассивДолготаШирота = СтрРазделить(ДолготаШирота," ",Ложь);
		НовыйАдрес.Долгота = Число(МассивДолготаШирота[1]);
		НовыйАдрес.Широта = Число(МассивДолготаШирота[0]);
		Для каждого СоставляющаяАдреса из КомпонентыАдреса цикл
			Если СоставляющаяАдреса.kind = "province" тогда
				Если НовыйАдрес.ФедеральныйОкруг="" тогда
					НовыйАдрес.ФедеральныйОкруг = СоставляющаяАдреса.name;	
				Иначе
					НовыйАдрес.Регион = СоставляющаяАдреса.name;	
				КонецЕсли;
			ИначеЕсли СоставляющаяАдреса.kind = "country" тогда
				НовыйАдрес.Страна = СоставляющаяАдреса.name;	
			ИначеЕсли СоставляющаяАдреса.kind = "area" тогда
				НовыйАдрес.ГородскойОкруг = СоставляющаяАдреса.name;	
			ИначеЕсли СоставляющаяАдреса.kind = "locality" тогда
				НовыйАдрес.НаселенныйПункт = СоставляющаяАдреса.name;	
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	Чтение.Закрыть();
	
	НайтиУжеСозданныеНаселенныеПункты();
	
КонецПроцедуры

&НаСервере
Процедура НайтиУжеСозданныеНаселенныеПункты()
	
	ТЗНаселенныеПункты = СписокНайденныхАдресов.Выгрузить(,"Представление, Страна, ФедеральныйОкруг, Регион, ГородскойОкруг, НаселенныйПункт");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗНаселенныеПункты.Представление КАК Представление,
		|	ТЗНаселенныеПункты.Страна КАК Страна,
		|	ТЗНаселенныеПункты.ФедеральныйОкруг КАК ФедеральныйОкруг,
		|	ТЗНаселенныеПункты.Регион КАК Регион,
		|	ТЗНаселенныеПункты.ГородскойОкруг КАК ГородскойОкруг,
		|	ТЗНаселенныеПункты.НаселенныйПункт КАК НаселенныйПункт,
		|	ВЫБОР
		|		КОГДА ТЗНаселенныеПункты.ГородскойОкруг <> """"
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ГородскойОкругЗаполнен,
		|	ВЫБОР
		|		КОГДА ТЗНаселенныеПункты.Регион <> """"
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РегионЗаполнен,
		|	ВЫБОР
		|		КОГДА ТЗНаселенныеПункты.ФедеральныйОкруг <> """"
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ФедеральныйОкругЗаполнен
		|ПОМЕСТИТЬ ТаблицаГородов
		|ИЗ
		|	&ТЗНаселенныеПункты КАК ТЗНаселенныеПункты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаГородов.Представление КАК Представление,
		|	вогНаселенныеПункты.Ссылка КАК Ссылка
		|ИЗ
		|	ТаблицаГородов КАК ТаблицаГородов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.вогНаселенныеПункты КАК вогНаселенныеПункты
		|		ПО ТаблицаГородов.НаселенныйПункт = вогНаселенныеПункты.Наименование
		|			И (ТаблицаГородов.ГородскойОкруг = """"
		|				ИЛИ ТаблицаГородов.ГородскойОкруг = вогНаселенныеПункты.Родитель.Наименование)
		|			И (ТаблицаГородов.Регион = """"
		|				ИЛИ ТаблицаГородов.ГородскойОкруг = """"
		|					И ТаблицаГородов.Регион = вогНаселенныеПункты.Родитель.Наименование
		|				ИЛИ ТаблицаГородов.ГородскойОкруг <> """"
		|					И ТаблицаГородов.Регион = вогНаселенныеПункты.Родитель.Родитель.Наименование)
		|			И (ТаблицаГородов.ФедеральныйОкруг = """"
		|				ИЛИ ТаблицаГородов.ГородскойОкругЗаполнен + ТаблицаГородов.РегионЗаполнен = 0
		|					И ТаблицаГородов.ФедеральныйОкруг = вогНаселенныеПункты.Родитель.Наименование
		|				ИЛИ ТаблицаГородов.ГородскойОкругЗаполнен + ТаблицаГородов.РегионЗаполнен = 1
		|					И ТаблицаГородов.ФедеральныйОкруг = вогНаселенныеПункты.Родитель.Родитель.Наименование
		|				ИЛИ ТаблицаГородов.ГородскойОкругЗаполнен + ТаблицаГородов.РегионЗаполнен = 2
		|					И ТаблицаГородов.ФедеральныйОкруг = вогНаселенныеПункты.Родитель.Родитель.Родитель.Наименование)
		|			И (ТаблицаГородов.Страна = """"
		|				ИЛИ ТаблицаГородов.ФедеральныйОкругЗаполнен + ТаблицаГородов.ГородскойОкругЗаполнен + ТаблицаГородов.РегионЗаполнен = 0
		|					И ТаблицаГородов.Страна = вогНаселенныеПункты.Родитель.Наименование
		|				ИЛИ ТаблицаГородов.ФедеральныйОкругЗаполнен + ТаблицаГородов.ГородскойОкругЗаполнен + ТаблицаГородов.РегионЗаполнен = 1
		|					И ТаблицаГородов.Страна = вогНаселенныеПункты.Родитель.Родитель.Наименование
		|				ИЛИ ТаблицаГородов.ФедеральныйОкругЗаполнен + ТаблицаГородов.ГородскойОкругЗаполнен + ТаблицаГородов.РегионЗаполнен = 2
		|					И ТаблицаГородов.Страна = вогНаселенныеПункты.Родитель.Родитель.Родитель.Наименование
		|				ИЛИ ТаблицаГородов.ФедеральныйОкругЗаполнен + ТаблицаГородов.ГородскойОкругЗаполнен + ТаблицаГородов.РегионЗаполнен = 3
		|					И ТаблицаГородов.Страна = вогНаселенныеПункты.Родитель.Родитель.Родитель.Родитель.Наименование)";
	
	Запрос.Параметры.Вставить("ТЗНаселенныеПункты",ТЗНаселенныеПункты);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Представление",Выборка.Представление);
		
		МассивСтрок = СписокНайденныхАдресов.НайтиСтроки(СтруктураОтбора);	
		
		Для Каждого Стр из МассивСтрок Цикл
			Стр.СсылкаНаНаселенныйПункт = Выборка.Ссылка;
		КонецЦикла;			
		
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура НайтиАдресКоманда(Команда)
	НайтиАдрес();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОграничитьПоискСтранойРФ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНайденныхАдресовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.СсылкаНаНаселенныйПункт) тогда
		Закрыть(СоздатьНаселенныйПункт(Элемент.ТекущиеДанные.Представление));
	Иначе	
		Закрыть(Элемент.ТекущиеДанные.СсылкаНаНаселенныйПункт);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция СоздатьНаселенныйПункт(Представление)
	
	Возврат Справочники.вогНаселенныеПункты.СформироватьИерархиюАдресаПоПредставлению(Представление);
	
КонецФункции

&НаКлиенте
Процедура СтрокаПоискаАдресаПриИзменении(Элемент)
	НайтиАдрес();
КонецПроцедуры
	
	
	
