
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// ++ VOG Солодов В.В. 04.07.2019 task 437
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УправлениеЛоготипом(Объект);
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства 
	ДополнительныеПараметры = Новый Структура; 
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры); 
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьСвязиПараметровВыбораДопРеквизита();
	// -- VOG Солодов В.В. 04.07.2019
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//+Классификаторы
	CRM_КлассификаторыВызовСервера.ФормаОбъектаПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект);
	CRM_КлассификаторыВызовСервера.ФормаОбъектаПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект.Ссылка);
	//-Классификаторы
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	//+Классификаторы
	CRM_КлассификаторыВызовСервера.ФормаОбъектаПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект.Ссылка);
	//-Классификаторы
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УправлениеЛоготипом(ТекущийОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	УправлениеВидимостьюЛоготипа();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	Если Не ТекущийОбъект.Уровень = Справочники.вогУровниГруппировкиКоллекцийНоменклатуры.Бренд Тогда
		ТекущийОбъект.Логотип = Справочники.вогКоллекцииНоменклатурыПрисоединенныеФайлы.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект); 
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ИмяСобытия = "Запись_Файл" Тогда
			
		Модифицированность 	= Истина;
		СсылкаНаФайл 		= ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
		
		Если ВыборИзображения Тогда
			
			Объект.Логотип 	= СсылкаНаФайл;
			АдресКартинки 	= НавигационнаяСсылкаКартинки(Объект.Логотип, УникальныйИдентификатор);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// ++ VOG Солодов В.В. 10.06.2019 task 146
&НаКлиенте
Процедура УровеньНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПолучитьУровеньГруппировкиКоллекцийНоменклатуры(ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура УровеньАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПолучитьУровеньГруппировкиКоллекцийНоменклатуры(ДанныеВыбора, Текст);
	
КонецПроцедуры
// -- VOG Солодов В.В. 10.06.2019

// ++ VOG Солодов В.В. 03.07.2019 task 437
&НаКлиенте
Процедура УровеньПриИзменении(Элемент)
	
	УправлениеВидимостьюЛоготипа();
	ОбновитьЭлементыДополнительныхРеквизитов();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры 

&НаКлиенте
Процедура ФайлКартинкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Логотип) Тогда
		
		АдресКартинки = НавигационнаяСсылкаКартинки(Объект.Логотип, УникальныйИдентификатор);
		
		Если ПустаяСтрока(АдресКартинки) Тогда
			ВывестиНедоступностьКартинки();
		КонецЕсли;

	Иначе
		АдресКартинки = "";
	КонецЕсли;
	
	УправлениеВидимостьюРамкиКартинки();
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Объект.Ссылка.Пустая() Тогда
		ВывестиПредупреждениеОНеобходиомстиЗаписиНового();
	Иначе
		ЗаблокироватьДанныеФормыДляРедактирования();
		ДобавитьИзображениеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры
// -- VOG Солодов В.В. 04.07.2019

#КонецОбласти

#Область ОбработчикиКомандФормы

// ++ VOG Солодов В.В. 04.07.2019 task 437
#Область СтандартныеПодсистемыСвойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, 
												НавигационнаяСсылка = Неопределено, 
												СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры
 
#КонецОбласти

#Область Логотип

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		ВывестиПредупреждениеОНеобходиомстиЗаписиНового();
	Иначе
		ЗаблокироватьДанныеФормыДляРедактирования();
		ДобавитьИзображениеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	
	Объект.Логотип 		= ПредопределенноеЗначение("Справочник.вогКоллекцииНоменклатурыПрисоединенныеФайлы.ПустаяСсылка");
	АдресКартинки 		= "";
	ДанныеФайлаКартинки = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	ПросмотретьПрисоединенныйФайл("Логотип", "АдресКартинки", НСтр("ru='Отсутствует изображение для просмотра'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИзображение(Команда)
	
	ОчиститьСообщения();
	
	Если ЗначениеЗаполнено(Объект.Логотип) Тогда
		
		ПрисоединенныеФайлыКлиент.ОткрытьФормуПрисоединенногоФайла(Объект.Логотип);
		
	Иначе
		
		ТекстСообщения = НСтр("ru='Отсутствует изображение для редактирования'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "АдресКартинки");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайлов(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		ВывестиПредупреждениеОНеобходиомстиЗаписиНового();
	Иначе
		
		СтруктураПараметрыВыбора = Новый Структура;
		СтруктураПараметрыВыбора.Вставить("ВладелецФайла", 		Объект.Ссылка);
		СтруктураПараметрыВыбора.Вставить("ЗакрыватьПриВыборе", Истина);
		СтруктураПараметрыВыбора.Вставить("РежимВыбора", 		Истина);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьКартинкуИзПрисоединенныхФайловЗавершение", ЭтотОбъект);
		
		ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",
			СтруктураПараметрыВыбора,
			,
			,
			,
			,
			ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайловЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Объект.Логотип 	= Результат;
		АдресКартинки 	= НавигационнаяСсылкаКартинки(Объект.Логотип, УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
// -- VOG Солодов В.В. 04.07.2019

#КонецОбласти

//+Классификаторы
#Область Подключаемый_Классификаторы

&НаКлиенте
Процедура Подключаемый_ЗапретМодификацииСоставаКлассификаторов(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры // Подключаемый_ЗапретМодификацииСоставаКлассификаторов()

&НаКлиенте
Процедура Подключаемый_ОбщимСписком_ВключенПриИзменении(Элемент)

	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	CRM_КлассификаторыКлиентСервер.НайтиИзменитьСтрокиКлассификаторов(ЭтаФорма, ТекущиеДанные.КлючСтроки, ТекущиеДанные.Включен);	
	
КонецПроцедуры // Подключаемый_ОбщимСписком_ВключенПриИзменении()

&НаКлиенте
Процедура Подключаемый_ОтдельнымСписком_ВключенПриИзменении(Элемент)

	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	CRM_КлассификаторыКлиентСервер.НайтиИзменитьСтрокиКлассификаторов(ЭтаФорма, ТекущиеДанные.КлючСтроки, ТекущиеДанные.Включен);	
	
КонецПроцедуры // Подключаемый_ОтдельнымСписком_ВключенПриИзменении()

&НаКлиенте
Процедура Подключаемый_ОдиночноеЗначение_ВключенПриИзменении(Элемент)
	
	CRM_КлассификаторыКлиентСервер.НайтиИзменитьСтрокиКлассификаторовПакетно(ЭтаФорма, Элемент.Имя);	        
		
КонецПроцедуры // Подключаемый_ОдиночноеЗначение_ВключенПриИзменении()

&НаКлиенте
Процедура Подключаемый_Вхождение_ВключенПриИзменении(Элемент)
	
	CRM_КлассификаторыКлиентСервер.НайтиИзменитьСтрокиКлассификаторов(ЭтаФорма, Элемент.Имя, ЭтаФорма[Элемент.Имя]);	        
	
КонецПроцедуры // Подключаемый_Вхождение_ВключенПриИзменении()

&НаКлиенте
Процедура Подключаемый_Классификатор_ДобавитьТег(Элемент)

	CRM_КлассификаторыКлиентСервер.НайтиИзменитьСтрокиКлассификаторовПоЗначению(ЭтаФорма, ЭтаФорма[Элемент.Имя], Истина);
	Подключаемый_ТегиКлассификатора_Обновить();
	
КонецПроцедуры // Подключаемый_Классификатор_ДобавитьТег()

&НаКлиенте
Процедура Подключаемый_ТегКлассификатора_ОбработкаСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	CRM_КлассификаторыКлиентСервер.ОбработкаНавигационнойСсылкиТегаКлассификаторов(ЭтаФорма, Элемент, НавигационнаяСсылка, СтандартнаяОбработка);
	
КонецПроцедуры // Подключаемый_ТегКлассификатора_ОбработкаСсылки()

&НаСервере
Процедура Подключаемый_ТегиКлассификатора_Обновить()
	
	CRM_КлассификаторыВызовСервера.СформироватьТегиКлассификаторов(ЭтаФорма);
	
КонецПроцедуры // Подключаемый_ТегиКлассификатора_Обновить()

#КонецОбласти
//-Классификаторы

#Область СлужебныеПроцедурыИФункции

// ++ VOG Солодов В.В. 10.06.2019 task 146
&НаКлиенте
Процедура ПолучитьУровеньГруппировкиКоллекцийНоменклатуры(ДанныеВыбора, СтрокаПоиска = "")
	
	СтруктураВыбора = Новый Структура;
	СтруктураВыбора.Вставить("Отбор", 					Новый Структура);
	СтруктураВыбора.Вставить("СтрокаПоиска ", 			СтрокаПоиска);
	СтруктураВыбора.Вставить("ВыборГруппИЭлементов", 	ИспользованиеГруппИЭлементов.Элементы);
	СтруктураВыбора.Вставить("НаправлениеДеятельности", Объект.НаправлениеДеятельности);
	
	ДанныеВыбора = ПолучитьДанныеВыбора(
		Тип("СправочникСсылка.вогУровниГруппировкиКоллекцийНоменклатуры"), 
		СтруктураВыбора);
	
КонецПроцедуры // -- VOG Солодов В.В. 10.06.2019

// ++ VOG Солодов В.В. 04.07.2019 task 437
#Область СтандартныеПодсистемыСвойства
  
&НаСервере 
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область Логотип

&НаСервере
Процедура УправлениеЛоготипом(ДанныеОбъекта)
	
	Если Не ДанныеОбъекта.Логотип.Пустая() Тогда
		
		АдресКартинки = НавигационнаяСсылкаКартинки(ДанныеОбъекта.Логотип, УникальныйИдентификатор);
		
		Если ПустаяСтрока(АдресКартинки) Тогда
			ВывестиНедоступностьКартинки();
		КонецЕсли;
		
	Иначе
		АдресКартинки = "";
	КонецЕсли;
	
	УправлениеВидимостьюРамкиКартинки();
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюЛоготипа()
	
	Если Объект.Уровень = ПредопределенноеЗначение("Справочник.вогУровниГруппировкиКоллекцийНоменклатуры.Бренд") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ГруппаСтраницаИзображение",
			"Видимость",
			Истина);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"ГруппаСтраницаИзображение",
			"Видимость",
			Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		АдресКартинки = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		АдресКартинки = "";
	КонецПопытки;
	
	Возврат АдресКартинки;
	
КонецФункции

&НаСервере
Процедура ВывестиНедоступностьКартинки()
	
	АдресКартинки = "";
	Элементы.ФайлКартинки.ТекстНевыбраннойКартинки = НСтр("ru = 'Картинка не доступна (не доступен том) обратитесь 
		|к администратору.'");
	Объект.Логотип = Справочники.вогКоллекцииНоменклатурыПрисоединенныеФайлы.ПустаяСсылка();
	
	УправлениеВидимостьюРамкиКартинки();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостьюРамкиКартинки()
	
	Если ЗначениеЗаполнено(АдресКартинки) Тогда
		Элементы.ФайлКартинки.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
	Иначе
		Элементы.ФайлКартинки.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиПредупреждениеОНеобходиомстиЗаписиНового()
	
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения();
	ТекстВопроса = НСтр("ru = 'Данные еще не записаны. Добавление логотипа возможно только после записи данных.'");
	ПоказатьВопрос(ОбработчикОповещенияОЗакрытии, ТекстВопроса, РежимДиалогаВопрос.ОК);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	Перем ИдентификаторФайла;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса 	= НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		Ответ 			= Неопределено;

		ОповещениеОЗавершении = Новый ОписаниеОповещения("ДобавитьИзображениеНаКлиентеЗавершение", ЭтотОбъект);
		
		ПоказатьВопрос(ОповещениеОЗавершении, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ДобавитьИзображениеНаКлиентеФрагмент();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Если Не Записать() Тогда
            Возврат;
        КонецЕсли;
    Иначе
        Возврат;
    КонецЕсли;
    
    ДобавитьИзображениеНаКлиентеФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеФрагмент()
    
    Перем ИдентификаторФайла;
    
    ВыборИзображения   	= Истина;
    ИдентификаторФайла 	= Новый УникальныйИдентификатор;
	Фильтр 				= CRM_ОбщегоНазначенияКлиент.ФильтрФайловИзображений();
    
    РаботаСФайламиКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла, Фильтр);
	ВыборИзображения   = Ложь;
	
	УправлениеВидимостьюРамкиКартинки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл(ИмяРеквизитаОбъекта, ИмяРеквизитаФормы, ТекстСообщенияОбОшибке)
	
	ОчиститьСообщения();
	
	Если ЗначениеЗаполнено(Объект[ИмяРеквизитаОбъекта]) Тогда
		
		ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ПолучитьДанныеФайла(Объект[ИмяРеквизитаОбъекта], 
			УникальныйИдентификатор);
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
		
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке,, ИмяРеквизитаФормы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

&НаСервере
Процедура УстановитьСвязиПараметровВыбораДопРеквизита()
	
	СписокСвойств = Новый СписокЗначений;
	
	НаборыСвойствОбъекта 	= УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(
		Объект, Неопределено);
	
	Для Каждого Строка Из НаборыСвойствОбъекта Цикл
		Если УправлениеСвойствамиСлужебный.ВидыСвойствНабора(Строка.Набор).ДополнительныеРеквизиты Тогда
			СписокСвойств.Добавить(Строка.Набор, Строка.Заголовок);
		КонецЕсли;
	КонецЦикла;
	
	ДополнительныеСвойстваОбъекта 	= Объект.ДополнительныеРеквизиты.Выгрузить();
	ОписаниеСвойств 				= УправлениеСвойствамиСлужебный.ЗначенияСвойств(ДополнительныеСвойстваОбъекта,
		СписокСвойств,
		Ложь);
		
	Для Каждого ТекРеквизит из Элементы.ГруппаДополнительныеРеквизиты.ПодчиненныеЭлементы Цикл
		
		Для Каждого ТекДопРеквизит из ОписаниеСвойств Цикл
			
			ИмяРеквизита = СтрЗаменить(ВРег(Строка(ТекДопРеквизит.Свойство.УникальныйИдентификатор())), "-", "x");
			
			Если СтрНайти(ТекРеквизит.Имя, ИмяРеквизита) > 0
				И ТипЗнч(ТекДопРеквизит.ТипЗначения.ПривестиЗначение()) = Тип("СправочникСсылка.Партнеры") Тогда
				
				ТекРеквизит.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
				
				НовыйПараметр = Новый ПараметрВыбора("Отбор.CRM_ТипОтношенийПредставление", "Конкурент");
				
				МассивСвязей = Новый Массив();
				МассивСвязей.Добавить(НовыйПараметр);
				
				ТекРеквизит.ПараметрыВыбора = Новый ФиксированныйМассив(МассивСвязей);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры
// -- VOG Солодов В.В. 04.07.2019

#КонецОбласти

