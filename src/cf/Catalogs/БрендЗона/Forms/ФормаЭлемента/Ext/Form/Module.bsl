
// VOG Солодов В.В. 03.09.2021 DEV-904 // Рефакторинг
#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеДанные;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// ++ VOG Солодов В.В. 03.09.2021 DEV-904
	УстановитьУсловноеОформление();
	// -- VOG Солодов В.В. 03.09.2021 DEV-904
	
	ОбновитьПланограмму();
	ОбновитьФотоВидеоСТорговойТочки();
	СоздатьЭлементыДляСтендов();
	
	Если ПравоДоступа("Просмотр", Метаданные.Обработки.вогРотацияАссортимента) Тогда
		Элементы.ФормаРотацияАссортимента.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ++ VOG Солодов В.В. 03.09.2021 DEV-904
	Заголовок = СтрШаблон(НСтр("ru = '%1 %2'"), Объект.Наименование, Объект.ТорговаяТочка);
	// До изменения
	//Заголовок = Объект.Наименование + " " +строка(Объект.ТорговаяТочка);
	// -- VOG Солодов В.В. 03.09.2021 DEV-904
	
	СтраницаПланограмма(Неопределено);
	СтраницаОсновное(Неопределено);
	ОбновитьКартинкиПланограммы();
	
	// ++ VOG Солодов В.В. 14.05.2021 DEV-510
	УстановитьВидимостьДоступность();
	// -- VOG Солодов В.В. 14.05.2021 DEV-510
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КартинкаФотоСТорговойТочки1Нажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла", Объект.Ссылка);
	
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами", ПараметрыФормыФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаВидеоСТорговойТочки1Нажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла", Объект.Ссылка);
	
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами", ПараметрыФормыФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаПланограммаНажатие(Элемент, СтандартнаяОбработка)
	
	//
	//СтандартнаяОбработка = Ложь;
	//Если ЗначениеЗаполнено(ДанныеФайлаПланограммы) тогда
	//	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайлаПланограммы, Ложь);
	//КонецЕсли;
	//
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла", Объект.Ссылка);
	
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами", ПараметрыФормыФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНажатияПапкаФото(Элемент)
	
	ИД = СтрЗаменить(СтрЗаменить(Элемент.Имя,"ПапкаФотоСТорговойТочки_",""),"_","-");
	СсылкаНаГруппу = ПолучитьСсылкуФайлаПоИД(ИД);
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ПараметрыФормыФайлов.Вставить("ГруппаФайлов",СсылкаНаГруппу);
	ПараметрыФормыФайлов.Вставить("ВариантПросмотраПлиткой",Истина);
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьВсегоФотоСТорговойТочкиНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНажатияКартинкиСтенда(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИД = СтрЗаменить(СтрЗаменить(Элемент.Имя,"КартинкаСтенда",""),"_","-");
	ПараметрыФ = Новый Структура("Ключ");
	ПараметрыФ.Ключ = ПолучитьСсылкуНаСтендПоИД(ИД);
	ОткрытьФорму("Справочник.вогТипыСтендов.ФормаОбъекта" ,ПараметрыФ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНажатияКартинки3DПланограммы(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИД = СтрЗаменить(СтрЗаменить(Элемент.Имя,"Картинка3DПланограмма",""),"_","-");
	СсылкаНаФайл = ПолучитьСсылкуНаПрисоединенныйФайл(ИД);
	ДанныеФайлы = РаботаСФайламиКлиент.ДанныеФайла(СсылкаНаФайл);
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайлы, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНажатияКартинкиПланограммы(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИД = СтрЗаменить(Элемент.Имя,"КартинкаПланограмма","");
	Если СписокКартинокПланограмм.Количество() = 0 или СписокКартинокПланограмм.Количество()<Число(ИД) тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаФайл = СписокСсылокНаПланограммы.Получить(ИндексТекущейКартинкиПланограммы+ИД-1).Значение;
	ДанныеФайлы = РаботаСФайламиКлиент.ДанныеФайла(СсылкаНаФайл);
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайлы, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНажатияПрокруткаПланограммы(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если СписокКартинокПланограмм.Количество() < 5 тогда
		Возврат;
	КонецЕсли;

	ИндексТекущейКартинкиПланограммы=ИндексТекущейКартинкиПланограммы+1;
	Если ИндексТекущейКартинкиПланограммы>СписокКартинокПланограмм.Количество()-1 тогда
		ИндексТекущейКартинкиПланограммы=0;
	КонецЕсли;
	ОбновитьКартинкиПланограммы();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьВсегоВидеоСТорговойТочкиНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура Декорация1Нажатие(Элемент)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
КонецПроцедуры

&НаКлиенте
Процедура декор3DПВлевоНажатие(Элемент)
	
	Обновить3DПланограмму(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура декор3DППравоНажатие(Элемент)
	
	Обновить3DПланограмму();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидБрендЗоныПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

#КонецОбласти

// ++ VOG Солодов В.В. 13.09.2021 CRM-1148
#Область ОбработчикиСобытийТаблицыФормыКодыУПП

&НаКлиенте
Процедура КодыУПППередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные 		= Элементы.КодыУПП.ТекущиеДанные;
	КэшированныеДанные 	= ТекущиеДанные.ДатаЗакрытияФакт;
	
КонецПроцедуры

&НаКлиенте
Процедура КодыУППДатаЗакрытияФактПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.КодыУПП.ТекущиеДанные;
	
	Если ТекущиеДанные.ДатаЗакрытияФакт > ТекущаяДата() Тогда
		
		ОчиститьСообщения();
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Объект.КодыУПП", ТекущиеДанные.НомерСтроки, "ДатаЗакрытияФакт");
		
		ТекстСообщения = НСтр("ru = 'Дата закрытия (факт) не может быть больше текущей даты.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, Поле);
		
		ТекущиеДанные.ДатаЗакрытияФакт = КэшированныеДанные;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
// -- VOG Солодов В.В. 13.09.2021 CRM-1148

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СтраницаОсновное(Команда)
	
	ПередСменойТекущейСтраницы();
	
	Элементы.СтраницыФормы.ТекущаяСтраница 		= Элементы.Основное;
	Элементы.ФормаСтраницаОсновное.ЦветТекста 	= WebЦвета.ТемноКрасный;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаРеквизиты(Команда)
	
	ПередСменойТекущейСтраницы();
	
	Элементы.СтраницыФормы.ТекущаяСтраница 		= Элементы.Реквизиты;
	Элементы.ФормаСтраницаРеквизиты.ЦветТекста 	= WebЦвета.ТемноКрасный;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисоединенныеФайлы(Команда)
	
	ПередСменойТекущейСтраницы();
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла", Объект.Ссылка);
	
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами", ПараметрыФормыФайлов);
	
	Элементы.ФормаПрисоединенныеФайлы.ЦветТекста = WebЦвета.ТемноКрасный;
	
КонецПроцедуры

&НаКлиенте
Процедура Страница3dПланограмма(Команда)
	
	Элементы.ГруппаПланограммы.ТекущаяСтраница 	= Элементы.Страница3dПланограмма;
	Элементы.СтраницаПланограмма1.ЦветТекста 	= WebЦвета.СероСиний;
	Элементы.Страница3dПланограмма1.ЦветТекста 	= WebЦвета.Синий;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаПланограмма(Команда)
	
	Элементы.ГруппаПланограммы.ТекущаяСтраница 	= Элементы.СтраницаПланограмма;
	Элементы.СтраницаПланограмма1.ЦветТекста 	= WebЦвета.Синий;
	Элементы.Страница3dПланограмма1.ЦветТекста 	= WebЦвета.СероСиний;
	
КонецПроцедуры

// +++ VOG Кулаков П.Л. 18.09.2020 CRM-893
&НаКлиенте
Процедура РотацияАссортимента(Команда)
	
	ПередСменойТекущейСтраницы();
	СтандартнаяОбработка = Ложь;
	
	// ++ VOG Солодов В.В. 02.09.2021 DEV-906
	Если Объект.ВидБрендЗоны = ПредопределенноеЗначение("Перечисление.ВидыБрендЗоны.ВыкупленныеПолки") Тогда
		
		ВариантОпроса = ПолучитьВариантОпросаРотацияАссортимента();
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("ВариантОпроса", 	ВариантОпроса);
		ЗначенияЗаполнения.Вставить("Респондент", 		Объект.Ссылка);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СозданоИзОбъекта", 	Истина);
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", 	ЗначенияЗаполнения);
		
		ОткрытьФорму("Документ.вогАнкета.ФормаОбъекта", ПараметрыФормы);
		
	Иначе // -- VOG Солодов В.В. 02.09.2021 DEV-906
		
		ПараметрыФормыРотации = Новый Структура;
		ПараметрыФормыРотации.Вставить("БрендЗона",Объект.Ссылка);
		ОткрытьФорму("Обработка.вогРотацияАссортимента.Форма",ПараметрыФормыРотации, ЭтаФорма, ЭтаФорма);
	КонецЕсли;

	Элементы.ФормаРотацияАссортимента.ЦветТекста = WebЦвета.ТемноКрасный;
	
КонецПроцедуры // --- VOG Кулаков П.Л.

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// ++ VOG Солодов В.В. 03.09.2021 DEV-904
&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КодыУППДатаНачалаАренды.Имя);
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект.ВидБрендЗоны");
	ОтборЭлемента.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение 	= Перечисления.ВидыБрендЗоны.ВыкупленныеПолки;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КодыУППДатаОкончанияАренды.Имя);
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект.ВидБрендЗоны");
	ОтборЭлемента.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение 	= Перечисления.ВидыБрендЗоны.ВыкупленныеПолки;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КодыУППКоличествоSKU106.Имя);
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект.ВидБрендЗоны");
	ОтборЭлемента.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение 	= Перечисления.ВидыБрендЗоны.ВыкупленныеПолки;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//
	
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КодыУППКоличествоSKU053.Имя);
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект.ВидБрендЗоны");
	ОтборЭлемента.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение 	= Перечисления.ВидыБрендЗоны.ВыкупленныеПолки;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры
// -- VOG Солодов В.В. 03.09.2021 DEV-904

// ++ VOG Солодов В.В. 14.05.2021 DEV-510
&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	ВидимостьРеквизитовКоличествоSKU =
		(Объект.ВидБрендЗоны = ПредопределенноеЗначение("Перечисление.ВидыБрендЗоны.ВыкупленныеПолки"));
	
	Элементы.КоличествоSKU053.Видимость = ВидимостьРеквизитовКоличествоSKU;
	Элементы.КоличествоSKU106.Видимость = ВидимостьРеквизитовКоличествоSKU;
	
КонецПроцедуры
// -- VOG Солодов В.В. 14.05.2021 DEV-510

// ++ VOG Солодов В.В. 02.09.2021 DEV-906
&НаСервереБезКонтекста
Функция ПолучитьВариантОпросаРотацияАссортимента()
	
	ВариантОпроса_УИД 	= Новый УникальныйИдентификатор("ed8747b3-0bc2-11ec-80fe-005056bc3fe8");
	ВариантОпроса 		= ПланыВидовХарактеристик.вогВариантыОпросов.ПолучитьСсылку(ВариантОпроса_УИД);
	
	Возврат ВариантОпроса;
	
КонецФункции
// -- VOG Солодов В.В. 02.09.2021 DEV-906

&НаСервере
Процедура ОбновитьПланограмму()
	
	Для К=1 по 5 цикл
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("КартинкаПланограмма"+К, Тип("ПолеФормы"), Элементы.ГруппаПланограмм);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеКартинки;
		НовыйЭлемент.РазмерКартинки = РазмерКартинки.Пропорционально;
		НовыйЭлемент.Ширина = 20;
		НовыйЭлемент.Высота = 5;
		НовыйЭлемент.АвтоМаксимальнаяВысота = Ложь;
		НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
		НовыйЭлемент.МаксимальнаяВысота = 5;
		НовыйЭлемент.МаксимальнаяШирина = 20;
		НовыйЭлемент.Гиперссылка = Истина;
		НовыйЭлемент.УстановитьДействие("Нажатие","ОбработкаНажатияКартинкиПланограммы");
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		НовыйЭлемент.РастягиватьПоВертикали = ЛожЬ;
		НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
		НовыйЭлемент.ПутьКДанным = "Реквизит"+К;
	КонецЦикла;
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить("КартинкаПланограмма6", Тип("ПолеФормы"), Элементы.ГруппаПланограмм);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеКартинки;
	НовыйЭлемент.РазмерКартинки = РазмерКартинки.Пропорционально;
	НовыйЭлемент.Ширина = 20;
	НовыйЭлемент.Высота = 2;
	НовыйЭлемент.АвтоМаксимальнаяВысота = Ложь;
	НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
	НовыйЭлемент.МаксимальнаяВысота = 2;
	НовыйЭлемент.МаксимальнаяШирина = 20;
	НовыйЭлемент.Гиперссылка = Истина;
	НовыйЭлемент.УстановитьДействие("Нажатие","ОбработкаНажатияПрокруткаПланограммы");
	НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	НовыйЭлемент.РастягиватьПоВертикали = ЛожЬ;
	НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
	НовыйЭлемент.ПутьКДанным = "Реквизит6";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла КАК ВидФайла,
	|	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы) КАК ПрисоединенныйФайл,
	|	ВЫБОР
	|		КОГДА вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаПланограмма)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Поле1
	|ИЗ
	|	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	|ГДЕ
	|	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	|	И (вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаПланограмма)
	|			ИЛИ вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗона3DПланограмма))
	|	И НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	|	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	Поле1,
	|	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ДатаМодификацииУниверсальная";
	
	Запрос.УстановитьПараметр("владелец",Объект.Ссылка);
	Выборка=Запрос.Выполнить().Выбрать();
	Счетчик = 1;
	ИндексТекущейКартинкиПланограммы=0;
	Пока Выборка.Следующий() цикл
		
		//УИД = СтрЗаменить(Выборка.ПрисоединенныйФайл.УникальныйИдентификатор(),"-","_");
		//ДобавляемыеРеквизиты = Новый Массив;
		//НовыйРеквизитКартинкаСтенда = Новый РеквизитФормы("КартинкаПланограмма"+УИД,Новый ОписаниеТипов("Строка")); 
		//ДобавляемыеРеквизиты.Добавить(НовыйРеквизитКартинкаСтенда);
		//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		
		Если Не Выборка.ПрисоединенныйФайл.Пустая() Тогда
			АдресКартинки = НавигационнаяСсылкаКартинки(Выборка.ПрисоединенныйФайл, УникальныйИдентификатор);
		Иначе
			АдресКартинки = "";
		КонецЕсли;
		//ЭтаФорма["КартинкаПланограмма"+УИД] = АдресКартинки;
		СписокКартинокПланограмм.Добавить(АдресКартинки);
		СписокСсылокНаПланограммы.Добавить(Выборка.ПрисоединенныйФайл);
	КонецЦикла;
	
	//Если Счетчик =1 тогда
	//	Элементы.СтраницаПланограмма.Видимость = Ложь;
	//	Элементы.СтраницаПланограмма1.Видимость = Ложь;
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура Обновить3DПланограмму(СдвигНазад = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла КАК ВидФайла,
	|	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы) КАК ПрисоединенныйФайл
	|ИЗ
	|	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	|ГДЕ
	|	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	|	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗона3DПланограмма)
	|	И НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	|	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ДатаМодификацииУниверсальная";
	
	Запрос.УстановитьПараметр("владелец",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Счетчик = 1;
	Пока Выборка.Следующий() цикл
		Счетчик = Счетчик + 1;
		УИД = СтрЗаменить(Выборка.ПрисоединенныйФайл.УникальныйИдентификатор(),"-","_");
		ДобавляемыеРеквизиты = Новый Массив;
		НовыйРеквизитКартинкаСтенда = Новый РеквизитФормы("Картинка3DПланограмма"+УИД,Новый ОписаниеТипов("Строка")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизитКартинкаСтенда);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		
		Если Не Выборка.ПрисоединенныйФайл.Пустая() Тогда
			АдресКартинки = НавигационнаяСсылкаКартинки(Выборка.ПрисоединенныйФайл, УникальныйИдентификатор);
		Иначе
			АдресКартинки = "";
		КонецЕсли;
		ЭтаФорма["Картинка3DПланограмма"+УИД] = АдресКартинки;
		
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("Картинка3DПланограмма"+УИД, Тип("ПолеФормы") ,Элементы.Страница3dПланограмма);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеКартинки;
		НовыйЭлемент.РазмерКартинки = РазмерКартинки.Пропорционально;
		НовыйЭлемент.Ширина = 20;
		НовыйЭлемент.Высота = 5;
		НовыйЭлемент.АвтоМаксимальнаяВысота = Ложь;
		НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
		НовыйЭлемент.МаксимальнаяВысота = 5;
		НовыйЭлемент.МаксимальнаяШирина = 20;
		НовыйЭлемент.Гиперссылка = Истина;
		НовыйЭлемент.УстановитьДействие("Нажатие","ОбработкаНажатияКартинки3DПланограммы");
		НовыйЭлемент.ПутьКДанным = "Картинка3DПланограмма"+УИД;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		НовыйЭлемент.РастягиватьПоВертикали = ЛожЬ;
		НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
		
		//Если Счетчик = 8 тогда Прервать; КонецЕсли;
	КонецЦикла;
	Если Счетчик =1 тогда
		Элементы.Страница3DПланограмма.Видимость = Ложь;	
		Элементы.Страница3DПланограмма1.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФотоВидеоСТорговойТочки()
	
	//ФОТО
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец",Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 3
	|	вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла КАК ВидФайла,
	|	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы) КАК ПрисоединенныйФайл,
	|	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).Наименование КАК ИмяПапки
	|ИЗ
	|	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	|ГДЕ
	|	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	|	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаФотоСТорговойТочки)
	|	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	|	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ДатаСоздания УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		Элемент 						 = Элементы.Добавить("ПапкаФотоСТорговойТочки_"+СтрЗаменить(Выборка.ПрисоединенныйФайл.УникальныйИдентификатор(),"-","_"), Тип("ДекорацияФормы"), Элементы.ГруппаФотоОтчетов); 
		Элемент.Вид				 		 = ВидДекорацииФормы.Надпись;
		Элемент.Заголовок				 = Выборка.ИмяПапки;
		Элемент.Гиперссылка				 = Истина;
		Элемент.УстановитьДействие("Нажатие","ОбработкаНажатияПапкаФото");
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы)) КАК Количество
	|ИЗ
	|	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	|ГДЕ
	|	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	|	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаФотоСТорговойТочки)
	|	И НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	|	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец";
	Запрос.УстановитьПараметр("Владелец",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		Элементы.НадписьВсегоФотоСТорговойТочки.Заголовок = "Всего фото " + Формат(Выборка.Количество,"ЧГ=0");	
	Иначе
		Элементы.НадписьВсегоФотоСТорговойТочки.Заголовок = "Нет файлов";	
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 3
	|	вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла КАК ВидФайла,
	|	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы) КАК ПрисоединенныйФайл,
	|	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).Наименование КАК ИмяПапки
	|ИЗ
	|	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	|ГДЕ
	|	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	|	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаВидеоСТорговойТочки)
	|	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	|	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ДатаСоздания УБЫВ";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		Элемент 						 = Элементы.Добавить("ПапкаФотоСТорговойТочки_"+СтрЗаменить(Выборка.ПрисоединенныйФайл.УникальныйИдентификатор(),"-","_"), Тип("ДекорацияФормы"), Элементы.ГруппаВидеоОтчетов); 
		Элемент.Вид				 		 = ВидДекорацииФормы.Надпись;
		Элемент.Заголовок				 = Выборка.ИмяПапки;
		Элемент.Гиперссылка				 = Истина;
		Элемент.УстановитьДействие("Нажатие","ОбработкаНажатияПапкаФото");
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы)) КАК Количество
	|ИЗ
	|	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	|ГДЕ
	|	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	|	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаВидеоСТорговойТочки)
	|	И НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	|	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец";
	Запрос.УстановитьПараметр("Владелец",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		Элементы.НадписьВсегоВидеоСТорговойТочки.Заголовок = "Всего видео " + Формат(Выборка.Количество,"ЧГ=0");	
	Иначе
		Элементы.НадписьВсегоВидеоСТорговойТочки.Заголовок = "Нет видео";	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция  ПолучитьСсылкуФайлаПоИД(ИДФайла)
	
	Возврат Справочники.БрендЗонаПрисоединенныеФайлы.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДФайла));
	
	
КонецФункции

&НаСервере
Процедура СоздатьЭлементыДляСтендов()
	
	
	Запрос = Новый Запрос;
	// +++ VOG Кулаков П.Л. 14.07.2021 DEV-
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтендыВБрендЗонахСрезПоследних.Стенд.ТипСтенда КАК ТипСтенда,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтендыВБрендЗонахСрезПоследних.Стенд) КАК КоличествоСтендов,
	               |	СУММА(СтендыВБрендЗонахСрезПоследних.Стенд.КоличествоМестФакт) КАК КоличествоМестФакт
	               |ИЗ
	               |	РегистрСведений.СтендыВБрендЗонах.СрезПоследних КАК СтендыВБрендЗонахСрезПоследних
	               |ГДЕ
	               |	СтендыВБрендЗонахСрезПоследних.БрендЗона = &БрендЗона
	               |	И СтендыВБрендЗонахСрезПоследних.АктивныйСтенд
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СтендыВБрендЗонахСрезПоследних.Стенд.ТипСтенда";
	// --- VOG Кулаков П.Л.
	
	
	Запрос.УстановитьПараметр("БрендЗона",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	СчетчикЭлементовВГруппе = 1;
	ВсегоСтендов = 0;
	ВсегоМест = 0;
	Пока Выборка.Следующий() цикл
		
		ВсегоСтендов = ВсегоСтендов + Выборка.КоличествоСтендов;
		ВсегоМест = ВсегоМест + Выборка.ТипСтенда.КоличествоМест * Выборка.КоличествоСтендов;
		
		УИДТипаСтенда = СтрЗаменить(Выборка.ТипСтенда.УникальныйИдентификатор(),"-","_");
		
		ДобавляемыеРеквизиты = Новый Массив;
		НовыйРеквизитКартинкаСтенда = Новый РеквизитФормы("КартинкаСтенда"+УИДТипаСтенда,Новый ОписаниеТипов("Строка")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизитКартинкаСтенда);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		
		Если Не Выборка.ТипСтенда.ФайлКартинки.Пустая() Тогда
			АдресКартинки = НавигационнаяСсылкаКартинки(Выборка.ТипСтенда.ФайлКартинки, УникальныйИдентификатор);
		Иначе
			АдресКартинки = "";
		КонецЕсли;
		ЭтаФорма["КартинкаСтенда"+УИДТипаСтенда] = АдресКартинки;
		
		Если СчетчикЭлементовВГруппе = 1 тогда
			УИД = Новый УникальныйИдентификатор;
			ГруппировкаСтендов = ЭтаФорма.Элементы.Добавить("ГруппаТипСтенда"+СтрЗаменить(УИД,"-","_"), Тип("ГруппаФормы"),Элементы.ГруппаСтендыВБрендЗоне);
			ГруппировкаСтендов.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппировкаСтендов.Отображение = ОтображениеОбычнойГруппы.Нет;
			ГруппировкаСтендов.ОтображатьЗаголовок = ЛОЖЬ; 
			ГруппировкаСтендов.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;		
		КонецЕсли;
		
		ГруппаТипСтенда = ЭтаФорма.Элементы.Добавить("ГруппаТипСтенда"+УИДТипаСтенда, Тип("ГруппаФормы"),ГруппировкаСтендов);
		ГруппаТипСтенда.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТипСтенда.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаТипСтенда.ОтображатьЗаголовок = ЛОЖЬ; 
		ГруппаТипСтенда.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		ГруппаТипСтенда.РастягиватьПоГоризонтали = Ложь;
		ГруппаТипСтенда.Ширина = 30;
		ГруппаТипСтендаВ = ЭтаФорма.Элементы.Добавить("ГруппаТипСтендаВ"+УИДТипаСтенда, Тип("ГруппаФормы"),ГруппаТипСтенда);
		ГруппаТипСтендаВ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТипСтендаВ.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаТипСтендаВ.ОтображатьЗаголовок = ЛОЖЬ; 
		ГруппаТипСтендаВ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;		
		
		ГруппаТипСтендаН = ЭтаФорма.Элементы.Добавить("ГруппаТипСтендаН"+УИДТипаСтенда, Тип("ГруппаФормы"),ГруппаТипСтенда);
		ГруппаТипСтендаН.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТипСтендаН.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаТипСтендаН.ОтображатьЗаголовок = ЛОЖЬ; 
		ГруппаТипСтендаН.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;		
		
		
		ГруппаТипСтендаЛ = ЭтаФорма.Элементы.Добавить("ГруппаТипСтендаЛ"+УИДТипаСтенда, Тип("ГруппаФормы"),ГруппаТипСтендаН);
		ГруппаТипСтендаЛ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТипСтендаЛ.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаТипСтендаЛ.ОтображатьЗаголовок = ЛОЖЬ; 
		ГруппаТипСтендаЛ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;		
		
		ГруппаТипСтендаП = ЭтаФорма.Элементы.Добавить("ГруппаТипСтендаП"+УИДТипаСтенда, Тип("ГруппаФормы"),ГруппаТипСтендаН);
		ГруппаТипСтендаП.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТипСтендаП.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаТипСтендаП.ОтображатьЗаголовок = ЛОЖЬ; 
		ГруппаТипСтендаП.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;		
		
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("НадписьНазваниеСтенда"+УИДТипаСтенда, Тип("ДекорацияФормы"),ГруппаТипСтендаВ);
		НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
		НовыйЭлемент.Заголовок = Сред(Выборка.ТипСтенда,1,40) + Символы.ПС + Сред(Выборка.ТипСтенда,41);
		НовыйЭлемент.Ширина = 50;
		//НовыйЭлемент.Высота = 5;
		НовыйЭлемент.МаксимальнаяШирина = 50;
		//НовыйЭлемент.МаксимальнаяВысота = 10;
		
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("КартинкаСтенда"+УИДТипаСтенда, Тип("ПолеФормы") ,ГруппаТипСтендаЛ);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеКартинки;
		НовыйЭлемент.РазмерКартинки = РазмерКартинки.Пропорционально;
		НовыйЭлемент.Ширина = 20;
		НовыйЭлемент.Высота = 10;
		НовыйЭлемент.АвтоМаксимальнаяВысота = Ложь;
		НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
		НовыйЭлемент.МаксимальнаяВысота = 10;
		НовыйЭлемент.МаксимальнаяШирина = 20;
		НовыйЭлемент.РастягиватьПоВертикали = Ложь;
		НовыйЭлемент.РастягиватьПоГоризонтали = Ложь;
		
		НовыйЭлемент.Гиперссылка = Истина;
		НовыйЭлемент.УстановитьДействие("Нажатие","ОбработкаНажатияКартинкиСтенда");
		
		НовыйЭлемент.ПутьКДанным = "КартинкаСтенда"+УИДТипаСтенда;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("НадписьКоличествоСтендов"+УИДТипаСтенда, Тип("ДекорацияФормы"),ГруппаТипСтендаП);
		НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
		НовыйЭлемент.Заголовок = "кол-во стендов " + Выборка.КоличествоСтендов;
		НовыйЭлемент.Ширина = 8;
		НовыйЭлемент.МаксимальнаяШирина = 8;
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("НадписьКоличествоМест"+УИДТипаСтенда, Тип("ДекорацияФормы"),ГруппаТипСтендаП);
		НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
		НовыйЭлемент.Заголовок = "мест на стендах " + Выборка.ТипСтенда.КоличествоМест * Выборка.КоличествоСтендов;
		НовыйЭлемент.Ширина = 8;
		НовыйЭлемент.МаксимальнаяШирина = 8;
		
		СчетчикЭлементовВГруппе = СчетчикЭлементовВГруппе + 1;
		Если СчетчикЭлементовВГруппе>4
			тогда
			СчетчикЭлементовВГруппе = 1;
		КонецЕсли;
		
	КонецЦикла;
	Элементы.НадписьОбщееКоличествоСтендов.Заголовок = "Общее количество стендов: "+ВсегоСтендов;
	Элементы.НадписатьКоличествоМестНаСтендах.Заголовок = "Общее количество мест на стендах: "+ВсегоМест;
	
	
Конецпроцедуры

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		АдресКартинки = РаботаСФайлами.ДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		АдресКартинки = "";
	КонецПопытки;
	
	Возврат АдресКартинки;
	
КонецФункции

&НаКлиенте
Процедура ПередСменойТекущейСтраницы()
	
	Элементы.ФормаСтраницаОсновное.ЦветТекста = WebЦвета.ТемноСиний;
	Элементы.ФормаСтраницаРеквизиты.ЦветТекста = WebЦвета.ТемноСиний;
	Элементы.ФормаПрисоединенныеФайлы.ЦветТекста = WebЦвета.ТемноСиний;
	// +++ VOG Кулаков П.Л. 18.09.2020 CRM-893
	Элементы.ФормаРотацияАссортимента.ЦветТекста = WebЦвета.ТемноСиний;
	// --- VOG Кулаков П.Л.
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаСтендПоИД(ИД)
	
	Возврат Справочники.вогТипыСтендов.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаПрисоединенныйФайл(ИД)
	
	Возврат Справочники.БрендЗонаПрисоединенныеФайлы.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));
	
КонецФункции

&НаКлиенте
Процедура ОбновитьКартинкиПланограммы()
	
	Если СписокКартинокПланограмм.Количество() = 0 тогда
		Возврат;
	КонецЕсли;
	ИндексКартинки = ИндексТекущейКартинкиПланограммы;
	Для К = 1 по ?(СписокКартинокПланограмм.Количество()<6,СписокКартинокПланограмм.Количество(),6) цикл
		Если ИндексКартинки>СписокКартинокПланограмм.Количество()-1 тогда
			ИндексКартинки=0;	
		КонецЕсли;
		ЭтаФорма["реквизит"+К] =  СписокКартинокПланограмм.Получить(ИндексКартинки).Значение;
		ИндексКартинки = ИндексКартинки + 1;
	КонецЦикла;
	
	
	
КонецПроцедуры

#КонецОбласти

