
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьПланограмму();
	Обновить3DПланограмму();
	ОбновитьФотоВидеоСТорговойТочки();
	СоздатьЭлементыДляСтендов();
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьПланограмму()  
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла КАК ВидФайла,
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы) КАК ПрисоединенныйФайл
	               |ИЗ
	               |	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	               |ГДЕ
	               |	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	               |	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаПланограмма)
	               |	И НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа 
	               |	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец 
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ДатаМодификацииУниверсальная";
	
	Запрос.УстановитьПараметр("владелец",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		ДанныеФайлаПланограммы = РаботаСФайлами.ДанныеФайла(Выборка.ПрисоединенныйФайл,ЭтаФорма.УникальныйИдентификатор,Истина,Ложь);
		КартинкаПланограмма = ДанныеФайлаПланограммы.СсылкаНаДвоичныеДанныеФайла;
	КонецЕсли;
	
КонецПроцедуры
	

&НаСервере
Процедура Обновить3DПланограмму(СдвигНазад = Ложь)  
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла КАК ВидФайла,
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы) КАК ПрисоединенныйФайл
	               |ИЗ
	               |	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	               |ГДЕ
	               |	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	               |	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗона3DПланограмма)
	               |	И НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	               |	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ДатаМодификацииУниверсальная";
	
	ТЗ = Новый ТаблицаЗначений;
	Запрос.УстановитьПараметр("владелец",Объект.Ссылка);
	        
	ТЗ = Запрос.Выполнить().Выгрузить();
	Если ТЗ.Количество()>0 тогда
		
		Если Не ЗначениеЗаполнено(ТекущийФайл3DПланограмма) тогда
			ТекущийФайл3DПланограмма = ТЗ[0].ПрисоединенныйФайл;
		Иначе
			ТекСтрокаТЗ = ТЗ.Найти(ТекущийФайл3DПланограмма);
			ИндексТекСтрокиТЗ = ТЗ.Индекс(ТекСтрокаТЗ);
			ИндексСледующейСтроки = ИндексТекСтрокиТЗ+1*?(СдвигНазад,-1,1);
			Если ИндексСледующейСтроки = -1 тогда
				ИндексСледующейСтроки = ТЗ.Количество()-1;
			КонецЕсли;
			Если ИндексСледующейСтроки > (ТЗ.Количество()-1) тогда
				ИндексСледующейСтроки = 0;
			КонецЕсли;
			ТекущийФайл3DПланограмма = ТЗ[ИндексСледующейСтроки].ПрисоединенныйФайл;	
		КонецЕсли;
		
		ДанныеФайла3DПланограмма = РаботаСФайлами.ДанныеФайла(ТекущийФайл3DПланограмма,ЭтаФорма.УникальныйИдентификатор,Истина,Ложь);
		Картинка3DПланограмма = ДанныеФайла3DПланограмма.СсылкаНаДвоичныеДанныеФайла;
	КонецЕсли;
	
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьФотоВидеоСТорговойТочки()  
	
	//ФОТО
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла КАК ВидФайла,
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы) КАК ПрисоединенныйФайл
	               |ИЗ
	               |	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	               |ГДЕ
	               |	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	               |	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаФотоСТорговойТочки)
	               |	И НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа 
	               |	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец 
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ДатаМодификацииУниверсальная";
	Запрос.УстановитьПараметр("владелец",Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		ДанныеФайла = РаботаСФайлами.ДанныеФайла(Выборка.ПрисоединенныйФайл,ЭтаФорма.УникальныйИдентификатор,Истина,Ложь);
		КартинкаФотоСТорговойТочки = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла КАК ВидФайла,
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы) КАК ПрисоединенныйФайл,
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).Наименование КАК ИмяПапки
	               |ИЗ
	               |	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	               |ГДЕ
	               |	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	               |	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаФотоСТорговойТочки)
	               |	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	               |	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ДатаМодификацииУниверсальная";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		Элемент 						 = Элементы.Добавить("ПапкаФотоСТорговойТочки_"+СтрЗаменить(Выборка.ПрисоединенныйФайл.УникальныйИдентификатор(),"-","_"), Тип("ДекорацияФормы"), Элементы.ГруппаФотоСТорговойТочки1); 
		Элемент.Вид				 		 = ВидДекорацииФормы.Надпись;
		Элемент.Заголовок				 = Выборка.ИмяПапки;
		Элемент.Гиперссылка				 = Истина;
		Элемент.УстановитьДействие("Нажатие","ОбработкаНажатияПапкаФото");
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы)) КАК Количество
	               |ИЗ
	               |	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	               |ГДЕ
	               |	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	               |	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаФотоСТорговойТочки)
	               |	И НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	               |	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец";
	Запрос.УстановитьПараметр("Владелец",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		Элементы.НадписьВсегоФотоСТорговойТочки.Заголовок = "Всего " + Формат(Выборка.Количество,"ЧГ=0");	
	Иначе
		Элементы.НадписьВсегоФотоСТорговойТочки.Заголовок = "Нет файлов";	
	КонецЕсли;
	
	//ВИДЕО
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//               |	вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла КАК ВидФайла,
	//               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы) КАК ПрисоединенныйФайл
	//               |ИЗ
	//               |	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	//               |ГДЕ
	//               |	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	//               |	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаВидеоСТорговойТочки)
	//               |	И НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа 
	//               |	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец 
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ДатаМодификацииУниверсальная";
	//Запрос.УстановитьПараметр("владелец",Объект.Ссылка);
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//Если Выборка.Следующий() тогда
	//	ДанныеФайла = РаботаСФайлами.ДанныеФайла(Выборка.ПрисоединенныйФайл,ЭтаФорма.УникальныйИдентификатор,Истина,Ложь);
	//	КартинкаФотоСТорговойТочки = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
	//КонецЕсли;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла КАК ВидФайла,
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы) КАК ПрисоединенныйФайл,
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).Наименование КАК ИмяПапки
	               |ИЗ
	               |	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	               |ГДЕ
	               |	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	               |	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаВидеоСТорговойТочки)
	               |	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	               |	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ДатаМодификацииУниверсальная";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		Элемент 						 = Элементы.Добавить("ПапкаФотоСТорговойТочки_"+СтрЗаменить(Выборка.ПрисоединенныйФайл.УникальныйИдентификатор(),"-","_"), Тип("ДекорацияФормы"), Элементы.ГруппаВидеоСТорговойТочки1); 
		Элемент.Вид				 		 = ВидДекорацииФормы.Надпись;
		Элемент.Заголовок				 = Выборка.ИмяПапки;
		Элемент.Гиперссылка				 = Истина;
		Элемент.УстановитьДействие("Нажатие","ОбработкаНажатияПапкаФото");
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы)) КАК Количество
	               |ИЗ
	               |	РегистрСведений.вогПрисоедниненныеФайлыОбъектовПоВидам КАК вогПрисоедниненныеФайлыОбъектовПоВидам
	               |ГДЕ
	               |	НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ПометкаУдаления
	               |	И вогПрисоедниненныеФайлыОбъектовПоВидам.ВидФайла = ЗНАЧЕНИЕ(Справочник.вогВидыПрисоединенныхФайлов.БрендЗонаВидеоСТорговойТочки)
	               |	И НЕ ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ЭтоГруппа
	               |	И ВЫРАЗИТЬ(вогПрисоедниненныеФайлыОбъектовПоВидам.ПрисоединенныйФайл КАК Справочник.БрендЗонаПрисоединенныеФайлы).ВладелецФайла = &Владелец";
	Запрос.УстановитьПараметр("Владелец",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		Элементы.Декорация27.Заголовок = "Всего " + Формат(Выборка.Количество,"ЧГ=0");	
	Иначе
		Элементы.Декорация27.Заголовок = "Нет видео";	
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура Картинка3DПланограммаНажатие1(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	Если ЗначениеЗаполнено(ДанныеФайла3DПланограмма) тогда
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла3DПланограмма, Ложь);
	КонецЕсли;
	
	//СтандартнаяОбработка = Ложь;
	//ПараметрыФормыФайлов = Новый Структура;
	//ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	//ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкаФотоСТорговойТочки1Нажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
КонецПроцедуры

&НаКлиенте
Процедура КартинкаВидеоСТорговойТочки1Нажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
КонецПроцедуры

&НаКлиенте
Процедура КартинкаПланограммаНажатие(Элемент, СтандартнаяОбработка)
	//
	//СтандартнаяОбработка = Ложь;
	//Если ЗначениеЗаполнено(ДанныеФайлаПланограммы) тогда
	//	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайлаПланограммы, Ложь);
	//КонецЕсли;
	//
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
	
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция  ПолучитьСсылкуФайлаПоИД(ИДФайла)
	
	Возврат Справочники.БрендЗонаПрисоединенныеФайлы.ПолучитьСсылку(Новый УникальныйИдентификатор(ИДФайла));
	
	
КонецФункции


&НаКлиенте
Процедура ОбработкаНажатияПапкаФото(Элемент)
	
	ИД = СтрЗаменить(СтрЗаменить(Элемент.Имя,"ПапкаФотоСТорговойТочки_",""),"_","-");
	СсылкаНаГруппу = ПолучитьСсылкуФайлаПоИД(ИД);
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ПараметрыФормыФайлов.Вставить("ГруппаФайлов",СсылкаНаГруппу);
	
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьВсегоФотоСТорговойТочкиНажатие(Элемент)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
	
КонецПроцедуры


&НаСервере
Процедура СоздатьЭлементыДляСтендов()
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтендыВБрендЗонахСрезПоследних.Стенд.ТипСтенда КАК ТипСтенда,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтендыВБрендЗонахСрезПоследних.Стенд) КАК КоличествоСтендов,
	               |	Сумма(СтендыВБрендЗонахСрезПоследних.Стенд.КоличествоМестФакт) КАК КоличествоМестФакт
	               |ИЗ
	               |	РегистрСведений.СтендыВБрендЗонах.СрезПоследних КАК СтендыВБрендЗонахСрезПоследних
	               |ГДЕ
	               |	СтендыВБрендЗонахСрезПоследних.БрендЗона = &БрендЗона
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СтендыВБрендЗонахСрезПоследних.Стенд.ТипСтенда";
	
	
	Запрос.УстановитьПараметр("БрендЗона",Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() цикл
		
		УИДТипаСтенда = СтрЗаменить(Выборка.ТипСтенда.УникальныйИдентификатор(),"-","_");
		
		ДобавляемыеРеквизиты = Новый Массив;
		НовыйРеквизитКартинкаСтенда = Новый РеквизитФормы("КартинкаСтенда"+УИДТипаСтенда,Новый ОписаниеТипов("Строка")); 
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизитКартинкаСтенда);
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		
		Если Не Выборка.ТипСтенда.ФайлКартинки.Пустая() Тогда
			АдресКартинки = НавигационнаяСсылкаКартинки(Выборка.ТипСтенда.ФайлКартинки, УникальныйИдентификатор);
		Иначе
			АдресКартинки = "";
		КонецЕсли;
		ЭтаФорма["КартинкаСтенда"+УИДТипаСтенда] = АдресКартинки;
		
		ГруппаТипСтенда = ЭтаФорма.Элементы.Добавить("ГруппаТипСтенда"+УИДТипаСтенда, Тип("ГруппаФормы"),Элементы.ГруппаСтендыВБрендЗоне);
		ГруппаТипСтенда.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТипСтенда.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаТипСтенда.ОтображатьЗаголовок = ЛОЖЬ; 
		ГруппаТипСтенда.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;		
		
		ГруппаТипСтендаВ = ЭтаФорма.Элементы.Добавить("ГруппаТипСтендаВ"+УИДТипаСтенда, Тип("ГруппаФормы"),ГруппаТипСтенда);
		ГруппаТипСтендаВ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТипСтендаВ.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаТипСтендаВ.ОтображатьЗаголовок = ЛОЖЬ; 
		ГруппаТипСтендаВ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;		
		
		ГруппаТипСтендаН = ЭтаФорма.Элементы.Добавить("ГруппаТипСтендаН"+УИДТипаСтенда, Тип("ГруппаФормы"),ГруппаТипСтенда);
		ГруппаТипСтендаН.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТипСтендаН.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаТипСтендаН.ОтображатьЗаголовок = ЛОЖЬ; 
		ГруппаТипСтендаН.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;		
		
		
		ГруппаТипСтендаЛ = ЭтаФорма.Элементы.Добавить("ГруппаТипСтендаЛ"+УИДТипаСтенда, Тип("ГруппаФормы"),ГруппаТипСтендаН);
		ГруппаТипСтендаЛ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТипСтендаЛ.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаТипСтендаЛ.ОтображатьЗаголовок = ЛОЖЬ; 
		ГруппаТипСтендаЛ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;		
		
		ГруппаТипСтендаП = ЭтаФорма.Элементы.Добавить("ГруппаТипСтендаП"+УИДТипаСтенда, Тип("ГруппаФормы"),ГруппаТипСтендаН);
		ГруппаТипСтендаП.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаТипСтендаП.Отображение = ОтображениеОбычнойГруппы.Нет;
		ГруппаТипСтендаП.ОтображатьЗаголовок = ЛОЖЬ; 
		ГруппаТипСтендаП.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;		
		
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("НадписьНазваниеСтенда"+УИДТипаСтенда, Тип("ДекорацияФормы"),ГруппаТипСтендаВ);
		НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
		НовыйЭлемент.Заголовок = Сред(Выборка.ТипСтенда,1,40) + Символы.ПС + Сред(Выборка.ТипСтенда,41);
		НовыйЭлемент.Ширина = 40;
		//НовыйЭлемент.Высота = 5;
		НовыйЭлемент.МаксимальнаяШирина = 40;
		//НовыйЭлемент.МаксимальнаяВысота = 10;
		
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("КартинкаСтенда"+УИДТипаСтенда, Тип("ПолеФормы") ,ГруппаТипСтендаЛ);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеКартинки;
		НовыйЭлемент.РазмерКартинки = РазмерКартинки.Пропорционально;
		НовыйЭлемент.Ширина = 20;
		НовыйЭлемент.Высота = 10;
		НовыйЭлемент.АвтоМаксимальнаяВысота = Ложь;
		НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
		НовыйЭлемент.МаксимальнаяВысота = 10;
		НовыйЭлемент.МаксимальнаяШирина = 20;
		НовыйЭлемент.Гиперссылка = Истина;
		НовыйЭлемент.УстановитьДействие("Нажатие","ОбработкаНажатияКартинкиСтенда");
		
		НовыйЭлемент.ПутьКДанным = "КартинкаСтенда"+УИДТипаСтенда;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("НадписьКоличествоСтендов"+УИДТипаСтенда, Тип("ДекорацияФормы"),ГруппаТипСтендаП);
		НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
		НовыйЭлемент.Заголовок = "кол-во стендов " + Выборка.КоличествоСтендов;
		
		НовыйЭлемент = ЭтаФорма.Элементы.Добавить("НадписьКоличествоМест"+УИДТипаСтенда, Тип("ДекорацияФормы"),ГруппаТипСтендаП);
		НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;
		НовыйЭлемент.Заголовок = "мест на стендах " + Выборка.ТипСтенда.КоличествоМест * Выборка.КоличествоСтендов;
		
		
	КонецЦикла;
	
	
Конецпроцедуры



&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		АдресКартинки = РаботаСФайлами.ДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		АдресКартинки = "";
	КонецПопытки;
	
	Возврат АдресКартинки;
	
КонецФункции

&НаКлиенте
Процедура СтраницаОсновное(Команда)
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.Основное;
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаРеквизиты(Команда)
	
	Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.Реквизиты;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисоединенныеФайлы(Команда)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура Декорация1Нажатие(Элемент)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормыФайлов = Новый Структура;
	ПараметрыФормыФайлов.Вставить("ВладелецФайла",Объект.Ссылка);
	ОткрытьФорму("ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами",ПараметрыФормыФайлов);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаСтендПоИД(ИД)
	
	Возврат Справочники.вогТипыСтендов.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));
	
КонецФункции

&НаКлиенте
Процедура ОбработкаНажатияКартинкиСтенда(Элемент,СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИД = СтрЗаменить(СтрЗаменить(Элемент.Имя,"КартинкаСтенда",""),"_","-");
	ПараметрыФ = Новый Структура("Ключ");
	ПараметрыФ.Ключ = ПолучитьСсылкуНаСтендПоИД(ИД);
	ОткрытьФорму("Справочник.вогТипыСтендов.ФормаОбъекта" ,ПараметрыФ);
	
КонецПроцедуры


&НаКлиенте
Процедура декор3DПВлевоНажатие(Элемент)
	
	Обновить3DПланограмму(Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура декор3DППравоНажатие(Элемент)
	
	Обновить3DПланограмму();
	
КонецПроцедуры

