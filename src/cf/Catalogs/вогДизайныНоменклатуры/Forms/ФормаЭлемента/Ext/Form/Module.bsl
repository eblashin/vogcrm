
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	
	// СтандартныеПодсистемы.Свойства 
	ДополнительныеПараметры = Новый Структура; 
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры); 
	// Конец СтандартныеПодсистемы.Свойства
	
	// ++ VOG Солодов В.В. 28.10.2019 task 791
	ЗаполнитьСписокВыбораПроизводителяОбои();
	// -- VOG Солодов В.В. 28.10.2019
	
	Если Объект.НаправлениеДеятельности = Справочники.НаправленияДеятельности.Плитка тогда
		Элементы.ТипНоменклатуры.Заголовок = "Назначение";
	ИначеЕсли Объект.НаправлениеДеятельности = Справочники.НаправленияДеятельности.Обои тогда
		Элементы.ТипНоменклатуры.Заголовок = "Тип";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеВидимостьюЭлементовПоНаправлениюДеятельности();
	УправлениеВидимостьюРеквизитовОбои();
	ВывестиИнформациюПоОбъекту();
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект); 
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемыСвойства

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипРисункаОбоиПриИзменении(Элемент)
	
	УправлениеВидимостьюРеквизитовОбои();
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеДеятельностиПриИзменении(Элемент)
	
	УправлениеВидимостьюЭлементовПоНаправлениюДеятельности();
	УправлениеВидимостьюРеквизитовОбои();	
	ВывестиИнформациюПоОбъекту();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПереходСтраницы(Команда)
	
	ВыполнитьПереходСтраницы(Команда.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция УправлениеВидимостьюЭлементовПоНаправлениюДеятельности()
	
	Если Объект.НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Обои") тогда
		Элементы.ГруппаРеквизитыОбои.Видимость = Истина;
		Элементы.ГруппаРеквизитыПлитки.Видимость = Ложь;
	ИначеЕсли Объект.НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Плитка") тогда
		Элементы.ГруппаРеквизитыОбои.Видимость = Ложь;
		Элементы.ГруппаРеквизитыПлитки.Видимость = Истина;
	Иначе
		Элементы.ГруппаРеквизитыОбои.Видимость = Ложь;
		Элементы.ГруппаРеквизитыПлитки.Видимость = Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция УправлениеВидимостьюРеквизитовОбои()
	
	// ++ VOG Солодов В.В. 21.05.2021 DEV-507
	Если Не Объект.НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Обои") Тогда
		
		Элементы.ГруппаОбоиРисунок.Видимость 	= Ложь;
		Элементы.ГруппаОбоиПолоса.Видимость 	= Ложь;
		Элементы.ГруппаОбоиСтруктура.Видимость 	= Ложь;
		
	КонецЕсли;
	// До изменения
	//Если Объект.ТипРисункаОбои = ПредопределенноеЗначение("Перечисление.вогТипРисункаОбоев.Рисунок") тогда
	//	Элементы.ГруппаОбоиРисунок.Видимость = Истина;
	//	Элементы.ГруппаОбоиПолоса.Видимость = Ложь;
	//	Элементы.ГруппаОбоиСтруктура.Видимость = Ложь;
	//ИначеЕсли Объект.ТипРисункаОбои = ПредопределенноеЗначение("Перечисление.вогТипРисункаОбоев.Полоса") тогда
	//	Элементы.ГруппаОбоиРисунок.Видимость = Ложь;
	//	Элементы.ГруппаОбоиПолоса.Видимость = Истина;
	//	Элементы.ГруппаОбоиСтруктура.Видимость = Ложь;
	//ИначеЕсли Объект.ТипРисункаОбои = ПредопределенноеЗначение("Перечисление.вогТипРисункаОбоев.Структура") тогда
	//	Элементы.ГруппаОбоиРисунок.Видимость = Ложь;
	//	Элементы.ГруппаОбоиПолоса.Видимость = Ложь;
	//	Элементы.ГруппаОбоиСтруктура.Видимость = Истина;
	//// ++ VOG Солодов В.В. 28.10.2019 task 791
	//Иначе
	//	Элементы.ГруппаОбоиРисунок.Видимость 	= Ложь;
	//	Элементы.ГруппаОбоиПолоса.Видимость 	= Ложь;
	//	Элементы.ГруппаОбоиСтруктура.Видимость 	= Ложь;
	//// -- VOG Солодов В.В. 28.10.2019
	//КонецЕсли;
	// -- VOG Солодов В.В. 21.05.2021 DEV-507
	
КонецФункции

&НаСервере
Процедура ВывестиИнформациюПоОбъекту()
	
	Если Объект.НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Обои") тогда
		// Вывод информации Обои
		РегистрыСведений.вогНастройкиОтображенияКлассификаторов.СформироватьМакетСОтбором(Объект.Ссылка,ИнформацияОбъекта
		,Метаданные.Справочники.вогДизайныНоменклатуры,ЭтаФорма,"Обои",Справочники.НаправленияДеятельности.Обои,Истина);
	ИначеЕсли Объект.НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Плитка") тогда
		// Вывод информации Плитка
		РегистрыСведений.вогНастройкиОтображенияКлассификаторов.СформироватьМакетСОтбором(Объект.Ссылка,ИнформацияОбъекта
		,Метаданные.Справочники.вогДизайныНоменклатуры,ЭтаФорма,"Плитка",Справочники.НаправленияДеятельности.Плитка,Истина);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПереходСтраницы(ИмяСтраницы)
	
	// Выделить кнопку перехода
	Для Каждого ЭлемКоманды Из Элементы.ГруппаСтраницыКоманды.ПодчиненныеЭлементы Цикл
		Если ИмяСтраницы = ЭлемКоманды.ИмяКоманды Тогда
			ЭлемКоманды.ЦветТекста 		= Новый Цвет(128,0,128);
			ЭлемКоманды.Шрифт 			= Новый Шрифт(,10,Ложь,,Истина);
		Иначе
			ЭлемКоманды.ЦветТекста	 	= Новый Цвет(28,85,174);
			ЭлемКоманды.Шрифт		 	= Новый Шрифт(,10,Ложь,,Ложь);
		КонецЕсли;
	КонецЦикла;
	Если ИмяСтраницы ="СтраницаКарточкаОбъекта" тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Основное;
	ИначеЕсли ИмяСтраницы ="СтраницаОписание" тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.Портрет;
	ИначеЕсли ИмяСтраницы ="СтраницаФайлы" тогда
		
		ПараметрыПереходаПоГиперссылке = ПараметрыПереходаПоГиперссылке(ИмяСтраницы);
		ГиперссылкаПерейтиСформироватьПараметрыИВопрос(ПараметрыПереходаПоГиперссылке);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейтиСформироватьПараметрыИВопрос(ПараметрыПереходаПоГиперссылке)
	
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = Нстр("ru = 'Данные еще не записаны.
		|Переход к дополнительной информции возможен только после записи элемента.
		|Записать элемент?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ГиперссылкаПерейтиВопросЗавершение", ЭтотОбъект, ПараметрыПереходаПоГиперссылке), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейтиВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ЭлементЗаписан = Записать();
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Не ЭлементЗаписан Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПереходаПоГиперссылке = ПараметрыПереходаПоГиперссылке(ДополнительныеПараметры.ИмяЭлемента);
	ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке)
	
	ОткрытьФорму(ПараметрыПереходаПоГиперссылке.ИмяФормы,
		ПараметрыПереходаПоГиперссылке.ПараметрыФормы, , ЭтаФорма.УникальныйИдентификатор, , , ,
		ПараметрыПереходаПоГиперссылке.РежимОткрытияОкнаФормы);
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыПереходаПоГиперссылке(ИмяЭлемента)
	
	Если ИмяЭлемента = "СтраницаФайлы" Тогда		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВладелецФайла",  Объект.Ссылка);
		ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
		
		Если вогУправлениеПрисоединеннымиФайламиКлиентСерверПовтИсп.ИспользоватьРедактированиеПрисоединенныхФайловПоВидам(Объект.Ссылка) Тогда
			ФормаИмя = "ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами";
			ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Присоединенные файлы'"))
		Иначе	
			ФормаИмя = "Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы";
		КонецЕсли;
		
		ТипыФайлов = Новый Массив;
		Если ИмяЭлемента = "ГиперссылкаПерейтиИзображения" Тогда
			ТипыФайлов.Добавить(ПредопределенноеЗначение("Перечисление.вогТипыПрисоединенныхФайлов.Изображение"));
			ПараметрыФормы.Вставить("ТипыФайлов", ТипыФайлов);
			
		КонецЕсли;
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", ФормаИмя);
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
	КонецЕсли;
	
	Если Не ПараметрыПереходаПоГиперссылке.Свойство("РежимОткрытияОкнаФормы") Тогда
		ПараметрыПереходаПоГиперссылке.Вставить("РежимОткрытияОкнаФормы", РежимОткрытияОкнаФормы.Независимый);
	КонецЕсли;
	ПараметрыПереходаПоГиперссылке.Вставить("ИмяЭлемента", ИмяЭлемента);
	
	Возврат ПараметрыПереходаПоГиперссылке
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораПроизводителяОбои()
	
	//УстановитьПривилегированныйРежим(Истина);
	//
	//ШаблонСхемыКомпоновки = Справочники.вогШаблоныСхемКомпановкиДанных.ПроизводительОбои;
	//
	//СхемаКомпоновкиДанных 		= ШаблонСхемыКомпоновки.ХранилищеСхемыКомпоновкиДанных.Получить();
	//НастройкаКомпоновкиДанных 	= ШаблонСхемыКомпоновки.ХранилищеНастроекКомпоновкиДанных.Получить();
	//
	//Если ТипЗнч(СхемаКомпоновкиДанных) = Тип("СхемаКомпоновкиДанных")
	//	И ТипЗнч(НастройкаКомпоновкиДанных) = Тип("НастройкиКомпоновкиДанных") Тогда
	//	
	//	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	//	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	//	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкаКомпоновкиДанных);
	//	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	//	
	//	КомпоновщикМакета 			= Новый КомпоновщикМакетаКомпоновкиДанных();
	//	НастройкаКомпоновкиДанных 	= КомпоновщикНастроек.ПолучитьНастройки();
	//	
	//	МакетКомпоновкиДанных 		= КомпоновщикМакета.Выполнить(
	//		СхемаКомпоновкиДанных,
	//		НастройкаКомпоновкиДанных,
	//		,
	//		,
	//		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	//	
	//	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	//	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	//	
	//	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	//	
	//	ТаблицаПартнеров = Новый ТаблицаЗначений;
	//	
	//	ПроцессорВывода.УстановитьОбъект(ТаблицаПартнеров);
	//	
	//	Попытка
	//		ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	//	Исключение
	//		ТекстСообщения = НСтр("ru = 'Произошла ошибка выполнения запроса. Обратитесь к администратору!'") +
	//			Символы.ПС + ОписаниеОшибки();
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	//	КонецПопытки;
	//	
	//	Если ТаблицаПартнеров.Количество() > 0 Тогда
	//		СписокПартнеров = ТаблицаПартнеров.ВыгрузитьКолонку("Ссылка");
	//		Элементы.вогПроизводительОбои.СписокВыбора.ЗагрузитьЗначения(СписокПартнеров);
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
