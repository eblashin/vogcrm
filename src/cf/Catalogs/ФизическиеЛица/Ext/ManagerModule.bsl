#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


// СтандартныеПодсистемы.ВерсионированиеОбъектов
// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
// Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт
КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	

// Получает подразделение выбранного физического лица.
//
// Параметры:
//	Пользователь - СправочникСсылка.ФизическиеЛица - Текущий пользователь.
//
// Возвращаемое значение:
//	СправочникСсылка.Подразделения - Подразделение пользователя.
//
Функция ПодразделениеФизическогоЛица(ФизическоеЛицо) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Пользователи.Подразделение КАК Подразделение
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ФизическоеЛицо = &ФизическоеЛицо
	|");
	
	Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Подразделение = Выборка.Подразделение;
	Иначе
		Подразделение = Справочники.СтруктураПредприятия.ПустаяСсылка();
	КонецЕсли;

	Возврат Подразделение;
	
КонецФункции // ПодразделениеФизическогоЛица()

// Функция определяет реквизиты физического лица.
//
// Параметры:
//  ФизЛицо - СправочникСсылка.ФизическиеЛица - Ссылка на элемент справочника.
//
// Возвращаемое значение:
//	Выборка - Реквизиты выбранного физического лица.
//
Функция ПолучитьРеквизитыФизическогоЛица(ФизЛицо) Экспорт
	
		
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ФизическиеЛица.ИНН КАК ИНН
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &ФизЛицо
	|");
	
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции // ПолучитьРеквизитыФизическогоЛица() 

// Функция определяет документ физического лица.
//
// Возвращает представление документа физического лица, если найден один документ.
// Возвращает пустую строку, если документ не найден или документов больше одного.
//
// Параметры:
//  ФизЛицо - СправочникСсылка.ФизическиеЛица - Ссылка на физ. лицо.
//	ВидДокумента - СправочникСсылка.ВидыДокументовФизическихЛиц - Вид документа физ. лица.
//
// Возвращаемое значение:
//	Строка - Представление документа физического лица.
//
Функция ПолучитьДокументФизическогоЛицаПоУмолчанию(ФизЛицо, ВидДокумента = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	ДокументыФизическихЛиц.Представление КАК ПредставлениеДокументаФизическогоЛица
	|ИЗ
	|	РегистрСведений.ДокументыФизическихЛиц КАК ДокументыФизическихЛиц
	|ГДЕ
	|	ДокументыФизическихЛиц.Физлицо = &Физлицо
	|	И (ДокументыФизическихЛиц.ВидДокумента = &ВидДокумента
	|		ИЛИ &ВидДокумента = Неопределено)
	|");
	
	Запрос.УстановитьПараметр("Физлицо", ФизЛицо);
	Запрос.УстановитьПараметр("ВидДокумента", ?(ЗначениеЗаполнено(ВидДокумента), ВидДокумента, Неопределено));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		ПредставлениеДокументаФизическогоЛица = Выборка.ПредставлениеДокументаФизическогоЛица;
	Иначе
		ПредставлениеДокументаФизическогоЛица = "";
	КонецЕсли;
	
	Возврат ПредставлениеДокументаФизическогоЛица;

КонецФункции // ПолучитьДокументФизическогоЛицаПоУмолчанию() 

#КонецЕсли

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.СтрокаПоиска) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК Ссылка,
		|	ФизическиеЛица.Наименование КАК Представление
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	(ФизическиеЛица.Наименование ПОДОБНО &ФамилияИмяОтчетство
		|			ИЛИ ФизическиеЛица.Наименование ПОДОБНО &ФамилияИмя
		|			ИЛИ ФизическиеЛица.Наименование ПОДОБНО &Фамилия)";
		
		ФИО = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СокрЛП(Параметры.СтрокаПоиска)," ");
		
		КоличествоПодстрок = ФИО.Количество();
		Фамилия            = ?(КоличествоПодстрок > 0,ФИО[0],"");
		Имя                = ?(КоличествоПодстрок > 1,ФИО[1],"");
		Отчество           = ?(КоличествоПодстрок > 2,ФИО[2],"");
		
		Запрос.УстановитьПараметр("ФамилияИмяОтчетство", СокрЛП(Фамилия + " " + Имя + " " + Отчество) + "%");
		Запрос.УстановитьПараметр("ФамилияИмя", СокрЛП(Фамилия + " " + Имя));
		Запрос.УстановитьПараметр("Фамилия",  СокрЛП(Фамилия));
		
		ДанныеВыбора = Новый СписокЗначений;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.Представление);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

