
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Элементы.ФормаCRM_УстановкаВесаПоказателей.Видимость = CRM_ЛицензированиеСервер.ВариантПоставкиКОРП();
	
	Если ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТеги") Тогда
		СписокВышестоящийхПодразделений = CRM_МетодыМодулейМенеджеровСправочников.ПолучитьВсеПодразделенияРодители(Объект.Ссылка, Истина);
		ТегиПодразделения.Параметры.УстановитьЗначениеПараметра("ПодразделенияПоИерархии", СписокВышестоящийхПодразделений);
		ТегиПодразделения.Параметры.УстановитьЗначениеПараметра("ТекущееПодразделение", Объект.Ссылка);
	КонецЕсли; 
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРекивзиты");
		МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
		МодульУправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	КонецЕсли;
	
	КалендарьПредприятия = Константы.ОсновнойКалендарьПредприятия.Получить();
	Если НЕ КалендарьПредприятия.Пустая() Тогда
		Элементы.СтраницыКалендарьПредприятия.ТекущаяСтраница = Элементы.СтраницаКалендарьЗадан;
	Иначе
		Элементы.СтраницыКалендарьПредприятия.ТекущаяСтраница = Элементы.СтраницаКалендарьНеЗадан;
	КонецЕсли; 
	Элементы.ГрафикРаботы.Доступность = (ИспользованиеГрафикаРаботы = 1);
		
	// Подсистема запрета редактирования ключевых реквизитов объектов.
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

	CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(СписокДоступа, "Подразделение", Объект.Ссылка, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("Запись_СтруктураПредприятия");

	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	
	Если ИмяСобытия = "ПослеЗаписиТега" Тогда
		Элементы.ТегиПодразделения.Обновить();	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТегиПодразделенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ	= Истина; 
	ПарамФормы	= Новый Структура;
	ПарамФормы.Вставить("Владелец",Объект.Ссылка);
	ОткрытьФорму("Справочник.CRM_Теги.ФормаОбъекта",ПарамФормы,ЭтотОбъект,,,,);

КонецПроцедуры

&НаКлиенте
Процедура ТегиПодразделенияПередНачаломИзменения(Элемент, Отказ)
	// Запрет на редактирование тегов другого подразделения.
	Если Элементы.ТегиПодразделения.ТекущиеДанные.Владелец <> Объект.Ссылка Тогда
		Отказ = Истина;
	КонецЕсли; 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
 
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ИмяФормыРазблокировки = "Справочник.СтруктураПредприятия.Форма.РазблокированиеРеквизитов";
	CRM_ОбщегоНазначенияКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект, ИмяФормыРазблокировки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура CRM_ФормулаРасчетаПотенциалаОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Объект.Ссылка.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Поле = "Объект."+Элемент.Имя;
		Сообщение.Текст = "Нельзя редактировать формулу для незаписанного подразделения!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Подразделение", Объект.Ссылка);
	ПараметрыФормы.Вставить("Формула", Объект.CRM_ФормулаРасчетаПотенциала);
	ПараметрыФормы.Вставить("ПериодРасчета", Объект.CRM_ПериодРасчетаПотенциала);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("РегистрСведений.CRM_ВесаПоказателейПотенциала.Форма.ФормаНастройкиПотенциала", ПараметрыФормы, Элемент, Объект.Ссылка, , , , РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

&НаКлиенте
Процедура CRM_УстановкаВесаПоказателей(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Текст = "Нельзя редактировать вес показателей для незаписанного подразделения!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Подразделение", Объект.Ссылка);
	ПараметрыФормы.Вставить("Формула", Объект.CRM_ФормулаРасчетаПотенциала);
	ПараметрыФормы.Вставить("ПериодРасчета", Объект.CRM_ПериодРасчетаПотенциала);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("РегистрСведений.CRM_ВесаПоказателейПотенциала.Форма.ФормаНастройкиПотенциала", ПараметрыФормы, Элементы.CRM_ФормулаРасчетаПотенциала, Объект.Ссылка, , , , РежимОткрытияОкнаФормы.Независимый);
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьГрафикПредприятияПриИзменении(Элемент)

	Если ИспользованиеГрафикаРаботы = 0 И НЕ Объект.ГрафикРаботы.Пустая() Тогда
		Объект.ГрафикРаботы = ПредопределенноеЗначение("Справочник.Календари.ПустаяСсылка");
	КонецЕсли;
	Элементы.ГрафикРаботы.Доступность = (ИспользованиеГрафикаРаботы = 1);

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИндивидуальныйГрафикПриИзменении(Элемент)
	Элементы.ГрафикРаботы.Доступность = (ИспользованиеГрафикаРаботы = 1);
КонецПроцедуры

&НаКлиенте
Процедура СписокДоступаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если НЕ CRM_ЛицензированиеСервер.ВариантПоставкиКОРП() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Функция доступна только для ""КОРП"" поставки конфигурации!'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо записать элемент!'"));
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(СписокДоступа, "Подразделение", Объект.Ссылка, Истина);
КонецПроцедуры

#КонецОбласти


