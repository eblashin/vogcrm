
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьСКД();
	ИнициализироватьПараметрыЗапроса();
	
	Если Не ЗначениеЗаполнено(Объект.УникальныйИдентификатор) 
		Или ЗначениеЗаполнено(ЭтаФорма.Параметры.ЗначениеКопирования.УникальныйИдентификатор) Тогда
		
		Объект.УникальныйИдентификатор = Новый УникальныйИдентификатор;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ЗначениеЗаполнено(Объект.СхемаКомпоновкиДанных) Тогда
		
		Если Не ПустаяСтрока(АдресСхемыКомпоновкиДанных) Тогда
			
			ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = 
				Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных));
				
		Иначе
			
			ТекстСообщения = НСтр("ru = 'Необходимо настроить схему компоновки данных.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, 
				Объект.Ссылка, 
				"Объект.СхемаКомпоновкиДанных",
				, 
				Отказ);
				
		КонецЕсли;
		
	Иначе
		ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	Если Не ПустаяСтрока(АдресНастроекКомпоновкиДанных) Тогда
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = 
			Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
	Иначе
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	ТекущийОбъект.ХранилищеПараметровЗапроса = Новый ХранилищеЗначения(ПараметрыЗапроса.Выгрузить());
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанных(Команда)
	
	ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("РедактироватьСхемуКомпоновкиДанныхЗавершение", ЭтотОбъект);
	
	// Открыть редактор настроек схемы компоновки данных
	ШаблонЗаголовка = НСтр("ru = 'Настройка схемы компоновки данных ""%1""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ШаблонЗаголовка, "%1", Объект.Наименование);
	
	АдресаНастроек = Неопределено;

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("НеПомещатьНастройкиВСхемуКомпоновкиДанных", Истина);
	ПараметрыОткрытия.Вставить("НеРедактироватьСхемуКомпоновкиДанных", 		Ложь);
	ПараметрыОткрытия.Вставить("НеНастраиватьУсловноеОформление", 			Истина);
	ПараметрыОткрытия.Вставить("НеНастраиватьВыбор", 						Истина);
	ПараметрыОткрытия.Вставить("НеНастраиватьПорядок", 						Ложь);
	ПараметрыОткрытия.Вставить("УникальныйИдентификатор", 					УникальныйИдентификатор);
	ПараметрыОткрытия.Вставить("АдресСхемыКомпоновкиДанных", 				АдресСхемыКомпоновкиДанных);
	ПараметрыОткрытия.Вставить("АдресНастроекКомпоновкиДанных", 			АдресНастроекКомпоновкиДанных);
	ПараметрыОткрытия.Вставить("Заголовок", 								ЗаголовокФормыНастройкиСхемыКомпоновкиДанных);
	ПараметрыОткрытия.Вставить("ИсточникШаблонов", 							Объект.Ссылка);
	ПараметрыОткрытия.Вставить("ИмяШаблонаСКД", 							Объект.СхемаКомпоновкиДанных);
	ПараметрыОткрытия.Вставить("ВозвращатьИмяТекущегоШаблонаСКД", 			Истина);
	
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		ПараметрыОткрытия,
		,
		,
		,
		, 
		ОписаниеОповещенияЗавершения, 
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанныхЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		
		Если ПустаяСтрока(Результат.ИмяТекущегоШаблонаСКД) 
			И Элементы.СхемаКомпоновкиДанных.СписокВыбора.НайтиПоЗначению("") = Неопределено Тогда
			
			Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольный'"));
			
		КонецЕсли;
		
		Объект.СхемаКомпоновкиДанных = Результат.ИмяТекущегоШаблонаСКД;
		
		Если Результат.Свойство("АдресХранилищаНастройкиКомпоновщика") Тогда
			АдресНастроекКомпоновкиДанных = Результат.АдресХранилищаНастройкиКомпоновщика;
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапроса(Команда)
	
	Если ЗначениеЗаполнено(Объект.ТекстЗапроса) Тогда
		КонструкторЗапроса = Новый КонструкторЗапроса(Объект.ТекстЗапроса);
	Иначе
		КонструкторЗапроса = Новый КонструкторЗапроса();
	КонецЕсли;
	
	ОписаниеОповщенеия = Новый ОписаниеОповещения("ПриЗакрытииКонструктораЗапроса", ЭтотОбъект);
	
	КонструкторЗапроса.Показать(ОписаниеОповщенеия);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытииКонструктораЗапроса(ТекстЗапроса, ДополонительныеПараметры) Экспорт
	
	Если ТекстЗапроса = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ТекстЗапроса = ТекстЗапроса;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПараметрыЗапроса(Команда)
	
	ЗначениеВозврата = ЗаполнитьПараметрыЗапросаНаСервере(Объект.ТекстЗапроса);
	
	Если ТипЗнч(ЗначениеВозврата) = Тип("Структура") Тогда
		
		ПараметрыЗапроса.Очистить();
		
		Для Каждого ПараметрЗапроса Из ЗначениеВозврата Цикл
			НовыйПараметр 					= ПараметрыЗапроса.Добавить();
			НовыйПараметр.ИмяПараметра 		= ПараметрЗапроса.Ключ;
			НовыйПараметр.ЗначениеПараметра = ПараметрЗапроса.Значение.ПривестиЗначение(НовыйПараметр.ЗначениеПараметра);
		КонецЦикла;
		
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ЗначениеВозврата);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ИнициализироватьСКД()
	
	ПризнакПредопределенногоМакета 			= Врег("Предопределенный");
	ДлинаПризнакаПредопределенногоМакета 	= СтрДлина(ПризнакПредопределенногоМакета);
	
	Для Каждого Макет Из Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).Макеты Цикл
		
		Если Макет.ТипМакета = Метаданные.СвойстваОбъектов.ТипМакета.СхемаКомпоновкиДанных Тогда
			
			Если ВРег(Прав(Макет.Имя, ДлинаПризнакаПредопределенногоМакета)) = ПризнакПредопределенногоМакета Тогда
				Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить(Макет.Имя, Макет.Синоним);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольная'"));
	
	Если Параметры.ЗначениеКопирования.Пустая() Тогда
		
		СхемаИНастройки = Справочники.вогНастройкиДоступныхПолейОтбораИсполнителейЗадач.ОписаниеИСхемаКомпоновкиДанныхНастройкиПоИмениМакета(
			Объект.Ссылка, Объект.СхемаКомпоновкиДанных);
			
	Иначе
		СхемаИНастройки = Справочники.вогНастройкиДоступныхПолейОтбораИсполнителейЗадач.ОписаниеИСхемаКомпоновкиДанныхНастройкиПоИмениМакета(
			Параметры.ЗначениеКопирования, Параметры.ЗначениеКопирования.СхемаКомпоновкиДанных);
	КонецЕсли;
	
	Если ПустаяСтрока(СхемаИНастройки.Описание) Тогда
		Объект.СхемаКомпоновкиДанных = "";
	КонецЕсли;
	
	Адреса = Справочники.вогНастройкиДоступныхПолейОтбораИсполнителейЗадач.АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(Объект);
	
	АдресСхемыКомпоновкиДанных 		= Адреса.СхемаКомпоновкиДанных;
	АдресНастроекКомпоновкиДанных 	= Адреса.НастройкиКомпоновкиДанных;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьСКДСервер()
	
	Адреса = Справочники.вогДополнительныеКоманды.АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(
		Справочники.вогДополнительныеКоманды.ПустаяСсылка());
	
	АдресСхемыКомпоновкиДанных 		= Адреса.СхемаКомпоновкиДанных;
	АдресНастроекКомпоновкиДанных 	= Адреса.НастройкиКомпоновкиДанных;
	Объект.СхемаКомпоновкиДанных 	= "";
	Элементы.СхемаКомпоновкиДанных.СписокВыбора.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПараметрыЗапроса()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	вогНастройкиДоступныхПолейОтбораИсполнителейЗадач.ХранилищеПараметровЗапроса КАК ХранилищеПараметровЗапроса
	|ИЗ
	|	Справочник.вогНастройкиДоступныхПолейОтбораИсполнителейЗадач КАК вогНастройкиДоступныхПолейОтбораИсполнителейЗадач
	|ГДЕ
	|	вогНастройкиДоступныхПолейОтбораИсполнителейЗадач.Ссылка = &НастройкаСсылка";
	
	Запрос.УстановитьПараметр("НастройкаСсылка", Объект.Ссылка);
	
	Результат 	= Запрос.Выполнить();
	Выборка 	= Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ТаблицаПараметровЗапроса = Выборка.ХранилищеПараметровЗапроса.Получить();
		
		Если ТипЗнч(ТаблицаПараметровЗапроса) = Тип("ТаблицаЗначений") Тогда
			ПараметрыЗапроса.Загрузить(ТаблицаПараметровЗапроса);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьПараметрыЗапросаНаСервере(ТекстЗапроса) Экспорт
	
	СтруктураПараметров = Новый Структура();

	Если Не ПустаяСтрока(ТекстЗапроса) Тогда
		
		Запрос = Новый Запрос(ТекстЗапроса);
		
		Попытка
			НайденныеПараметры = Запрос.НайтиПараметры();
		Исключение
			Возврат ОписаниеОшибки();
		КонецПопытки;
		
		Для Каждого ПараметрЗапроса Из НайденныеПараметры Цикл
			СтруктураПараметров.Вставить(ПараметрЗапроса.Имя, ПараметрЗапроса.ТипЗначения);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти
