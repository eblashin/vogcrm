
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ОбъектJSON") И ЗначениеЗаполнено(Параметры["ОбъектJSON"]) Тогда
		
		// Получим параметр
		ОбъектJSON = Параметры["ОбъектJSON"];
		// Прочитаем объект
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ОбъектJSON);
		ОбъектXDTO = ФабрикаXDTO.ПрочитатьJSON(ЧтениеJSON);
		
		Для каждого Свойство Из ОбъектXDTO.Свойства() Цикл
			Если ТипЗнч(ОбъектXDTO[Свойство.Имя]) = Тип("СписокXDTO") Тогда
				ОбъектСсылка = ОбъектXDTO.ref;
				// Зарегистрируем табличную часть
				СтрокаТабличныеЧасти = ТабличныеЧасти.Добавить();
				СтрокаТабличныеЧасти.Имя = Свойство.Имя;
				// Добавим реквизит формы табличного поля
    			НовыеРеквизиты = Новый Массив; 
				НовыеРеквизиты.Добавить(Новый РеквизитФормы(Свойство.Имя, Новый ОписаниеТипов("ТаблицаЗначений"),,"",Истина));
				НовыеРеквизиты.Добавить(Новый РеквизитФормы("Имя", Новый ОписаниеТипов("Строка"), Свойство.Имя, "Имя"));
				НовыеРеквизиты.Добавить(Новый РеквизитФормы("Значение", Новый ОписаниеТипов(), Свойство.Имя, "Значение"));
    			ИзменитьРеквизиты(НовыеРеквизиты);
				// Добавим элементы отображения табличного поля
				Группа = Элементы.Добавить("ГруппаТабличнаяЧасть"+Свойство.Имя, Тип("ГруппаФормы"), ЭтаФорма.Элементы.ГруппаТабличныеЧасти); 
				Группа.Вид = ВидГруппыФормы.Страница;
				Группа.Заголовок = Свойство.Имя;
				ТаблицаФормы = Элементы.Добавить("ТаблицаФормы"+Свойство.Имя, Тип("ТаблицаФормы"), Группа); 
				ТаблицаФормы.ПутьКДанным = Свойство.Имя; 
				ТаблицаФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
				ТаблицаФормы.ИзменятьСоставСтрок = Ложь;
				ТаблицаФормы.ИзменятьПорядокСтрок = Ложь;
				ТаблицаФормы.УстановитьДействие("ПередНачаломИзменения", "ЗначениеПередНачаломИзменения");
				Для каждого Колонка Из ЭтаФорма[Свойство.Имя].Выгрузить().Колонки Цикл
					НоваяКолонка = Элементы.Добавить(Свойство.Имя + Колонка.Имя, Тип("ПолеФормы"), ТаблицаФормы);       
					НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода;
					НоваяКолонка.ПутьКДанным = Свойство.Имя + "." + Колонка.Имя;
					НоваяКолонка.Ширина = 10;
					НоваяКолонка.КнопкаОчистки = Истина;
					НоваяКолонка.АвтоМаксимальнаяШирина = Ложь;
					НоваяКолонка.МаксимальнаяШирина = 20;
					НоваяКолонка.УстановитьДействие("НачалоВыбора", "ЗначениеНачалоВыбора");
					Если СтрНайти(Колонка.Имя, "Имя") > 0 Тогда
						НоваяКолонка.ТолькоПросмотр = Истина;
					КонецЕсли; 
				КонецЦикла; 
			КонецЕсли; 
		КонецЦикла;
		ЗаполнитьЗначенияИзОбъектаXDTO(ОбъектJSON);
	Иначе
		Сообщить("Не задан объект");
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияИзОбъектаXDTO(Знач ДанныеJSON)
	
	// Прочитаем объект
	Если Не ПустаяСтрока(ДанныеJSON) Тогда
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ДанныеJSON);
		ОбъектXDTO = ФабрикаXDTO.ПрочитатьJSON(ЧтениеJSON);
		РеквизитыШапки.Очистить();
		Для каждого Свойство Из ОбъектXDTO.Свойства() Цикл
			Если ТипЗнч(ОбъектXDTO[Свойство.Имя]) = Тип("СписокXDTO") Тогда
				// Выведем данные
				ЭтаФорма[Свойство.Имя].Очистить();
				Если ОбъектXDTO[Свойство.Имя].Количество() > 0 Тогда
					СтрокаXDTO = ОбъектXDTO[Свойство.Имя][0];
					Для каждого СвойствоТЧ Из СтрокаXDTO.Свойства() Цикл
						СтрокаТЧ = ЭтаФорма[Свойство.Имя].Добавить();
						СтрокаТЧ["Имя"] = СвойствоТЧ.Имя;
						СтрокаТЧ["Значение"] = СтрокаXDTO[СвойствоТЧ.Имя];
					КонецЦикла;
				КонецЕсли; 
			Иначе
				СтрокаРеквизиты = РеквизитыШапки.Добавить();
				СтрокаРеквизиты.Имя = Свойство.Имя;
				СтрокаРеквизиты.Значение = ОбъектXDTO[Свойство.Имя];
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
 
&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Результат = "";
	
	Если Не ПустаяСтрока(ОбъектJSON) Тогда
		// Прочитаем объект
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ОбъектJSON);
		ОбъектXDTO = ФабрикаXDTO.ПрочитатьJSON(ЧтениеJSON);
		// Сохраним табличные части
		Для каждого Свойство Из ОбъектXDTO.Свойства() Цикл
			Если ТипЗнч(ОбъектXDTO[Свойство.Имя]) = Тип("СписокXDTO") Тогда
				Если ОбъектXDTO[Свойство.Имя].Количество() > 0 Тогда
					СтрокаXDTO = ОбъектXDTO[Свойство.Имя][0];
					Для каждого СтрокаТЧ Из ЭтаФорма[Свойство.Имя] Цикл
						СвойствоXDTO = СтрокаXDTO.Свойства().Получить(СтрокаТЧ.Имя);
						Если СвойствоXDTO.Тип.Имя = "anyType" И СтрокаТЧ.Значение <> Неопределено Тогда
							ЗначениеXDTO = СериализаторXDTO.ЗаписатьXDTO(СтрокаТЧ.Значение);
							СтрокаXDTO[СтрокаТЧ.Имя] = ЗначениеXDTO;
						Иначе
							СтрокаXDTO[СтрокаТЧ.Имя] = СтрокаТЧ.Значение;
						КонецЕсли;
					КонецЦикла; 
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;
		// Сохраним реквизиты
		Для каждого РеквизитШапки Из РеквизитыШапки Цикл
			СвойствоXDTO = ОбъектXDTO.Свойства().Получить(РеквизитШапки.Имя);
			Если СвойствоXDTO.Тип.Имя = "anyType" И РеквизитШапки.Значение <> Неопределено Тогда
				ЗначениеXDTO = СериализаторXDTO.ЗаписатьXDTO(РеквизитШапки.Значение);
				ОбъектXDTO[РеквизитШапки.Имя] = ЗначениеXDTO;
			Иначе
				ОбъектXDTO[РеквизитШапки.Имя] = РеквизитШапки.Значение;
			КонецЕсли; 
		КонецЦикла;
		
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		ФабрикаXDTO.ЗаписатьJSON(ЗаписьJSON, ОбъектXDTO, НазначениеТипаXML.Явное);
		Результат = ЗаписьJSON.Закрыть();
	КонецЕсли;
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаСервере
Процедура ОбъектСсылкаПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(ОбъектСсылка) Тогда
		Попытка
			// Сериализуем эталонный объект
			ЗаписьJSON = Новый ЗаписьJSON;
			ЗаписьJSON.УстановитьСтроку();
			СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON, ОбъектСсылка.ПолучитьОбъект(), НазначениеТипаXML.Явное);
			ЗаполнитьЗначенияИзОбъектаXDTO(ЗаписьJSON.Закрыть());
		Исключение
			Сообщить("" + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектСсылкаПриИзменении(Элемент)
	ОбъектСсылкаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	
	Если ТипЗнч(ТекущиеДанные.Значение) <> Неопределено
		И ТипЗнч(ТекущиеДанные.Значение) <> Тип("Строка") Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ТипЗнч(ТекущиеДанные.Значение));
		Элемент.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначениеПередНачаломИзменения(Элемент, Отказ)
	Для каждого ПодчиненныйЭлемент Из Элемент.ПодчиненныеЭлементы Цикл
		Если СтрНайти(ПодчиненныйЭлемент.Имя, "Значение") > 0 Тогда
			ПодчиненныйЭлемент.ОграничениеТипа = Новый ОписаниеТипов(Новый Массив);
		КонецЕсли; 	
	КонецЦикла; 
КонецПроцедуры
