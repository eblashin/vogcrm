Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗаписьРегламентныхЗаданий();
	 
КонецПроцедуры

Процедура ВыполнитьЗаписьРегламентныхЗаданий()

	Если НЕ (ДополнительныеСвойства.Свойство("ЗаданияДляОбновления") 
		И ТипЗнч(ДополнительныеСвойства.ЗаданияДляОбновления) = Тип("Соответствие"))
		Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ОписаниеЗадания Из ДополнительныеСвойства.ЗаданияДляОбновления Цикл	
		Задание = ОписаниеЗадания.Значение;
		Если Задание = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыЗаданияДляОбновления = ОписаниеЗадания.Ключ;
		
		ПараметрыЗадания = Новый Структура;
	
		Если ПараметрыЗаданияДляОбновления.Свойство("Расписание") 
			И ТипЗнч(ПараметрыЗаданияДляОбновления.Расписание) = Тип("РасписаниеРегламентногоЗадания")
			И Строка(ПараметрыЗаданияДляОбновления.Расписание) <> Строка(Задание.Расписание) Тогда
			
			ПараметрыЗадания.Вставить("Расписание", ПараметрыЗаданияДляОбновления.Расписание);
			
		КонецЕсли;
		
		// Использование устанавливается в форме элемента
		Если ПометкаУдаления И Задание.Использование Тогда
			
			ПараметрыЗадания.Вставить("Использование", Ложь);
			
		ИначеЕсли ПараметрыЗаданияДляОбновления.Свойство("Использование") 
			И ПараметрыЗаданияДляОбновления.Использование <> Задание.Использование Тогда
			
			ПараметрыЗадания.Вставить("Использование", ПараметрыЗаданияДляОбновления.Использование);
			
		КонецЕсли;
		
		НаименованиеЗадания = НаименованиеРегламентногоЗадания(ПараметрыЗаданияДляОбновления.Действие);
		ПараметрыЗадания.Вставить("Наименование", НаименованиеЗадания);
		
		Параметры = Новый Массив;
		Параметры.Добавить(ПараметрыЗаданияДляОбновления.Действие);
		//{[-](фрагмент удален)Виноградов Дмитрий 19.02.2018 11:07:57 ID
		//Параметры.Добавить(Ссылка);
		//}Виноградов Дмитрий 19.02.2018 11:07:57
		//{[+](фрагмент добавлен), Виноградов Дмитрий Александрович 19.02.2018 11:09:00 ID
		//Параметры.Добавить(ПолучитьНастроекиДействия(ПараметрыЗаданияДляОбновления.Действие));
		//}Виноградов Дмитрий 19.02.2018 11:09:00
		ПараметрыЗадания.Вставить("Параметры", Параметры);
		ПараметрыЗадания.Вставить("Ключ", ПараметрыЗаданияДляОбновления.РегламентноеЗадание);
		
		УстановитьПривилегированныйРежим(Истина);
		desОбменДаннымиВызовСервера.ИзменитьЗадание(ПараметрыЗаданияДляОбновления.РегламентноеЗадание, ПараметрыЗадания);
	КонецЦикла;
	
КонецПроцедуры

//{[+](фрагмент добавлен), Виноградов Дмитрий Александрович 19.02.2018 11:10:07 ID

Функция НаименованиеРегламентногоЗадания(Действие)

	Возврат НСтр("ru = 'DSE '") + СокрЛП(Наименование) + ". " + Строка(Действие);

КонецФункции

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)//--> VOG Бей Вадим  05.12.2018 12:58:54 ID заявки:000002263
	
	Если ВариантОбмена = Перечисления.desВариантыНастроекОбмена.ОбменEDI Тогда
		//	
		НастройкиУПД = Действия.НайтиСтроки(Новый Структура("Действие",Справочники.desДействияПриОбмене.ЭДОУПД));
		Если НастройкиУПД.Количество()=0 Тогда
			
			ИндексУдаляемого = ПроверяемыеРеквизиты.Найти("ИдентификаторЭДО");
			ПроверяемыеРеквизиты.Удалить(ИндексУдаляемого);
	
		КонецЕсли;
		
	ИначеЕсли ВариантОбмена = Перечисления.desВариантыНастроекОбмена.ОбменСКлиентом Тогда
		
		ИндексУдаляемого = ПроверяемыеРеквизиты.Найти("ПрофильОбмена");
		ПроверяемыеРеквизиты.Удалить(ИндексУдаляемого);
		
		ИндексУдаляемого = ПроверяемыеРеквизиты.Найти("ИдентификаторЭДО");
		ПроверяемыеРеквизиты.Удалить(ИндексУдаляемого);   
		
	ИначеЕсли ВариантОбмена = Перечисления.desВариантыНастроекОбмена.Прочее Тогда
		
		ИндексУдаляемого = ПроверяемыеРеквизиты.Найти("ПрофильОбмена");
		ПроверяемыеРеквизиты.Удалить(ИндексУдаляемого);
		
		ИндексУдаляемого = ПроверяемыеРеквизиты.Найти("Контрагент");
		ПроверяемыеРеквизиты.Удалить(ИндексУдаляемого);
		
		ИндексУдаляемого = ПроверяемыеРеквизиты.Найти("Организация");
		ПроверяемыеРеквизиты.Удалить(ИндексУдаляемого);
		
		ИндексУдаляемого = ПроверяемыеРеквизиты.Найти("ИдентификаторЭДО");
		ПроверяемыеРеквизиты.Удалить(ИндексУдаляемого);
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ПередЗаписью(Отказ)
	
	Если ЭтоНовый() Тогда
		СсылкаНового = Справочники.desНастройкиДействийПриОбмене.ПолучитьСсылку();
	    ЭтотОбъект.УстановитьСсылкуНового(СсылкаНового);
		ИдентификаторНастройки	= СсылкаНового.УникальныйИдентификатор();
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ИдентификаторНастройки) Тогда
		ИдентификаторНастройки	= Ссылка.УникальныйИдентификатор();
	КонецЕсли; 
	
КонецПроцедуры


