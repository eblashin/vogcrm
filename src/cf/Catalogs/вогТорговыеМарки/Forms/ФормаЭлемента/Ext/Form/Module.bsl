

#Область КарточкаОбъекта

&НаКлиенте
Процедура ГиперссылкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыПереходаПоГиперссылке = ПараметрыПереходаПоГиперссылке(Элемент.Имя);
	ГиперссылкаПерейтиСформироватьПараметрыИВопрос(ПараметрыПереходаПоГиперссылке);
КонецПроцедуры

&НаКлиенте
Функция ПараметрыПереходаПоГиперссылке(ИмяЭлемента)
	
	Если ИмяЭлемента = "ГиперссылкаПерейтиФайлы"
		ИЛИ ИмяЭлемента = "ГиперссылкаПерейтиИзображения" Тогда		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВладелецФайла",  Объект.Ссылка);
		ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
		
		Если вогУправлениеПрисоединеннымиФайламиКлиентСерверПовтИсп.ИспользоватьРедактированиеПрисоединенныхФайловПоВидам(Объект.Ссылка) Тогда
			ФормаИмя = "ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами";
			ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Присоединенные файлы'"))
		Иначе	
			ФормаИмя = "ОбщаяФорма.ПрисоединенныеФайлы";
		КонецЕсли;
		
		ТипыФайлов = Новый Массив;
		Если ИмяЭлемента = "ГиперссылкаПерейтиИзображения" Тогда
			ТипыФайлов.Добавить(ПредопределенноеЗначение("Перечисление.вогТипыПрисоединенныхФайлов.Изображение"));
			ПараметрыФормы.Вставить("ТипыФайлов", ТипыФайлов);
			
		КонецЕсли;
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", ФормаИмя);
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
		
	ИначеЕсли ИмяЭлемента = "ГиперссылкаПерейтиАнкеты" Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("Респондент", Объект.Ссылка);
		ПараметрыФормы = Новый Структура("Отбор", Отбор);
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", "Документ.вогАнкета.ФормаСписка");
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
		
	ИначеЕсли ИмяЭлемента = "ГиперссылкаПерейтиУсловияДоставки" Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("ТорговаяТочка", Объект.Ссылка);
		ПараметрыФормы = Новый Структура("Отбор", Отбор);
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", "РегистрСведений.вогУсловияДоставки.Форма.ФормаСпискаКонтекст");
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
		
	ИначеЕсли ИмяЭлемента = "ГиперссылкаПерейтиМероприятия" Тогда
		ПараметрыФормы = Новый Структура("ТорговаяТочка", Объект.Ссылка);
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", "Документ.CRM_Мероприятие.ФормаСписка");
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
		
	ИначеЕсли ИмяЭлемента = "ГиперссылкаПерейтиПроцессы" Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("вогТорговаяТочка", Объект.Ссылка);
		ПараметрыФормы = Новый Структура("Отбор", Отбор);
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", "БизнесПроцесс.CRM_БизнесПроцесс.ФормаСписка");
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
		
	ИначеЕсли ИмяЭлемента = "ГиперссылкаПерейтиЭкспозиции" Тогда
		ПараметрыФормы = Новый Структура("ВладелецЭкспозиции", Объект.Ссылка);
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", "РегистрСведений.вогЭкспозицииКлиентов.Форма.ФормаСпискаКонтекст");
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
		
	ИначеЕсли ИмяЭлемента = "ГиперссылкаПерейтиКонтакты" Тогда
		ПараметрыФормы = Новый Структура("ОбъектСвязи", Объект.Ссылка);
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", "Справочник.КонтактныеЛицаПартнеров.ФормаСписка");
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
		
	ИначеЕсли ИмяЭлемента = "ГиперссылкаПерейтиЮрЛица" Тогда
		ПараметрыФормы = Новый Структура("ТорговаяТочкаСвязи", Объект.Ссылка);
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", "Справочник.вогЮридическиеЛица.ФормаСписка");
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
		
	ИначеЕсли ИмяЭлемента = "ГиперссылкаПерейтиЗначенияКлассификаторов" Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("Объект", Объект.Ссылка);
		ПараметрыФормы = Новый Структура("Отбор", Отбор);
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", "РегистрСведений.CRM_ОбъектыЗначенийКлассификаторов.Форма.ФормаСпискаКонтекст");
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
		
	ИначеЕсли ИмяЭлемента = "ГиперссылкаПерейтиВременныйДоступ" Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("ТорговаяТочка", Объект.Ссылка);
		ПараметрыФормы = Новый Структура("Отбор", Отбор);
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", "РегистрСведений.вогВременныйДоступКТорговымТочкам.Форма.ФормаСпискаКонтекст");
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
		
	КонецЕсли;
	
	Если Не ПараметрыПереходаПоГиперссылке.Свойство("РежимОткрытияОкнаФормы") Тогда
		ПараметрыПереходаПоГиперссылке.Вставить("РежимОткрытияОкнаФормы", РежимОткрытияОкнаФормы.Независимый);
	КонецЕсли;
	ПараметрыПереходаПоГиперссылке.Вставить("ИмяЭлемента", ИмяЭлемента);
	
	Возврат ПараметрыПереходаПоГиперссылке
	
КонецФункции

&НаКлиенте
Процедура ГиперссылкаПерейтиСформироватьПараметрыИВопрос(ПараметрыПереходаПоГиперссылке)
	
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = Нстр("ru = 'Данные еще не записаны.
		|Переход к дополнительной информции возможен только после записи элемента.
		|Записать элемент?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ГиперссылкаПерейтиВопросЗавершение", ЭтотОбъект, ПараметрыПереходаПоГиперссылке), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейтиВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ЭлементЗаписан = Записать();
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Не ЭлементЗаписан Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПереходаПоГиперссылке = ПараметрыПереходаПоГиперссылке(ДополнительныеПараметры.ИмяЭлемента);
	ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке)
	
	ОткрытьФорму(ПараметрыПереходаПоГиперссылке.ИмяФормы,
	ПараметрыПереходаПоГиперссылке.ПараметрыФормы, , ЭтаФорма.УникальныйИдентификатор, , , ,
	ПараметрыПереходаПоГиперссылке.РежимОткрытияОкнаФормы);
	
КонецПроцедуры

&НаСервере
Процедура CRM_УправлениеВидимостьюРамкиКартинки()
	Если ЗначениеЗаполнено(АдресКартинки) Тогда
		Элементы.ФайлКартинки.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);		
	Иначе
		Элементы.ФайлКартинки.Рамка = Новый Рамка(ТипРамкиЭлементаУправления.Одинарная);		
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ВывестиНедоступностьКартинки()
	АдресКартинки = "";
	Элементы.ФайлКартинки.ТекстНевыбраннойКартинки
	= НСтр("ru = 'Картинка не доступна (не доступен том) обратитесь к администратору.'");
	Объект.Логотип = Справочники.КонтактныеЛицаПартнеровПрисоединенныеФайлы.ПустаяСсылка();
	CRM_УправлениеВидимостьюРамкиКартинки();	
КонецПроцедуры // ВывестиНедоступностьКартинки()

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Установка значения реквизита АдресКартинки.
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ Объект.Логотип.Пустая() Тогда
			АдресКартинки = НавигационнаяСсылкаКартинки(Объект.Логотип, УникальныйИдентификатор);
			// +CRM
			Если ПустаяСтрока(АдресКартинки) Тогда
				ВывестиНедоступностьКартинки();
			КонецЕсли;	
			// -CRM
		Иначе
			АдресКартинки = "";
		КонецЕсли;
		CRM_УправлениеВидимостьюРамкиКартинки();
	КонецЕсли;
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	CRM_УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация");	
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	CRM_УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
		
	Если НЕ ТекущийОбъект.Логотип.Пустая() Тогда
		АдресКартинки = НавигационнаяСсылкаКартинки(ТекущийОбъект.Логотип, УникальныйИдентификатор);
		// +CRM
		Если ПустаяСтрока(АдресКартинки) Тогда
			ВывестиНедоступностьКартинки();
		КонецЕсли;	
		// -CRM
	Иначе
		АдресКартинки = "";
	КонецЕсли;
	CRM_УправлениеВидимостьюРамкиКартинки();	
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	CRM_УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	

КонецПроцедуры

#КонецОбласти

#Область Логотип

&НаКлиенте
Процедура ФайлКартинкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Логотип) Тогда
		АдресКартинки = НавигационнаяСсылкаКартинки(Объект.Логотип, УникальныйИдентификатор);
		// +CRM
		Если ПустаяСтрока(АдресКартинки) Тогда
			ВывестиНедоступностьКартинки();
		КонецЕсли;	
		// -CRM
	Иначе
		АдресКартинки = "";
	КонецЕсли;
	CRM_УправлениеВидимостьюРамкиКартинки();			
	
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Объект.Ссылка.Пустая() Тогда 		
		ВывестиПредупреждениеОНеобходиомстиЗаписиНового();
	Иначе 			
		ЗаблокироватьДанныеФормыДляРедактирования();
		ДобавитьИзображениеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаДиалогЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайла = ВыбранныеФайлы[0];
	ДополнительныеПараметры.Вставить("ИмяФайла", ИмяФайла);
	
	ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита] =
	Новый Структура("ИмяБезРасширения, Расширение, ВремяИзменения, УниверсальноеВремяИзменения");
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
	"ДобавлениеФайлаИнициализацияФайла",
	ЭтотОбъект,
	ДополнительныеПараметры);
	
	Файл = Новый Файл;
	Файл.НачатьИнициализацию(ОписаниеОповещения, ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаИнициализацияФайла(Файл, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Вставить("Файл", Файл);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
	"ДобавлениеФайлаСуществованияФайла",
	ЭтотОбъект,
	ДополнительныеПараметры);
	
	ДополнительныеПараметры.Файл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаСуществованияФайла(Существует, ДополнительныеПараметры) Экспорт
	
	Если НЕ Существует Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Файл не найден'"));
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита], ДополнительныеПараметры.Файл);
	
	ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита].Расширение =
	СтрЗаменить(ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита].Расширение, ".", "");
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
	"ДобавлениеФайлаПолучениеВремениИзменения",
	ЭтотОбъект,
	ДополнительныеПараметры);
	
	ДополнительныеПараметры.Файл.НачатьПолучениеВремениИзменения(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаПолучениеВремениИзменения(ВремяИзменения, ДополнительныеПараметры) Экспорт
	
	ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита].ВремяИзменения = ВремяИзменения;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
	"ДобавлениеФайлаПолучениеУниверсальногоВремениИзменения",
	ЭтотОбъект,
	ДополнительныеПараметры);
	
	ДополнительныеПараметры.Файл.НачатьПолучениеУниверсальногоВремениИзменения(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаПолучениеУниверсальногоВремениИзменения(ВремяИзменения, ДополнительныеПараметры) Экспорт
	
	ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита].УниверсальноеВремяИзменения = ВремяИзменения;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ДополнительныеПараметры.ИмяФайла);
	АдресФайлаВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);
	
	Если ДополнительныеПараметры.ИмяРеквизита = "ДанныеФайлаКартинки" Тогда
		АдресКартинки      = АдресФайлаВХранилище;
	ИначеЕсли ДополнительныеПараметры.ИмяРеквизита = "ДанныеФайлаHTML" Тогда
		АдресОписанияHTML  = АдресФайлаВХранилище;
		ПутьКФайлуОписанию = ДополнительныеПараметры.ИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	Перем ИдентификаторФайла;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогВыбораФайла.Фильтр =  НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf"
		+ "|Все файлы(*.*)|*.*"
		+ "|Формат bmp(*.bmp*;*.dib;*.rle)|*.bmp;*.dib;*.rle"
		+ "|Формат GIF(*.gif*)|*.gif"
		+ "|Формат JPEG(*.jpeg;*.jpg)|*.jpeg;*.jpg"
		+ "|Формат PNG(*.png*)|*.png"
		+ "|Формат TIFF(*.tif)|*.tif"
		+ "|Формат icon(*.ico)|*.ico"
		+ "|Формат метафайл(*.wmf;*.emf)|*.wmf;*.emf'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДобавлениеФайлаДиалогЗавершение",
		ЭтотОбъект,
		Новый Структура("ИмяРеквизита", "ДанныеФайлаКартинки"));
		
		ДиалогВыбораФайла.Показать(ОписаниеОповещения);
		
	Иначе
		Фильтр =  НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf"
		+ "|Все файлы(*.*)|*.*"
		+ "|Формат bmp(*.bmp*;*.dib;*.rle)|*.bmp;*.dib;*.rle"
		+ "|Формат GIF(*.gif*)|*.gif"
		+ "|Формат JPEG(*.jpeg;*.jpg)|*.jpeg;*.jpg"
		+ "|Формат PNG(*.png*)|*.png"
		+ "|Формат TIFF(*.tif)|*.tif"
		+ "|Формат icon(*.ico)|*.ico"
		+ "|Формат метафайл(*.wmf;*.emf)|*.wmf;*.emf'");
		
		ВыборИзображения   = Истина;
		ИдентификаторФайла = Новый УникальныйИдентификатор;
		
		ПрисоединенныеФайлыКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла, Фильтр);
		ВыборИзображения   = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьПрисоединенныйФайл(ИмяРеквизитаОбъекта, ИмяРеквизитаФормы, ТекстСообщенияОбОшибке)
	
	ОчиститьСообщения();
	
	Если ЗначениеЗаполнено(Объект[ИмяРеквизитаОбъекта]) Тогда
		РаботаСФайламиКлиент.ОткрытьФайл(
		РаботаСФайламиСлужебныйВызовСервера.ПолучитьДанныеФайла(
		Объект[ИмяРеквизитаОбъекта],
		УникальныйИдентификатор));
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке,, ИмяРеквизитаФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		ВывестиПредупреждениеОНеобходиомстиЗаписиНового();
	Иначе   
		ЗаблокироватьДанныеФормыДляРедактирования();
		ДобавитьИзображениеНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	
	Объект.Логотип = ПредопределенноеЗначение("Справочник.вогТорговыеМаркиПрисоединенныеФайлы.ПустаяСсылка");
	АдресКартинки = "";
	ДанныеФайлаКартинки = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотретьИзображение(Команда)
	
	ПросмотретьПрисоединенныйФайл("Логотип", "АдресКартинки",
	НСтр("ru='Отсутствует изображение для просмотра'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьИзображение(Команда)
	
	ОчиститьСообщения();
	
	Если ЗначениеЗаполнено(Объект.Логотип) Тогда
		
		ПрисоединенныеФайлыКлиент.ОткрытьФормуПрисоединенногоФайла(Объект.Логотип);
		
	Иначе
		
		ТекстСообщения = НСтр("ru='Отсутствует изображение для редактирования'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "АдресКартинки");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайлов(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		ВывестиПредупреждениеОНеобходиомстиЗаписиНового();
	Иначе   
		СтруктураПараметрыВыбора =
		Новый Структура("ВладелецФайла, ЗакрыватьПриВыборе, РежимВыбора", Объект.Ссылка, Истина, Истина);
		
		ОткрытьФорму(
		"Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",
		СтруктураПараметрыВыбора,,,,,
		Новый ОписаниеОповещения("ВыбратьКартинкуИзПрисоединенныхФайловЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКартинкуИзПрисоединенныхФайловЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Объект.Логотип = Результат;
		АдресКартинки = НавигационнаяСсылкаКартинки(Объект.Логотип, УникальныйИдентификатор)
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		АдресКартинки = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		АдресКартинки = "";
	КонецПопытки;
	
	Возврат АдресКартинки;
	
КонецФункции

&НаКлиенте
Процедура ВывестиПредупреждениеОНеобходиомстиЗаписиНового()
	
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения();
			ПоказатьВопрос(ОбработчикОповещенияОЗакрытии,
				НСтр("ru = 'Данные еще не записаны. 
					|Добавление логотипа возможно только после записи данных.'"),
					РежимДиалогаВопрос.ОК);
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемыКонтактнаяИнформация

&НаСервере
Процедура УстановитьВидимостьРеквизитовКИ()
	
	СтруктураОтбора			= Новый Структура("Родитель, Выводить", Справочники.ВидыКонтактнойИнформации.СправочниквогТорговыеТочки, Ложь);
	флагВыводаГиперСсылки	= (ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(СтруктураОтбора).Количество() > 0);
	
	Для Каждого СтрокаДопРеквизита Из ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов Цикл
		
		Если НЕ СтрокаДопРеквизита.Выводить Тогда Продолжить; КонецЕсли;
		
		Выводить = Истина;
		
		Если СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
			флаг_1 = НЕ (ЭтотОбъект[СтрокаДопРеквизита.ИмяРеквизита] = "<адрес сайта не указан>") И НЕ РежимВидимостиПоказатьТолькоВажные;
		Иначе	
			флаг_1 = ЗначениеЗаполнено(ЭтотОбъект[СтрокаДопРеквизита.ИмяРеквизита]);
		КонецЕсли;	
		
		// ++ Тищенко В.В. 05.02.2019
		//Закоментировано условие рынок
		
		//+вог
		//Если СтрокаДопРеквизита.Вид = Справочники.ВидыКонтактнойИнформации.АдресТорговойТочки
		//  И ЗначениеЗаполнено(Объект.Рынок) Тогда
		//{[-](фрагмент удален)Администратор 28.06.2018 16:55:44 ID
		//Представление = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Объект.Рынок, Справочники.ВидыКонтактнойИнформации.АдресПартнера);
		//}Администратор 28.06.2018 16:55:44
		//{[+](фрагмент добавлен), Виноградов Дмитрий 28.06.2018 16:55:59 ID
		//	Представление = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Объект.Рынок, Справочники.ВидыКонтактнойИнформации.АдресРынка);
		//}Администратор 28.06.2018 16:55:59
		
		//Иначе	
		Представление = СтрокаДопРеквизита.Представление;
		//КонецЕсли;
		//-вог
		
		// -- Тищенко В.В.
		
		// +CRM
		Для Каждого СтрокаДобавленногоРеквизита ИЗ ЭтотОбъект.ПараметрыКонтактнойИнформации.ДобавленныеЭлементы Цикл
			Если СтрокаДобавленногоРеквизита.Пометка Тогда
				Продолжить;
			КонецЕсли;
			
			Если Найти(СтрокаДобавленногоРеквизита.Значение, СтрокаДопРеквизита.ИмяРеквизита) Тогда
				//+вог
				Если СтрокаДобавленногоРеквизита.Значение = СтрокаДопРеквизита.ИмяРеквизита
					И СтрокаДопРеквизита.Вид = Справочники.ВидыКонтактнойИнформации.АдресТорговойТочки Тогда
					ЭтотОбъект[СтрокаДопРеквизита.ИмяРеквизита] = Представление;
					Элементы[СтрокаДобавленногоРеквизита.Значение].ТолькоПросмотр = ЗначениеЗаполнено(Объект.Рынок);	
					
				КонецЕсли;
				
				//СкрыватьПолеКИ = (СтрокаДопРеквизита.Комментарий = "Не выводить");
				СкрыватьПолеКИ = (СтрокаДопРеквизита.Комментарий = "Не выводить") ИЛИ (Не ЗначениеЗаполнено(Представление) И Не РедактироватьДР);
				//-вог
				
				Элементы[СтрокаДобавленногоРеквизита.Значение].Видимость = (Выводить И ((СтрокаДопРеквизита.Выводить И НЕ СкрыватьПолеКИ) ИЛИ ((РедактироватьДР И НЕ СкрыватьПолеКИ) ИЛИ флаг_1)));
				
			КонецЕсли;
		КонецЦИкла;
		// -CRM
		
		Если Элементы[СтрокаДопРеквизита.ИмяРеквизита].ШрифтЗаголовка = ШрифтыСтиля.УдаленныйДополнительныйРеквизитШрифт Тогда
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].ЦветТекстаЗаголовка	= Новый Цвет();
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].ШрифтЗаголовка		= Новый Шрифт();
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаОчистки			= Неопределено;
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаВыбора			= Неопределено;
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаОткрытия		= Неопределено;
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаСпискаВыбора	= Неопределено;
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].РедактированиеТекста	= Истина;
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].Подсказка				= "";
			Если Элементы[СтрокаДопРеквизита.ИмяРеквизита].Вид = ВидПоляФормы.ПолеВвода Тогда
				Если СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Другое Тогда
					Элементы[СтрокаДопРеквизита.ИмяРеквизита].Высота = 5;
					Элементы[СтрокаДопРеквизита.ИмяРеквизита].МногострочныйРежим = Истина;
				КонецЕсли;
				Если (СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес)
					ИЛИ (СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон)
					ИЛИ (СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Факс) Тогда
					Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаВыбора				= истина;
					// ++ VOG Солодов В.В. 02.03.2020 CRM-196
					ВидРедактирования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаДопРеквизита.Вид, "ВидРедактирования");
					Если ВидРедактирования = "Диалог" Тогда
					// До изменения
					//Если СтрокаДопРеквизита.Вид.РедактированиеТолькоВДиалоге Тогда
					// -- VOG Солодов В.В. 02.03.2020
						Элементы[СтрокаДопРеквизита.ИмяРеквизита].РедактированиеТекста	= Ложь;
						Элементы[СтрокаДопРеквизита.ИмяРеквизита].ЦветФона				= WebЦвета.Кремовый;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
			ИмяРеквизита = Элементы[СтрокаДопРеквизита.ИмяРеквизита].Имя;
			АдресСайтаКомпании = ЭтотОбъект[ИмяРеквизита];
			Если ПустаяСтрока(АдресСайтаКомпании) Тогда
				ЭтотОбъект[ИмяРеквизита] = "<адрес сайта не указан>";
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.РедактироватьКонтактныеДанные_1.Видимость = флагВыводаГиперСсылки И НЕ РежимВидимостиПоказатьТолькоВажные;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОсновнойДляСвязи(Элемент)
	CRM_УправлениеКонтактнойИнформациейКлиент.ОсновнойДляСвязиНажатие(ЭтотОбъект, Элемент);
КонецПроцедуры // Подключаемый_КонтактнаяИнформацияОсновнойДляСвязи()

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		CRM_УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
		// Если это адрес электронной почты, то надо проверить на коррректность заполнения.
		РезультатПроверки = CRM_УправлениеКонтактнойИнформациейКлиент.CRM_ПолучитьТипПроверитьЗаполнение(ЭтотОбъект, Элемент);
		Если НЕ РезультатПроверки = Неопределено И РезультатПроверки.КодОшибки<>0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.Сообщение, , Элемент.Имя);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("CRM_УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("CRM_УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	CRM_УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)
	CRM_УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьКонтактныеДанныеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ РедактироватьДР Тогда
		РедактироватьКонтактныеДанные = НСтр("ru = 'Скрыть дополнительные контактные данные'");
		РедактироватьДР = Истина;
	Иначе
		РедактироватьКонтактныеДанные = НСтр("ru = 'Ввести дополнительную контактную информацию'");
		РедактироватьДР = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьРеквизитовКИ();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзмененииАдресаЭлектроннойПочты(Элемент)
	
	РезультатПроверки = CRM_ОбщегоНазначенияКлиентСервер.АнализАдресаЭП(СокрЛП(Элемент.ТекстРедактирования));
	Если РезультатПроверки.КодОшибки<>0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.Сообщение, , Элемент.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтправитьСМСНаНомер(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо записать элемент'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	ИначеЕсли CRM_ОбщегоНазначенияКлиент.смсПроверитьДоступностьSMS4B() Тогда
		ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
		ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "ОтправитьСМСНаНомер","");
		Телефон = ЭтотОбъект[ИмяРеквизита];
		Если ПустаяСтрока(Телефон) Тогда Возврат; КонецЕсли;
		Структура = Новый Структура();
		Структура.Вставить("Ссылка", Объект.Ссылка);
		Структура.Вставить("Телефон", ОтправкаSMSЧерезSMS4B.УбратьЛишниеСимволыТелефона(Телефон));
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Основание", Структура);
		ОткрытьФорму("Документ.СообщениеSMS.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтправитьEmail(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо записать элемент'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "ОтправитьEmail","");
	
	АдресЭлектроннойПочты = ЭтотОбъект[ИмяРеквизита];
	
	Если НЕ ЗначениеЗаполнено(СокрЛП(АдресЭлектроннойПочты)) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СтрРезультат = CRM_ОбщегоНазначенияКлиентСервер.АнализАдресаЭП(АдресЭлектроннойПочты);
	Если СтрРезультат.КодОшибки<>0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрРезультат.Сообщение,,ИмяРеквизита);
		Возврат;
	КонецЕсли;
	
	СписокАдресов = Новый СписокЗначений;
	
	СписокАдресов.Добавить(Объект.Ссылка, СтрРезультат.АдресЭП);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("СписокАдресов", СписокАдресов);
	
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПозвонитьНаНомер(Элемент)
	
	// +СофтФон
	сфпСофтФонПроКлиентПереопределяемый.сфпПодключаемый_ПозвонитьНаНомер(ЭтотОбъект, Объект);	
	// -СофтФон
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНажатиеАдресаСайтаКомпании(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "РедактироватьАдресСайтаКомпании","");
	АдресСайтаКомпании = ЭтотОбъект[ИмяРеквизита];
	Если АдресСайтаКомпании = "<адрес сайта не указан>" Тогда
		Подключаемый_РедактироватьАдресСайтаКомпании(Элемент);
	Иначе
		Если Найти(АдресСайтаКомпании, "://") = 0 Тогда
			АдресСайтаКомпании = "http://" + АдресСайтаКомпании;
		КонецЕсли;	
		НачатьЗапускПриложения(Новый ОписаниеОповещения("ОбработчикОповещенияБезДействия", ЭтотОбъект), АдресСайтаКомпании);	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОповещенияБезДействия(АдресСайтаКомпании, ИмяРеквизита) Экспорт
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_РедактироватьАдресСайтаКомпании(Элемент)
	
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "РедактироватьАдресСайтаКомпании","");
	АдресСайтаКомпании = ЭтотОбъект[ИмяРеквизита];
	Если АдресСайтаКомпании = "<адрес сайта не указан>" Тогда
		АдресСайтаКомпании = "";
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводАдресаСайтаКомпанииЗавершение", ЭтотОбъект, ИмяРеквизита);
	ПоказатьВводСтроки(ОписаниеОповещения, АдресСайтаКомпании, "Введите адрес сайта");
	
КонецПроцедуры // Подключаемый_РедактироватьАдресСайтаКомпании

&НаКлиенте
Процедура ВводАдресаСайтаКомпанииЗавершение(АдресСайтаКомпании, ИмяРеквизита) Экспорт
	
	Если АдресСайтаКомпании <> Неопределено Тогда
		Если ПустаяСтрока(АдресСайтаКомпании) Тогда
			ЭтотОбъект[ИмяРеквизита] = "<адрес сайта не указан>";
		Иначе	
			ЭтотОбъект[ИмяРеквизита] = АдресСайтаКомпании;
		КонецЕсли;	
		
		// +CRM
		ТекущийЭлементКонтактнойИнформации = Элементы[ИмяРеквизита];
		ТекущийЭлементКонтактнойИнформации.Заголовок = АдресСайтаКомпании;
		CRM_УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, ТекущийЭлементКонтактнойИнформации);
		Модифицированность = Истина;
		// -CRM
		
	КонецЕсли;	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_РедактироватьАдресКомпании(Элемент)
	
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "РедактироватьАдресКомпании","");
	Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элементы[ИмяРеквизита], Неопределено, Ложь);
	
КонецПроцедуры // Подключаемый_РедактироватьАдресКомпании

&НаКлиенте
Процедура Подключаемый_ОткрытьАдресНаИнтернетКарте(Элемент)
	
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "ОткрытьАдресНаИнтернетКарте","");
	НайденныеСтроки = ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита", ИмяРеквизита));
	Если НайденныеСтроки.Количество() = 0 Тогда Возврат; КонецЕсли;
	
	СписокПолей = CRM_ОбщегоНазначенияСервер.ПреобразоватьСтрокуВСписокПолей(НайденныеСтроки[0].ЗначенияПолей);
	
	СтруктураАдреса = Новый Структура;
	Для Каждого ЭлементСписка Из СписокПолей Цикл
		СтруктураАдреса.Вставить(ЭлементСписка.Представление, ЭлементСписка.Значение);
	КонецЦикла;
	СтруктураАдреса.Вставить("Представление", ЭтотОбъект[ИмяРеквизита]);
	
	// { VOG RMV 2019-03-27 task 158
	Широта	= НайденныеСтроки[0].Широта;
	Долгота	= НайденныеСтроки[0].Долгота;
	Если ЗначениеЗаполнено(Широта) И ЗначениеЗаполнено(Долгота) Тогда
		СтруктураАдреса.Вставить("Представление", Формат(Широта, "ЧРД=.") + ", " + Формат(Долгота, "ЧРД=."));
	КонецЕсли;
	// } VOG RMV 2019-03-27 task 158
	
	СписокКарт = Новый СписокЗначений;
	// ++ Харченко Д.И. №  - 26.09.2018 / 
	//СписокКарт.Добавить("GIS","Карта GIS",,БиблиотекаКартинок.CRM_ГлобусСЛупой);
	//СписокКарт.Добавить("Google","Карта Google",,БиблиотекаКартинок.CRM_ГлобусСЛупой);
	//СписокКарт.Добавить("Yandex","Карта Yandex",,БиблиотекаКартинок.CRM_ГлобусСЛупой);
	СписокКарт.Добавить("вогГеокодирование","Карта Yandex",,БиблиотекаКартинок.CRM_ГлобусСЛупой);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОткрытьАдресНаИнтернетКартеЗавершение", ЭтотОбъект, СтруктураАдреса);
	//ПоказатьВыборИзСписка(ОписаниеОповещения, СписокКарт, ТекущийЭлемент,);
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, СписокКарт.Получить(0)); 
	// -- Харченко Д.И. №  - 26.09.2018
	
КонецПроцедуры // Подключаемый_РедактироватьАдресКомпании

&НаКлиенте
Процедура Подключаемый_ОткрытьАдресНаИнтернетКартеЗавершение(Результат, СтруктураАдреса) Экспорт
	
	СтруктураАдреса.Вставить("КоличествоОтветов",1);
	
	Если НЕ Результат = Неопределено Тогда
		СайтИнтернетКарты = Результат.Значение;
		CRM_ОбщегоНазначенияКлиент.ПолучитьАдресПоказатьНаКарте(СтруктураАдреса, СайтИнтернетКарты);
	КонецЕсли;
	
КонецПроцедуры // Подключаемый_РедактироватьАдресКомпании

&НаКлиенте
Процедура Подключаемый_РедактироватьПрочее(Элемент)
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "РедактироватьПрочее","");
	НайденныеСтроки = ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита", ИмяРеквизита));
	Если НайденныеСтроки.Количество() = 0 Тогда Возврат; КонецЕсли;
	
	СтрокаПрочее = ЭтотОбъект[ИмяРеквизита];
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_РедактироватьПрочееЗавершение", ЭтотОбъект, ИмяРеквизита);
	ПоказатьВводСтроки(ОписаниеОповещения, СтрокаПрочее, Строка(НайденныеСтроки[0].Вид),, Истина);
КонецПроцедуры // Подключаемый_РедактироватьПрочее

&НаКлиенте
Процедура Подключаемый_РедактироватьПрочееЗавершение(СтрокаПрочее, ИмяРеквизита) Экспорт
	Если СтрокаПрочее <> Неопределено Тогда
		ЭтотОбъект[ИмяРеквизита] = СтрокаПрочее;
		
		// +CRM
		ТекущийЭлементКонтактнойИнформации = Элементы[ИмяРеквизита];
		ТекущийЭлементКонтактнойИнформации.Заголовок = СтрокаПрочее;
		CRM_УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, ТекущийЭлементКонтактнойИнформации);
		Модифицированность = Истина;
		// -CRM	
		
	КонецЕсли;
	
КонецПроцедуры // Подключаемый_РедактироватьПрочее

#КонецОбласти 
