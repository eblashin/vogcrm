
&НаКлиенте
Перем КэшированныеЗначения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокСвязиНаборовТиповыхЗадач.Параметры.УстановитьЗначениеПараметра("НаборЗадач", Объект.Ссылка);
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ПринадлежностьОбъекту = ПолучитьТекущуюПринадлежность();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	КэшированныеЗначения = Объект.НаправлениеДеятельности;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НаправлениеДеятельностиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
		И Не КэшированныеЗначения = Неопределено
		И ЗначениеЗаполнено(Объект.НаправлениеДеятельности)
		И Не Объект.НаправлениеДеятельности = КэшированныеЗначения
		И ПолучитьКоличествоЗадачНабора(Объект.Ссылка) > 0 Тогда
	
		ОписаниеОповещенияОЗавершении = 
			Новый ОписаниеОповещения("НаправлениеДеятельностиПриИзмененииЗавершение", ЭтотОбъект);
		ТекстВопроса = 
			НСтр("ru = 'Типовые задачи набора с отличающимися направлениями деятельности будут очищены. Продолжить?'");
	
		ПоказатьВопрос(
			ОписаниеОповещенияОЗавершении,
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНет);
		
		Возврат;
		
	ИначеЕсли ЗначениеЗаполнено(Объект.НаправлениеДеятельности) Тогда
		КэшированныеЗначения = Объект.НаправлениеДеятельности;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеДеятельностиПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = КодВозвратаДиалога.Да Тогда
		Объект.НаправлениеДеятельности = КэшированныеЗначения;
		Возврат;
	КонецЕсли;
	
	КэшированныеЗначения = Объект.НаправлениеДеятельности;
	ПерезаписатьСвязиНабораПоНаправлениюДеятельности(Объект.Ссылка, Объект.НаправлениеДеятельности);
	
	Элементы.СписокСвязиНаборовТиповыхЗадач.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьТиповуюЗадачу(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстСообщения = НСтр("ru = 'Набор не записан. Сначала запишите набор.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыФормы 	= Новый Структура;
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	
	НаправленияДеятельности = Новый Массив;
	НаправленияДеятельности.Добавить(Объект.НаправлениеДеятельности);
	НаправленияДеятельности.Добавить(ПредопределенноеЗначение("Справочник.НаправленияДеятельности.ПустаяСсылка"));
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("НаправлениеДеятельности", НаправленияДеятельности);
	Если ПолучитьКоличествоЗадачНабора(Объект.Ссылка) > 0 Тогда
		СтруктураОтбора.Вставить("ПринадлежностьОбъекту", ПринадлежностьОбъекту);
	КонецЕсли;
	
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	
	ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ДобавитьТиповуюЗадачуЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		"Справочник.ПунктыЧекЛистовЗадач.ФормаВыбора",
		ПараметрыФормы,
		ЭтотОбъект,
		,
		,
		,
		ОписаниеОповещенияОЗавершении,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТиповуюЗадачуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		МассивЗадач = Результат;
	Иначе
		МассивЗадач = Новый Массив;
		МассивЗадач.Добавить(Результат);
	КонецЕсли;
	
	УстановитьСвязиНаборовТиповыхЗадач(МассивЗадач);
	Элементы.СписокСвязиНаборовТиповыхЗадач.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСвязиНаборовТиповыхЗадач

&НаКлиенте
Процедура СписокСвязиНаборовТиповыхЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокСвязиНаборовТиповыхЗадач.ТекущиеДанные;
	
	ПоказатьЗначение(Неопределено, ТекущиеДанные.ТиповаяЗадача);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьКоличествоЗадачНабора(НаборЗадач)
	
	НаборЗаписей = РегистрыСведений.вогСвязиНаборовТиповыхЗадач.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.НаборЗадач.Установить(НаборЗадач);
	НаборЗаписей.Прочитать();
	
	Возврат НаборЗаписей.Количество();
	
КонецФункции

&НаСервере
Функция ПолучитьТекущуюПринадлежность()
	
	НаборЗаписей = РегистрыСведений.вогСвязиНаборовТиповыхЗадач.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.НаборЗадач.Установить(Объект.Ссылка);
	НаборЗаписей.Прочитать();
	
	Для Каждого Запись Из НаборЗаписей Цикл
		ТекущаяПринадлежность = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Запись.ТиповаяЗадача, "ПринадлежностьОбъекту");
		Прервать;
	КонецЦикла;
	
	Возврат ТекущаяПринадлежность;
	
КонецФункции

&НаСервере
Процедура УстановитьСвязиНаборовТиповыхЗадач(МассивЗадач)
	
	Для Каждого ТиповаяЗадача Из МассивЗадач Цикл
	
		НаборЗаписей = РегистрыСведений.вогСвязиНаборовТиповыхЗадач.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НаборЗадач.Установить(Объект.Ссылка);
		НаборЗаписей.Отбор.ТиповаяЗадача.Установить(ТиповаяЗадача);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.НаборЗадач = Объект.Ссылка;
		НоваяЗапись.ТиповаяЗадача = ТиповаяЗадача;
		
		НаборЗаписей.Записать(Истина);
		
		ПринадлежностьОбъекту = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТиповаяЗадача, "ПринадлежностьОбъекту");
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПерезаписатьСвязиНабораПоНаправлениюДеятельности(НаборЗадач, НаправлениеДеятельности)
	
	НаправленияДеятельности = Новый Массив;
	НаправленияДеятельности.Добавить(НаправлениеДеятельности);
	НаправленияДеятельности.Добавить(Справочники.НаправленияДеятельности.ПустаяСсылка());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	вогСвязиНаборовТиповыхЗадач.ТиповаяЗадача КАК ТиповаяЗадача
		|ИЗ
		|	РегистрСведений.вогСвязиНаборовТиповыхЗадач КАК вогСвязиНаборовТиповыхЗадач
		|ГДЕ
		|	вогСвязиНаборовТиповыхЗадач.НаборЗадач = &НаборЗадач
		|	И НЕ вогСвязиНаборовТиповыхЗадач.ТиповаяЗадача.НаправлениеДеятельности В(&НаправленияДеятельности)";
	
	Запрос.УстановитьПараметр("НаборЗадач", 				НаборЗадач);
	Запрос.УстановитьПараметр("НаправленияДеятельности", 	НаправленияДеятельности);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.вогСвязиНаборовТиповыхЗадач.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.НаборЗадач.Установить(НаборЗадач);
		НаборЗаписей.Отбор.ТиповаяЗадача.Установить(ВыборкаДетальныеЗаписи.ТиповаяЗадача);
		
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
