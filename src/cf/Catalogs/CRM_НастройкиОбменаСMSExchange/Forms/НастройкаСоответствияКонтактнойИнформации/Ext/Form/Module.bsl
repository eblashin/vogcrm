
///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиФормы(Форма)
	Форма.Элементы.ПанельАдреса.Доступность = Форма.КИСинхронизироватьАдреса;
	Форма.Элементы.ПанельТелефоны.Доступность = Форма.КИСинхронизироватьТелефоны;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ОК(Команда)
	Модифицированность = Ложь;
	ДанныеБылиИзменены = Истина;
	
	Результат = Новый Структура;
	Результат.Вставить("ДанныеБылиИзменены", Истина);
	Результат.Вставить("КИСинхронизироватьАдреса", КИСинхронизироватьАдреса);
	Результат.Вставить("КИСинхронизироватьТелефоны", КИСинхронизироватьТелефоны);
	Результат.Вставить("СоответствиеВидовКИАдресаКонтактногоЛица", СоответствиеВидовКИАдресаКонтактногоЛица);
	Результат.Вставить("СоответствиеВидовКИАдресаПартнера", СоответствиеВидовКИАдресаПартнера);
	Результат.Вставить("СоответствиеВидовКИАдресаПартнераКомпания", СоответствиеВидовКИАдресаПартнераКомпания);
	Результат.Вставить("СоответствиеВидовКИТелефоныКонтактногоЛица", СоответствиеВидовКИТелефоныКонтактногоЛица);
	Результат.Вставить("СоответствиеВидовКИТелефоныПартнераКомпания", СоответствиеВидовКИТелефоныПартнераКомпания);
	Результат.Вставить("СоответствиеВидовКИТелефоныПартнера", СоответствиеВидовКИАдресаКонтактногоЛица);
	
	Закрыть(Результат);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Результат = Новый Структура;
	Результат.Вставить("ДанныеБылиИзменены", Ложь);
	
	Закрыть(Результат);
КонецПроцедуры

&НаКлиенте
Процедура ТелефоныВидКИНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.ПанельТелефоны.ТекущаяСтраница = Элементы.СтраницаТелефоныПартнеры Тогда
		ТекДанные = Элементы.СоответствиеВидовКИТелефоныПартнера.ТекущиеДанные;
	ИначеЕсли Элементы.ПанельТелефоны.ТекущаяСтраница = Элементы.СтраницаТелефоныПартнерыКомпании Тогда
		ТекДанные = Элементы.СоответствиеВидовКИТелефоныПартнераКомпания.ТекущиеДанные;
	ИначеЕсли Элементы.ПанельТелефоны.ТекущаяСтраница = Элементы.СтраницаТелефоныКонтактныеЛица Тогда
		ТекДанные = Элементы.СоответствиеВидовКИТелефоныКонтактногоЛица.ТекущиеДанные;
	Иначе
		ТекДанные = Неопределено;
	КонецЕсли;
	Если ТекДанные = Неопределено Тогда
		ТекСтрока = Неопределено;
	Иначе
		ТекСтрока = ТекДанные.ВидКИ;
	КонецЕсли;
	
	Типы = Новый СписокЗначений();
	Типы.Добавить(ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"));
	Типы.Добавить(ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Факс"));
	Форма = ПолучитьФорму("Справочник.ВидыКонтактнойИнформации.ФормаВыбора", Новый Структура("Отбор,НачальноеЗначениеВыбора", Новый Структура("Тип", Типы), ТекСтрока), Элемент);
	Если Форма <> Неопределено Тогда
		Попытка
			Форма.Элементы.Список.Отображение = ОтображениеТаблицы.Дерево;
		Исключение
		КонецПопытки;
	КонецЕсли;
	Форма.Открыть();
	Если ЗначениеЗаполнено(ТекСтрока) Тогда
		Попытка Форма.Элементы.Список.ТекущаяСтрока = ТекСтрока
		Исключение КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АдресаВидКИНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.ПанельАдреса.ТекущаяСтраница = Элементы.СтраницаАдресаПартнеры Тогда
		ТекДанные = Элементы.СоответствиеВидовКИАдресаПартнера.ТекущиеДанные;
	ИначеЕсли Элементы.ПанельАдреса.ТекущаяСтраница = Элементы.СтраницаАдресаПартнерыКомпании Тогда
		ТекДанные = Элементы.СоответствиеВидовКИАдресаПартнераКомпания.ТекущиеДанные;
	ИначеЕсли Элементы.ПанельАдреса.ТекущаяСтраница = Элементы.СтраницаАдресаКонтактныеЛица Тогда
		ТекДанные = Элементы.СоответствиеВидовКИАдресаКонтактногоЛица.ТекущиеДанные;
	Иначе
		ТекДанные = Неопределено;
	КонецЕсли;
	Если ТекДанные = Неопределено Тогда
		ТекСтрока = Неопределено;
	Иначе
		ТекСтрока = ТекДанные.ВидКИ;
	КонецЕсли;
	
	Типы = Новый СписокЗначений();
	Типы.Добавить(ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес"));
	Форма = ПолучитьФорму("Справочник.ВидыКонтактнойИнформации.ФормаВыбора", Новый Структура("Отбор,НачальноеЗначениеВыбора", Новый Структура("Тип", Типы), ТекСтрока), Элемент);
	Если Форма <> Неопределено Тогда
		Попытка
			Форма.Элементы.Список.Отображение = ОтображениеТаблицы.Дерево;
		Исключение
		КонецПопытки;
	КонецЕсли;
	Форма.Открыть();
	Если ЗначениеЗаполнено(ТекСтрока) Тогда
		Попытка Форма.Элементы.Список.ТекущаяСтрока = ТекСтрока
		Исключение КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КИСинхронизироватьТелефоныПриИзменении(Элемент)
	УправлениеЭлементамиФормы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КИСинхронизироватьАдресаПриИзменении(Элемент)
	УправлениеЭлементамиФормы(ЭтотОбъект);
КонецПроцедуры

#Область ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Таблицы") Тогда
		МассивВидыТелефонов = CRM_MSExchangeСерверЭкспортныеМетоды.ПолучитьВидыТелефоновMSExchange();
		МассивВидыАдресов = CRM_MSExchangeСерверЭкспортныеМетоды.ПолучитьВидыАдресовMSExchange();
		
		Для Каждого КлючЗначение Из Параметры.Таблицы Цикл
			Для Каждого СтрокаСтруктура Из Параметры.Таблицы[КлючЗначение.Ключ] Цикл
				НоваяСтрока = ЭтотОбъект[КлючЗначение.Ключ].Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСтруктура);
			КонецЦикла;
			
			Если Найти(КлючЗначение.Ключ, "Телефоны") > 0 Тогда
				Для Каждого СтрКи Из МассивВидыТелефонов Цикл
					Элементы[КлючЗначение.Ключ + "Имя"].СписокВыбора.Добавить(СтрКи, СтрКи);
				КонецЦикла;
			ИначеЕсли Найти(КлючЗначение.Ключ, "Адреса") > 0 Тогда
				Для Каждого СтрКи Из МассивВидыАдресов Цикл
					Элементы[КлючЗначение.Ключ + "Имя"].СписокВыбора.Добавить(СтрКи, СтрКи);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Попытка КИСинхронизироватьТелефоны = Параметры.КИСинхронизироватьТелефоны;
		Исключение КонецПопытки;
		Попытка КИСинхронизироватьАдреса = Параметры.КИСинхронизироватьАдреса;
		Исключение КонецПопытки;
		
		УправлениеЭлементамиФормы(ЭтотОбъект);
		
		Модифицированность = Ложь;
	Иначе
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПередЗакрытием".
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	Если Модифицированность Тогда
		Отказ = Истина;
		ОбратныйВызов = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОбратныйВызов, НСтр("ru = 'Данные были изменены. Сохранить данные?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;	
КонецПроцедуры // ПередЗакрытием()

&НаКлиенте
// Процедура - обработчик ответа на вопрос перед закрытием формы.
//
// Параметры:
//	Результат				- КодВозвратаДиалога	- Ответ на вопрос.
//	ДополнительныеПараметры	- Структура				- Структура дополнительных параметров.
//
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = КодВозвратаДиалога.Да Тогда
		ДанныеБылиИзменены = Истина;
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
    КонецЕсли;
	Модифицированность	= Ложь;
	Закрыть();
КонецПроцедуры // ПередЗакрытиемЗавершение()

#КонецОбласти
