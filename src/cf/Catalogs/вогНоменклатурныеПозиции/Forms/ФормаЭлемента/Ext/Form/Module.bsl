&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УправлениеВидимостьюЭлементов();
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеДеятельностиПриИзменении(Элемент)
	
	УправлениеВидимостьюЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВывестиИнформациюПоОбъекту();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// +++ VOG Кулаков П.Л. 04.05.2021 DEV-234
	ЗаполнитьТаблицуСвязанныхSKU();
	// --- VOG Кулаков П.Л.
	
	// СтандартныеПодсистемы.Свойства 
	ДополнительныеПараметры = Новый Структура; 
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры); 
	// Конец СтандартныеПодсистемы.Свойства
	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства


КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	
	// Вывод информации Обои
	Если Объект.НаправлениеДеятельности = Справочники.НаправленияДеятельности.Обои тогда
		РегистрыСведений.вогНастройкиОтображенияКлассификаторов.СформироватьМакетСОтбором(Объект.Ссылка,ИнформацияОбъект
															,Метаданные.Справочники.вогНоменклатурныеПозиции,ЭтаФорма,"Обои",Справочники.НаправленияДеятельности.Обои);
	Иначе
		РегистрыСведений.вогНастройкиОтображенияКлассификаторов.СформироватьМакетСОтбором(Объект.Ссылка,ИнформацияОбъект
															,Метаданные.Справочники.вогНоменклатурныеПозиции,ЭтаФорма,"Плитка",Справочники.НаправленияДеятельности.Плитка);
	КонецЕсли;
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект); 
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
	
КонецПроцедуры



#Область СтандартныеПодсистемыСвойства
  
&НаСервере 
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

// +++ VOG Кулаков П.Л. 04.05.2021 DEV-234
&НаСервере
Процедура ЗаполнитьТаблицуСвязанныхSKU()
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Номенклатура.Основной КАК Основной
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.НоменклатурнаяПозиция = &НоменклатурнаяПозиция";
	
	Запрос.УстановитьПараметр("НоменклатурнаяПозиция", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	ТаблицаSKU.Загрузить(РезультатЗапроса);
	
КонецПроцедуры // --- VOG Кулаков П.Л.

&НаСервере
Процедура ВывестиИнформациюПоОбъекту()
	
	Если Объект.НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Обои") тогда
		// Вывод информации Обои
		РегистрыСведений.вогНастройкиОтображенияКлассификаторов.СформироватьМакетСОтбором(Объект.Ссылка,ИнформацияОбъект
		,Метаданные.Справочники.вогНоменклатурныеПозиции,ЭтаФорма,"Обои",Справочники.НаправленияДеятельности.Обои,Истина);
	ИначеЕсли Объект.НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Плитка") тогда
		// Вывод информации Плитка
		РегистрыСведений.вогНастройкиОтображенияКлассификаторов.СформироватьМакетСОтбором(Объект.Ссылка,ИнформацияОбъект
		,Метаданные.Справочники.вогНоменклатурныеПозиции,ЭтаФорма,"Плитка",Справочники.НаправленияДеятельности.Плитка,Истина);
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура НаправлениеДеятельностиПриИзмененииНаСервере()
	
	ВывестиИнформациюПоОбъекту();	
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеДеятельностиПриИзменении1(Элемент)
	
	УправлениеВидимостьюЭлементов();	
	НаправлениеДеятельностиПриИзмененииНаСервере();
	
КонецПроцедуры


&наКлиенте

Процедура УправлениеВидимостьюЭлементов()
	
	Если Объект.НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Обои") тогда
		Элементы.ГруппаРеквизитовПлитка.Видимость = Ложь;	
		Элементы.ГруппаДатыЗапускаИСнятия.Видимость = Истина;	
	ИначеЕсли Объект.НаправлениеДеятельности = ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Плитка") тогда
		Элементы.ГруппаРеквизитовПлитка.Видимость = Истина;	
		Элементы.ГруппаДатыЗапускаИСнятия.Видимость = Ложь;	
	Иначе	
		Элементы.ГруппаРеквизитовПлитка.Видимость = Ложь;	
	КонецЕсли;
	
	
КонецПроцедуры



&НаКлиенте
Процедура ПереходСтраницы(Команда)
	
	ВыполнитьПереходСтраницы(Команда.Имя);
	
КонецПроцедуры


&НаКлиенте
Процедура ВыполнитьПереходСтраницы(ИмяСтраницы)
	
	// Выделить кнопку перехода
	Для Каждого ЭлемКоманды Из Элементы.ГруппаСтраницыКоманды.ПодчиненныеЭлементы Цикл
		Если ИмяСтраницы = ЭлемКоманды.ИмяКоманды Тогда
			ЭлемКоманды.ЦветТекста 		= Новый Цвет(128,0,128);
			ЭлемКоманды.Шрифт 			= Новый Шрифт(,10,Ложь,,Истина);
		Иначе
			ЭлемКоманды.ЦветТекста	 	= Новый Цвет(28,85,174);
			ЭлемКоманды.Шрифт		 	= Новый Шрифт(,10,Ложь,,Ложь);
		КонецЕсли;
	КонецЦикла;
	Если ИмяСтраницы ="СтраницаКарточкаОбъекта" тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.Основное;
	ИначеЕсли ИмяСтраницы ="СтраницаОписание" тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.Карточка;
	// +++ VOG Кулаков П.Л. 04.05.2021 DEV-234
	ИначеЕсли ИмяСтраницы ="СтраницаСвязанныеSKU" тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаSKU;
	// --- VOG Кулаков П.Л.
	ИначеЕсли ИмяСтраницы ="СтраницаФайлы" тогда
		
		ПараметрыПереходаПоГиперссылке = ПараметрыПереходаПоГиперссылке(ИмяСтраницы);
		ГиперссылкаПерейтиСформироватьПараметрыИВопрос(ПараметрыПереходаПоГиперссылке);
		
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура ГиперссылкаПерейтиСформироватьПараметрыИВопрос(ПараметрыПереходаПоГиперссылке)
	
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = Нстр("ru = 'Данные еще не записаны.
		|Переход к дополнительной информции возможен только после записи элемента.
		|Записать элемент?'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ГиперссылкаПерейтиВопросЗавершение", ЭтотОбъект, ПараметрыПереходаПоГиперссылке), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейтиВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ЭлементЗаписан = Записать();
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Не ЭлементЗаписан Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПереходаПоГиперссылке = ПараметрыПереходаПоГиперссылке(ДополнительныеПараметры.ИмяЭлемента);
	ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке)
	
	ОткрытьФорму(ПараметрыПереходаПоГиперссылке.ИмяФормы,
		ПараметрыПереходаПоГиперссылке.ПараметрыФормы, , ЭтаФорма.УникальныйИдентификатор, , , ,
		ПараметрыПереходаПоГиперссылке.РежимОткрытияОкнаФормы);
	
КонецПроцедуры
	

&НаКлиенте
Функция ПараметрыПереходаПоГиперссылке(ИмяЭлемента)
	
	Если ИмяЭлемента = "СтраницаФайлы" Тогда		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВладелецФайла",  Объект.Ссылка);
		ПараметрыФормы.Вставить("ТолькоПросмотр", ЭтаФорма.ТолькоПросмотр);
		
		Если вогУправлениеПрисоединеннымиФайламиКлиентСерверПовтИсп.ИспользоватьРедактированиеПрисоединенныхФайловПоВидам(Объект.Ссылка) Тогда
			ФормаИмя = "ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами";
			ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Присоединенные файлы'"))
		Иначе	
			ФормаИмя = "Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы";
		КонецЕсли;
		
		ТипыФайлов = Новый Массив;
		Если ИмяЭлемента = "ГиперссылкаПерейтиИзображения" Тогда
			ТипыФайлов.Добавить(ПредопределенноеЗначение("Перечисление.вогТипыПрисоединенныхФайлов.Изображение"));
			ПараметрыФормы.Вставить("ТипыФайлов", ТипыФайлов);
			
		КонецЕсли;
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", ФормаИмя);
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы",ПараметрыФормы);
	КонецЕсли;
	
	Если Не ПараметрыПереходаПоГиперссылке.Свойство("РежимОткрытияОкнаФормы") Тогда
		ПараметрыПереходаПоГиперссылке.Вставить("РежимОткрытияОкнаФормы", РежимОткрытияОкнаФормы.Независимый);
	КонецЕсли;
	ПараметрыПереходаПоГиперссылке.Вставить("ИмяЭлемента", ИмяЭлемента);
	
	Возврат ПараметрыПереходаПоГиперссылке
	
КонецФункции

// +++ VOG Кулаков П.Л. 04.05.2021 DEV-234
&НаКлиенте
Процедура ТаблицаSKUВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(,Элементы.ТаблицаSKU.ТекущиеДанные.Номенклатура);
	
КонецПроцедуры // --- VOG Кулаков П.Л.

