#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


Функция ПолучитьРекурсивныеСсылки(СписокРассылки, МассивРезультат = Неопределено, МассивПроверенных = Неопределено)
	Если МассивРезультат = Неопределено Тогда
		МассивРезультат = Новый Массив();
	КонецЕсли;
	Если МассивПроверенных = Неопределено Тогда
		МассивПроверенных = Новый Массив();
		МассивПроверенных.Добавить(Ссылка);
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Состав.Контакт КАК Контакт,
	|	Состав.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.CRM_СпискиРассылок.Состав КАК Состав
	|ГДЕ
	|	Состав.Ссылка = &Ссылка
	|	И Состав.Контакт ССЫЛКА Справочник.CRM_СпискиРассылок
	|	И Состав.Контакт <> ЗНАЧЕНИЕ(Справочник.CRM_СпискиРассылок.ПустаяСсылка)
	|	И НЕ Состав.Контакт ЕСТЬ NULL
	|	И НЕ Состав.Ссылка.ПометкаУдаления
	|");
	Запрос.УстановитьПараметр("Ссылка", СписокРассылки);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Контакт = Ссылка Тогда
			МассивРезультат.Добавить(Выборка.Ссылка);
		КонецЕсли;
		Если МассивПроверенных.Найти(Выборка.Контакт) = Неопределено Тогда
			МассивПроверенных.Добавить(Выборка.Контакт);
			ПолучитьРекурсивныеСсылки(Выборка.Контакт, МассивРезультат, МассивПроверенных);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивРезультат;
КонецФункции

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;  
	КонецЕсли;
	
	// Проверка на рекурсивность ссылок.
	МассивРекурсивныхСсылок = ПолучитьРекурсивныеСсылки(Ссылка);
	Если МассивРекурсивныхСсылок.Количество() > 0 Тогда
		Отказ = Истина;
		СтрОписаниеОшибки = НСтр("ru = 'Найдены рекурсивные ссылки в следующих списках рассылок:'");
		Для Каждого СписокРассылки Из МассивРекурсивныхСсылок Цикл
			СтрОписаниеОшибки = СтрОписаниеОшибки + Символы.ПС + """" + Строка(СписокРассылки) + """";
		КонецЦикла;
		ВызватьИсключение СтрОписаниеОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецЕсли