///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция ВернутьОсновноеКЛКлиента(Контакт)
	Возврат Контакт.CRM_ОсновноеКонтактноеЛицо;
КонецФункции

&НаСервере
Функция ВернутьВладельцаКЛ(Контакт)
	Возврат Контакт.Владелец;
КонецФункции

&НаСервере
Процедура ЗаполнитьТЧПоРезультатуОтчета(СписокСсылок)
	
	Для Каждого ЭлементСписка Из СписокСсылок Цикл
		Если НЕ ЭлементСписка.Пометка Тогда Продолжить; КонецЕсли;
		
		Если ТипЗнч(ЭлементСписка.Значение) = Тип("СправочникСсылка.Партнеры") Тогда
			ТекПартнер			= ЭлементСписка.Значение;
			ТекКл				= ТекПартнер.CRM_ОсновноеКонтактноеЛицо;
			ЗаполнятьПартнера	= Истина;
		Иначе
			ТекКл				= ЭлементСписка.Значение;
			ТекПартнер			= ТекКл.Владелец;
			ЗаполнятьПартнера	= Ложь;			
		КонецЕсли;
		
		СписокАдресов = СформироватьСписокАдресов(Новый Структура("Партнер, КонтактноеЛицо",ТекПартнер,ТекКл),
													?(ЗначениеЗаполнено(ВидКонтактнойИнформации),ВидКонтактнойИнформации,Неопределено));
		Если СписокАдресов.Количество() > 0 Тогда
			НоваяСтрока = Объект.Состав.Добавить();
			Если ЗаполнятьПартнера Тогда			
				НоваяСтрока.Контакт	= ТекПартнер;
			Иначе				
				НоваяСтрока.Контакт	= ТекКл;
			КонецЕсли;			
			НоваяСтрока.Адрес		= СписокАдресов[0].Значение.Представление;
		ИначеЕсли НЕ НеЗаполнятьСПустымиАдресами Тогда
			НоваяСтрока = Объект.Состав.Добавить();
			Если ЗаполнятьПартнера Тогда			
				НоваяСтрока.Контакт	= ТекПартнер;
			Иначе				
				НоваяСтрока.Контакт	= ТекКл;
			КонецЕсли;						
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧПоСегменту()
	
	Запрос = Новый Запрос;
	Если Сегмент.СпособФормирования = Перечисления.СпособыФормированияСегментов.ФормироватьДинамически ИЛИ Сегмент.СпособФормирования = Перечисления.СпособыФормированияСегментов.ПериодическиОбновлять Тогда
		// Для периодически обновляемых сегментов всеравно получаем клиентов вручную - как и по динамическим - чтобы не
		// возникало вопросов о том, что сегмент в настоящий момент может быть не актуален.
		РеквизитыСКДСегмента = CRM_ОбщегоНазначенияСервер.ПолучитьЗначенияРеквизитов(
			Сегмент,
			"СхемаКомпоновкиДанных,ХранилищеНастроекКомпоновкиДанных,ИмяШаблонаСКД");
			
		НастройкиСегмента = РеквизитыСКДСегмента.ХранилищеНастроекКомпоновкиДанных.Получить();
		Если ПустаяСтрока(РеквизитыСКДСегмента.ИмяШаблонаСКД) Тогда
			СКД = РеквизитыСКДСегмента.СхемаКомпоновкиДанных.Получить();
		Иначе
			СКД_Макета = СегментыСервер.ПолучитьОписаниеИСхемуКомпоновкиДанныхПоИмениМакета(Сегмент, РеквизитыСКДСегмента.ИмяШаблонаСКД);
			СКД = СКД_Макета.СхемаКомпоновкиДанных;
		КонецЕсли;
		
		Если СКД.НаборыДанных.Найти("СписокСегмента") <> Неопределено Тогда
			Поля = СКД.НаборыДанных.СписокСегмента.Поля;
			Для Каждого Поле Из Поля Цикл
				Поле.ОграничениеИспользования.Поле = Ложь;
			КонецЦикла;// Подключить поля запроса списка.
			
			НастройкиСписка = СКД.ВариантыНастроек.Список.Настройки;
			Настройки = СКД.НастройкиПоУмолчанию;
			CRM_СегментыСервер.СкопироватьЭлементы(НастройкиСписка.ПараметрыДанных, Настройки.ПараметрыДанных);
			CRM_СегментыСервер.СкопироватьЭлементы(НастройкиСписка.Отбор, Настройки.Отбор);
		ИначеЕсли  СКД.НаборыДанных.Найти("ФормированиеСегмента") <> Неопределено Тогда
			Если НастройкиСегмента <> Неопределено Тогда
				НастройкиСписка = НастройкиСегмента;
			Иначе
				НастройкиСписка = СКД.ВариантыНастроек.ФормированиеСегмента.Настройки;
			КонецЕсли;
		Иначе
			НастройкиСписка = Неопределено;
		КонецЕсли;
		Если НастройкиСписка = Неопределено Тогда
			МассивПартнеров = Новый Массив();
		Иначе
			КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
			МакетКомпоновки = КомпоновщикМакета.Выполнить(
				СКД,НастройкиСписка,,,
				Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")
			);
			ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
			ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
			ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
			ТаблицаЗначений = Новый ТаблицаЗначений;
			ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
			ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
			МассивПартнеров = ТаблицаЗначений.ВыгрузитьКолонку("Партнер");
		КонецЕсли;
		
		Если ТолькоОсновныеКонтактныеЛица Тогда
			ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
               |	Партнеры.Ссылка КАК Партнер,
               |	Партнеры.CRM_ОсновноеКонтактноеЛицо КАК КонтактноеЛицо
               |ИЗ
               |	Справочник.Партнеры КАК Партнеры
               |ГДЕ
               |	НЕ Партнеры.ПометкаУдаления
			   |	И Партнеры.Ссылка В (&МассивПартнеров)";
		Иначе
			ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
               |	Партнеры.Ссылка КАК Партнер,
               |	ЕСТЬNULL(КонтактныеЛицаПартнеров.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)) КАК КонтактноеЛицо
               |ИЗ
               |	Справочник.Партнеры КАК Партнеры
               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
               |		ПО Партнеры.Ссылка = КонтактныеЛицаПартнеров.Владелец
               |			И (НЕ КонтактныеЛицаПартнеров.ПометкаУдаления)
               |ГДЕ
               |	НЕ Партнеры.ПометкаУдаления
			   |	И Партнеры.Ссылка В (&МассивПартнеров)";
		КонецЕсли;
		Запрос.УстановитьПараметр("МассивПартнеров", МассивПартнеров);
	Иначе	
		Запрос.УстановитьПараметр("Сегмент", Сегмент);
		Если ТолькоОсновныеКонтактныеЛица Тогда
			ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
               |	ПартнерыСегмента.Партнер КАК Партнер,
               |	ПартнерыСегмента.Сегмент,
               |	ПартнерыСегмента.Партнер.CRM_ОсновноеКонтактноеЛицо КАК КонтактноеЛицо
               |ИЗ
               |	РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
               |ГДЕ
               |	ПартнерыСегмента.Сегмент = &Сегмент
               |	И НЕ ПартнерыСегмента.Партнер.ПометкаУдаления";
		Иначе
			ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
               |	ПартнерыСегмента.Партнер КАК Партнер,
               |	ПартнерыСегмента.Сегмент,
               |	ЕСТЬNULL(КонтактныеЛицаПартнеров.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)) КАК КонтактноеЛицо
               |ИЗ
               |	РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
               |		ПО ПартнерыСегмента.Партнер = КонтактныеЛицаПартнеров.Владелец
               |			И (НЕ КонтактныеЛицаПартнеров.ПометкаУдаления)
               |ГДЕ
               |	ПартнерыСегмента.Сегмент = &Сегмент
               |	И НЕ ПартнерыСегмента.Партнер.ПометкаУдаления";
		КонецЕсли;
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	ТабПартнеров = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаТаб Из ТабПартнеров Цикл		
		СписокАдресов = СформироватьСписокАдресов(Новый Структура("Партнер, КонтактноеЛицо", СтрокаТаб.Партнер, СтрокаТаб.КонтактноеЛицо),
			?(ЗначениеЗаполнено(ВидКонтактнойИнформации), ВидКонтактнойИнформации, Неопределено));
		Если СписокАдресов.Количество() > 0 Тогда
			НоваяСтрока = Объект.Состав.Добавить();
			НоваяСтрока.Контакт			= СтрокаТаб.Партнер;
			НоваяСтрока.Адрес			= СписокАдресов[0].Значение.Представление;
		ИначеЕсли НЕ НеЗаполнятьСПустымиАдресами Тогда
			НоваяСтрока = Объект.Состав.Добавить();
			НоваяСтрока.Контакт			= СтрокаТаб.Партнер;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьПартнеровГруппы(ПартнерГруппа)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", ПартнерГруппа);
	Запрос.Текст =  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                |	Партнеры.Ссылка КАК Ссылка
	                |ИЗ
	                |	Справочник.Партнеры КАК Партнеры
	                |ГДЕ
	                |	НЕ Партнеры.ПометкаУдаления
	                |	И НЕ Партнеры.ЭтоГруппа";
	Если ПартнерГруппа.ЭтоГруппа Тогда
		Запрос.Текст =  Запрос.Текст + "
    |	И Партнеры.Родитель В ИЕРАРХИИ(&Родитель)";
	Иначе	
		Запрос.Текст =  Запрос.Текст + "
	|	И Партнеры.Родитель = &Родитель";
	КонецЕсли;					
	Запрос.Текст =  Запрос.Текст + "
    |
    |УПОРЯДОЧИТЬ ПО
    |	Партнеры.Наименование";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции // ()

&НаСервере
Функция ПолучитьПользователейПодразделения(Подразделение)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникПользователи.Ссылка,
	|	СправочникПользователи.ПометкаУдаления,
	|	СправочникПользователи.Предопределенный,
	|	СправочникПользователи.Наименование,
	|	СправочникПользователи.Подразделение КАК Подразделение
	|ИЗ
	|	Справочник.Пользователи КАК СправочникПользователи
	|ГДЕ
	|	СправочникПользователи.Подразделение В(&Подразделение)
	|	И НЕ СправочникПользователи.ПометкаУдаления";	 
	
	Если ПодразделенияСУчетомИерархии Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "В(&Подразделение)", "В ИЕРАРХИИ(&Подразделение)");
	КонецЕсли;		
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Функция ПолучитьФизическихЛицГруппы(ГруппаФизЛиц)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГруппаФизЛиц", ГруппаФизЛиц);	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникФизЛица.Ссылка,
	|	СправочникФизЛица.ПометкаУдаления,
	|	СправочникФизЛица.Предопределенный,
	|	СправочникФизЛица.Наименование
	|ИЗ
	|	Справочник.ФизическиеЛица КАК СправочникФизЛица
	|ГДЕ
	|	СправочникФизЛица.Родитель В(&ГруппаФизЛиц)
	|	И НЕ СправочникФизЛица.ПометкаУдаления
	|	И НЕ СправочникФизЛица.ЭтоГруппа";	 	
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)

	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Партнеры") Тогда
	
		Если ВыбранноеЗначение.ЭтоГруппа 
			ИЛИ (ВыбранноеЗначение = Справочники.Партнеры.ПустаяСсылка()) Тогда
		
			мПартнеры = ПолучитьПартнеровГруппы(ВыбранноеЗначение);
			Для Каждого эПартнер Из мПартнеры Цикл
				
				ТекДанные = Объект.Состав.Добавить();
				ТекДанные.Контакт = эПартнер;
				СписокАдресов = СформироватьСписокАдресов(Новый Структура("Партнер, КонтактноеЛицо",ТекДанные.Контакт,ВернутьОсновноеКЛКлиента(ТекДанные.Контакт)));
				Если СписокАдресов.Количество() > 0 Тогда
					Адрес = СписокАдресов[0].Значение;
					Если НЕ Адрес.Количество() = 0 Тогда
						ТекДанные.Адрес	= Адрес.Представление;
					Иначе
						ТекДанные.Адрес	= "";
					КонецЕсли;
				Иначе
					ТекДанные.Адрес	= "";
				КонецЕсли;
			
			КонецЦикла;
		Иначе
			
			ТекДанные = Объект.Состав.Добавить();
			ТекДанные.Контакт = ВыбранноеЗначение;
			СписокАдресов = СформироватьСписокАдресов(Новый Структура("Партнер, КонтактноеЛицо",ТекДанные.Контакт,ВернутьОсновноеКЛКлиента(ТекДанные.Контакт)));
			Если СписокАдресов.Количество() > 0 Тогда
				Адрес = СписокАдресов[0].Значение;
				Если НЕ Адрес.Количество() = 0 Тогда
					ТекДанные.Адрес	= Адрес.Представление;
				Иначе
					ТекДанные.Адрес	= "";
				КонецЕсли;
			Иначе
				ТекДанные.Адрес	= "";
			КонецЕсли;
			
		КонецЕсли;
		
		Модифицированность = Истина;
		
	ИначеЕсли		ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи")
				Или	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ГруппыПользователей")
				Или	ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		//
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
			МассивПользователейГрупп = ВыбранноеЗначение;
		Иначе
			МассивПользователейГрупп = Новый Массив();
			МассивПользователейГрупп.Добавить(ВыбранноеЗначение);
		КонецЕсли;
		
		Для Каждого ВыбранныйПользовательГруппа Из МассивПользователейГрупп Цикл
			Если ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.Пользователи") Тогда
				СтрокаПолучатель = Объект.Состав.Добавить();
				СтрокаПолучатель.Контакт = ВыбранныйПользовательГруппа;
				ВидыИнформации = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailПользователя");
				АдресЭП = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформацию(ВыбранныйПользовательГруппа,ВидыИнформации);
				СтрокаПолучатель.Адрес = АдресЭП;
			ИначеЕсли ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
				ДобавитьПоГруппеПользователей(ВыбранныйПользовательГруппа);
			КонецЕсли;
		КонецЦикла;
		Модифицированность = Истина;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда		
		
		мПользователи = ПолучитьПользователейПодразделения(ВыбранноеЗначение);
		Для Каждого Пользователь Из мПользователи Цикл
			Если ТипЗнч(Пользователь) = Тип("СправочникСсылка.Пользователи") Тогда
				СтрокаПолучатель = Объект.Состав.Добавить();
				СтрокаПолучатель.Контакт = Пользователь;
				ВидыИнформации = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailПользователя");
				АдресЭП = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформацию(Пользователь,ВидыИнформации);
				СтрокаПолучатель.Адрес = АдресЭП;
			КонецЕсли;				
		КонецЦикла;			
		Модифицированность = Истина;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.CRM_СпискиРассылок") Тогда		
		
		Если ВыбранноеЗначение.Состав.Количество() > 0 Тогда
			Для Каждого Строчка Из ВыбранноеЗначение.Состав Цикл
				СтрокаПолучатель			= Объект.Состав.Добавить();
				СтрокаПолучатель.Контакт	= Строчка.Контакт;
				СтрокаПолучатель.Адрес		= Строчка.Адрес;
				Если ЗначениеЗаполнено(Строчка.КонтактСтрокой) Тогда
					СтрокаПолучатель.КонтактСтрокой = Строчка.КонтактСтрокой;
				КонецЕсли;					
			КонецЦикла;
		КонецЕсли;
		Модифицированность = Истина;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда				
		
		мФизическиеЛица = ПолучитьФизическихЛицГруппы(ВыбранноеЗначение);
		Для Каждого ФизЛицо Из мФизическиеЛица Цикл
			Если ТипЗнч(ФизЛицо) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
				СтрокаПолучатель = Объект.Состав.Добавить();
				СтрокаПолучатель.Контакт = ФизЛицо;
				ВидыИнформации = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EMailФизическиеЛица");
				АдресЭП = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформацию(ФизЛицо,ВидыИнформации);
				СтрокаПолучатель.Адрес = АдресЭП;
			КонецЕсли;				
		КонецЦикла;			
		Модифицированность = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УдалитьДублиСтрок()
	CRM_ОбщегоНазначенияКлиентСервер.ПроверкаНаДублиВТЧ(Объект.Состав);						
КонецПроцедуры

&НаКлиенте
Функция ПроверитьАдресаПолучателей()
	
	Флаг = Истина;
	
	Для Каждого СтрокаТЧ Из Объект.Состав Цикл
		РезультатПроверки = CRM_ОбщегоНазначенияКлиентСервер.АнализАдресаЭП(СокрЛП(СтрокаТЧ.Адрес));
		Если РезультатПроверки.КодОшибки <> 0 Тогда
			Флаг = Ложь;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.Сообщение, ,"Объект.Состав["
			+ Формат(СтрокаТЧ.НомерСтроки - 1, "ЧН=0; ЧГ=0") + "].Адрес");
		КонецЕсли;
	КонецЦикла;
	
	Возврат Флаг;
	
КонецФункции

&НаСервере
Процедура УдалитьКонтактыСОдинаковымиАдресами(ИмяТаблицы = "Состав")
	
	ТабТЧ = Объект[ИмяТаблицы].Выгрузить();
	Индекс = 0;
	Пока Индекс <= Объект[ИмяТаблицы].Количество()-1 Цикл
		Если ТипЗнч(Объект[ИмяТаблицы][Индекс].Контакт) <> Тип("СправочникСсылка.CRM_СпискиРассылок") Тогда
			Если ЗначениеЗаполнено(Объект[ИмяТаблицы][Индекс].Адрес) Тогда
				МассивСтрок = ТабТЧ.НайтиСтроки(Новый Структура("Адрес", Объект[ИмяТаблицы][Индекс].Адрес));
				Если МассивСтрок.Количество() > 1 Тогда
					Объект[ИмяТаблицы].Удалить(Индекс);
					Модифицированность = Истина;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьКонтактыБезАдреса(ИмяТаблицы = "Состав")
	
	Индекс = 0;
	Пока Индекс <= Объект[ИмяТаблицы].Количество()-1 Цикл
		Если ТипЗнч(Объект[ИмяТаблицы][Индекс].Контакт) <> Тип("СправочникСсылка.CRM_СпискиРассылок") Тогда
			Если Не ЗначениеЗаполнено(Объект[ИмяТаблицы][Индекс].Адрес) Тогда
				Объект[ИмяТаблицы].Удалить(Индекс);
				Модифицированность = Истина;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОформлениеЭлемента(ЭлементДляПоиска, ИмяЭлемента)
	
	Для Каждого ОформлениеЭлемента Из ЭлементДляПоиска.Оформление.Элементы Цикл
		Если ОформлениеЭлемента.Параметр = Новый ПараметрКомпоновкиДанных(ИмяЭлемента) Тогда
			Возврат ОформлениеЭлемента;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура УдалитьЭлементыОформленияКонтактовСОдинаковымиАдресами(ИмяТаблицы = "Состав")
	// "Аккуратный" поиск и удаление созданных программно оформлений для поля -
	// на случай, если у формы есть другие условные оформления - их трогать нельзя.
	МассивЭлементовДляУдаления = Новый Массив();
	Для Каждого ЭлементОформления Из УсловноеОформление.Элементы Цикл
		Если ЭлементОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный Тогда
			Если	ЭлементОформления.Поля.Элементы.Количество() <> 1
				Или	ЭлементОформления.Поля.Элементы[0].Поле <> Новый ПолеКомпоновкиДанных(ИмяТаблицы) Тогда
				//
				Продолжить;
			КонецЕсли;
			
			ОформлениеЭлемента = ПолучитьОформлениеЭлемента(ЭлементОформления, "ЦветФона");
			Если ОформлениеЭлемента = Неопределено Тогда Продолжить; КонецЕсли;
			
			Если	ЭлементОформления.Отбор.Элементы.Количество() <> 1
				Или	ТипЗнч(ЭлементОформления.Отбор.Элементы[0]) <> Тип("ЭлементОтбораКомпоновкиДанных")
				Или	ЭлементОформления.Отбор.Элементы[0].ЛевоеЗначение <> Новый ПолеКомпоновкиДанных("Объект." + ИмяТаблицы + ".ИдентификаторОформления")
				Или	ТипЗнч(ЭлементОформления.Отбор.Элементы[0].ПравоеЗначение) <> Тип("Строка") Тогда
				//
				Продолжить;
			КонецЕсли;
			
			Если Найти(ЭлементОформления.Отбор.Элементы[0].ПравоеЗначение, "_Ид_Оформления_") > 0 Тогда
				МассивЭлементовДляУдаления.Добавить(ЭлементОформления);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементДляУдаления Из МассивЭлементовДляУдаления Цикл
		Попытка УсловноеОформление.Элементы.Удалить(ЭлементДляУдаления);
		Исключение КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыделитьКонтактыСОдинаковымиАдресами(ИмяТаблицы = "Состав")
	УдалитьЭлементыОформленияКонтактовСОдинаковымиАдресами(ИмяТаблицы);
	
	Для Каждого СтрокаТаблицы Из Объект[ИмяТаблицы] Цикл
		Если ТипЗнч(СтрокаТаблицы.Контакт) <> Тип("СправочникСсылка.CRM_СпискиРассылок") Тогда
			СтрокаТаблицы.ИдентификаторОформления = "";
		КонецЕсли;			
	КонецЦикла;
	
	МассивЦветов = Новый Массив();
	МассивЦветов.Добавить(Новый Цвет(216,218,154));
	МассивЦветов.Добавить(Новый Цвет(218,195,154));
	МассивЦветов.Добавить(Новый Цвет(218,172,154));
	МассивЦветов.Добавить(Новый Цвет(218,154,156));
	МассивЦветов.Добавить(Новый Цвет(218,154,180));
	МассивЦветов.Добавить(Новый Цвет(196,154,218));
	МассивЦветов.Добавить(Новый Цвет(154,162,218));
	МассивЦветов.Добавить(Новый Цвет(154,192,218));
	МассивЦветов.Добавить(Новый Цвет(148,218,228));
	
	УжеПроверенныеАдреса = Новый Массив();
	ТекущийИндексИдентификатораОформления = 0;
	ТекущийИндексСдвига = 0;
	Для Каждого СтрокаТаблицы Из Объект[ИмяТаблицы] Цикл
		Если ТипЗнч(СтрокаТаблицы.Контакт) = Тип("СправочникСсылка.CRM_СпискиРассылок") Тогда Продолжить КонецЕсли;
		ТекАдрес = СтрокаТаблицы.Адрес;
		Если Не ЗначениеЗаполнено(ТекАдрес) Тогда Продолжить; КонецЕсли;
		Если УжеПроверенныеАдреса.Найти(ТекАдрес) <> Неопределено Тогда Продолжить; КонецЕсли;
		
		УжеПроверенныеАдреса.Добавить(ТекАдрес);
		
		НайденныеСтроки = Объект[ИмяТаблицы].НайтиСтроки(Новый Структура("Адрес", ТекАдрес));
		Если НайденныеСтроки.Количество() > 1 Тогда
			СтрИдентификаторОформления = "_Ид_Оформления_" + Формат(ТекущийИндексИдентификатораОформления, "ЧН=0; ЧГ=");
			ТекущийИндексЦвета = Мин(ТекущийИндексИдентификатораОформления, МассивЦветов.ВГраница());
			ТекущийИндексИдентификатораОформления = ТекущийИндексИдентификатораОформления + 1;
			
			ЭлементОформления = УсловноеОформление.Элементы.Добавить();
			ЭлементОформления.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
			ЭлементОформления.Использование = Истина;
			
			ОформлениеЭлемента = ПолучитьОформлениеЭлемента(ЭлементОформления, "ЦветФона");
			ОформлениеЭлемента.Использование = Истина;
			ОформлениеЭлемента.Значение = МассивЦветов[ТекущийИндексЦвета];
			
			НовоеПоле = ЭлементОформления.Поля.Элементы.Добавить();
			НовоеПоле.Поле = Новый ПолеКомпоновкиДанных(ИмяТаблицы);
			НовоеПоле.Использование = Истина;
			
			НовыйЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			НовыйЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект." + ИмяТаблицы + ".ИдентификаторОформления");
			НовыйЭлементОтбора.ПравоеЗначение = СтрИдентификаторОформления;
			НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭлементОтбора.Использование = Истина;
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НайденнаяСтрока.ИдентификаторОформления = СтрИдентификаторОформления;
				
				ИндексСтроки = Объект[ИмяТаблицы].Индекс(НайденнаяСтрока);
				Если ИндексСтроки > ТекущийИндексСдвига Тогда
					Объект[ИмяТаблицы].Сдвинуть(ИндексСтроки, ТекущийИндексСдвига - ИндексСтроки);
					ТекущийИндексСдвига = ТекущийИндексСдвига + 1;
				Иначе
					ТекущийИндексСдвига = ИндексСтроки + 1;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТабличнуюЧасть(ИмяТаблицы = "Состав")
	Если Объект[ИмяТаблицы].Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОчиститьТабличнуюЧастьЗавершение", ЭтотОбъект, ИмяТаблицы);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Табличная часть содержит записи. Продолжить?'"), РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	Иначе
		ОчиститьТабличнуюЧастьЗавершение(Неопределено, ИмяТаблицы)
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТабличнуюЧастьЗавершение(Ответ, ИмяТаблицы) Экспорт
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Объект[ИмяТаблицы].Очистить();
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКолонкуТипКонтакта()
	Для Каждого СтрокаТЧ Из Объект.Состав Цикл
		Если ЗначениеЗаполнено(СтрокаТЧ.Контакт) Тогда
			Если ТипЗнч(СтрокаТЧ.Контакт) = Тип("СправочникСсылка.CRM_СпискиРассылок") Тогда
				СтрокаТЧ.ТипКонтакта = "Список рассылки";
			ИначеЕсли ТипЗнч(СтрокаТЧ.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
				СтрокаТЧ.ТипКонтакта = "Клиент";
			ИначеЕсли ТипЗнч(СтрокаТЧ.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				СтрокаТЧ.ТипКонтакта = "Контактное лицо";				 				 
			ИначеЕсли ТипЗнч(СтрокаТЧ.Контакт) = Тип("СправочникСсылка.Пользователи") Тогда
				СтрокаТЧ.ТипКонтакта = "Пользователь";				 				 				 
			ИначеЕсли ТипЗнч(СтрокаТЧ.Контакт) = Тип("СправочникСсылка.ФизическиеЛица") Тогда				
				СтрокаТЧ.ТипКонтакта = "Физическое лицо";				 				 				 
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(СтрокаТЧ.КонтактСтрокой) Тогда
				СтрокаТЧ.ТипКонтакта = "Строка";				 				 				 
			КонецЕсли;	 
		КонецЕсли;							
	КонецЦикла;		
КонецПроцедуры	

&НаСервере
Функция СформироватьСписокАдресов(ТекущиеДанные, ВидКИ = Неопределено)
	
	Если ТипЗнч(ТекущиеДанные) = Тип("Структура") Тогда
		Таб = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюОбъекта(?(ЗначениеЗаполнено(ТекущиеДанные.Партнер), ТекущиеДанные.Партнер, Неопределено),
											?(ЗначениеЗаполнено(ТекущиеДанные.КонтактноеЛицо),ТекущиеДанные.КонтактноеЛицо,Неопределено),
											Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, ВидКИ);
	Иначе
		Таб = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюПоТипуКИ(ТекущиеДанные, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	КонецЕсли;
	
	СписокАдресов = Новый СписокЗначений;
		
	Если НЕ Таб = Неопределено Тогда
		
		МассивСтрок = Таб.НайтиСтроки(Новый Структура("ИспользоватьДляОповещений", Истина));
		
		НайтиВидКИ	= Таб.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.CRM_EmailРассылкиКонтактногоЛица));
		Если НайтиВидКИ.Количество() > 0 Тогда
			ПерваяСтрока = НайтиВидКИ[0];
		Иначе
			НайтиВидКИ	= Таб.НайтиСтроки(Новый Структура("Вид", Справочники.ВидыКонтактнойИнформации.CRM_EmailРассылкиЧастногоЛица));
			Если НайтиВидКИ.Количество() > 0 Тогда
				ПерваяСтрока = НайтиВидКИ[0];
			Иначе
				ПерваяСтрока = Неопределено;
			КонецЕсли;				
		КонецЕсли;				
		
		СписокЗнач = Новый СписокЗначений;
		ТекСсылка = "";
		ПерваяСтрокаБыла = Ложь;
		
		Для Каждого СтрокаТаб Из МассивСтрок Цикл
			
			СтруктураАдреса = Новый Структура;
			
			Если НЕ ТекСсылка = СтрокаТаб.Ссылка Тогда
				
				Если ПерваяСтрока = Неопределено Тогда						
					СтруктураАдреса.Вставить("Адрес"		,СокрЛП(СтрокаТаб.АдресЭП));
					СтруктураАдреса.Вставить("Представление",СокрЛП(СтрокаТаб.Представление));
					СтруктураАдреса.Вставить("Объект"		,СтрокаТаб.Ссылка);
					СписокАдресов.Добавить(СтруктураАдреса, Строка(СтрокаТаб.Ссылка));
					ТекСсылка = СтрокаТаб.Ссылка;						
				Иначе						
					СтруктураАдреса.Вставить("Адрес"		,СокрЛП(ПерваяСтрока.АдресЭП));
					СтруктураАдреса.Вставить("Представление",СокрЛП(ПерваяСтрока.Представление));
					СтруктураАдреса.Вставить("Объект"		,ПерваяСтрока.Ссылка);
					СписокАдресов.Добавить(СтруктураАдреса, Строка(ПерваяСтрока.Ссылка));
					ТекСсылка = ПерваяСтрока.Ссылка;
					ПерваяСтрока = Неопределено;
				КонецЕсли;
				
			КонецЕсли;
			
			СтруктураАдреса = Новый Структура;
			СтруктураАдреса.Вставить("Адрес"		,СокрЛП(СтрокаТаб.АдресЭП));
			СтруктураАдреса.Вставить("Представление",СокрЛП(СтрокаТаб.Представление));
			СтруктураАдреса.Вставить("Объект"		,СтрокаТаб.Ссылка);
			СписокАдресов.Добавить(СтруктураАдреса, "   "+СокрЛП(СтрокаТаб.Вид) + ": " + СтрокаТаб.Представление);
		КонецЦикла;	
		Если СписокАдресов.Количество() > 0 Тогда
			Возврат СписокАдресов;
		КонецЕсли;				
	КонецЕсли;		
	
	Возврат СписокАдресов;
	
КонецФункции

&НаСервере
Процедура ДобавитьПоГруппеПользователей(ГруппаПользователей)
	Если Не ЗначениеЗаполнено(ГруппаПользователей) Или ТипЗнч(ГруппаПользователей) <> Тип("СправочникСсылка.ГруппыПользователей") Тогда
		Возврат;
	КонецЕсли;
	
	МассивПользователиГруппы = CRM_ОбщегоНазначенияСервер.ПолучитьПользователейГруппы(ГруппаПользователей, Истина);
	Для Каждого ПользовательСсылка Из МассивПользователиГруппы Цикл
		СтрокаПолучатель = Объект.Состав.Добавить();
		СтрокаПолучатель.Контакт = ПользовательСсылка;
		ВидыИнформации = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailПользователя");
		АдресЭП = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформацию(ПользовательСсылка,ВидыИнформации);
		СтрокаПолучатель.Адрес = АдресЭП;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВыбранноеЗначение(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Партнеры") 
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
		
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		
			ТекДанные = Объект.Состав.Добавить();
			ТекДанные.Контакт = ВыбранноеЗначение;
			Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Партнеры") Тогда
				СписокАдресов = СформироватьСписокАдресов(Новый Структура("Партнер, КонтактноеЛицо",ТекДанные.Контакт,ВернутьОсновноеКЛКлиента(ТекДанные.Контакт)));
			ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				СписокАдресов = СформироватьСписокАдресов(Новый Структура("Партнер, КонтактноеЛицо",ВернутьВладельцаКЛ(ТекДанные.Контакт),ТекДанные.Контакт));
			Иначе
				Возврат;
			КонецЕсли;				
			Если СписокАдресов.Количество() > 0 Тогда
				Адрес = СписокАдресов[0].Значение;
				Если НЕ Адрес.Количество() = 0 Тогда
					ТекДанные.Адрес					= Адрес.Представление;
				Иначе
					ТекДанные.Адрес					= "";
				КонецЕсли;
			Иначе
				ТекДанные.Адрес					= "";
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли		ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи")
				Или	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ГруппыПользователей")
				Или	ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		//
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
			МассивПользователейГрупп = ВыбранноеЗначение;
		Иначе
			МассивПользователейГрупп = Новый Массив();
			МассивПользователейГрупп.Добавить(ВыбранноеЗначение);
		КонецЕсли;
		
		Для Каждого ВыбранныйПользовательГруппа Из МассивПользователейГрупп Цикл
			Если ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.Пользователи") Тогда
				СтрокаПолучатель = Объект.Состав.Добавить();
				СтрокаПолучатель.Контакт = ВыбранныйПользовательГруппа;
				ВидыИнформации = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailПользователя");
				АдресЭП = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформацию(ВыбранныйПользовательГруппа,ВидыИнформации);
				СтрокаПолучатель.Адрес = АдресЭП;
			ИначеЕсли ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
				ДобавитьПоГруппеПользователей(ВыбранныйПользовательГруппа);
			КонецЕсли;
		КонецЦикла;
		Модифицированность = Истина;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.CRM_СпискиРассылок") Тогда
		
		СтрокаПолучатель = Объект.Состав.Добавить();
		СтрокаПолучатель.Контакт = ВыбранноеЗначение;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		
		СтрокаПолучатель			= Объект.Состав.Добавить();
		СтрокаПолучатель.Контакт    = ВыбранноеЗначение;
		ВидыИнформации				= ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EMailФизическиеЛица");
		АдресЭП						= CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформацию(ВыбранноеЗначение,ВидыИнформации);
		СтрокаПолучатель.Адрес		= АдресЭП;		
		
	КонецЕсли;
	
	ЗаполнитьКолонкуТипКонтакта();
		
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.ЗагруженИзMSExchange Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	Элементы.ДекорацияЗагруженИзMSExchange.Видимость = Объект.ЗагруженИзMSExchange;
	
	ИспользоватьГруппыПользователей = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыПользователей");
	
	// проверим что в метаданных есть ФО "CRM_ИспользоватьСегментацию" и установим видимость кнопки "Заполнить по сегменту"
	ИмяФО = "CRM_ИспользоватьСегментацию";
	ЕстьФО = Метаданные.ФункциональныеОпции.Найти(ИмяФО);
	Если ЕстьФО <> Неопределено Тогда
		ИспользоватьЗаполнениеПоСегментам = ПолучитьФункциональнуюОпцию(ИмяФО);
	Иначе
		ИспользоватьЗаполнениеПоСегментам = Ложь;
	КонецЕсли;
	Элементы.СоставЗаполнитьПоСегменту.Видимость = ИспользоватьЗаполнениеПоСегментам;
	
	ЗаполнитьКолонкуТипКонтакта();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Партнеры") 
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ГруппыПользователей") 
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СтруктураПредприятия") 	
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.CRM_СпискиРассылок") 
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда				
		
		Если Объект.Состав.Количество() > 0 Тогда
		
			ТекстВопроса = НСтр("ru='Очистить список получателей?'");
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораЗавершение", ЭтотОбъект, ВыбранноеЗначение);
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,РежимДиалогаВопрос.ДаНетОтмена,,,,);
		    Возврат;
			
		КонецЕсли;
		
		ОбработкаВыбораНаСервере(ВыбранноеЗначение);
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		
		Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл
			ОбработкаВыбораНаСервере(ЭлементМассива);
		КонецЦикла;			

	КонецЕсли;
	
	ЗаполнитьКолонкуТипКонтакта();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораЗавершение(Ответ, ВыбранноеЗначение) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Партнеры") 
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ГруппыПользователей") 
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СтруктураПредприятия") 	
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.CRM_СпискиРассылок") 
		ИЛИ ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда				
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Объект.Состав.Очистить();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат;												
		КонецЕсли;
		
		ОбработкаВыбораНаСервере(ВыбранноеЗначение);
		
	КонецЕсли;
	
	ЗаполнитьКолонкуТипКонтакта();
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СоставОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл
			ДобавитьВыбранноеЗначение(Элемент, ЭлементМассива, СтандартнаяОбработка);
		КонецЦикла;	
		Модифицированность = Истина;
	Иначе 	
		ДобавитьВыбранноеЗначение(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);		
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СоставПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ЗаполнитьКолонкуТипКонтакта();
КонецПроцедуры

&НаКлиенте
Процедура СоставАдресПриИзменении(Элемент)
	
	РезультатПроверки = CRM_ОбщегоНазначенияКлиентСервер.АнализАдресаЭП(СокрЛП(Элемент.ТекстРедактирования));
	Если РезультатПроверки.КодОшибки<>0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.Сообщение, , Элемент.Имя);
	КонецЕсли;
	
КонецПроцедуры   

&НаКлиенте
Процедура СоставАдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	// В зависимости от типа контакта заполняем список выбора.
	
	Если ТипЗнч(ТекДанные.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
		
		СписокАдресов = СформироватьСписокАдресов(Новый Структура("Партнер, КонтактноеЛицо", ТекДанные.Контакт, ВернутьОсновноеКЛКлиента(ТекДанные.Контакт)));
		
	ИначеЕсли ТипЗнч(ТекДанные.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
		
		СписокАдресов = СформироватьСписокАдресов(Новый Структура("Партнер, КонтактноеЛицо", ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка"), ТекДанные.Контакт));
		
	ИначеЕсли ТипЗнч(ТекДанные.Контакт) = Тип("СправочникСсылка.Пользователи") 
		ИЛИ ТипЗнч(ТекДанные.Контакт) = Тип("СправочникСсылка.ФизическиеЛица") Тогда		
		
		СписокАдресов = СформироватьСписокАдресов(ТекДанные.Контакт);
		
	Иначе
		
		СтандартнаяОбработка = Истина;
		Возврат;
		
	КонецЕсли;		
	
	СтруктураДанных = Новый Структура("ТекДанные", ТекДанные);
	Оповещение = Новый ОписаниеОповещения("ВыборАдресаЗавершение", ЭтотОбъект, СтруктураДанных);
	СписокАдресов.ПоказатьВыборЭлемента(Оповещение, Нстр("ru ='Выберите адрес'"), ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборАдресаЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда Возврат; КонецЕсли;
	
	ТекДанные = ДополнительныеПараметры.ТекДанные;
	
	Адрес = ВыбранныйЭлемент.Значение;
	Если Не Адрес.Количество() = 0 Тогда
		ТекДанные.Адрес = Адрес.Представление;
	КонецЕсли;		
	
КонецПроцедуры	

&НаКлиенте
Процедура СоставАдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	РезультатПроверки = CRM_ОбщегоНазначенияКлиентСервер.АнализАдресаЭП(СокрЛП(ВыбранноеЗначение));
	Если РезультатПроверки.КодОшибки<>0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.Сообщение, , Элемент.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставКонтактПриИзменении(Элемент)
	
	ТекДанные = Элементы.Состав.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
		
	Если ЗначениеЗаполнено(ТекДанные.Контакт) Тогда
		
		Если ТипЗнч(ТекДанные.Контакт) = Тип("СправочникСсылка.Партнеры") Тогда
			
			СписокАдресов = СформироватьСписокАдресов(Новый Структура("Партнер, КонтактноеЛицо", ТекДанные.Контакт, ПредопределенноеЗначение("Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка")));
			
		ИначеЕсли ТипЗнч(ТекДанные.Контакт) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			
			СписокАдресов = СформироватьСписокАдресов(Новый Структура("Партнер, КонтактноеЛицо", ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка"), ТекДанные.Контакт));
			
		ИначеЕсли ТипЗнч(ТекДанные.Контакт) = Тип("СправочникСсылка.Пользователи") 
			ИЛИ ТипЗнч(ТекДанные.Контакт) = Тип("СправочникСсылка.ФизическиеЛица") Тогда		
			
			СписокАдресов = СформироватьСписокАдресов(ТекДанные.Контакт);
			
		Иначе
			
			Возврат;
			
		КонецЕсли;
		
		
		Если СписокАдресов.Количество() > 0 Тогда
			Адрес = СписокАдресов[0].Значение;
			Если НЕ Адрес.Количество() = 0 Тогда
				ТекДанные.Адрес	= Адрес.Представление;
			Иначе
				ТекДанные.Адрес	= "";
			КонецЕсли;
		Иначе
			ТекДанные.Адрес	= "";
		КонецЕсли;
		
	Иначе
		ТекДанные.Адрес	= "";
	КонецЕсли;

КонецПроцедуры	

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборКлиенты(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор",Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ПрограммноеОткрытие",Истина);	
	ОткрытьФорму("Справочник.Партнеры.ФормаВыбора",ПараметрыФормы,Элементы.Состав,,);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПользователи(Команда)

	ПараметрыФормы = Новый Структура;	
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Ложь);	
	Если ИспользоватьГруппыПользователей Тогда
		ПараметрыФормы.Вставить("ВыборГруппПользователей",	Истина);
		ПараметрыФормы.Вставить("ВыборГруппИЭлементов",		ИспользованиеГруппИЭлементов.ГруппыИЭлементы);
	КонецЕсли;
	ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка", ПараметрыФормы, Элементы.Состав, , );
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборКЛ(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор",Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ПрограммноеОткрытие",Истина);	
	ОткрытьФорму("Справочник.КонтактныеЛицаПартнеров.ФормаВыбора",ПараметрыФормы,Элементы.Состав,,);	
КонецПроцедуры

&НаКлиенте
Процедура ПодборФизЛица(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор",Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("Справочник.ФизическиеЛица.ФормаВыбора",ПараметрыФормы,Элементы.Состав,,);	
КонецПроцедуры

&НаКлиенте
Процедура ПодборРассылки(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Ложь);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ОткрытьФорму("Справочник.CRM_СпискиРассылок.ФормаВыбора",ПараметрыФормы,Элементы.Состав,,);	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРезультатамОтчёта(Команда)
		
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЕстьЗаписи", (Объект.Состав.Количество() > 0));
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоРезультатамОтчётаЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.CRM_СпискиРассылок.Форма.ФормаВыбораРезультатаОтчета", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРезультатамОтчётаЗавершение(Результат, ДополнительныеПараметры) Экспорт
		
	Если НЕ (Результат = Неопределено) Тогда
		ВидКонтактнойИнформации			= Результат.ВидКонтактнойИнформации;
		НеЗаполнятьСПустымиАдресами		= Результат.НеЗаполнятьСПустымиАдресами;
		Если Результат.ОчищатьТЧ Тогда
			Объект.Состав.Очистить();
		КонецЕсли;
		ЗаполнитьТЧПоРезультатуОтчета(Результат.СписокСсылок);
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСегменту(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЕстьЗаписи", (Объект.Состав.Количество() > 0));
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоСегментуЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.CRM_СпискиРассылок.Форма.ФормаВыборСегмента", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСегментуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ (Результат = Неопределено) Тогда
		Сегмент							= Результат.Сегмент;
		ВидКонтактнойИнформации			= Результат.ВидКонтактнойИнформации;
		НеЗаполнятьСПустымиАдресами		= Результат.НеЗаполнятьСПустымиАдресами;
		ТолькоОсновныеКонтактныеЛица	= Результат.ТолькоОсновныеКонтактныеЛица;
		Если Результат.ОчищатьТЧ Тогда
			Объект.Состав.Очистить();
		КонецЕсли;
		ЗаполнитьТЧПоСегменту();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппе(Команда)
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Истина);
	ОткрытьФорму("Справочник.Партнеры.ФормаВыбораГруппы", ПараметрыФормы, ЭтотОбъект, ,);	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппеПользователей(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);	
	ПараметрыФормы.Вставить("ВыборГруппПользователей", Истина);	
	ПараметрыФормы.Вставить("ТолькоГруппы", Истина);		
	ОткрытьФорму("Справочник.Пользователи.Форма.CRM_ФормаСписка", ПараметрыФормы, ЭтотОбъект, ,);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппеФизическихЛиц(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);	
	ОткрытьФорму("Справочник.ФизическиеЛица.ФормаВыбораГруппы", ПараметрыФормы, ЭтотОбъект, ,);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПодразделению(Команда)
	
	ПодразделенияСУчетомИерархии = Ложь;
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);		
	ОткрытьФорму("Справочник.СтруктураПредприятия.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, ,);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПодразделениюВложенные(Команда)
	
	ПодразделенияСУчетомИерархии = Истина;
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);		
	ОткрытьФорму("Справочник.СтруктураПредприятия.ФормаВыбора", ПараметрыФормы, ЭтотОбъект, ,);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСпискуРассылки(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);	
	ОткрытьФорму("Справочник.CRM_СпискиРассылок.ФормаВыбора",, ЭтотОбъект);	

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьАдреса(Команда)
	
	ПроверитьАдресаПолучателей();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОдинаковыеСтроки(Команда)
	
	УдалитьКонтактыСОдинаковымиАдресами();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьОдинаковыеСтроки(Команда)
	
	ВыделитьКонтактыСОдинаковымиАдресами();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКонтактыБезАдреса(Команда)
	
	УдалитьКонтактыБезАдреса();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТЧ(Команда)
	
	ОчиститьТабличнуюЧасть();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРассылку(Команда)
	
	Попытка
		Записать();
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки(),,,,Истина);
		Возврат;
	КонецПопытки;		
	
	ФормаРассылки = ПолучитьФорму("Документ.CRM_РассылкаЭлектронныхПисем.ФормаОбъекта");
	ДокОбъект = ФормаРассылки.Объект; 
	CRM_МетодыФормДокументовСервер.ЗаполнитьСозданныйДокументРассылки(ДокОбъект, Объект.Ссылка);
	КопироватьДанныеФормы(ДокОбъект, ФормаРассылки.Объект);
	ФормаРассылки.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоМаркетинговойКампании(Команда)
	НовоеОповещение = Новый ОписаниеОповещения("ЗаполнитьПоМаркетинговойКампанииЗавершение", ЭтотОбъект);
	РежимОткрытия = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;
	ПараметрыФормы = Новый Структура("ВыборИзТелемаркетинга", Истина);
	ОткрытьФорму("Справочник.МаркетинговыеМероприятия.ФормаВыбора", ПараметрыФормы,,,,,НовоеОповещение,РежимОткрытия); 
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоМаркетинговойКампанииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если НЕ (Результат = Неопределено) Тогда
		Если Объект.Состав.Количество() > 0 Тогда
			ТекстВопроса = Нстр("ru = 'Cписок получателей содержит записи. Заменить или дополнить?'");
			КнопкиВопроса = Новый СписокЗначений;
			КнопкиВопроса.Добавить(1, Нстр("ru = 'Заменить'"));
			КнопкиВопроса.Добавить(2, Нстр("ru = 'Дополнить'"));
			КнопкиВопроса.Добавить(0, Нстр("ru = 'Отмена'"));	
			ПараметрыОповещения = Новый Структура("Кампания", Результат);
			НовоеОповещение = Новый ОписаниеОповещения("ЗаполнениеПоМаркетинговойКампанииПослеВопроса", ЭтотОбъект, ПараметрыОповещения);
			ПоказатьВопрос(НовоеОповещение,ТекстВопроса, КнопкиВопроса);
		Иначе
			ЗаполнениеПоМаркетинговойКампании(Результат);
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнениеПоМаркетинговойКампанииПослеВопроса(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = 0 Тогда
		Возврат;
	ИначеЕсли Результат = 1 Тогда
		Объект.Состав.Очистить();
		ЗаполнениеПоМаркетинговойКампании(ДополнительныеПараметры.Кампания);
	ИначеЕсли Результат = 2 Тогда
		ЗаполнениеПоМаркетинговойКампании(ДополнительныеПараметры.Кампания);
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеПоМаркетинговойКампании(Кампания)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсточникиПервичногоИнтереса.Партнер
	|ИЗ
	|	РегистрСведений.ИсточникиПервичногоИнтереса КАК ИсточникиПервичногоИнтереса
	|ГДЕ
	|	ИсточникиПервичногоИнтереса.ИсточникПервичногоИнтереса = &Кампания";
	
	Запрос.УстановитьПараметр("Кампания", Кампания);
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Партнер");
	
	Для Каждого СтрокаМассива Из Результат Цикл
		Если ТипЗнч(СтрокаМассива) = Тип("СправочникСсылка.Партнеры") Тогда
			
			ОбработкаВыбораНаСервере(СтрокаМассива);
			
		ИначеЕсли ТипЗнч(СтрокаМассива) = Тип("СправочникСсылка.CRM_ПотенциальныеКлиенты") Тогда
			Если ЗначениеЗаполнено(СтрокаМассива.Партнер) Тогда
				
				ОбработкаВыбораНаСервере(СтрокаМассива.Партнер);
				
				ЗаполнитьКолонкуТипКонтакта();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;		
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗагрузкаКлиентовИзФайла(Команда)
	НовоеОповещение = Новый ОписаниеОповещения("ЗагрузкаКлиентовИзФайлаЗавершение", ЭтотОбъект);
	РежимОткрытия = РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс;	
	ПараметрыФормы = Новый Структура("ВидСправочника", "Партнеры");
	ПараметрыФормы.Вставить("ЗагрузкаВДокумент", "РассылкаПисем");
	ОткрытьФорму("Обработка.CRM_ЗагрузкаСправочниковИзФайла.Форма", ПараметрыФормы,,,,, НовоеОповещение, РежимОткрытия);
КонецПроцедуры	

&НаКлиенте
Процедура ЗагрузкаКлиентовИзФайлаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если НЕ (Результат = Неопределено) И Результат.Количество() > 0 Тогда
		Если Объект.Состав.Количество() > 0 Тогда
			ТекстВопроса = Нстр("ru = 'Cписок получателей содержит записи. Заменить или дополнить?'");
			КнопкиВопроса = Новый СписокЗначений;
			КнопкиВопроса.Добавить(1, Нстр("ru = 'Заменить'"));
			КнопкиВопроса.Добавить(2, Нстр("ru = 'Дополнить'"));
			КнопкиВопроса.Добавить(0, Нстр("ru = 'Отмена'"));	
			ПараметрыОповещения = Новый Структура("МассивЭлементов", Результат);
			НовоеОповещение = Новый ОписаниеОповещения("ЗагрузкаКлиентовИзФайлаПослеВопроса", ЭтотОбъект, ПараметрыОповещения);
			ПоказатьВопрос(НовоеОповещение,ТекстВопроса, КнопкиВопроса);
		Иначе
			ЗагрузкаКлиентовИзФайлаНаСервере(Результат);
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры	

&НаКлиенте
Процедура ЗагрузкаКлиентовИзФайлаПослеВопроса(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = 0 Тогда
		Возврат;
	ИначеЕсли Результат = 1 Тогда
		Объект.Состав.Очистить();
		ЗагрузкаКлиентовИзФайлаНаСервере(ДополнительныеПараметры.МассивЭлементов);
	ИначеЕсли Результат = 2 Тогда
		ЗагрузкаКлиентовИзФайлаНаСервере(ДополнительныеПараметры.МассивЭлементов);
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаКлиентовИзФайлаНаСервере(МассивЭлементов)
	
	Для Каждого ЭлементМассива Из МассивЭлементов Цикл
		Если ТипЗнч(ЭлементМассива) = Тип("Структура") Тогда
			Если ЗначениеЗаполнено(ЭлементМассива.Клиент) Тогда
				
				ОбработкаВыбораНаСервере(ЭлементМассива.Клиент);
				
				ЗаполнитьКолонкуТипКонтакта();
			ИначеЕсли ЗначениеЗаполнено(ЭлементМассива.Наименование) Тогда
				ТекДанные = Объект.Состав.Добавить();
				ТекДанные.КонтактСтрокой	= ЭлементМассива.Наименование;
				Если ЭлементМассива.Свойство("Почта") Тогда
					ТекДанные.Адрес			= ЭлементМассива.Почта;
				КонецЕсли;
				
				ЗаполнитьКолонкуТипКонтакта();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
