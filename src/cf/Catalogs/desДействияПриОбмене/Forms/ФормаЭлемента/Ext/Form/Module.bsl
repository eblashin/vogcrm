
&НаКлиенте
Процедура ДекорацияПредставленияРасписанияНажатие(Элемент)
	СтандартнаяОбработка = Ложь;
	НастроитьРасписание();
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписание()
	
	Если ЭтаФорма.Расписание = Неопределено Тогда
		ЭтаФорма.Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;

	ДиалогРасписания = Новый ДиалогРасписанияРегламентногоЗадания(ЭтаФорма.Расписание);
	ДиалогРасписания.Показать(Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтаФорма));
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	
	Если Расписание <> Неопределено Тогда
		
		ЭтаФорма.Расписание	= Расписание;
		ЭтаФорма.ПредставлениеРасписания = СформироватьПредставлениеРасписания(ЭтаФорма.Расписание);
		Элементы.ДекорацияПредставленияРасписания.Заголовок = ЭтаФорма.ПредставлениеРасписания;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьПредставлениеРасписания(Расписание)

	Возврат ?(Расписание = Неопределено, "<Ввести расписание>", "Выполнять: " + Строка(Расписание));

КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.РегламентноеЗадание = "" Тогда
		Объект.РегламентноеЗадание = "00000000-0000-0000-0000-000000000000";
	КонецЕсли;
	
	ЗаполнитьСлужебныеРеквизиты();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСлужебныеРеквизиты()

	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	
	Задание = ?(ПустаяСтрока(Объект.РегламентноеЗадание), Неопределено, desОбменДаннымиВызовСервера.Задание(Объект.РегламентноеЗадание));
	
	Если Задание <> Неопределено Тогда
		ЭтаФорма.Расписание = Задание.Расписание;
		ЭтаФорма.Использование = Задание.Использование;
	КонецЕсли;			
		
	ЭтаФорма.ПредставлениеРасписания	= СформироватьПредставлениеРасписания(ЭтаФорма.Расписание);
	Элементы.ДекорацияПредставленияРасписания.Заголовок = ЭтаФорма.ПредставлениеРасписания;
	//ЭтаФорма.ПоследнееВыполнение = ПолучитьПоследнееВыполнение(Объект.Ссылка);		

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПоследнееВыполнение(Действие)
	Результат = Новый Структура("Период, ВыполненоУспешно, Комментарий");
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Действие", Действие);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СостоянияДействий.Период,
	|	СостоянияДействий.ВыполненоУспешно,
	|	СостоянияДействий.Комментарий
	|ИЗ
	|	РегистрСведений.desСостоянияДействийОбмена.СрезПоследних(, Действие = &Действие) КАК СостоянияДействий
	|
	|УПОРЯДОЧИТЬ ПО
	|	СостоянияДействий.Период УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат "<Не выполнялось>";
	КонецЕсли; 
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.Период           = Выборка.Период;
		Результат.ВыполненоУспешно = Выборка.ВыполненоУспешно;
		Результат.Комментарий      = Выборка.Комментарий;
	КонецЕсли; 
	
	Возврат ОбменДаннымиСервер.СтрШаблонОбычноеПриложение(
				НСтр("ru = 'Выполнено %1 %2, комментарий: %3'")
				,?(Выборка.ВыполненоУспешно, "успешно", "с ошибками")
				,Выборка.Период
				,?(Выборка.ВыполненоУспешно, "", Выборка.Комментарий));
	
КонецФункции

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Задание = desОбменДаннымиВызовСервера.Задание(Объект.РегламентноеЗадание);
	
	Если Задание = Неопределено Тогда // Не найдено
		// Создать и зарегистрировать.
		ПараметрыЗадания = Новый Структура;
		ПараметрыЗадания.Вставить("Метаданные", Метаданные.РегламентныеЗадания.desВыполнениеОбмена);
		ПараметрыЗадания.Вставить("Использование", ЭтаФорма.Использование);
		ПараметрыЗадания.Вставить("Наименование", Объект.Наименование);
		ПараметрыЗадания.Вставить("Ключ", XMLСтрока(Новый УникальныйИдентификатор()));
		
		Задание = desОбменДаннымиВызовСервера.ДобавитьЗадание(ПараметрыЗадания);
		ТекущийОбъект.РегламентноеЗадание = desОбменДаннымиВызовСервера.УникальныйИдентификатор(Задание);
	Иначе // Найдено
		// Действие не требуется
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Регламентное задание
	Задание = desОбменДаннымиВызовСервера.Задание(ТекущийОбъект.РегламентноеЗадание);
	// Параметры вызова процедуры обработчика регламентного задания
	ПараметрыПроцедуры = Новый Массив;
	ПараметрыПроцедуры.Добавить(ТекущийОбъект.Ссылка);
	// Параметра регламентного задания
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("Использование", ЭтаФорма.Использование И Не ТекущийОбъект.ПометкаУдаления);
	Если ЭтаФорма.Использование И Не ТекущийОбъект.ПометкаУдаления
		И НЕ ЭтаФорма.Расписание = Неопределено Тогда
		
		ПараметрыЗадания.Вставить("Расписание", ЭтаФорма.Расписание);
	КонецЕсли; 
	ПараметрыЗадания.Вставить("Ключ", ТекущийОбъект.РегламентноеЗадание);
	ПараметрыЗадания.Вставить("ИмяПользователя", "Регламентное задание");
	ПараметрыЗадания.Вставить("Параметры", ПараметрыПроцедуры);
		
	desОбменДаннымиВызовСервера.ИзменитьЗадание(ТекущийОбъект.РегламентноеЗадание, ПараметрыЗадания);
	
КонецПроцедуры


