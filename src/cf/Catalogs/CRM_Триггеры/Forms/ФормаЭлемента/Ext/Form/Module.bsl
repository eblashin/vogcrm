
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	ДанныеУсловий = ОбъектЗначение.НастройкиУсловий.Получить();
	АдресНастроекУсловий = ПоместитьВоВременноеХранилище(ДанныеУсловий, УникальныйИдентификатор);		
	ДанныеДействий = ОбъектЗначение.НастройкиДействий.Получить();
	АдресНастроекДействий = ПоместитьВоВременноеХранилище(ДанныеДействий, УникальныйИдентификатор);	
	СхемаСКД = ОбъектЗначение.ХранилищеСхемыКомпоновкиДанных.Получить();
	Если СхемаСКД = Неопределено Тогда 
		СхемаСКД = Новый СхемаКомпоновкиДанных();
	КонецЕсли;	
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаСКД, УникальныйИдентификатор);
	НастройкиСКД = ОбъектЗначение.ХранилищеНастроекКомпоновкиДанных.Получить();
	Если НастройкиСКД = Неопределено Тогда 
		КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));
		КомпоновщикНастроек.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
		НастройкиСКД = КомпоновщикНастроек.Настройки;
	КонецЕсли;
	АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(НастройкиСКД, УникальныйИдентификатор);
	КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпановщикНастроекУсловий.ЗагрузитьНастройки(НастройкиСКД);
	КомпановщикНастроекУсловий.Восстановить();
	Если ЗначениеЗаполнено(Объект.УсловиеСрабатывания) Тогда
		//Элементы.ГруппаНастройки.Видимость = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД"); 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеВидимостьюЭлементов();
КонецПроцедуры

&НаСервере
Функция ВернутьОбработкуДействия()
	ОбработкаПроверки = ПолучитьДвоичныеДанныеИзХранилища("Действие", "ОбработкаДействия");
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	
	Если ОбработкаПроверки = Неопределено Тогда
		Сообщить("Отсутствует внешняя обработка");
		Возврат Ложь;;	
	КонецЕсли;
	ОбработкаПроверки.Записать(ИмяВременногоФайла);
	
	//
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий"+"");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = ЛОЖЬ;                                            
	//
	Данные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор);
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресОбработкиДействий, Объект.Действие.НазваниеОбработки, Ложь, ПараметрыЗащиты), Ложь);
	Возврат Истина;
КонецФункции

&НаСервере
Функция ВернутьОбработкуУсловий()
	ОбработкаПроверки = ПолучитьДвоичныеДанныеИзХранилища("УсловиеСрабатывания", "ОбработкаПроверки");
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	ОбработкаПроверки.Записать(ИмяВременногоФайла);
	//
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий"+"");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = ЛОЖЬ;                                            
	//
	Данные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	АдресОбработкиУсловий = ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор);
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресОбработкиУсловий, Объект.УсловиеСрабатывания.НазваниеОбработки, Ложь, ПараметрыЗащиты), Ложь);
	Возврат Истина;
КонецФункции

&НаСервере
Функция ПроверитьСовместимостьОбработки()
	Если Объект.УсловиеСрабатывания = Справочники.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию Тогда
		Возврат Истина;
	КонецЕсли;
	Если Объект.УсловиеСрабатывания.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Сначала выберите условие срабатывания триггера";
		Сообщение.Сообщить();
		Объект.Действие = Справочники.CRM_ДействияТриггеров.ПустаяСсылка();
		Возврат Ложь;
	КонецЕсли;	
	ОбработкаПроверки = ПолучитьДвоичныеДанныеИзХранилища("Действие", "ОбработкаДействия");
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
	ОбработкаПроверки.Записать(ИмяВременногоФайла);
	//
	ПараметрыЗащиты = Новый("ОписаниеЗащитыОтОпасныхДействий"+"");
	ПараметрыЗащиты.ПредупреждатьОбОпасныхДействиях = ЛОЖЬ;                                            
	//
	Данные = Новый ДвоичныеДанные(ИмяВременногоФайла);
	АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Данные, УникальныйИдентификатор);
	Обработка =  ВнешниеОбработки.Создать(ВнешниеОбработки.Подключить(АдресОбработкиДействий, Объект.Действие.НазваниеОбработки, Ложь, ПараметрыЗащиты), Ложь);
	Если Объект.УсловиеСрабатывания.ТипОбъекта = "Документ" Тогда
		ТипОбъекта = "ДокументОбъект";	
	ИначеЕсли Объект.УсловиеСрабатывания.ТипОбъекта = "Справочник" Тогда
		ТипОбъекта = "СправочникОбъект";	
	ИначеЕсли Объект.УсловиеСрабатывания.ТипОбъекта = "Бизнес-процесс" Тогда
		ТипОбъекта = "БизнесПроцессОбъект";	
	ИначеЕсли Объект.УсловиеСрабатывания.ТипОбъекта = "Задача" Тогда
		ТипОбъекта = "ЗадачаОбъект";	
	КонецЕсли;
	ПроверяемыйТип = Тип(ТипОбъекта+"."+Объект.УсловиеСрабатывания.ОбъектОбработки);
	Если Обработка.Метаданные().Реквизиты.ОбъектДействия.Тип.СодержитТип(ПроверяемыйТип) Тогда
		Возврат Истина;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Данное действие не подходит для обработки триггера (несоответствие типов объектов обработки)";
		Сообщение.Сообщить();
		Объект.Действие = Справочники.CRM_ДействияТриггеров.ПустаяСсылка();
		Возврат Ложь;
	КонецЕсли;	
КонецФункции

&НаСервере
Процедура ДействиеПриИзмененииНаСервере()
	Если Объект.Действие <> Справочники.CRM_ДействияТриггеров.ПустаяСсылка() Тогда
		ПроверитьСовместимостьОбработки();
		АдресНастроекДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
	Если НЕ Объект.Действие.Пустая() Тогда
	
		#Если Не ВебКлиент Тогда
			Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "РежимОтладки") Тогда
				ИмяФайлаОбработки = ПолучитьИмяФайлаОбработкиДействий();
				НачатьПомещениеФайла(Новый ОписаниеОповещения("ИзменитьДействиеПродолжение", ЭтотОбъект), "", ИмяФайлаОбработки, Ложь, УникальныйИдентификатор);
			Иначе
				АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
				ДействиеПриИзмененииНаСервере();
			КонецЕсли;
		#Иначе
			АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
			ДействиеПриИзмененииНаСервере();
		#КонецЕсли
		
		
	Иначе
		АдресОбработкиДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
		АдресНастроекДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДействиеПродолжение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	АдресОбработкиДействий = Адрес; 
	АдресНастроекДействий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ДействиеПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Функция ПолучитьИмяФайлаОбработкиУсловий()
	
	#Если Не ВебКлиент Тогда
		Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "РежимОтладки") Тогда
			ИмяВременногоФайла = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ПутьКОбработке");
		Иначе
			ДанныеФайла =  ПолучитьДвоичныеДанныеИзХранилища("УсловиеСрабатывания", "ОбработкаПроверки");
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
			ДанныеФайла.Записать(ИмяВременногоФайла);
		КонецЕсли;
	#Иначе
		ИмяВременногоФайла = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ПутьКОбработке");
	#КонецЕсли
	Возврат ИмяВременногоФайла;
КонецФункции	

&НаСервере
Функция ПолучитьОбработкуПоАдресу(АдресХранилища)
	Возврат ВнешниеОбработки.Подключить(АдресХранилища);
КонецФункции

&НаКлиенте
Процедура НастроитьУсловия(Команда)
	Если НЕ Объект.УсловиеСрабатывания.Пустая() Тогда
		Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД") Тогда
			ОписаниеОповещенияЗавершения = Новый ОписаниеОповещения("НастроитьУсловияЗавершениеСКД", ЭтотОбъект);
			ПараметрыОткрытия = Новый Структура;
			ПараметрыОткрытия.Вставить("АдресСхемыКомпоновкиДанных", АдресСхемыКомпоновкиДанных);
			ПараметрыОткрытия.Вставить("НастройкиСКД", КомпановщикНастроекУсловий.Настройки);
			ОткрытьФорму("Справочник.CRM_Триггеры.Форма.ФормаРЕдактированияСКД", ПараметрыОткрытия, ЭтаФорма,,,, ОписаниеОповещенияЗавершения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Иначе	
			ВернутьОбработкуУсловий();
			ПараметрыОткрытия = Новый Структура;
			ПередаваемыеНастройки = ПолучитьИзВременногоХранилища(АдресНастроекУсловий);
			ПараметрыОткрытия.Вставить("Настройки", ?(ПередаваемыеНастройки = Неопределено, Новый Структура, ПередаваемыеНастройки));
			ОповещениеЗакрытия = Новый ОписаниеОповещения("НастроитьУсловияЗавершение", ЭтотОбъект);
			
			ОткрытьФорму("ВнешняяОбработка." + CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "НазваниеОбработки") + ".Форма", ПараметрыОткрытия, ЭтаФорма,,,, ОповещениеЗакрытия, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНастройкиСКД()
	КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпановщикНастроекУсловий.ЗагрузитьНастройки(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
	КомпановщикНастроекУсловий.Восстановить();
КонецПроцедуры	

&НаКлиенте
Процедура НастроитьУсловияЗавершениеСКД(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификатор);
		ОбновитьНастройкиСКД();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьУсловияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьУсловияПродолжение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	АдресОбработкиУсловий = Адрес;
	ОбработкаУсловий = ПолучитьОбработкуПоАдресу(АдресОбработкиУсловий);
	ПараметрыОткрытия = Новый Структура;
	ПередаваемыеНастройки = ПолучитьИзВременногоХранилища(АдресНастроекУсловий);
	ПараметрыОткрытия.Вставить("Настройки", ?(ПередаваемыеНастройки = Неопределено, Новый Структура, ПередаваемыеНастройки));
	ОповещениеЗакрытия = Новый ОписаниеОповещения("НастроитьУсловияЗавершение", ЭтотОбъект);
	ОткрытьФорму("ВнешняяОбработка." + ОбработкаУсловий + ".Форма", ПараметрыОткрытия, ЭтаФорма,,,, ОповещениеЗакрытия, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаСервере
Функция ПолучитьДвоичныеДанныеИзХранилища(ОбъектПолучения, Реквизит)
	тмпОбъект = РеквизитФормыВЗначение("Объект");
	Возврат(тмпОбъект[ОбъектПолучения][Реквизит].Получить());
КонецФункции

&НаКлиенте
Функция ПолучитьИмяФайлаОбработкиДействий()
	#Если Не ВебКлиент Тогда
		Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "РежимОтладки") Тогда
			ИмяВременногоФайла = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "ПутьКОбработке");
		Иначе
			ДанныеФайла =  ПолучитьДвоичныеДанныеИзХранилища("Действие", "ОбработкаДействия");
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла("epf");
			ДанныеФайла.Записать(ИмяВременногоФайла);
		КонецЕсли;	
	#Иначе
		ИмяВременногоФайла = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "ПутьКОбработке");
	#КонецЕсли
	Возврат ИмяВременногоФайла;

КонецФункции

&НаКлиенте
Процедура НастроитьДействие(Команда)
	Если НЕ Объект.Действие.Пустая() Тогда
		ВернутьОбработкуДействия();
		ПараметрыОткрытия = Новый Структура;
		ПередаваемыеНастройки = ПолучитьИзВременногоХранилища(АдресНастроекДействий);
		Если ПередаваемыеНастройки = Неопределено Тогда
			ПередаваемыеНастройки = Новый Структура();
			
		КонецЕсли;	
		ПередаваемыеНастройки.Вставить("УсловиеСрабатывания", Объект.УсловиеСрабатывания);
		ПараметрыОткрытия.Вставить("Настройки", ПередаваемыеНастройки);
		ОповещениеЗакрытия = Новый ОписаниеОповещения("НастроитьДействияЗавершение", ЭтотОбъект);
		ОткрытьФорму("ВнешняяОбработка." + CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Действие, "НазваниеОбработки") + ".Форма", ПараметрыОткрытия, ЭтаФорма,,,, ОповещениеЗакрытия, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
КонецПроцедуры

//&НаКлиенте
//Процедура НастроитьДействиеПродолжение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
//	АдресОбработкиДействий = Адрес;
//	ОбработкаДействий = ПолучитьОбработкуПоАдресу(АдресОбработкиДействий);
//	ПараметрыОткрытия = Новый Структура;
//	ПередаваемыеНастройки = ПолучитьИзВременногоХранилища(АдресНастроекДействий);
//	Если ПередаваемыеНастройки = Неопределено Тогда
//		ПередаваемыеНастройки = Новый Структура();
//		
//	КонецЕсли;	
//	ПередаваемыеНастройки.Вставить("УсловиеСрабатывания", Объект.УсловиеСрабатывания);
//	ПараметрыОткрытия.Вставить("Настройки", ПередаваемыеНастройки);
//	ОповещениеЗакрытия = Новый ОписаниеОповещения("НастроитьДействияЗавершение", ЭтотОбъект);
//	ОткрытьФорму("ВнешняяОбработка." + ОбработкаДействий + ".Форма", ПараметрыОткрытия, ЭтаФорма,,,, ОповещениеЗакрытия, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

//КонецПроцедуры

&НаКлиенте
Процедура НастроитьДействияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		АдресНастроекДействий = ПоместитьВоВременноеХранилище(Результат, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.НастройкиУсловий = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекУсловий));
	ТекущийОбъект.НастройкиДействий = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекДействий));
	ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных));
	ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
КонецПроцедуры

&НаСервере
Процедура УсловиеСрабатыванияПриИзмененииНаСервере()
	
	Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД") Тогда
		ОбъектЗначение = РеквизитФормыВЗначение("Объект");
		СхемаСКД = ОбъектЗначение.УсловиеСрабатывания.ХранилищеСхемыКомпоновкиДанных.Получить();
		Если СхемаСКД = Неопределено Тогда 
			СхемаСКД = Новый СхемаКомпоновкиДанных();
		КонецЕсли;
		АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаСКД, УникальныйИдентификатор);
		НастройкиСКД = ОбъектЗначение.УсловиеСрабатывания.ХранилищеНастроекКомпоновкиДанных.Получить();
		Если НастройкиСКД = Неопределено Тогда 
			КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
			КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));
			КомпоновщикНастроек.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
			НастройкиСКД = КомпоновщикНастроек.Настройки;
		КонецЕсли;
		АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(НастройкиСКД, УникальныйИдентификатор);
		КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
		КомпановщикНастроекУсловий.ЗагрузитьНастройки(НастройкиСКД);
		КомпановщикНастроекУсловий.Восстановить();
	Иначе	
		ВернутьОбработкуУсловий();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УсловиеСрабатыванияПриИзменении(Элемент)
	
	Если НЕ Объект.УсловиеСрабатывания.Пустая() Тогда
		
		Если Объект.УсловиеСрабатывания <> ПредопределенноеЗначение("Справочник.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию") Тогда
			Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД") Тогда
				УсловиеСрабатыванияПриИзмененииНаСервере();
			Иначе
				
				#Если Не ВебКлиент Тогда
					Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "РежимОтладки") Тогда
						ИмяФайлаОбработки = ПолучитьИмяФайлаОбработкиУсловий();
						НачатьПомещениеФайла(Новый ОписаниеОповещения("ИзменитьУсловияПродолжение", ЭтотОбъект), АдресОбработкиУсловий, ИмяФайлаОбработки, Ложь, УникальныйИдентификатор);
					Иначе
						АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
						УсловиеСрабатыванияПриИзмененииНаСервере();
						УправлениеВидимостьюЭлементов();
					КонецЕсли;
				#Иначе
					АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
					УсловиеСрабатыванияПриИзмененииНаСервере();
					УправлениеВидимостьюЭлементов();
				#КонецЕсли	
			КонецЕсли;
		КонецЕсли;
	Иначе
		АдресОбработкиУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);		
		АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	КонецЕсли;
	УправлениеВидимостьюЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьУсловияПродолжение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	АдресОбработкиУсловий = Адрес; 
	АдресНастроекУсловий = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	УсловиеСрабатыванияПриИзмененииНаСервере();
	УправлениеВидимостьюЭлементов();
КонецПроцедуры

&НаСервере
Процедура УсловиеСрабатыванияОчисткаНаСервере()
	ОбъектЗначение = РеквизитФормыВЗначение("Объект");
	СхемаСКД = Новый СхемаКомпоновкиДанных();
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаСКД, УникальныйИдентификатор);
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию);
	НастройкиСКД = КомпоновщикНастроек.Настройки;
	АдресНастроекКомпоновкиДанных = ПоместитьВоВременноеХранилище(НастройкиСКД, УникальныйИдентификатор);
	КомпановщикНастроекУсловий.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных));
	КомпановщикНастроекУсловий.ЗагрузитьНастройки(НастройкиСКД);
	КомпановщикНастроекУсловий.Восстановить();
	Если ЗначениеЗаполнено(Объект.УсловиеСрабатывания) Тогда
		//Элементы.ГруппаНастройки.Видимость = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.УсловиеСрабатывания, "ИспользоватьСКД"); 
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УсловиеСрабатыванияОчистка(Элемент, СтандартнаяОбработка)
	УсловиеСрабатыванияОчисткаНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетОРаботе(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючВарианта", "Основной");
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
	
	Отбор = Новый Структура;
	
	////
	Отбор.Вставить("Триггер", Объект.Ссылка);
	////
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	ФормаРасшифровки = ПолучитьФорму("Отчет.CRM_РаботаТриггеров.Форма", ПараметрыФормы);
	ОтборТриггер = Новый ПолеКомпоновкиДанных("Триггер"); 
	Для Каждого ЭлементОтбора ИЗ ФормаРасшифровки.Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ОтборТриггер Тогда 
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;	
	КонецЦикла;	
	ФормаРасшифровки.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюЭлементов()
	ЭтоТриггерСобытия = Объект.УсловиеСрабатывания <> ПредопределенноеЗначение("Справочник.CRM_УсловияСрабатыванияТриггеров.ПоРасписанию");
	Элементы.НастроитьРасписание.Видимость = НЕ ЭтоТриггерСобытия;
	Если НЕ Объект.УсловиеСрабатывания.Пустая() Тогда
		Элементы.НастроитьУсловия.Видимость = ЭтоТриггерСобытия;
	Иначе
		Элементы.ГруппаНастройки.Видимость = Ложь;	
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРасписаниеНаСервере(УникальныйИдентификаторЗадания)
	GUIDЗадания = Новый УникальныйИдентификатор(УникальныйИдентификаторЗадания);
	РегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(GUIDЗадания);
	Если РегламентноеЗадание = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат РегламентноеЗадание.Расписание;
КонецФункции

&НаСервереБезКонтекста
Функция ЗаписатьРасписаниеНаСервере(УникальныйИдентификаторЗадания, Расписание, Включен)
	GUIDЗадания = Новый УникальныйИдентификатор(УникальныйИдентификаторЗадания);
	РегламентноеЗадание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(GUIDЗадания);
	Если РегламентноеЗадание = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	РегламентноеЗадание.Расписание = Расписание;
	РегламентноеЗадание.Использование = (Строка(Расписание) <> "один день; один раз в день" И Включен);
	РегламентноеЗадание.Записать();
КонецФункции

&НаКлиенте
Процедура НастроитьРасписание(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.УникальныйИдентификаторЗадания) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Триггер не записан, настройка расписания не доступна!'"));
		Возврат;
	КонецЕсли;
	Расписание = ПолучитьРасписаниеНаСервере(Объект.УникальныйИдентификаторЗадания);
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	ОписаниеОповещения = Новый ОписаниеОповещения("НастроитьРасписаниеЗавершение", ЭтотОбъект);
	Диалог.Показать(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасписаниеЗавершение(Расписание, ДополнительныеПараметры) Экспорт
	Если Расписание<>Неопределено Тогда
		ЗаписатьРасписаниеНаСервере(Объект.УникальныйИдентификаторЗадания, Расписание, Объект.Действует);
	КонецЕсли;
КонецПроцедуры

