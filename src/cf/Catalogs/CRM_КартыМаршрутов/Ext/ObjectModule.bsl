#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ 

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// При необходимости создадим или изменим соответствующий набор свойств
	Если НЕ Отказ Тогда
		ОбновитьРеквизитНаборСвойств();
	КонецЕсли;
	
	// Подсистема Свойства
	УправлениеСвойствами.ПередЗаписьюВидаОбъекта(ЭтотОбъект, "Справочник_CRM_КартыМаршрутов");
	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	МетаданныеОбъекта = Метаданные();
	
	Если Не ЭтоГруппа Тогда
		
		НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.ПустаяСсылка();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Прочее

Функция НаборСвойствНужноИзменить(НаборСвойств)
	
	Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НаборСвойств, Новый Структура("Наименование,ПометкаУдаления"));
	Возврат (Результат.Наименование <> Наименование) ИЛИ (Результат.ПометкаУдаления <> ПометкаУдаления);
	
КонецФункции

Процедура ОбновитьРеквизитНаборСвойств()
	
	Если НЕ ЗначениеЗаполнено(НаборСвойств) Тогда
		
		ОбъектНабора = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
		
	Иначе
		
		Если НЕ НаборСвойствНужноИзменить(НаборСвойств) Тогда
			Возврат;
		КонецЕсли;
		
		ОбъектНабора = НаборСвойств.ПолучитьОбъект();
		
	КонецЕсли;
	
	ОбъектНабора.Наименование    = Наименование;
	ОбъектНабора.Родитель        = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_CRM_КартыМаршрутов;
	ОбъектНабора.ПометкаУдаления = ПометкаУдаления;
	ОбъектНабора.Записать();
	
	НаборСвойств = ОбъектНабора.Ссылка;
	
КонецПроцедуры 



#КонецЕсли