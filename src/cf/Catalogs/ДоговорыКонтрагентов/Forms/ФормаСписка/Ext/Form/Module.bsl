
&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ++ VOG Солодов В.В. 09.09.2019 task 636
	// Закомментировал
	// До изменения
	// +CRM
	//CRM_ОбщегоНазначенияСервер.УстановитьКнопкиПечати(Список.ОсновнаяТаблица, ЭтотОбъект);
	// -CRM
	// -- VOG Солодов В.В. 09.09.2019
	
	// ++ VOG Солодов В.В. 25.06.2021 DEV-127
	КлассификаторСтатусЮрЛица_УИД = Новый УникальныйИдентификатор("602901f0-3e4b-11e9-b0ca-005056bcd3e3");
	КлассификаторСтатусЮрЛица = ПланыВидовХарактеристик.CRM_Классификаторы.ПолучитьСсылку(КлассификаторСтатусЮрЛица_УИД);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список,
		"КлассификаторСтатусЮридическогоЛица",
		КлассификаторСтатусЮрЛица);
	// -- VOG Солодов В.В. 25.06.2021 DEV-127

КонецПроцедуры // ПриСозданииНаСервере()

// +CRM

&НаКлиенте
Процедура Подключаемый_ПечатьВнешнегоМакета(Команда)
	
	ИмяМакета = СтрЗаменить(Команда.Имя, "Печать_", "");
	
	ОбъектыНазначения = Новый СписокЗначений;
	ОбъектыНазначения.ЗагрузитьЗначения(Элементы.Список.ВыделенныеСтроки);
	
	CRM_УправлениеПечатьюКлиент.ПечатьВнешнегоМакета(ИмяМакета, ОбъектыНазначения);
	
КонецПроцедуры


// -CRM

//СК++

&НаКлиенте
Процедура ПечатьПоТипу(Команда)
	
	Для каждого Стр Из Элементы.Список.ВыделенныеСтроки Цикл
		
		ИмяМакета = ПолучитьИмяМакета(Стр);
		Если ПустаяСтрока(ИмяМакета) Тогда
			Продолжить;		
		КонецЕсли; 
		
		ОбъектыНазначения = Новый СписокЗначений;
		ОбъектыНазначения.Добавить(Стр);
		
		CRM_УправлениеПечатьюКлиент.ПечатьВнешнегоМакета(ИмяМакета, ОбъектыНазначения);
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИмяМакета(Договор)
		
	Возврат Договор.вогТипДоговора.ИмяМакета;
	
КонецФункции

//СК--

// ++ VOG Солодов В.В. 25.06.2021 DEV-127
#Область ОбработчикиСобытийТаблицыФормы_Список

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент) // ++ VOG Солодов В.В. 22.06.2020 CRM-658
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// ++ VOG Солодов В.В. 25.06.2021 DEV-127
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если Не ТекущиеДанные = Неопределено Тогда
		ДоговорКонтрагента = ТекущиеДанные.Ссылка;
	Иначе
		ДоговорКонтрагента = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокКоммерческиеСоглашения,
		"ДоговорКонтрагента",
		ДоговорКонтрагента,
		ВидСравненияКомпоновкиДанных.Равно,
		,
		Истина);
	// -- VOG Солодов В.В. 25.06.2021 DEV-127
	
КонецПроцедуры

#КонецОбласти
// -- VOG Солодов В.В. 25.06.2021 DEV-127

// ++ VOG Солодов В.В. 09.09.2019 task 636
#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемыПодключаемыеКоманды

&НаКлиенте 
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
// -- VOG Солодов В.В. 09.09.2019
