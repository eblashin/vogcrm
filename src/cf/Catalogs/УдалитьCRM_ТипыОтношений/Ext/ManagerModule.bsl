#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура УдалениеСправочникаCRMТипыОтношений() Экспорт 
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДополнительныеРеквизитыИСведения.Ссылка КАК Ссылка,
	                      |	ДополнительныеРеквизитыИСведения.ТипЗначения КАК ТипЗначения
	                      |ИЗ
	                      |	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	CRM_ДополнительнаяИнформация.Ссылка,
	                      |	CRM_ДополнительнаяИнформация.ТипЗначения
	                      |ИЗ
	                      |	ПланВидовХарактеристик.CRM_ДополнительнаяИнформация КАК CRM_ДополнительнаяИнформация");
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	ИскомыеСсылки = Новый Массив;
	Пока Выборка.Следующий() Цикл
		Если Выборка.ТипЗначения.СодержитТип(Тип("СправочникСсылка.CRM_ТипыОтношений")) Тогда
			ИскомыеСсылки.Добавить(Выборка.Ссылка); 
		КонецЕсли;
	КонецЦикла;
	НайденныеПоСсылкам = НайтиПоСсылкам(ИскомыеСсылки);
	Для каждого Найденный из НайденныеПоСсылкам Цикл
		Если ТипЗнч(Найденный.Данные) = Тип("СправочникСсылка.НаборыДополнительныхРеквизитовИСведений") Тогда
			
			НайденныйОбъект = Найденный.Данные.ПолучитьОбъект();
			Строка = НайденныйОбъект.ДополнительныеРеквизиты.Найти(Найденный.Ссылка);
			Если Строка<>Неопределено Тогда
				НайденныйОбъект.ДополнительныеРеквизиты.Удалить(Строка);
			КонецЕсли;
			Строка = НайденныйОбъект.ДополнительныеСведения.Найти(Найденный.Ссылка);
			Если Строка<>Неопределено Тогда
				НайденныйОбъект.ДополнительныеСведения.Удалить(Строка);
			КонецЕсли;
			НайденныйОбъект.ОбменДанными.Загрузка = Истина;
			НайденныйОбъект.Записать();
			
		ИначеЕсли Метаданные.Справочники.Содержит(Найденный.Метаданные) ИЛИ Метаданные.Документы.Содержит(Найденный.Метаданные) ИЛИ Метаданные.БизнесПроцессы.Содержит(Найденный.Метаданные) Тогда
			
			НайденныйОбъект = Найденный.Данные.ПолучитьОбъект();
			Если Найденный.Метаданные.ТабличныеЧасти.Найти("ДополнительныеРеквизиты") <> Неопределено Тогда
				Строка = НайденныйОбъект.ДополнительныеРеквизиты.Найти(Найденный.Ссылка);
				Если Строка<>Неопределено Тогда
					НайденныйОбъект.ДополнительныеРеквизиты.Удалить(Строка);
				КонецЕсли;
			КонецЕсли;
			Если Найденный.Метаданные.ТабличныеЧасти.Найти("CRM_ДополнительнаяИнформация") <> Неопределено Тогда
				Строка = НайденныйОбъект.CRM_ДополнительнаяИнформация.Найти(Найденный.Ссылка);
				Если Строка<>Неопределено Тогда
					НайденныйОбъект.CRM_ДополнительнаяИнформация.Удалить(Строка);
				КонецЕсли;
			КонецЕсли;
			НайденныйОбъект.ОбменДанными.Загрузка = Истина;
			НайденныйОбъект.Записать();
			
		ИначеЕсли Метаданные.РегистрыСведений.Содержит(Найденный.Метаданные) Тогда
			
			Менеджер = РегистрыСведений[Найденный.Метаданные.Имя].СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Менеджер, Найденный.Данные);
			Менеджер.Удалить();
			
		КонецЕсли;	
	КонецЦикла;
	Для каждого Ссылка из ИскомыеСсылки Цикл
		ОбъектПВХ = Ссылка.ПолучитьОбъект();
		ОбъектПВХ.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли