
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
#Область ЭКСПОРТНЫЕ_ПРОЦЕДУРЫ_И_ФУНКЦИИ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВысотаШапки = 3;
	
		
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Цвет = Объект.Ссылка.Цвет.Получить();
	Иначе
		ЗначениеКопирования = Неопределено;
		Параметры.Свойство("ЗначениеКопирования", ЗначениеКопирования);
		Если ЗначениеКопирования <> Неопределено Тогда
			Цвет = ЗначениеКопирования.Цвет.Получить();
		Иначе
			Цвет = Новый Цвет(0, 0, 0);
		КонецЕсли;
	КонецЕсли;
	
	ЦветЗанятогоПериода = ЦветаСтиля.РабочееВремяЗанятоПолностью;
	ЦветСвободногоПериода = ЦветаСтиля.РабочееВремяСвободноДоступно;
		
	ВывестиГрафик();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.Цвет = Новый ХранилищеЗначения(Цвет);
	
КонецПроцедуры // ПередЗаписьюНаСервере()


#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ЭЛЕМЕНТОВ_ФОРМЫ

&НаКлиенте
Процедура ПериодыПриИзменении(Элемент)
	
	ОбновитьПредставлениеРасписания();
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ОБРАБОТЧИКИ_КОМАНД_ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьПоДругомуГрафику(Команда)
	
	ОписаниеОповещенияОтветПерезаполения = Новый ОписаниеОповещения("ОписаниеОповещенияОтветПерезаполения", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещенияОтветПерезаполения, "Перезаполнить текущий график по другому?", РежимДиалогаВопрос.ДаНет,,, "Перезаполнение графика");
		
КонецПроцедуры


// Процедура - обработчик нажатия кнопки ОтметитьВыбранноеКакРабочее.
//
&НаКлиенте
Процедура ОтметитьВыбранноеКакРабочее(Команда)
	
	КоличествоДней = ПолучитьКоличествоДнейГрафика();
	УстановитьЦветФонаВыбраннымОбластям(КоличествоДней, ЦветЗанятогоПериода);
	ЗаполнитьПериодыПоРасписаниюГрафика(КоличествоДней);
	ВывестиСуммуЧасовНаКлиенте(КоличествоДней);
	
	ОбновитьПредставлениеРасписания();
	
КонецПроцедуры // ОтметитьВыбранноеКакРабочее()

// Процедура - обработчик нажатия кнопки ОтметитьВыбранноеКакНеРабочее.
//
&НаКлиенте
Процедура ОтметитьВыбранноеКакНеРабочее(Команда)
	
	КоличествоДней = ПолучитьКоличествоДнейГрафика();
	УстановитьЦветФонаВыбраннымОбластям(КоличествоДней, ЦветСвободногоПериода);
	ЗаполнитьПериодыПоРасписаниюГрафика(КоличествоДней);
	ВывестиСуммуЧасовНаКлиенте(КоличествоДней);
	
	ОбновитьПредставлениеРасписания();
	
КонецПроцедуры // ОтметитьВыбранноеКакНеРабочее()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ОПИСАНИЯ_ОПОВЕЩЕНИЙ

&НаКлиенте
Процедура ОписаниеОповещенияОтветПерезаполения(Ответ, Доп) Экспорт
	
	Если НЕ Ответ = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещенияЗаполнениеПоДругомуГрафику = Новый ОписаниеОповещения("ОповещениеОбработчикЗаполнениеПоДругомуГрафику", ЭтотОбъект);

	ОткрытьФорму("Справочник.вогГрафикиРаботы.ФормаВыбора",, ЭтаФорма,,,, ОписаниеОповещенияЗаполнениеПоДругомуГрафику); 
	
КонецПроцедуры // ОписаниеОповещенияОтветПерезаполения

&НаКлиенте
Процедура ОповещениеОбработчикЗаполнениеПоДругомуГрафику(Значение, Доп) Экспорт 

	Если Значение=Неопределено Тогда
		Возврат;
	КонецЕсли;

	ПерезаполнитьДанныеПоДругомуГрафику(Значение);

КонецПроцедуры // ОповещениеОбработчикЗаполнениеПоДругомуГрафику()


#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ДЛЯ_УПРАВЛЕНИЯ_ВНЕШНИМ_ВИДОМ_ФОРМЫ

&НаСервере
Процедура ОбновитьПредставлениеРасписания()
	
	ТаблицаПериодов = Объект.Периоды.Выгрузить();
	
		
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ__ДЕЙСТВИЯ_КОМАНДНЫХ_ПАНЕЛЕЙ_ФОРМЫ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ_ОБРАБОТКИ_СВОЙСТВ_И_КАТЕГОРИЙ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область СЛУЖЕБНЫЕ

Процедура ПерезаполнитьДанныеПоДругомуГрафику(ДругойГрафик)
	
	Объект.Периоды.Загрузить(ДругойГрафик.Периоды.Выгрузить());
	
	ВывестиГрафик();
	
	ОбновитьПредставлениеРасписания();
	
КонецПроцедуры

// Процедура выводит график.
//
&НаСервере
Процедура ВывестиГрафик()
	
	ВывестиГрафикПоДнямНедели();
	
КонецПроцедуры // ВывестиГрафик()

// Процедура выводит график недельного типа.
//
&НаСервере
Процедура ВывестиГрафикПоДнямНедели()
	
	РасписаниеГрафика.Очистить();
	
	МакетРасписаниеПоГрафику = Справочники.вогГрафикиРаботы.ПолучитьМакет("РасписаниеГрафика");
	ОбластьМакета = МакетРасписаниеПоГрафику.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ТекстКолонка = "Дни недели";
	РасписаниеГрафика.Вывести(ОбластьМакета);
	ОбластьМакета = МакетРасписаниеПоГрафику.ПолучитьОбласть("Календарь");
	РасписаниеГрафика.Вывести(ОбластьМакета);
	
	МассивСуммаЧасов = Новый Массив(7);
	Для Сч = 0 По 6 Цикл
		МассивСуммаЧасов[Сч] = 0;
	КонецЦикла;
	
	Для каждого Период Из Объект.Периоды Цикл
		Для ТекКолонка = 1 по 96 Цикл
			ТекПериодКонец = '00010101' + ТекКолонка * 900 - 1;
			ТекПериодНачало = ТекПериодКонец - 899;
			СтрокаТаблицы = Период.НомерДня + ВысотаШапки;
			КолонкаТаблицы = ТекКолонка + 2;
			Область = РасписаниеГрафика.Область("R" + СтрокаТаблицы + "C" + КолонкаТаблицы);
			Если ТекПериодНачало >= Период.ВремяНачала
			  И ТекПериодКонец <= Период.ВремяОкончания Тогда
				Область.ЦветФона = ЦветаСтиля.РабочееВремяЗанятоПолностью;
			КонецЕсли;
		КонецЦикла;
		СуммаЧасов = Период.ВремяОкончания - Период.ВремяНачала;
		МассивСуммаЧасов[Период.НомерДня - 1] = МассивСуммаЧасов[Период.НомерДня - 1] + СуммаЧасов;
	КонецЦикла;
	
	РасписаниеГрафика.ФиксацияСверху = ВысотаШапки;
	РасписаниеГрафика.ФиксацияСлева = 2;
	
	ВывестиСуммуЧасовНаСервере(7);
	
КонецПроцедуры // ВывестиГрафикПоДнямНедели()

// Процедура устанавливает цвет выбранным областям.
//
&НаКлиенте
Процедура УстановитьЦветФонаВыбраннымОбластям(КоличествоДней, Цвет)
	
	ВыделенныеОбласти = РасписаниеГрафика.ВыделенныеОбласти;
	
	Для каждого ТекОбласть Из ВыделенныеОбласти Цикл
		
		Если ТипЗнч(ТекОбласть) <> Тип("ОбластьЯчеекТабличногоДокумента") Тогда
			Продолжить;
		КонецЕсли;
		
		Для ТекСтрока = ТекОбласть.Верх По ТекОбласть.Низ Цикл
			Для ТекКолонка = ТекОбласть.Лево По ТекОбласть.Право Цикл
				Если ТекКолонка >= 3 И ТекКолонка <= 98 И ТекСтрока >= ВысотаШапки + 1 И ТекСтрока <= КоличествоДней + ВысотаШапки Тогда
					Область = РасписаниеГрафика.Область("R" + ТекСтрока + "C" + ТекКолонка);
					Область.ЦветФона = Цвет;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры // УстановитьЦветФонаВыбраннымОбластям()

// Процедура выводит сумму часов на сервере.
//
&НаСервере
Процедура ВывестиСуммуЧасовНаСервере(КоличествоДней)
	
	Объект.ДлительностьРабочейНедели = 0;
	ДлительностьРабочейНедели = 0;
	
	Если КоличествоДней = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивСуммаЧасов = Новый Массив(КоличествоДней);
	Для Сч = 0 По КоличествоДней - 1 Цикл
		МассивСуммаЧасов[Сч] = 0;
	КонецЦикла;
	
	Для каждого Период Из Объект.Периоды Цикл
		СуммаЧасов = ?(Период.ВремяОкончания = Дата(1, 1, 1, 23, 59, 59), Период.ВремяОкончания + 1, Период.ВремяОкончания) - Период.ВремяНачала;
		СуммаЧасов = ?(СуммаЧасов < 0, 0, СуммаЧасов);
		Если МассивСуммаЧасов.Количество() >= Период.НомерДня Тогда
			МассивСуммаЧасов[Период.НомерДня - 1] = МассивСуммаЧасов[Период.НомерДня - 1] + СуммаЧасов;
		КонецЕсли;
		ДлительностьРабочейНедели = ДлительностьРабочейНедели + СуммаЧасов;
	КонецЦикла;
	
	Для Сч = 1 По КоличествоДней Цикл
		Если МассивСуммаЧасов[Сч-1] >= 86399 Тогда
			СуммаЧасовСтрока = "24:00";
		Иначе
			СуммаЧасовСтрока = Формат(Дата(1, 1, 1, Цел(МассивСуммаЧасов[Сч-1] / 3600), (МассивСуммаЧасов[Сч-1] / 3600 - Цел(МассивСуммаЧасов[Сч-1] / 3600)) * 60, 0), "ДФ=ЧЧ:мм");
		КонецЕсли;
		Область = РасписаниеГрафика.Область("R" + Строка(Сч + ВысотаШапки) + "C2");
		Область.Текст = ?(ЗначениеЗаполнено(СуммаЧасовСтрока), СуммаЧасовСтрока, "00:00") + " ч.";
	КонецЦикла;
	
	Объект.ДлительностьРабочейНедели = ДлительностьРабочейНедели / 3600;
	
КонецПроцедуры // ВывестиСуммуЧасовНаСервере()

// Процедура выводит сумму часов на клиенте.
//
&НаКлиенте
Процедура ВывестиСуммуЧасовНаКлиенте(КоличествоДней)
	
	Объект.ДлительностьРабочейНедели = 0;
	ДлительностьРабочейНедели = 0;
	
	Если КоличествоДней = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивСуммаЧасов = Новый Массив(КоличествоДней);
	Для Сч = 0 По КоличествоДней - 1 Цикл
		МассивСуммаЧасов[Сч] = 0;
	КонецЦикла;
	
	Для каждого Период Из Объект.Периоды Цикл
		СуммаЧасов = ?(Период.ВремяОкончания = Дата(1, 1, 1, 23, 59, 59), Период.ВремяОкончания + 1, Период.ВремяОкончания) - Период.ВремяНачала;
		СуммаЧасов = ?(СуммаЧасов < 0, 0, СуммаЧасов);
		Если МассивСуммаЧасов.Количество() >= Период.НомерДня Тогда
			МассивСуммаЧасов[Период.НомерДня - 1] = МассивСуммаЧасов[Период.НомерДня - 1] + СуммаЧасов;
		КонецЕсли;
		ДлительностьРабочейНедели = ДлительностьРабочейНедели + СуммаЧасов;
	КонецЦикла;
	
	Для Сч = 1 По КоличествоДней Цикл
		Если МассивСуммаЧасов[Сч-1] >= 86399 Тогда
			СуммаЧасовСтрока = "24:00";
		Иначе
			СуммаЧасовСтрока = Формат(Дата(1, 1, 1,Цел(МассивСуммаЧасов[Сч-1] / 3600), (МассивСуммаЧасов[Сч-1] / 3600 - Цел(МассивСуммаЧасов[Сч-1] / 3600)) * 60, 0), "ДФ=ЧЧ:мм");
		КонецЕсли;
		Область = РасписаниеГрафика.Область("R" + Строка(Сч + ВысотаШапки) + "C2");
		Область.Текст = ?(ЗначениеЗаполнено(СуммаЧасовСтрока), СуммаЧасовСтрока, "00:00") + " ч.";
	КонецЦикла;
	
	Объект.ДлительностьРабочейНедели = ДлительностьРабочейНедели / 3600;
	
КонецПроцедуры // ВывестиСуммуЧасовНаКлиенте()

// Функция возвращает количество дней в графике.
&НаКлиенте
Функция ПолучитьКоличествоДнейГрафика()
	
	//Если Строка(Объект.ТипГрафика) = "Сменный" Тогда
	//	КоличествоЭлементовМассива = Объект.Периоды.Количество();
	//	Если КоличествоЭлементовМассива = 0 Тогда
	//		Возврат 0;
	//	КонецЕсли;
	//	КоличествоРазличныхЭлементовМассива = 1;
	//	Для НомерДня = 1 По КоличествоЭлементовМассива - 1 Цикл
	//		Сч = НомерДня + 1;
	//		Пока Сч <= КоличествоЭлементовМассива И Объект.Периоды[НомерДня - 1].НомерДня <> Объект.Периоды[Сч - 1].НомерДня Цикл
	//			Сч = Сч + 1;
	//			Если Сч = КоличествоЭлементовМассива + 1 Тогда
	//				КоличествоРазличныхЭлементовМассива = КоличествоРазличныхЭлементовМассива + 1;
	//			КонецЕсли;
	//		КонецЦикла
	//	КонецЦикла;
	//	Возврат КоличествоРазличныхЭлементовМассива;
	//ИначеЕсли ЗначениеЗаполнено(Объект.ТипГрафика) Тогда
		Возврат 7;
	//Иначе
	//	Возврат 0;
	//КонецЕсли;
	
КонецФункции // ПолучитьКоличествоДнейГрафика()

// Процедура заполняет периоды по расписанию графика.
//
&НаКлиенте
Процедура ЗаполнитьПериодыПоРасписаниюГрафика(КоличествоДней)
	
	Объект.Периоды.Очистить();
	ОткрытИнтервал = Ложь;
	
	Для ТекСтрока = ВысотаШапки + 1 По КоличествоДней + ВысотаШапки Цикл
		
		ПустойДень = Истина;
		
		Для ТекКолонка = 3 По 98 Цикл
			
			Область = РасписаниеГрафика.Область("R" + ТекСтрока + "C" + ТекКолонка);
			Если Область.ЦветФона = ЦветЗанятогоПериода Тогда
				Если НЕ ОткрытИнтервал Тогда
					ОткрытИнтервал = Истина;
					НоваяСтрока = Объект.Периоды.Добавить();
					НоваяСтрока.НомерДня = ТекСтрока - ВысотаШапки;
					НоваяСтрока.ВремяНачала = '00010101' + (ТекКолонка - 3) * 900;
					ПустойДень = Ложь;
				КонецЕсли;
			Иначе
				Если ОткрытИнтервал Тогда
					ОткрытИнтервал = Ложь;
					НоваяСтрока.ВремяОкончания = '00010101' + (ТекКолонка - 3) * 900;
				КонецЕсли;
			КонецЕсли;
			
			Если ТекКолонка = 98 И ОткрытИнтервал Тогда
				ОткрытИнтервал = Ложь;
				НоваяСтрока.ВремяОкончания = '00010101' + 86399;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ПустойДень Тогда
			
			НоваяСтрока = Объект.Периоды.Добавить();
			НоваяСтрока.НомерДня = ТекСтрока - ВысотаШапки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьПериодыПоРасписаниюГрафика()


#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ТАБЛИЧНОГО_ПОЛЯ__
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ОПЕРАТОРЫ_ОСНОВНОЙ_ПРОГРАММЫ
#КонецОбласти

