
&НаСервере
Процедура УстановитьВидимостьРеквизитовКИ()
	
	// Выключить команды
	Если НЕ (Элементы.Найти("КомандаКонтактнаяИнформацияПоле1ОтправитьEmail") = Неопределено) Тогда
		Элементы.КомандаКонтактнаяИнформацияПоле1ОтправитьEmail.Видимость	= Ложь;
	КонецЕсли;	
	Если НЕ (Элементы.Найти("КомандаКонтактнаяИнформацияПоле0ОтправитьСМСНаНомер") = Неопределено) Тогда
		Элементы.КомандаКонтактнаяИнформацияПоле0ОтправитьСМСНаНомер.Видимость	= Ложь;
	КонецЕсли;	
	Если НЕ (Элементы.Найти("КомандаКонтактнаяИнформацияПоле0ПозвонитьНаНомер") = Неопределено) Тогда
		Элементы.КомандаКонтактнаяИнформацияПоле0ПозвонитьНаНомер.Видимость	= Ложь;
	КонецЕсли;	
	СтруктураОтбора	= Новый Структура("Родитель, Выводить", Справочники.ВидыКонтактнойИнформации.СправочникCRM_ПотенциальныеКлиенты, Ложь);
	Для Каждого СтрокаДопРеквизита Из ЭтотОбъект["КонтактнаяИнформацияОписаниеДополнительныхРеквизитов"] Цикл
		Выводить = Истина;
		//СтруктураОтбора		= Новый Структура("ИмяРеквизита,ЭтоКоманда", СтрокаДопРеквизита.ИмяРеквизита, Ложь);
		//МассивИмен = ЭтаФорма.ДобавленныеЭлементыКонтактнойИнформации.НайтиСтроки(СтруктураОтбора);
		
		//Для Каждого СтрокаДобавленногоРеквизита ИЗ ЭтаФорма.ПараметрыКонтактнойИнформации.ДобавленныеЭлементы Цикл
		//	Если СтрокаДобавленногоРеквизита.Пометка Тогда
		//		Продолжить;
		//	КонецЕсли;
		//	
		//	Если Найти(СтрокаДобавленногоРеквизита.Значение, СтрокаДопРеквизита.ИмяРеквизита) Тогда
		//		СкрыватьПолеКИ = (СтрокаДопРеквизита.Комментарий = "Не выводить");
		//		Элементы[СтрокаДобавленногоРеквизита.Значение].Видимость = ((СтрокаДопРеквизита.Выводить И НЕ СкрыватьПолеКИ) ИЛИ (РедактироватьДР ИЛИ флаг_1));
		//	КонецЕсли;
		//КонецЦИкла;
		
				
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].ЦветТекстаЗаголовка	= Новый Цвет();
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].ШрифтЗаголовка		= Новый Шрифт();
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].Подсказка				= "";
			
			Если Элементы[СтрокаДопРеквизита.ИмяРеквизита].Вид = ВидПоляФормы.ПолеВвода Тогда
				Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаОчистки			= Неопределено;
				Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаВыбора			= Неопределено;
				Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаОткрытия		= Неопределено;
				Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаСпискаВыбора	= Неопределено;
				Элементы[СтрокаДопРеквизита.ИмяРеквизита].РедактированиеТекста	= Истина;
				Если СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Другое Тогда
					Элементы[СтрокаДопРеквизита.ИмяРеквизита].Высота = 5;
					Элементы[СтрокаДопРеквизита.ИмяРеквизита].МногострочныйРежим = Истина;
				КонецЕсли;
				Если (СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес)
					ИЛИ (СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон)
					ИЛИ (СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Факс) Тогда
					Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаВыбора				= Истина;
					Если СтрокаДопРеквизита.Вид.РедактированиеТолькоВДиалоге Тогда
						Элементы[СтрокаДопРеквизита.ИмяРеквизита].РедактированиеТекста	= Ложь;
						Элементы[СтрокаДопРеквизита.ИмяРеквизита].ЦветФона				= WebЦвета.Кремовый;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#Область ПроцедурыПодсистемыКонтактнаяИнформация

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОсновнойДляСвязи(Элемент)
	
	CRM_УправлениеКонтактнойИнформациейКлиент.ОсновнойДляСвязиНажатие(ЭтотОбъект, Элемент);
	
КонецПроцедуры // Подключаемый_КонтактнаяИнформацияОсновнойДляСвязи()

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		CRM_УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
		// Если это адрес электронной почты, то надо проверить на коррректность заполнения.
		РезультатПроверки = CRM_УправлениеКонтактнойИнформациейКлиент.CRM_ПолучитьТипПроверитьЗаполнение(ЭтотОбъект, Элемент);
		Если НЕ РезультатПроверки = Неопределено И РезультатПроверки.КодОшибки<>0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.Сообщение, , Элемент.Имя);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("CRM_УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("CRM_УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтправитьСМСНаНомер(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо записать элемент'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	ИначеЕсли CRM_ОбщегоНазначенияКлиент.смсПроверитьДоступностьSMS4B() Тогда
		ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
		ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "ОтправитьСМСНаНомер","");
		Телефон = ЭтотОбъект[ИмяРеквизита];
		Если ПустаяСтрока(Телефон) Тогда Возврат; КонецЕсли;
		Структура = Новый Структура();
		Структура.Вставить("Ссылка", Объект.Ссылка);
		Структура.Вставить("Телефон", ОтправкаSMSЧерезSMS4B.УбратьЛишниеСимволыТелефона(Телефон));
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Основание", Структура);
		ОткрытьФорму("Документ.СообщениеSMS.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтправитьEmail(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо записать элемент'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "ОтправитьEmail","");
	
	АдресЭлектроннойПочты = ЭтотОбъект[ИмяРеквизита];

	Если НЕ ЗначениеЗаполнено(СокрЛП(АдресЭлектроннойПочты)) Тогда
		
		Возврат;
		
	КонецЕсли;
		
	СтрРезультат = CRM_ОбщегоНазначенияКлиентСервер.АнализАдресаЭП(АдресЭлектроннойПочты);
	Если СтрРезультат.КодОшибки<>0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрРезультат.Сообщение,,ИмяРеквизита);
		Возврат;
	КонецЕсли;
	
	СписокАдресов = Новый СписокЗначений;
	
	СписокАдресов.Добавить(Объект.Ссылка, СтрРезультат.АдресЭП);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("СписокАдресов", СписокАдресов);
			
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПозвонитьНаНомер(Элемент)
	
	// +СофтФон
	сфпСофтФонПроКлиентПереопределяемый.сфпПодключаемый_ПозвонитьНаНомер(ЭтотОбъект, Объект);	
	// -СофтФон
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	
	CRM_УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат)
	CRM_УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНажатиеАдресаСайтаКомпании(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "РедактироватьАдресСайтаКомпании","");
	АдресСайтаКомпании = ЭтотОбъект[ИмяРеквизита];
	Если АдресСайтаКомпании = "<адрес сайта не указан>" Тогда
		Подключаемый_РедактироватьАдресСайтаКомпании(Элемент);
	Иначе
		Если Найти(АдресСайтаКомпании, "://") = 0 Тогда
			АдресСайтаКомпании = "http://" + АдресСайтаКомпании;
		КонецЕсли;	
		НачатьЗапускПриложения(Новый ОписаниеОповещения("ОбработчикОповещенияБезДействия", CRM_ОбщегоНазначенияКлиентСервер), АдресСайтаКомпании);	
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РедактироватьАдресСайтаКомпании(Элемент)
	
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "РедактироватьАдресСайтаКомпании","");
	АдресСайтаКомпании = ЭтотОбъект[ИмяРеквизита];
	Если АдресСайтаКомпании = "<адрес сайта не указан>" Тогда
		АдресСайтаКомпании = "";
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_РедактироватьАдресСайтаКомпанииЗавершение", ЭтотОбъект, ИмяРеквизита);
	ПоказатьВводСтроки(ОписаниеОповещения, АдресСайтаКомпании, "Введите адрес сайта"); 		
	
КонецПроцедуры // Подключаемый_РедактироватьАдресСайтаКомпании

&НаКлиенте
Процедура Подключаемый_РедактироватьАдресСайтаКомпанииЗавершение(АдресСайтаКомпании, ИмяРеквизита) Экспорт
	
	Если АдресСайтаКомпании <> Неопределено Тогда 		
		Если ПустаяСтрока(АдресСайтаКомпании) Тогда
			ЭтотОбъект[ИмяРеквизита] = "<адрес сайта не указан>";
		Иначе	
			ЭтотОбъект[ИмяРеквизита] = АдресСайтаКомпании;
		КонецЕсли;
			
		// +CRM
		ТекущийЭлементКонтактнойИнформации = Элементы[ИмяРеквизита];
		ТекущийЭлементКонтактнойИнформации.Заголовок = АдресСайтаКомпании;
		CRM_УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, ТекущийЭлементКонтактнойИнформации);
		Модифицированность = Истина;
		// -CRM
		
	КонецЕсли;	
	
КонецПроцедуры // Подключаемый_РедактироватьАдресСайтаКомпании

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	     	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	CRM_УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
	УстановитьВидимостьРеквизитовКИ();
	
	Если Объект.Ссылка.Пустая() И Параметры.Свойство("ПараметрыНового") Тогда
		Объект.Наименование = Параметры.ПараметрыНового.Наименование;
		
		МассивДопРеквизитов = ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Тип,Вид",Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты,Справочники.ВидыКонтактнойИнформации.CRM_EmailПотенциальногоКлиента));
		Если МассивДопРеквизитов.количество() > 0 Тогда
			ЭтотОбъект[МассивДопРеквизитов[0].ИмяРеквизита] = Параметры.ПараметрыНового.АдресПочты;
		КонецЕсли;
	КонецЕсли;
	
	// +СофтФон
	Если Параметры.Свойство("Основание") и ТипЗнч(Параметры.Основание) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		сфпЗвонок =  Параметры.Основание;
	КонецЕсли;	
	Если Параметры.Свойство("Основание") И ТипЗнч(Параметры.Основание) = Тип("Структура") Тогда
		Если Параметры.Основание.Свойство("Интерес") Тогда
			сфпИнтерес = Параметры.Основание.Интерес;
		КонецЕсли;			
	КонецЕсли;					
	// -СофтФон		
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
// Процедура - обработчик события формы "ПередЗаписьюНаСервере".
//
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.КонтактнаяИнформация
	CRM_УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка.Партнер) И ЗначениеЗаполнено(ТекущийОбъект.Партнер) Тогда
		CRM_ОбщегоНазначенияСервер.ПереопределитьПисьмаСПотенциальногоКлиентаНаПартнера(Объект.Ссылка, ТекущийОбъект.Партнер);
		CRM_ОбщегоНазначенияСервер.ПереписатьАктивныеИнтересыСПотенциальногоКлиентаНаПартнера(Объект.Ссылка, ТекущийОбъект.Партнер);
	КонецЕсли;
	
	Если НЕ (Объект.Ссылка.CRM_ОтписалсяОтEmailРассылок = Объект.CRM_ОтписалсяОтEmailРассылок) Тогда
		СпособОтправкиРассылок = Константы.CRM_СпособОтправкиРассылок.Получить();
		Если СпособОтправкиРассылок = Перечисления.CRM_СпособыОтправкиРассылок.UniSender Тогда
			CRM_ИнтеграцияСUniSenderКлиентСервер.ПодписатьПолучателяНаРассылки(Объект, НЕ Объект.CRM_ОтписалсяОтEmailРассылок, Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписьюНаСервере()

&НаКлиенте
// Процедура - обработчик события формы "ПослеЗаписи".
//
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("НовыйПотенциальныйКлиентЗаписан", Объект.Ссылка);
	// +СофтФон
	Если ЗначениеЗаполнено(сфпЗвонок) Тогда
		Оповестить("ЗаполнитьКонтактВТелефонномЗвонке", Новый Структура("Звонок, Контакт", сфпЗвонок, Объект.Ссылка));								
	КонецЕсли;	
	Если ЗначениеЗаполнено(сфпИнтерес) Тогда
		Оповестить("СозданКонтактДляИнтереса", Новый Структура("сфпИнтерес, Контакт", сфпИнтерес, Объект.Ссылка));
	КонецЕсли;				
	// -СофтФон		
КонецПроцедуры // ПослеЗаписи()

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//+Классификаторы
	CRM_КлассификаторыВызовСервера.ФормаОбъектаПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект);
	CRM_КлассификаторыВызовСервера.ФормаОбъектаПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект.Ссылка);
	//-Классификаторы
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	CRM_УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	//+Классификаторы
	CRM_КлассификаторыВызовСервера.ФормаОбъектаПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект.Ссылка);
	//-Классификаторы
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	CRM_УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти

//+Классификаторы
#Область Подключаемый_Классификаторы

&НаКлиенте
Процедура Подключаемый_ЗапретМодификацииСоставаКлассификаторов(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры // Подключаемый_ЗапретМодификацииСоставаКлассификаторов()

&НаКлиенте
Процедура Подключаемый_ОбщимСписком_ВключенПриИзменении(Элемент)

	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	CRM_КлассификаторыКлиентСервер.НайтиИзменитьСтрокиКлассификаторов(ЭтаФорма, ТекущиеДанные.КлючСтроки, ТекущиеДанные.Включен);	
	
КонецПроцедуры // Подключаемый_ОбщимСписком_ВключенПриИзменении()

&НаКлиенте
Процедура Подключаемый_ОтдельнымСписком_ВключенПриИзменении(Элемент)

	ТекущиеДанные = Элемент.Родитель.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	CRM_КлассификаторыКлиентСервер.НайтиИзменитьСтрокиКлассификаторов(ЭтаФорма, ТекущиеДанные.КлючСтроки, ТекущиеДанные.Включен);	
	
КонецПроцедуры // Подключаемый_ОтдельнымСписком_ВключенПриИзменении()

&НаКлиенте
Процедура Подключаемый_ОдиночноеЗначение_ВключенПриИзменении(Элемент)
	
	CRM_КлассификаторыКлиентСервер.НайтиИзменитьСтрокиКлассификаторовПакетно(ЭтаФорма, Элемент.Имя);	        
		
КонецПроцедуры // Подключаемый_ОдиночноеЗначение_ВключенПриИзменении()

&НаКлиенте
Процедура Подключаемый_Вхождение_ВключенПриИзменении(Элемент)
	
	CRM_КлассификаторыКлиентСервер.НайтиИзменитьСтрокиКлассификаторов(ЭтаФорма, Элемент.Имя, ЭтаФорма[Элемент.Имя]);	        
	
КонецПроцедуры // Подключаемый_Вхождение_ВключенПриИзменении()

&НаКлиенте
Процедура Подключаемый_Классификатор_ДобавитьТег(Элемент)

	CRM_КлассификаторыКлиентСервер.НайтиИзменитьСтрокиКлассификаторовПоЗначению(ЭтаФорма, ЭтаФорма[Элемент.Имя], Истина);
	Подключаемый_ТегиКлассификатора_Обновить();
	
КонецПроцедуры // Подключаемый_Классификатор_ДобавитьТег()

&НаКлиенте
Процедура Подключаемый_ТегКлассификатора_ОбработкаСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	CRM_КлассификаторыКлиентСервер.ОбработкаНавигационнойСсылкиТегаКлассификаторов(ЭтаФорма, Элемент, НавигационнаяСсылка, СтандартнаяОбработка);
	
КонецПроцедуры // Подключаемый_ТегКлассификатора_ОбработкаСсылки()

&НаСервере
Процедура Подключаемый_ТегиКлассификатора_Обновить()
	
	CRM_КлассификаторыВызовСервера.СформироватьТегиКлассификаторов(ЭтаФорма);
	
КонецПроцедуры // Подключаемый_ТегиКлассификатора_Обновить()

#КонецОбласти
//-Классификаторы
