#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

&НаСервере
Функция ПолучитьСтруктуруЗаполнения(ФайлXML, ТипОбъекта, ИмяОбъекта)
	
	МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ТипОбъекта);
	
	ТаблицаРеквизитов = Новый ТаблицаЗначений;
	ТаблицаРеквизитов.Колонки.Добавить("Пометка");
	ТаблицаРеквизитов.Колонки.Добавить("ИмяТЧ");
	ТаблицаРеквизитов.Колонки.Добавить("ИмяРеквизита");
	ТаблицаРеквизитов.Колонки.Добавить("Значение");
	
	ТаблицаЗначенийРеквизитов = Новый ТаблицаЗначений;
	ТаблицаЗначенийРеквизитов.Колонки.Добавить("Пометка");
	ТаблицаЗначенийРеквизитов.Колонки.Добавить("ИмяРеквизита");
	ТаблицаЗначенийРеквизитов.Колонки.Добавить("Значение");
	
	ЗашлиВОбъект	= Ложь;
	ТипXML			= Неопределено;
	ЕстьРеквизит	= Ложь;
	ОписаниеТипов = Неопределено;
	
	ЗашлиВРеквизиты		= Ложь;
	ЗашлиВРеквизитыТЧ	= Ложь;
	ИмяТЧ				= "";
	ИмяРеквизита		= "";
	ТаблицаСтрок		= Неопределено;
	НоваяСтрокаТаблицыРеквизитов = Неопределено;
	
	Пока ФайлXML.Прочитать() Цикл
		ТипУзла = ФайлXML.ТипУзла;
		ИмяУзла = ФайлXML.Имя;
		
		Если ТипУзла = ТипУзлаXML.НачалоЭлемента И ЗашлиВРеквизиты Тогда
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			НоваяСтрока.Пометка			= Истина;
			НоваяСтрока.ИмяРеквизита	= ИмяУзла;
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.НачалоЭлемента И ЗашлиВРеквизитыТЧ И НЕ ИмяТЧ = "" Тогда
			НоваяСтрока = ТаблицаРеквизитов.Добавить();
			НоваяСтрока.Пометка			= Истина;
			НоваяСтрока.ИмяТЧ			= ИмяТЧ;
			НоваяСтрока.ИмяРеквизита	= ИмяУзла;
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.НачалоЭлемента И ЗашлиВРеквизитыТЧ И ИмяТЧ = "" Тогда
			ИмяТЧ = ИмяУзла;
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.НачалоЭлемента И ИмяУзла = "ТабличныеЧасти" Тогда
			ЗашлиВРеквизитыТЧ = Истина;
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.КонецЭлемента И ИмяУзла = "ТабличныеЧасти" Тогда
			ЗашлиВРеквизитыТЧ = Ложь;
			ИмяТЧ = "";
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.КонецЭлемента И ЗашлиВРеквизитыТЧ И ИмяУзла = ИмяТЧ Тогда
			ИмяТЧ = "";
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.НачалоЭлемента И ИмяУзла = "РеквизитыШапки" Тогда
			ЗашлиВРеквизиты = Истина;
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.КонецЭлемента И ИмяУзла = "РеквизитыШапки" Тогда
			ЗашлиВРеквизиты = Ложь;
		КонецЕсли;
		
// *************************************************************************************
		
		Если ТипУзла = ТипУзлаXML.НачалоЭлемента И ЗашлиВОбъект И ИмяУзла = "Row" Тогда
			НоваяСтрокаТаблицыСтрок = ТаблицаСтрок.Добавить();
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.КонецЭлемента И ЗашлиВОбъект И ИмяУзла = ИмяТЧ Тогда
			
			НоваяСтрокаТаблицыРеквизитов.Значение = ТаблицаСтрок;
			ИмяТЧ = "";
			
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.НачалоЭлемента И ЗашлиВОбъект И НЕ ИмяУзла = "Row" Тогда
			
			Если ИмяТЧ = "" Тогда
				ЭтоРеквизитОбъекта		= (НЕ МетаданныеОбъекта.Реквизиты.Найти(ИмяУзла)		= Неопределено);
				ЭтоТабличнаяЧастьОбъекта= (НЕ МетаданныеОбъекта.ТабличныеЧасти.Найти(ИмяУзла)	= Неопределено);
			Иначе
				ЭтоРеквизитОбъекта		= (НЕ МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Реквизиты.Найти(ИмяУзла)		= Неопределено);
			КонецЕсли;
			
			Если НЕ ЭтоРеквизитОбъекта И НЕ ЭтоТабличнаяЧастьОбъекта Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЭтоРеквизитОбъекта Тогда
				ИмяРеквизита	= ИмяУзла;
				ЕстьРеквизит	= Истина;
				Если ЭтоТабличнаяЧастьОбъекта Тогда
					ОписаниеТипов	= МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Реквизиты.Найти(ИмяУзла).Тип;
				Иначе
					ОписаниеТипов	= МетаданныеОбъекта.Реквизиты.Найти(ИмяУзла).Тип;
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ЭтоРеквизитОбъекта И ЭтоТабличнаяЧастьОбъекта Тогда
				НоваяСтрокаТаблицыРеквизитов = ТаблицаЗначенийРеквизитов.Добавить();
				НоваяСтрокаТаблицыРеквизитов.Пометка		= Ложь;
				НоваяСтрокаТаблицыРеквизитов.ИмяРеквизита	= ИмяУзла;
				
				ТаблицаСтрок = Новый ТаблицаЗначений;
				Для Каждого РеквизитТЧ Из МетаданныеОбъекта.ТабличныеЧасти.Найти(ИмяУзла).Реквизиты Цикл
					ТаблицаСтрок.Колонки.Добавить(РеквизитТЧ.Имя, Новый ОписаниеТипов(РеквизитТЧ.Тип.Типы()));
				КонецЦикла;
				
				ИмяТЧ			= ИмяУзла;
				ЕстьРеквизит	= Ложь;
				ОписаниеТипов	= Неопределено;
			КонецЕсли;
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.Текст И ЕстьРеквизит И ЗашлиВОбъект Тогда
			Для Каждого Тип Из ОписаниеТипов.Типы() Цикл
				Значение = XMLЗначение(Тип, ФайлXML.Значение);
				Если НЕ (ТипЗнч(Значение) = Тип("Неопределено")) И ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Значение)) И ОбщегоНазначения.СсылкаСуществует(Значение) Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если НЕ (ТипЗнч(Значение) = Тип("Неопределено")) И ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Значение)) И НЕ ОбщегоНазначения.СсылкаСуществует(Значение) Тогда
				МенеджерОбъекта	= ОбщегоНазначения.МенеджерОбъектаПоСсылке(Значение);
				Значение		= МенеджерОбъекта.ПустаяСсылка();
			КонецЕсли;
			
			Если ЭтоТабличнаяЧастьОбъекта Тогда
				НоваяСтрокаТаблицыСтрок[ИмяРеквизита] = Значение;
			Иначе
				НоваяСтрокаТаблицыРеквизитов = ТаблицаЗначенийРеквизитов.Добавить();
				НоваяСтрокаТаблицыРеквизитов.Пометка		= Ложь;
				НоваяСтрокаТаблицыРеквизитов.ИмяРеквизита	= ИмяРеквизита;
				НоваяСтрокаТаблицыРеквизитов.Значение		= Значение;
			КонецЕсли;
			
			ЕстьРеквизит	= Ложь;
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.КонецЭлемента И (Найти(ИмяУзла,"CatalogObject.") > 0 ИЛИ Найти(ИмяУзла,"DocumentObject.") > 0) Тогда
			ЗашлиВОбъект = Ложь;
		КонецЕсли;
		
		Если ТипУзла = ТипУзлаXML.НачалоЭлемента И (Найти(ИмяУзла,"CatalogObject.") > 0 ИЛИ Найти(ИмяУзла,"DocumentObject.") > 0) Тогда
			ЗашлиВОбъект = Истина;
		КонецЕсли;
	КонецЦикла;
	
	ОбъектXML = Новый ЗаписьXML;
	ОбъектXML.УстановитьСтроку();
	ОбъектXML.ЗаписатьОбъявлениеXML();
	
	ОбъектXML.ЗаписатьНачалоЭлемента("ШаблонДокумента");
	ОбъектXML.ЗаписатьСоответствиеПространстваИмен("xsd", "http://www.w3.org/2001/XMLSchema");
	ОбъектXML.ЗаписатьСоответствиеПространстваИмен("xsi", "http://www.w3.org/2001/XMLSchema-instance");
	ОбъектXML.ЗаписатьСоответствиеПространстваИмен("v8", "http://v8.1c.ru/data");
	
	Для Каждого СтрокаТаблицы Из ТаблицаЗначенийРеквизитов Цикл
		
		Если ТипЗнч(СтрокаТаблицы.Значение) = Тип("ТаблицаЗначений") Тогда
			Если СтрокаТаблицы.Значение.Количество() = 0 Тогда Продолжить; КонецЕсли;
			
			ОбъектXML.ЗаписатьНачалоЭлемента("ТабличнаяЧасть");
			ОбъектXML.ЗаписатьТекст(СтрокаТаблицы.ИмяРеквизита);
			ИмяЧТ = СтрокаТаблицы.ИмяРеквизита;
			
			Для Каждого СтрокаСтроки Из СтрокаТаблицы.Значение Цикл
				ОбъектXML.ЗаписатьНачалоЭлемента("СтрокаТЧ");
				Для Каждого РеквизитТЧ Из МетаданныеОбъекта.ТабличныеЧасти.Найти(ИмяЧТ).Реквизиты Цикл
					ИмяРеквизита	= РеквизитТЧ.Имя;
					Значение		= СтрокаСтроки[ИмяРеквизита];
					
					МассивСтрок = ТаблицаРеквизитов.НайтиСтроки(Новый СТруктура("ИмяТЧ,ИмяРеквизита",ИмяЧТ,ИмяРеквизита));
					Если МассивСтрок.Количество()>0 Тогда
						Пометка = МассивСтрок[0].Пометка;
					Иначе
						Пометка = Ложь;
					КонецЕсли;
					
					Если ТипЗнч(Значение) = Тип("Строка") Тогда
						Значение = CRM_ШаблоныОбъектов.ЗаменитьСимволыНаТэги(Значение);
					КонецЕсли;
					
					ТипXML		= XMLТипЗнч(Значение);
					XMLСтрока	= XMLСтрока(Значение);
					
					ОбъектXML.ЗаписатьНачалоЭлемента(ИмяРеквизита);
					ОбъектXML.ЗаписатьАтрибут("Пометка",XMLСтрока(Пометка));
					Если ТипXML=Неопределено Тогда
						ОбъектXML.ЗаписатьАтрибут("Неопределено","");
					Иначе
						ОбъектXML.ЗаписатьАтрибут(ТипXML.ИмяТипа,ТипXML.URIПространстваИмен,XMLСтрока);
					КонецЕсли;
					ОбъектXML.ЗаписатьКонецЭлемента();
				КонецЦикла;
				ОбъектXML.ЗаписатьКонецЭлемента();
			КонецЦикла;
			ОбъектXML.ЗаписатьКонецЭлемента();
		Иначе
			ИмяРеквизита	= СтрокаТаблицы.ИмяРеквизита;
			Значение		= СтрокаТаблицы.Значение;
			
			МассивСтрок = ТаблицаРеквизитов.НайтиСтроки(Новый СТруктура("ИмяТЧ,ИмяРеквизита",Неопределено,ИмяРеквизита));
			Если МассивСтрок.Количество()>0 Тогда
				Пометка = МассивСтрок[0].Пометка;
			Иначе
				Пометка = Ложь;
			КонецЕсли;
			
			Если ТипЗнч(Значение) = Тип("Строка") Тогда
				Значение = CRM_ШаблоныОбъектов.ЗаменитьСимволыНаТэги(Значение);
			КонецЕсли;
			
			ТипXML		= XMLТипЗнч(Значение);
			XMLСтрока	= XMLСтрока(Значение);
			
			ОбъектXML.ЗаписатьНачалоЭлемента(ИмяРеквизита);
			ОбъектXML.ЗаписатьАтрибут("Пометка",XMLСтрока(Пометка));
			Если ТипXML=Неопределено Тогда
				ОбъектXML.ЗаписатьАтрибут("Неопределено","");
			Иначе
				ОбъектXML.ЗаписатьАтрибут(ТипXML.ИмяТипа,ТипXML.URIПространстваИмен,XMLСтрока);
			КонецЕсли;
			ОбъектXML.ЗаписатьКонецЭлемента();
			
		КонецЕсли;
	КонецЦикла;
	
	ОбъектXML.ЗаписатьКонецЭлемента();
	
	СтрокаРезультата = ОбъектXML.Закрыть();
	
	Возврат СтрокаРезультата;
	
КонецФункции

&НаСервере
Процедура КонвертироватьШаблоны() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	CRM_ШаблоныОбъектов.Ссылка,
	               |	CRM_ШаблоныОбъектов.ИмяОбъекта,
	               |	CRM_ШаблоныОбъектов.ТипОбъекта,
	               |	CRM_ШаблоныОбъектов.Синоним,
	               |	CRM_ШаблоныОбъектов.Представление,
	               //|	CRM_ШаблоныОбъектов.ФайлХранилище,
	               |	ЕСТЬNULL(CRM_ШаблоныОбъектовПрисоединенныеФайлы.Ссылка, ЗНАЧЕНИЕ(Справочник.CRM_ШаблоныОбъектовПрисоединенныеФайлы.ПустаяСсылка)) КАК ПрисоединенныйФайл,
	               |	ЕСТЬNULL(CRM_ШаблоныОбъектовПрисоединенныеФайлы.Наименование, """") КАК ФайлНаименование
	               |ИЗ
	               |	Справочник.CRM_ШаблоныОбъектов КАК CRM_ШаблоныОбъектов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.CRM_ШаблоныОбъектовПрисоединенныеФайлы КАК CRM_ШаблоныОбъектовПрисоединенныеФайлы
	               |		ПО CRM_ШаблоныОбъектов.Ссылка = CRM_ШаблоныОбъектовПрисоединенныеФайлы.ВладелецФайла
	               |ГДЕ
	               |	CRM_ШаблоныОбъектовПрисоединенныеФайлы.Наименование = &Наименование
	               |	И CRM_ШаблоныОбъектовПрисоединенныеФайлы.Расширение = &Расширение
	               |	И НЕ CRM_ШаблоныОбъектовПрисоединенныеФайлы.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Наименование" ,"шоШаблонОбъекта");
	Запрос.УстановитьПараметр("Расширение"	 ,"xml");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ПрисоединенныйФайл.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе Тогда
			ДвоичныеДанные = РаботаСФайлами.ДвоичныеДанныеФайла(Выборка.ПрисоединенныйФайл);
		Иначе
			ПолныйПуть = РаботаСФайламиСлужебный.ПолныйПутьТома(Выборка.ПрисоединенныйФайл.Том) + Выборка.ПрисоединенныйФайл.ПутьКФайлу;
			Попытка
				ДвоичныеДанные = Новый ДвоичныеДанные(ПолныйПуть);
			Исключение
				ДвоичныеДанные = Неопределено;
			КонецПопытки;
		КонецЕсли;
		
		Если ДвоичныеДанные = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПолныйПуть = ПолучитьИмяВременногоФайла("xml");
		ДвоичныеДанные.Записать(ПолныйПуть);
		Текст = Новый ЧтениеТекста(ПолныйПуть,КодировкаТекста.UTF8);
		СтрокаXML = Текст.Прочитать();
		Текст.Закрыть();
		
		Если НЕ ЗначениеЗаполнено(СтрокаXML) Тогда
			Продолжить;
		КонецЕсли;
		
		ФайлXML = Новый ЧтениеXML;
		ФайлXML.УстановитьСтроку(СтрокаXML);
		
		Попытка
			ТекстШаблона = ПолучитьСтруктуруЗаполнения(ФайлXML, Выборка.ТипОбъекта, Выборка.ИмяОбъекта);
		Исключение
			ФайлXML.Закрыть();
			// удалим временный файл
			ФайлНаДиске = Новый Файл(ПолныйПуть);
			ФайлНаДиске.УстановитьТолькоЧтение(Ложь);
			УдалитьФайлы(ПолныйПуть);
			Продолжить;
		КонецПопытки;
		
		ФайлXML.Закрыть();
		// удалим временный файл
		ФайлНаДиске = Новый Файл(ПолныйПуть);
		ФайлНаДиске.УстановитьТолькоЧтение(Ложь);
		УдалитьФайлы(ПолныйПуть);
		
		ШаблонОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		ПолныйПуть = ПолучитьИмяВременногоФайла("xml");
		ФайлНаДиске = Новый ЗаписьТекста;
		ФайлНаДиске.Открыть(ПолныйПуть,КодировкаТекста.UTF8);
		ФайлНаДиске.Записать(ТекстШаблона);
		ФайлНаДиске.Закрыть();
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ПолныйПуть);
		
		// удалим временный файл
		ФайлНаДиске = Новый Файл(ПолныйПуть);
		ФайлНаДиске.УстановитьТолькоЧтение(Ложь);
		УдалитьФайлы(ПолныйПуть);
		
		ШаблонОбъект.ФайлХранилище = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
		ШаблонОбъект.Записать();
		
		ФайлОбъект = Выборка.ПрисоединенныйФайл.ПолучитьОбъект();
		ФайлОбъект.Наименование = "(не используется) " + ФайлОбъект.Наименование;
		ФайлОбъект.Записать();
		ФайлОбъект.УстановитьПометкуУдаления(Истина);
		
		НаборЗаписей = РегистрыСведений.CRM_ШаблоныОбъектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Шаблон.Установить(ШаблонОбъект.Ссылка);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Владелец	= ШаблонОбъект.УдалитьВладелецШаблона;
		НоваяЗапись.Шаблон		= ШаблонОбъект.Ссылка;
		НоваяЗапись.ТипОбъекта	= ШаблонОбъект.ТипОбъекта;
		НоваяЗапись.Синоним		= ШаблонОбъект.Синоним;
		НоваяЗапись.ИмяОбъекта	= ШаблонОбъект.ИмяОбъекта;
		
		НаборЗаписей.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли