
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ СВОЙСТВ

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
// Служебная процедура механизма свойств.
//
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект, РеквизитФормыВЗначение("Объект"));
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры // ОбновитьЭлементыДополнительныхРеквизитов()

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("CRM_УправлениеКонтактнойИнформацией");
		МодульУправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
// Процедура - обработчик события "ПриСозданииНаСервере".
// Осуществляет первоначальное заполнение реквизитов формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
	CRM_УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация");
	// Конец СтандартныеПодсистемы.КонтактнаяИнформация	
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "СтраницаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ФункциональнаяОпцияУчетПоНесколькимОрганизациям = Константы.ФункциональнаяОпцияУчетПоНесколькимОрганизациям.Получить();
	
	РедактироватьКонтактныеДанные = НСтр("ru = 'Ввести дополнительную контактную информацию'");
	УстановитьВидимостьРеквизитовКИ();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Процедура - обработчик события "ПриОткрытии".
// Устанавливает видимость реквизитов формы.
//
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка)
	   И НЕ ФункциональнаяОпцияУчетПоНесколькимОрганизациям Тогда
		ТекстСообщения = НСтр("ru = 'Нельзя добавить новую организацию, т.к. в настройках параметров учета не установлен признак ""Учет по нескольким организациям""!'");
		ПоказатьПредупреждение(, ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры // ПриОткрытии()

&НаКлиенте
// Процедура - обработчик события "ОбработкаОповещения".
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	//  Из списка договоров установили новый договор по умолчанию.
	Если  ИмяСобытия = "ИзмененБанковскийСчетПоУмолчанию" Тогда
		
		Прочитать();
		
	КонецЕсли;	
	
КонецПроцедуры // ОбработкаОповещения()

&НаСервере
// Процедура - обработчик события "ПередЗаписьюНаСервере".
//
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("CRM_УправлениеКонтактнойИнформацией");
		МодульУправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	ОбновитьИнтерфейс = ТекущийОбъект.ЭтоНовый() И НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		МодульСвойства = ОбщегоНазначения.ОбщийМодуль("УправлениеКонтактнойИнформацией");
		МодульСвойства.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
КонецПроцедуры // ПередЗаписьюНаСервере()

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ОбновитьИнтерфейс Тогда
		ОбновитьИнтерфейс();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформацией = ОбщегоНазначения.ОбщийМодуль("CRM_УправлениеКонтактнойИнформацией");
		МодульУправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" поля ввода "Наименование".
//
Процедура НаименованиеПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.НаименованиеПолное) Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.НаименованиеСокращенное) Тогда
		Объект.НаименованиеСокращенное = Объект.Наименование;
	КонецЕсли;
	
КонецПроцедуры // НаименованиеПриИзменении()

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" поля ввода "БанковскийСчетПоУмолчанию".
//
Процедура БанковскийСчетПоУмолчаниюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СтандартнаяОбработка = Ложь;
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Элемент справочника еще не записан.'");
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры // БанковскийСчетПоУмолчаниюНачалоВыбора()


&НаКлиенте
// Процедура - обработчик события "ПриИзменении" поля ввода "ИНН".
//
Процедура ИННПриИзменении(Элемент)
	
	ТекстСообщения = "";
	Если ЗначениеЗаполнено(Объект.ИНН) Тогда
		// Если КПП формируется стандартным образом по ИНН, то для КПП берутся 
		// первые 4 цифры ИНН + 01001, например:
		// ИНН 7712563009
		// КПП 771201001
		Если РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Объект.ИНН, Истина, ТекстСообщения) Тогда
			Объект.КПП = Лев(Объект.ИНН, 4) + "01001";
		Иначе	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Объект.ИНН");
			Объект.КПП = "";
		КонецЕсли;
	Иначе
		Объект.КПП = "";
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры //  ИННПриИзменении()

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.КонтактнаяИнформация

&НаСервере
Процедура УстановитьВидимостьРеквизитовКИ()
	
	флагВыводаГиперСсылки = Ложь;
	СтруктураОтбора		= Неопределено;
	СтруктураОтбора		= Новый Структура("Родитель, Выводить", Справочники.ВидыКонтактнойИнформации.СправочникОрганизации, Ложь);
	
	МассивСтрок = ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(СтруктураОтбора);
	
	флагВыводаГиперСсылки = НЕ (МассивСтрок.Количество() = 0);
	
	Для Каждого СтрокаДопРеквизита Из ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов Цикл
		
		Если СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
			флаг_1 = НЕ (ЭтотОбъект[СтрокаДопРеквизита.ИмяРеквизита] = "<адрес сайта не указан>");
		Иначе	
			флаг_1 = ЗначениеЗаполнено(ЭтотОбъект[СтрокаДопРеквизита.ИмяРеквизита]);
		КонецЕсли;
		
		Для Каждого СтрокаДобавленногоРеквизита ИЗ ЭтотОбъект.ПараметрыКонтактнойИнформации.ДобавленныеЭлементы Цикл
			Если СтрокаДобавленногоРеквизита.Пометка Тогда
				Продолжить;
			КонецЕсли;
			
			Если Найти(СтрокаДобавленногоРеквизита.Значение, СтрокаДопРеквизита.ИмяРеквизита) Тогда
				СкрыватьПолеКИ = (СтрокаДопРеквизита.Комментарий = "Не выводить");
				Элементы[СтрокаДобавленногоРеквизита.Значение].Видимость = ((СтрокаДопРеквизита.Выводить И НЕ СкрыватьПолеКИ) ИЛИ (РедактироватьДР ИЛИ флаг_1));
			КонецЕсли;
		КонецЦИкла;
		
		Если Элементы[СтрокаДопРеквизита.ИмяРеквизита].ШрифтЗаголовка = ШрифтыСтиля.УдаленныйДополнительныйРеквизитШрифт Тогда
		
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].ЦветТекстаЗаголовка	= Новый Цвет();
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].ШрифтЗаголовка		= Новый Шрифт();
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаОчистки			= Неопределено;
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаВыбора			= Неопределено;
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаОткрытия		= Неопределено;
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаСпискаВыбора	= Неопределено;
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].РедактированиеТекста	= Истина;
			Элементы[СтрокаДопРеквизита.ИмяРеквизита].Подсказка				= "";
			
			Если Элементы[СтрокаДопРеквизита.ИмяРеквизита].Вид = ВидПоляФормы.ПолеВвода Тогда
				
				Если СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Другое Тогда
					Элементы[СтрокаДопРеквизита.ИмяРеквизита].Высота = 5;
					Элементы[СтрокаДопРеквизита.ИмяРеквизита].МногострочныйРежим = Истина;
				КонецЕсли;
				
				Если (СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес)
				ИЛИ (СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон)
				ИЛИ (СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.Факс) Тогда
					
					Элементы[СтрокаДопРеквизита.ИмяРеквизита].КнопкаВыбора				= истина;
					// ++ VOG Солодов В.В. 02.03.2020 CRM-196
					ВидРедактирования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаДопРеквизита.Вид, "ВидРедактирования");
					Если ВидРедактирования = "Диалог" Тогда
					// До изменения
					//Если СтрокаДопРеквизита.Вид.РедактированиеТолькоВДиалоге Тогда
					// -- VOG Солодов В.В. 02.03.2020
						Элементы[СтрокаДопРеквизита.ИмяРеквизита].РедактированиеТекста	= Ложь;
						Элементы[СтрокаДопРеквизита.ИмяРеквизита].WebЦвета				= WebЦвета.Кремовый;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если СтрокаДопРеквизита.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
			ИмяРеквизита = Элементы[СтрокаДопРеквизита.ИмяРеквизита].Имя;
			АдресСайтаКомпании = ЭтотОбъект[ИмяРеквизита];
			Если ПустаяСтрока(АдресСайтаКомпании) Тогда
				ЭтотОбъект[ИмяРеквизита] = "<адрес сайта не указан>";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.РедактироватьКонтактныеДанные.Видимость = флагВыводаГиперСсылки;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьКонтактныеДанныеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ РедактироватьДР Тогда
		РедактироватьКонтактныеДанные = НСтр("ru = 'Скрыть дополнительные контактные данные'");
		РедактироватьДР = Истина;
	Иначе
		РедактироватьКонтактныеДанные = НСтр("ru = 'Ввести дополнительную контактную информацию'");
		РедактироватьДР = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьРеквизитовКИ();
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОбновитьКонтактнуюИнформацию(Результат) Экспорт
	CRM_УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОсновнойДляСвязи(Элемент)
	CRM_УправлениеКонтактнойИнформациейКлиент.ОсновнойДляСвязиНажатие(ЭтотОбъект, Элемент);
КонецПроцедуры // Подключаемый_КонтактнаяИнформацияОсновнойДляСвязи()

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		CRM_УправлениеКонтактнойИнформациейКлиент.ПриИзменении(ЭтотОбъект, Элемент);
		// Если это адрес электронной почты, то надо проверить на коррректность заполнения.
		РезультатПроверки = CRM_УправлениеКонтактнойИнформациейКлиент.CRM_ПолучитьТипПроверитьЗаполнение(ЭтотОбъект, Элемент);
		Если НЕ РезультатПроверки = Неопределено И РезультатПроверки.КодОшибки<>0 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.Сообщение, , Элемент.Имя);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("CRM_УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриНажатии(Элемент, СтандартнаяОбработка)
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("CRM_УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.НачалоВыбора(ЭтотОбъект, Элемент,, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.КонтактнаяИнформация") Тогда
		МодульУправлениеКонтактнойИнформациейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент");
		МодульУправлениеКонтактнойИнформациейКлиент.Очистка(ЭтотОбъект, Элемент.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
	CRM_УправлениеКонтактнойИнформациейКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзмененииАдресаЭлектроннойПочты(Элемент)
	
	РезультатПроверки = CRM_ОбщегоНазначенияКлиентСервер.АнализАдресаЭП(СокрЛП(Элемент.ТекстРедактирования));
	Если РезультатПроверки.КодОшибки <> 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.Сообщение, , Элемент.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтправитьСМСНаНомер(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо записать элемент'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	ИначеЕсли CRM_ОбщегоНазначенияКлиент.смсПроверитьДоступностьSMS4B() Тогда
		ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
		ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "ОтправитьСМСНаНомер","");
		Телефон = ЭтотОбъект[ИмяРеквизита];
		Если ПустаяСтрока(Телефон) Тогда Возврат; КонецЕсли;
		Структура = Новый Структура();
		Структура.Вставить("Ссылка", Объект.Ссылка);
		Структура.Вставить("Телефон", ОтправкаSMSЧерезSMS4B.УбратьЛишниеСимволыТелефона(Телефон));
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Основание", Структура);
		ОткрытьФорму("Документ.СообщениеSMS.ФормаОбъекта", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОтправитьEmail(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо записать элемент'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "ОтправитьEmail","");
	АдресЭлектроннойПочты = ЭтотОбъект[ИмяРеквизита];

	Если НЕ ЗначениеЗаполнено(СокрЛП(АдресЭлектроннойПочты)) Тогда
		
		Возврат;
		
	КонецЕсли;
		
	СписокАдресов = Новый СписокЗначений;
	
	СписокАдресов.Добавить(Объект.Ссылка, АдресЭлектроннойПочты);
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("СписокАдресов", СписокАдресов);
			
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", ПараметрыФормы);
			
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПозвонитьНаНомер(Элемент)
	
	// +СофтФон
	сфпСофтФонПроКлиентПереопределяемый.сфпПодключаемый_ПозвонитьНаНомер(ЭтотОбъект, Объект);	
	// -СофтФон
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РедактироватьАдресКомпании(Элемент)
	
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "РедактироватьАдресКомпании","");
	Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элементы[ИмяРеквизита], Неопределено, Ложь);
	
КонецПроцедуры // Подключаемый_РедактироватьАдресКомпании

&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНажатиеАдресаСайтаКомпании(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "РедактироватьАдресСайтаКомпании","");
	АдресСайтаКомпании = ЭтотОбъект[ИмяРеквизита];
	Если АдресСайтаКомпании = "<адрес сайта не указан>" Тогда
		Подключаемый_РедактироватьАдресСайтаКомпании(Элемент);
	Иначе
		Если Найти(АдресСайтаКомпании, "://") = 0 Тогда
			АдресСайтаКомпании = "http://" + АдресСайтаКомпании;
		КонецЕсли;	
		НачатьЗапускПриложения(Новый ОписаниеОповещения("ОбработчикОповещенияБезДействия", CRM_ОбщегоНазначенияКлиентСервер), АдресСайтаКомпании);	
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РедактироватьАдресСайтаКомпании(Элемент)
	
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "РедактироватьАдресСайтаКомпании","");
	АдресСайтаКомпании = ЭтотОбъект[ИмяРеквизита];
	Если АдресСайтаКомпании = "<адрес сайта не указан>" Тогда
		АдресСайтаКомпании = "";
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("ВводАдресаСайтаКомпанииЗавершение", ЭтотОбъект, ИмяРеквизита);
	ПоказатьВводСтроки(ОписаниеОповещения, АдресСайтаКомпании, "Введите адрес сайта");
	
КонецПроцедуры // Подключаемый_РедактироватьАдресСайтаКомпании

&НаКлиенте
Процедура ВводАдресаСайтаКомпанииЗавершение(АдресСайтаКомпании, ИмяРеквизита) Экспорт
	
	Если АдресСайтаКомпании <> Неопределено Тогда
		Если ПустаяСтрока(АдресСайтаКомпании) Тогда
			ЭтотОбъект[ИмяРеквизита] = "<адрес сайта не указан>";
		Иначе	
			ЭтотОбъект[ИмяРеквизита] = АдресСайтаКомпании;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры 

&НаКлиенте
Процедура Подключаемый_ОткрытьАдресНаИнтернетКарте(Элемент)
	ИмяРеквизита = СтрЗаменить(ТекущийЭлемент.Имя, "Команда","");
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "ОткрытьАдресНаИнтернетКарте","");
	НайденныеСтроки = ЭтотОбъект.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("ИмяРеквизита", ИмяРеквизита));
	Если НайденныеСтроки.Количество() = 0 Тогда Возврат; КонецЕсли;
	
	СписокПолей = CRM_ОбщегоНазначенияСервер.ПреобразоватьСтрокуВСписокПолей(НайденныеСтроки[0].ЗначенияПолей);
	
	СтруктураАдреса = Новый Структура;
	Для Каждого ЭлементСписка Из СписокПолей Цикл
		СтруктураАдреса.Вставить(ЭлементСписка.Представление, ЭлементСписка.Значение);
	КонецЦикла;
	СтруктураАдреса.Вставить("Представление", ЭтотОбъект[ИмяРеквизита]);
	
	СписокКарт = Новый СписокЗначений;
	// ++ Харченко Д.И. №  - 26.09.2018 / 
	//СписокКарт.Добавить("GIS","Карта GIS",,БиблиотекаКартинок.CRM_ГлобусСЛупой);
	//СписокКарт.Добавить("Google","Карта Google",,БиблиотекаКартинок.CRM_ГлобусСЛупой);
	//СписокКарт.Добавить("Yandex","Карта Yandex",,БиблиотекаКартинок.CRM_ГлобусСЛупой);
	СписокКарт.Добавить("вогГеокодирование","Карта Yandex",,БиблиотекаКартинок.CRM_ГлобусСЛупой);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_ОткрытьАдресНаИнтернетКартеЗавершение", ЭтотОбъект, СтруктураАдреса);
	//ПоказатьВыборИзСписка(ОписаниеОповещения, СписокКарт, ТекущийЭлемент,);
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, СписокКарт.Получить(0)); 
	// -- Харченко Д.И. №  - 26.09.2018
	
КонецПроцедуры // Подключаемый_РедактироватьАдресКомпании

&НаКлиенте
Процедура Подключаемый_ОткрытьАдресНаИнтернетКартеЗавершение(Результат, СтруктураАдреса) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		СайтИнтернетКарты = Результат.Значение;
		CRM_ОбщегоНазначенияКлиент.ПолучитьАдресПоказатьНаКарте(СтруктураАдреса, СайтИнтернетКарты);
	КонецЕсли;
	
КонецПроцедуры // Подключаемый_РедактироватьАдресКомпании

// Конец СтандартныеПодсистемы.КонтактнаяИнформация

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////
// Управление элементами формы.

&НаКлиенте
Процедура УправлениеЭлементамиФормы()
	
	Если Объект.ЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ЮрЛицо") Тогда
		Элементы.КПП.Доступность = ?(ЗначениеЗаполнено(Объект.ИНН),Истина,Ложь);
	Иначе
		Элементы.КПП.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксПриИзменении(Элемент)
	Если СтрНайти(Объект.Префикс, "-") > 0 Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Нельзя в префиксе организации использовать символ ""-"".'"));
		Объект.Префикс = СтрЗаменить(Объект.Префикс, "-", "");
	КонецЕсли;
КонецПроцедуры
