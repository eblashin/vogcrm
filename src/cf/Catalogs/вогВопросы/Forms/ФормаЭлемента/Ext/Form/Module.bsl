#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
		
	// Заполнение списка схем компоновки данных
	ПризнакПредопределенногоМакета = Врег("Предопределенный");
	ДлинаПризнакаПредопределенногоМакета = СтрДлина(ПризнакПредопределенногоМакета);
	Для каждого Макет из Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).Макеты Цикл
		Если Макет.ТипМакета = Метаданные.СвойстваОбъектов.ТипМакета.СхемаКомпоновкиДанных Тогда
			Если ВРег(Прав(Макет.Имя, ДлинаПризнакаПредопределенногоМакета)) = ПризнакПредопределенногоМакета Тогда
				Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить(Макет.Имя, Макет.Синоним);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольная'"));
	
	Если Параметры.ЗначениеКопирования.Пустая() Тогда
		СхемаИНастройки = Справочники.вогВопросы.ОписаниеИСхемаКомпоновкиДанныхНастройкиПоИмениМакета(Объект.Ссылка, Объект.СхемаКомпоновкиДанных);
	Иначе
		СхемаИНастройки = Справочники.вогВопросы.ОписаниеИСхемаКомпоновкиДанныхНастройкиПоИмениМакета(Параметры.ЗначениеКопирования, Параметры.ЗначениеКопирования.СхемаКомпоновкиДанных);
	КонецЕсли;
	
	Если ПустаяСтрока(СхемаИНастройки.Описание) Тогда
		Объект.СхемаКомпоновкиДанных = "";
	КонецЕсли;
	
	Адреса = АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище();
	
	АдресСхемыКомпоновкиДанных = Адреса.СхемаКомпоновкиДанных;
	АдресНастроекКомпоновкиДанных = Адреса.НастройкиКомпоновкиДанных;	
	//START Кайдашов 24/06/19
	АдресСхемыКомпоновкиДанныхВариантОтветов = Адреса.СхемаКомпоновкиДанныхВариантОтветов;
	АдресНастроекКомпоновкиДанныхВариантОтветов = Адреса.НастройкиКомпоновкиДанныхВариантОтветов;	
	//END Кайдашов
	
	УстановитьВидимостьДоступность(ЭтаФорма);
	
	вогУправлениеОпросамиСервер.ЗаполнитьДанныеУсловийВопросовПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если Не ЗначениеЗаполнено(Объект.СхемаКомпоновкиДанных) Тогда
		Если НЕ ПустаяСтрока(АдресСхемыКомпоновкиДанных) Тогда
			ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных));
		Иначе
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо настроить схему компоновки данных.'"), Объект.Ссылка, "Объект.СхемаКомпоновкиДанных",,Отказ);
		КонецЕсли;
		
	Иначе
		ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(АдресНастроекКомпоновкиДанных) Тогда
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
	Иначе
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	
	//START Кайдашов 24/06/19
	Если Объект.ДинамическоеФормированиеВариантовОтветов Тогда
		Если ПустаяСтрока(АдресСхемыКомпоновкиДанныхВариантОтветов) Тогда
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Необходимо настроить схему компоновки данных для вариантов ответа.'"), Объект.Ссылка,,,Отказ);
		Иначе
			ТекущийОбъект.ХранилищеСхемыКомпоновкиДанныхВариантовОтветов = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанныхВариантОтветов));
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(АдресНастроекКомпоновкиДанныхВариантОтветов) Тогда
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанныхВариантовОтветов = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанныхВариантОтветов));
	Иначе
		ТекущийОбъект.ХранилищеНастроекКомпоновкиДанныхВариантовОтветов = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	//END Кайдашов
	
	вогУправлениеОпросамиСервер.ЗаполнитьДанныеУсловийВопросовПередЗаписью(ЭтаФорма, ТекущийОбъект);
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	вогУправлениеОпросамиСервер.ЗаполнитьДанныеУсловийВопросовПриЧтении(ЭтаФорма, ТекущийОбъект);
	ДозаполнитьНовыеОбработчики(ТекущийОбъект);
	ЗаполнитьАдресаКартинокКоманд();

	GUID = СтрЗаменить(XMLСтрока(Объект.Ссылка), "-", "_");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьАдресаКартинокКоманд();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СоставВопросаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Элемент", Элемент);
	
	Если Объект.Ссылка.Пустая() Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
                             |Редактирование вариантов ответов возможно только после записи данных.
                             |Данные будут записаны.'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("СоставВопросаПередНачаломДобавленияЗавершение", ЭтотОбъект, ПараметрыОповещения);	
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставВопросаПередНачаломДобавленияЗавершение(Ответ, Контекст) Экспорт
	
	Если Ответ <> КодВозвратаДиалога.ОК Тогда 
		Возврат;
	КонецЕсли;	
		
	Если Не Записать() Тогда 
		Возврат;
	КонецЕсли;	
	
	Контекст.Элемент.ДобавитьСтроку();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьАлгоритмОбработкиОтветовПриИзменении(Элемент)
	УстановитьВидимостьДоступность(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикиСобытийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	
	СтандартнаяОбработка = Ложь;
	
	// ++ Харченко Д.И. №  - 07.09.2018 / 
		                 
	ИмяМакетаСправки = "Справочники.вогВопросы.ПолучитьМакет(""СправкаОбработчикСобытия"")";
	
	ПараметрыФормыОткрытия = Новый Структура("ТекстОбработки,Заголовок", Элемент.ТекущиеДанные.Обработчик,"Обработчик события "+""""+Строка(Элемент.ТекущиеДанные.Событие)+"""");
	ПараметрыФормыОткрытия.Вставить("ИмяМакетаСправки", ИмяМакетаСправки);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикиСобытийВыборЗавершение", ЭтотОбъект, Элемент);
	
	ОткрытьФорму("Справочник.CRM_ТочкиМаршрутов.Форма.ФормаРедактированияТекста", ПараметрыФормыОткрытия, ЭтотОбъект,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикиСобытийВыборЗавершение(Результат, Элемент) экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			Результат.Свойство("Обработчик", Элемент.ТекущиеДанные.Обработчик);
		Иначе 
			Элемент.ТекущиеДанные.Обработчик = Результат;
		КонецЕсли;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандыВопросаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если Поле.Имя = "КомандыВопросаОбработчик" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		// ++ Харченко Д.И. №  - 07.09.2018 / 
		                 
		ИмяМакетаСправки = "Справочники.вогВопросы.ПолучитьМакет(""СправкаКомандаВопроса"")";
		
		ПараметрыФормыОткрытия = Новый Структура("ТекстОбработки,Заголовок", Элемент.ТекущиеДанные.Обработчик, "Обработчик команды "+""""+Строка(Элемент.ТекущиеДанные.Команда)+"""");
		ПараметрыФормыОткрытия.Вставить("ИмяМакетаСправки", ИмяМакетаСправки);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("КомандыВопросаВыборЗавершение", ЭтотОбъект, Элемент);
		
		ОткрытьФорму("Справочник.CRM_ТочкиМаршрутов.Форма.ФормаРедактированияТекста", ПараметрыФормыОткрытия, ЭтотОбъект,,,, ОписаниеОповещения);
		// -- Харченко Д.И. №  - 07.09.2018

	ИначеЕсли Поле.Имя = "КомандыВопросаИмяКартинки" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Описание = Новый ОписаниеОповещения("ОписаниеОповещенияВыборКартинкиИзСписка", ЭтотОбъект, Элементы.КомандыВопроса.ТекущаяСтрока);
		
		СписокКартинок = ПолучитьСписокВыбораКартинок();
		
		ТекДанные = Объект.КомандыВопроса.НайтиПоИдентификатору(ВыбраннаяСтрока);
		
		ТекЭлемент = Неопределено;
		
		Если ЗначениеЗаполнено(ТекДанные.ИмяКартинки) Тогда
			ТекЭлемент = СписокКартинок.НайтиПоЗначению(ТекДанные.ИмяКартинки);
		КонецЕсли;
		
		ПоказатьВыборИзСписка(Описание, СписокКартинок, , ТекЭлемент);

	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандыВопросаВыборЗавершение(Результат, Элемент) Экспорт
	
	Если Не Результат = Неопределено Тогда
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			Результат.Свойство("Обработчик", Элемент.ТекущиеДанные.Обработчик);
		Иначе 
			Элемент.ТекущиеДанные.Обработчик = Результат;
		КонецЕсли;		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры // КомандыВопросаВыборЗавершение()

&НаКлиенте
Процедура АлгоритмЗапускаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТипВопросаПриИзменении(Элемент)
	УстановитьВидимостьДоступность(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОбработкуЗаполненияПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанных(Команда)
	
	// Открыть редактор настроек схемы компоновки данных
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru = 'Настройка схемы компоновки данных ""%1""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ЗаголовокФормыНастройкиСхемыКомпоновкиДанных, "%1", Объект.Наименование);
	
	АдресаНастроек = Неопределено;

	
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
						"НеПомещатьНастройкиВСхемуКомпоновкиДанных,
						|НеРедактироватьСхемуКомпоновкиДанных,
						|НеНастраиватьУсловноеОформление,
						|НеНастраиватьВыбор,
						|НеНастраиватьПорядок,
						|УникальныйИдентификатор,
						|АдресСхемыКомпоновкиДанных,
						|АдресНастроекКомпоновкиДанных,
						|Заголовок,
						|ИсточникШаблонов,
						|ИмяШаблонаСКД,
						|ВозвращатьИмяТекущегоШаблонаСКД",
						Истина,
						Ложь,
						Истина,
						Истина,
						Ложь,
						УникальныйИдентификатор,
						АдресСхемыКомпоновкиДанных,
						АдресНастроекКомпоновкиДанных,
						ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
						Объект.Ссылка,
						Объект.СхемаКомпоновкиДанных,
						Истина),,,,, Новый ОписаниеОповещения("РедактироватьСхемуКомпоновкиДанныхЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанныхЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    АдресаНастроек = Результат;
    
    Если ЗначениеЗаполнено(АдресаНастроек) Тогда
        Если ПустаяСтрока(АдресаНастроек.ИмяТекущегоШаблонаСКД) 
            И Элементы.СхемаКомпоновкиДанных.СписокВыбора.НайтиПоЗначению("") = Неопределено Тогда
            Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольный'"));
            
        КонецЕсли;
        
        Объект.СхемаКомпоновкиДанных = АдресаНастроек.ИмяТекущегоШаблонаСКД;
        
        Если АдресаНастроек.Свойство("АдресХранилищаНастройкиКомпоновщика") Тогда
            АдресНастроекКомпоновкиДанных = АдресаНастроек.АдресХранилищаНастройкиКомпоновщика;
        КонецЕсли;
        
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьСписокКоманд(Команда)
	
	ВыгрузитьДанныеТЧВСтроку("КомандыВопроса");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьСписокОбработчиков(Команда)
	
	ВыгрузитьДанныеТЧВСтроку("ОбработчикиСобытий");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСписокКоманд(Команда)
	
	ЗагрузитьДанныеВТЧИзСтроки("КомандыВопроса");

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСписокОбработчиков(Команда)
	
	ЗагрузитьДанныеВТЧИзСтроки("ОбработчикиСобытий");

КонецПроцедуры

&НаКлиенте
Процедура РедактироватьУсловия(Команда)
	
	вогУправлениеОпросамиКлиентСервер.ОткрытьФормуНастройкиУсловийЗависимости(ЭтаФорма, Объект.Владелец);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура ВыгрузитьДанныеТЧВСтроку(ИмяТЧ)
	
	ДанныеСтроки = ПолучитьСтрокуПоТЧ(ИмяТЧ);
	
	Описание = Новый ОписаниеОповещения("ОписаниеОповещенияЗаглушка", ЭтаФорма, ИмяТЧ);
	
	ПоказатьВводСтроки(Описание, ДанныеСтроки, "Данные",, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеВТЧИзСтроки(ИмяТЧ)
	
	Описание = Новый ОписаниеОповещения("ОписаниеОповещенияВводДанныхДляЗагрузки", ЭтаФорма, ИмяТЧ);
	
	ПоказатьВводСтроки(Описание, , "Введите данные",, Истина);
	
КонецПроцедуры

Функция ПолучитьСтрокуПоТЧ(ИмяТЧ)
	
	Возврат ЗначениеВСтрокуВнутр(Объект[ИмяТЧ].Выгрузить());
	
КонецФункции

&НаКлиенте
Процедура ОписаниеОповещенияЗаглушка(Данные, ИмяТЧ) Экспорт 
	
КонецПроцедуры // ОписаниеОтветаНаВопросГиперссылки()

&НаКлиенте
Процедура ОписаниеОповещенияВводДанныхДляЗагрузки(Данные, ИмяТЧ) Экспорт 
	
	Если НЕ ЗначениеЗаполнено(Данные) Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗагрузкуДанныхВТЧ(Данные, ИмяТЧ);
	
КонецПроцедуры // ОписаниеОтветаНаВопросГиперссылки()

Процедура ВыполнитьЗагрузкуДанныхВТЧ(ДанныеСтрока, ИмяТЧ)
	
	Данные = ЗначениеИзСтрокиВнутр(ДанныеСтрока);
	
	Объект[ИмяТЧ].Загрузить(Данные);
	
КонецПроцедуры
	
Процедура ДозаполнитьНовыеОбработчики(ТекущийОбъект)
	
	Если ТекущийОбъект.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если Перечисления.вогСобытияВопросов.Количество() = Объект.ОбработчикиСобытий.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого стр Из Перечисления.вогСобытияВопросов Цикл 
		
		Если ТекущийОбъект.ОбработчикиСобытий.Найти(стр, "Событие") = Неопределено Тогда
			НоваяСтрока = Объект.ОбработчикиСобытий.Добавить();
			НоваяСтрока.Событие = стр;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеОповещенияВыборКартинкиИзСписка(Значение, ИДСтроки) Экспорт 
	
	Если Значение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоискСтроки = Объект.КомандыВопроса.НайтиПоИдентификатору(ИДСтроки);
	
	Если ПоискСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоискСтроки.ИмяКартинки = Значение.Значение;
	
	ЗаполнитьАдресКартинки(ИДСтроки);
	
	Модифицированность = Истина;
	
КонецПроцедуры // ОписаниеОтветаНаВопросГиперссылки()

Процедура ЗаполнитьАдресаКартинокКоманд()
	
	Для Каждого стр Из Объект.КомандыВопроса Цикл 
		
		ЗаполнитьАдресКартинки(стр.ПолучитьИдентификатор());
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьАдресКартинки(ИДСтроки)
	
	ПоискСтроки = Объект.КомандыВопроса.НайтиПоИдентификатору(ИДСтроки);
	
	Если ПоискСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПоискСтроки.ИмяКартинки) Тогда
		ПоискСтроки.Картинка = ПоместитьВоВременноеХранилище(БиблиотекаКартинок[ПоискСтроки.ИмяКартинки], ЭтаФорма.УникальныйИдентификатор);
	Иначе 
		ПоискСтроки.Картинка = "Нет";
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокВыбораКартинок()
	
	Возврат вогУправлениеОпросамиСервер.ПолучитьСписокВыбораКартинок();
	
КонецФункции

&НаСервере 
Функция АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище()
	
	Возврат Справочники.вогВопросы.АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(Объект);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьДоступность(Форма)

	Форма.Элементы.ГруппаАлгоритмОбработкиОтветов.Видимость = Форма.Объект.ИспользоватьАлгоритмОбработкиОтветов;
	
	Форма.Элементы.ГруппаСоставВопроса.Видимость = НЕ Форма.Объект.ТипОтвета = ПредопределенноеЗначение("Перечисление.вогТипыОтветов.Заполняемый");
	Форма.Элементы.ГруппаНаборДополнительнойИнформации.Видимость = НЕ Форма.Объект.ТипОтвета = ПредопределенноеЗначение("Перечисление.вогТипыОтветов.Заполняемый");
	
	Форма.Элементы.ГруппаАлгоритмОбработкиЗаполнения.Видимость = Форма.Объект.ИспользоватьОбработкуЗаполнения;
	
	//START Кайдашов 24/06/19
	Форма.Элементы.РедактироватьСхемуКомпоновкиВариантовОтветов.Видимость = Форма.Объект.ДинамическоеФормированиеВариантовОтветов;
	//END Кайдашов
	
КонецПроцедуры // УстановитьВидимостьДоступность()

//START Кайдашов 24/06/19

&НаКлиенте
Процедура ДинамическоеФормированиеВариантовОтветовПриИзменении(Элемент)
	
	Если Объект.ДинамическоеФормированиеВариантовОтветов и Объект.ТипОтвета<>ПредопределенноеЗначение("Перечисление.вогТипыОтветов.Множественный") тогда
		Объект.ДинамическоеФормированиеВариантовОтветов = Ложь;
	КонецЕсли;
	УстановитьВидимостьДоступность(ЭтаФорма);
	
	
КонецПроцедуры
//END Кайдашов


//START Кайдашов 24/06/19
&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиВариантовОтветов(Команда)

		// Открыть редактор настроек схемы компоновки данных
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru = 'Настройка схемы компоновки данных для вариантов ответов ""%1""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ЗаголовокФормыНастройкиСхемыКомпоновкиДанных, "%1", Объект.Наименование);
	
	АдресаНастроек = Неопределено;

	
	ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
						"НеПомещатьНастройкиВСхемуКомпоновкиДанных,
						|НеРедактироватьСхемуКомпоновкиДанных,
						|НеНастраиватьУсловноеОформление,
						|НеНастраиватьВыбор,
						|НеНастраиватьПорядок,
						|УникальныйИдентификатор,
						|АдресСхемыКомпоновкиДанных,
						|АдресНастроекКомпоновкиДанных,
						|Заголовок,
						|ИсточникШаблонов,
						|ИмяШаблонаСКД,
						|ВозвращатьИмяТекущегоШаблонаСКД",
						Истина,
						Ложь,
						Истина,
						Ложь,
						Ложь,
						УникальныйИдентификатор,
						АдресСхемыКомпоновкиДанныхВариантОтветов,
						АдресНастроекКомпоновкиДанныхВариантОтветов,
						ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
						,
						,
						Истина),,,,, Новый ОписаниеОповещения("РедактироватьСхемуКомпоновкиДанныхВариантовОтветовЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанныхВариантовОтветовЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    АдресаНастроек = Результат;
    
    Если ЗначениеЗаполнено(АдресаНастроек) Тогда
        Если АдресаНастроек.Свойство("АдресХранилищаНастройкиКомпоновщика") Тогда
            АдресНастроекКомпоновкиДанныхВариантОтветов = АдресаНастроек.АдресХранилищаНастройкиКомпоновщика;
        КонецЕсли;
    КонецЕсли;
    
КонецПроцедуры
//END Кайдашов

#КонецОбласти
