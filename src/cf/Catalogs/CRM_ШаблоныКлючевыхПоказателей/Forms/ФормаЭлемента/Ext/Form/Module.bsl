
&НаКлиенте
Процедура ПослеРедактированияСхемы(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Если ПустаяСтрока(РезультатЗакрытия.ИмяТекущегоШаблонаСКД) 
			И Элементы.СхемаКомпоновкиДанных.СписокВыбора.НайтиПоЗначению("") = Неопределено Тогда
			Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольный'"));
			
		КонецЕсли;
		Если ПустаяСтрока(РезультатЗакрытия.ИмяТекущегоШаблонаСКД) Тогда
			Объект.СхемаКомпоновкиДанных = "ШаблоннаяСхемаКомпоновкиДанныхПредопределенный";
		Иначе	
			Объект.СхемаКомпоновкиДанных = РезультатЗакрытия.ИмяТекущегоШаблонаСКД;
		КонецЕсли;	
		
		Если РезультатЗакрытия.Свойство("АдресХранилищаНастройкиКомпоновщика") Тогда
			АдресНастроекКомпоновкиДанных = РезультатЗакрытия.АдресХранилищаНастройкиКомпоновщика;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры	

&НаКлиенте
Процедура ПослеРедактированияСхемыРасшифровки(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Если ПустаяСтрока(РезультатЗакрытия.ИмяТекущегоШаблонаСКД) 
			И Элементы.СхемаКомпоновкиДанных.СписокВыбора.НайтиПоЗначению("") = Неопределено Тогда
			Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольный'"));
			
		КонецЕсли;
		
		Объект.СхемаКомпоновкиДанныхРасшифровки = РезультатЗакрытия.ИмяТекущегоШаблонаСКД;
		
		Если РезультатЗакрытия.Свойство("АдресХранилищаНастройкиКомпоновщика") Тогда
			АдресНастроекКомпоновкиДанныхРасшифровки = РезультатЗакрытия.АдресХранилищаНастройкиКомпоновщика;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры	


&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанных(Команда)
	
	// Открыть редактор настроек схемы компоновки данных
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru = 'Настройка шаблона расчета для целевого показателя ""%1""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ЗаголовокФормыНастройкиСхемыКомпоновкиДанных, "%1", Объект.Наименование);
	ОповещениеЗакрытия = Новый ОписаниеОповещения("ПослеРедактированияСхемы", ЭтотОбъект);
	АдресаНастроек = ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
						"НеПомещатьНастройкиВСхемуКомпоновкиДанных,
						|НеРедактироватьСхемуКомпоновкиДанных,
						|НеНастраиватьУсловноеОформление,
						|НеНастраиватьВыбор,
						|НеНастраиватьПорядок,
						|УникальныйИдентификатор,
						|АдресСхемыКомпоновкиДанных,
						|АдресНастроекКомпоновкиДанных,
						|Заголовок,
						|ИсточникШаблонов,
						|ИмяШаблонаСКД,
						|ВозвращатьИмяТекущегоШаблонаСКД",
						Истина,
						Ложь,
						Истина,
						Истина,
						Истина,
						УникальныйИдентификатор,
						АдресСхемыКомпоновкиДанных,
						АдресНастроекКомпоновкиДанных,
						ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
						Объект.Ссылка,
						Объект.СхемаКомпоновкиДанных,
						Истина), ЭтотОбъект,,,,ОповещениеЗакрытия);
	
	
	
	//УстановитьДоступностьИВидимостьЭлементовФормы(Объект, Элементы, РазмерностьДоступна());
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанныхРасшифровки(Команда)
	
	// Открыть редактор настроек схемы компоновки данных
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = НСтр("ru = 'Настройка шаблона расшифровки для целевого показателя ""%1""'");
	ЗаголовокФормыНастройкиСхемыКомпоновкиДанных = СтрЗаменить(ЗаголовокФормыНастройкиСхемыКомпоновкиДанных, "%1", Объект.Наименование);
	ОповещениеЗакрытия = Новый ОписаниеОповещения("ПослеРедактированияСхемыРасшифровки", ЭтотОбъект);
	АдресаНастроек = ОткрытьФорму("ОбщаяФорма.УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
						"НеПомещатьНастройкиВСхемуКомпоновкиДанных,
						|НеРедактироватьСхемуКомпоновкиДанных,
						|НеНастраиватьУсловноеОформление,
						|НеНастраиватьВыбор,
						|НеНастраиватьПорядок,
						|УникальныйИдентификатор,
						|АдресСхемыКомпоновкиДанных,
						|АдресНастроекКомпоновкиДанных,
						|Заголовок,
						|ИсточникШаблонов,
						|ИмяШаблонаСКД,
						|ВозвращатьИмяТекущегоШаблонаСКД",
						Истина,
						Ложь,
						Истина,
						Истина,
						Истина,
						УникальныйИдентификатор,
						АдресСхемыКомпоновкиДанныхРасшифровки,
						АдресНастроекКомпоновкиДанныхРасшифровки,
						ЗаголовокФормыНастройкиСхемыКомпоновкиДанных,
						Объект.Ссылка,
						Объект.СхемаКомпоновкиДанныхРасшифровки,
						Истина), ЭтотОбъект,,,,ОповещениеЗакрытия);
	
	
	
	//УстановитьДоступностьИВидимостьЭлементовФормы(Объект, Элементы, РазмерностьДоступна());
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПризнакПредопределенногоМакета = Врег("Предопределенный");
	ДлинаПризнакаПредопределенногоМакета = СтрДлина(ПризнакПредопределенногоМакета);
	Для каждого Макет из Метаданные.НайтиПоТипу(ТипЗнч(Объект.Ссылка)).Макеты Цикл
		Если Макет.ТипМакета = Метаданные.СвойстваОбъектов.ТипМакета.СхемаКомпоновкиДанных Тогда
			Если ВРег(Прав(Макет.Имя, ДлинаПризнакаПредопределенногоМакета)) = ПризнакПредопределенногоМакета Тогда
				Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить(Макет.Имя, Макет.Синоним);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Параметры.ЗначениеКопирования.Пустая() Тогда
		СхемаИНастройки = Справочники.CRM_ШаблоныКлючевыхПоказателей.ОписаниеИСхемаКомпоновкиДанныхЦелиПоИмениМакета(Объект.Ссылка, Объект.СхемаКомпоновкиДанных);
	Иначе
		СхемаИНастройки = Справочники.CRM_ШаблоныКлючевыхПоказателей.ОписаниеИСхемаКомпоновкиДанныхЦелиПоИмениМакета(Параметры.ЗначениеКопирования, Параметры.ЗначениеКопирования.СхемаКомпоновкиДанных);
	КонецЕсли;
	
	Если ПустаяСтрока(СхемаИНастройки.Описание) Тогда
		Объект.СхемаКомпоновкиДанных = "";
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.СхемаКомпоновкиДанных) Тогда
		Элементы.СхемаКомпоновкиДанных.СписокВыбора.Добавить("", НСтр("ru = 'Произвольный'"));
	КонецЕсли;
	
	Если Параметры.Свойство("Виджет") Тогда
		Объект.Виджет = Параметры.Виджет;
	КонецЕсли;    
	
	Если Параметры.ЗначениеКопирования.Пустая() Тогда
		Адреса = АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище();
	Иначе
		Адреса = АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(Параметры.ЗначениеКопирования);
	КонецЕсли;
	Если Объект.СхемаКомпоновкиДанных = "" Тогда
		Объект.СхемаКомпоновкиДанных = Адреса.НаименованиеСхемы;
		Объект.СхемаКомпоновкиДанныхРасшифровки = Адреса.НаименованиеСхемы;
	КонецЕсли;	
	АдресСхемыКомпоновкиДанных = Адреса.СхемаКомпоновкиДанных;
	АдресНастроекКомпоновкиДанных = Адреса.НастройкиКомпоновкиДанных;
	АдресСхемыКомпоновкиДанныхРасшифровки = Адреса.СхемаКомпоновкиДанныхРасшифровки;
	АдресНастроекКомпоновкиДанныхРасшифровки = Адреса.НастройкиКомпоновкиДанныхРасшифровки;
	Элементы.ЗаполнитьСтандартнымиНастройками.Видимость = Объект.Предопределенный;
	
	Если Объект.ЦелевойТренд = "Интервал" Тогда
		Объект.ПериодАнализа = "День";
		Элементы.ПериодАнализа.Доступность = Ложь;
	Иначе	
		Элементы.ПериодАнализа.Доступность = Истина;
	КонецЕсли;
	
	Элементы.СоздатьВиджет.Доступность = Объект.Виджет.Пустая();
	Элементы.ТекстЗапросаРасчетаДинамикиПоказателя.ТолькоПросмотр = Объект.Предопределенный;
	Элементы.РасчитыватьРегламентнымЗаданием.Доступность = Не Объект.Предопределенный;
	Элементы.ОткрытьКонструкторЗапроса.Доступность = Не Объект.Предопределенный;
	Элементы.ТекстЗапросаРасчетаДинамикиПоказателя.Видимость = Объект.РасчитыватьРегламентнымЗаданием;
	Если НЕ CRM_ЛицензированиеСервер.ВариантПоставкиКОРП() Тогда
		Элементы.СоздатьВиджет.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.Предопределенный Тогда
		Элементы.ГруппаСхемаКомпоновкиДанных1.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере 
Функция АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(ЭлементКопирования = Неопределено)
	
	Возврат Справочники.CRM_ШаблоныКлючевыхПоказателей.АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(Объект, ЭлементКопирования);
	
КонецФункции

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_ШаблоныКлючевыхПоказателей.Ссылка
	|ИЗ
	|	Справочник.CRM_ШаблоныКлючевыхПоказателей КАК CRM_ШаблоныКлючевыхПоказателей
	|ГДЕ
	|	CRM_ШаблоныКлючевыхПоказателей.Ссылка <> &Ссылка
	|	И CRM_ШаблоныКлючевыхПоказателей.Наименование = &Наименование";
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("Наименование", Объект.Наименование);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если НЕ Выборка.Ссылка.Пустая() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Показатель с таким наименование уже существует!";
			Сообщение.Сообщить();

			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	ТекущийОбъект.ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанных));
	ТекущийОбъект.ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
	ТекущийОбъект.ХранилищеСхемыКомпоновкиДанныхРасшифровки = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанныхРасшифровки));
	ТекущийОбъект.ХранилищеНастроекКомпоновкиДанныхРасшифровки = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанныхРасшифровки));
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтандартнымиНастройкамиНаСервере()
	Справочники.CRM_ШаблоныКлючевыхПоказателей.ЗаполнитьПредопределенныеПоказатели(Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтвета(Знач Результат, Знач Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьСтандартнымиНастройкамиНаСервере();
		Прочитать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтандартнымиНастройками(Команда)
	ПараметрыОповещения = Новый Структура;
	Оповещение = Новый ОписаниеОповещения("ОбработкаОтвета", ЭтотОбъект, ПараметрыОповещения);
	ПоказатьВопрос(Оповещение, "Текущие настройки будут заменены стандартными.
	|Продолжить ?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦелевойТрендПриИзменении(Элемент)
	Если Объект.ЦелевойТренд = "Интервал" Тогда
		Объект.ПериодАнализа = "День";
		Элементы.ПериодАнализа.Доступность = Ложь;
	Иначе	
		Элементы.ПериодАнализа.Доступность = Истина;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура СоздатьВиджетНаСервере()
	Если Объект.Ссылка.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для создания виджета необходимо записать шаблон показателя!";
		Сообщение.Сообщить();
	Иначе	
		ЭлементВиджет = Справочники.CRM_Виджеты.НайтиПоНаименованию(Объект.Наименование);
		Если ЭлементВиджет.Пустая() Тогда
			ОбъектВиджет = Справочники.CRM_Виджеты.СоздатьЭлемент();
			ОбъектВиджет.Наименование = Объект.Наименование;
			ОбъектВиджет.ИсточникДанных = Объект.Ссылка;
			ОбъектВиджет.Записать();
			ЭлементВиджет = ОбъектВиджет.Ссылка;
		КонецЕсли;
		Объект.Виджет = ЭлементВиджет;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьВиджет(Команда)
	Если Объект.Виджет.Пустая() Тогда
		СоздатьВиджетНаСервере();
	Иначе
	КонецЕсли;	
	Элементы.СоздатьВиджет.Доступность = Объект.Виджет.Пустая();
КонецПроцедуры

&НаКлиенте
Процедура РасчитыватьРегламентнымЗаданиемПриИзменении(Элемент)
	Элементы.ТекстЗапросаРасчетаДинамикиПоказателя.Видимость = Объект.РасчитыватьРегламентнымЗаданием;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапроса(Команда)
	
	
	ТекстЗапросаВФорме = СокрЛП(Объект.ТекстЗапросаРасчетаДинамикиПоказателя);
	
	КонструкторЗапроса = Новый КонструкторЗапроса(ТекстЗапросаВФорме);
	ДополнительныеПараметры = Новый Структура;
	Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияКонструктораЗапроса", ЭтотОбъект, ДополнительныеПараметры);
	КонструкторЗапроса.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияКонструктораЗапроса(ТекстЗапросаВФорме, ДополнительныеПараметры) Экспорт
	Если ТекстЗапросаВФорме <> Неопределено Тогда
		Объект.ТекстЗапросаРасчетаДинамикиПоказателя = ТекстЗапросаВФорме;
	КонецЕсли;
КонецПроцедуры
