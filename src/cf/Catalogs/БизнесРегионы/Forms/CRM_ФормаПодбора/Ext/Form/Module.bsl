
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДеревоРегионовЗначение = РеквизитФормыВЗначение("ДеревоРегионов");
	
	МакетКлассификатор = Справочники.БизнесРегионы.ПолучитьМакет("CRM_Классификатор");
	
	ВозвратнаяСтруктура = ОбщегоНазначения.ПрочитатьXMLВТаблицу(МакетКлассификатор.ПолучитьТекст());
	
	ТаблицаРегионов = ВозвратнаяСтруктура.Данные;
	
	Для Каждого СтрокаТаблицыРегионов Из ТаблицаРегионов Цикл
		
		КодРодителяСтрока = СтрокаТаблицыРегионов.ParentCode;
		
		СтрокаРодителя = Неопределено;
		
		Если Не ПустаяСтрока(КодРодителяСтрока) Тогда
			
			КодРодителя = Число(КодРодителяСтрока);
			
			СтрокаРодителя = ДеревоРегионовЗначение.Строки.Найти(КодРодителя, "CRM_КодПоКлассификатору", Истина);
			
		КонецЕсли;	
		
		Если СтрокаРодителя = Неопределено Тогда

			СтрокаДереваРегионов = ДеревоРегионовЗначение.Строки.Добавить();
			
		Иначе
			
			СтрокаДереваРегионов = СтрокаРодителя.Строки.Добавить();
			
		КонецЕсли;
		
		Платежеспособность = ?(ПустаяСтрока(СтрокаТаблицыРегионов.Solvency), 
							   Перечисления.CRM_Платежеспособность.ПустаяСсылка(),
							   Перечисления.CRM_Платежеспособность[СтрокаТаблицыРегионов.Solvency]);
		
		СтрокаДереваРегионов.Наименование			  = СтрокаТаблицыРегионов.Name;
		СтрокаДереваРегионов.CRM_КодПоКлассификатору  = СтрокаТаблицыРегионов.Code;
		СтрокаДереваРегионов.CRM_Платежеспособность   = Платежеспособность;
		СтрокаДереваРегионов.CRM_ЧисленностьНаселения = СтрокаТаблицыРегионов.Population;
		СтрокаДереваРегионов.CRM_КодСтраны            = СтрокаТаблицыРегионов.CountryCode;
		СтрокаДереваРегионов.CRM_КодГорода            = СтрокаТаблицыРегионов.SityCode;
		СтрокаДереваРегионов.CRM_ВремяПоГринвичу_GMT  = СтрокаТаблицыРегионов.TimeZone;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоРегионовЗначение, "ДеревоРегионов");
	
	ЗакрыватьПриЗакрытииВладельца = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРегионВСправочникПоКоду(КодРегиона)
	
	// Найдем регион в дереве значений, это необходимо, чтобы вычислить его родителей.
	
	ДеревоРегионовЗначение = РеквизитФормыВЗначение("ДеревоРегионов");
	
	ДобавляемыйРегион = ДеревоРегионовЗначение.Строки.Найти(КодРегиона, "CRM_КодПоКлассификатору", Истина);
	
	МассивСтрокРегионов = Новый Массив;
	
	МассивКодовРегионов = Новый Массив;
	
	МассивСтрокРегионов.Добавить(ДобавляемыйРегион);
	
	МассивКодовРегионов.Добавить(КодРегиона);
	
	// Найдем всех родителей региона.
	
	РодительскийРегион = ДобавляемыйРегион.Родитель;
	
	Пока РодительскийРегион <> Неопределено Цикл
		
		МассивСтрокРегионов.Вставить(0, РодительскийРегион);
		
		МассивКодовРегионов.Вставить(0, РодительскийРегион.CRM_КодПоКлассификатору);
		
		РодительскийРегион = РодительскийРегион.Родитель;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	БизнесРегионы.Ссылка КАК БизнесРегион,
	               |	БизнесРегионы.CRM_КодПоКлассификатору КАК КодРегиона
	               |ИЗ
	               |	Справочник.БизнесРегионы КАК БизнесРегионы
	               |ГДЕ
	               |	БизнесРегионы.CRM_КодПоКлассификатору В(&МассивКодов)
	               |	И (НЕ БизнесРегионы.ПометкаУдаления)";
				   
	Запрос.УстановитьПараметр("МассивКодов", МассивКодовРегионов);
	
	ТаблицаРегионов = Запрос.Выполнить().Выгрузить();
	
	ИндексРегионаВМассиве = 0;
	
	Для Каждого ЭлементМассиваКодов Из МассивКодовРегионов Цикл
		
		// Проверим наличие региона в справочнике.
		
		СтрокаРегиона = ТаблицаРегионов.Найти(ЭлементМассиваКодов, "КодРегиона");
		
		Если СтрокаРегиона = Неопределено Тогда
			
			НовыйРегионОбъект = Справочники.БизнесРегионы.СоздатьЭлемент();
			
			ЗаполнитьЗначенияСвойств(НовыйРегионОбъект, МассивСтрокРегионов[ИндексРегионаВМассиве]);
			
			НовыйРегионОбъект.Родитель = РодительскийРегион;
			
			Попытка
				
				НовыйРегионОбъект.Записать();
				
				РодительскийРегион = НовыйРегионОбъект.Ссылка;
				
			Исключение	
				
				Возврат
				
			КонецПопытки;			
			
		Иначе
			
			РодительскийРегион = СтрокаРегиона.БизнесРегион;
			
		КонецЕсли;
		
		ИндексРегионаВМассиве = ИндексРегионаВМассиве + 1;		
		
	КонецЦикла;	
	
КонецПроцедуры// ДобавитьРегионВСправочник()

&НаКлиенте
Процедура ДобавитьРегион()
	
	Если Элементы.ДеревоРегионов.ТекущиеДанные <> Неопределено Тогда
		
		ДобавитьРегионВСправочникПоКоду(Элементы.ДеревоРегионов.ТекущиеДанные.CRM_КодПоКлассификатору);
		
		ВладелецФормы.Элементы.Список.Обновить();
		
	КонецЕсли;	
	
КонецПроцедуры// ДобавитьРегион()	
	
	

&НаКлиенте
Процедура ДеревоРегионовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ДобавитьРегион();
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРегионовВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	ДобавитьРегион();
	
КонецПроцедуры


