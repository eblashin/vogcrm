
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СоответствиеСуществующихРегионов = Новый Соответствие;
	
	// Найдем существующие регионы.

	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	БизнесРегионы.Ссылка КАК БизнесРегион,
	               |	БизнесРегионы.CRM_КодПоКлассификатору КАК КодРегиона
	               |ИЗ
	               |	Справочник.БизнесРегионы КАК БизнесРегионы
	               |ГДЕ
	               |	(НЕ БизнесРегионы.ПометкаУдаления)";
				   
	ТаблицаСуществующихРегионов = Запрос.Выполнить().Выгрузить();
	
	ДеревоРегионовЗначение = РеквизитФормыВЗначение("ДеревоРегионов");
	
	МакетКлассификатор = Справочники.БизнесРегионы.ПолучитьМакет("CRM_Классификатор");
	
	ВозвратнаяСтруктура = ОбщегоНазначения.ПрочитатьXMLВТаблицу(МакетКлассификатор.ПолучитьТекст());
	
	ТаблицаРегионов = ВозвратнаяСтруктура.Данные;
	
	Для Каждого СтрокаТаблицыРегионов Из ТаблицаРегионов Цикл
		
		КодРодителяСтрока = СтрокаТаблицыРегионов.ParentCode;
		
		СтрокаРодителя = Неопределено;
		
		Если Не ПустаяСтрока(КодРодителяСтрока) Тогда
			
			КодРодителя = Число(КодРодителяСтрока);
			
			СтрокаРодителя = ДеревоРегионовЗначение.Строки.Найти(КодРодителя, "CRM_КодПоКлассификатору", Истина);
			
		КонецЕсли;	
		
		Если СтрокаРодителя = Неопределено Тогда

			СтрокаДереваРегионов = ДеревоРегионовЗначение.Строки.Добавить();
			
		Иначе
			
			СтрокаДереваРегионов = СтрокаРодителя.Строки.Добавить();
			
		КонецЕсли;
		
		Платежеспособность = ?(ПустаяСтрока(СтрокаТаблицыРегионов.Solvency), 
							   Перечисления.CRM_Платежеспособность.ПустаяСсылка(),
							   Перечисления.CRM_Платежеспособность[СтрокаТаблицыРегионов.Solvency]);
		
		СтрокаДереваРегионов.Наименование			  = СтрокаТаблицыРегионов.Name;
		СтрокаДереваРегионов.CRM_КодПоКлассификатору  = СтрокаТаблицыРегионов.Code;
		СтрокаДереваРегионов.CRM_Платежеспособность   = Платежеспособность;
		СтрокаДереваРегионов.CRM_ЧисленностьНаселения = СтрокаТаблицыРегионов.Population;
		СтрокаДереваРегионов.CRM_КодСтраны            = СтрокаТаблицыРегионов.CountryCode;
		СтрокаДереваРегионов.CRM_КодГорода            = СтрокаТаблицыРегионов.SityCode;
		СтрокаДереваРегионов.CRM_КодКЛАДР             = ?(ЗначениеЗаполнено(СтрокаТаблицыРегионов.CLADRCode),Число(Лев(СтрокаТаблицыРегионов.CLADRCode,21)),0);
		СтрокаДереваРегионов.CRM_ВремяПоГринвичу_GMT  = СтрокаТаблицыРегионов.TimeZone;		
		
		СтрокаСуществующегоРегиона = ТаблицаСуществующихРегионов.Найти(СтрокаДереваРегионов.CRM_КодПоКлассификатору, "КодРегиона");
		
		Если СтрокаСуществующегоРегиона <> Неопределено Тогда
		
			СтрокаДереваРегионов.Существует = Истина;
			СтрокаДереваРегионов.Пометка    = Истина;			
			СтрокаДереваРегионов.БизнесРегион = СтрокаСуществующегоРегиона.БизнесРегион;
		
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоРегионовЗначение, "ДеревоРегионов");
	
	ЗакрыватьПриЗакрытииВладельца = Истина;
	
КонецПроцедуры //ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)


&НаСервере
Процедура КоллекцияЭлементовЗаполнитьРегионы(КоллекцияЭлементов, РодительскийРегион = Неопределено)
	
	ЭлементыКоллекции = КоллекцияЭлементов.ПолучитьЭлементы();
	
	Для Каждого ЭлементКоллекции Из ЭлементыКоллекции Цикл
		
		ТекущийРегион = Неопределено;
		
		Если ЭлементКоллекции.Существует Тогда			
			
			Если РодительскийРегион <> Неопределено И ЭлементКоллекции.БизнесРегион.Родитель <> РодительскийРегион Тогда
				
				// Дочерний элемент был записан раньше родительского.
				
				РегионОбъект = ЭлементКоллекции.БизнесРегион.ПолучитьОбъект();
				
				РегионОбъект.Родитель = РодительскийРегион;
				
				РегионОбъект.Записать();
				
				ТекущийРегион = РегионОбъект.Ссылка;
				
			Иначе
				
				Если НЕ ЗначениеЗаполнено(ЭлементКоллекции.БизнесРегион.CRM_КодКЛАДР) Тогда
					РегионОбъект = ЭлементКоллекции.БизнесРегион.ПолучитьОбъект();
					РегионОбъект.CRM_КодКЛАДР = ЭлементКоллекции.CRM_КодКЛАДР;
					РегионОбъект.Записать();
				КонецЕсли;
				
				ТекущийРегион = ЭлементКоллекции.БизнесРегион;
				
			КонецЕсли;			
		
		ИначеЕсли ЭлементКоллекции.Пометка Тогда
			
			РегионОбъект = Справочники.БизнесРегионы.СоздатьЭлемент();
			
			ЗаполнитьЗначенияСвойств(РегионОбъект, ЭлементКоллекции);
			
			Если РодительскийРегион <> Неопределено Тогда
				
				РегионОбъект.Родитель = РодительскийРегион;
			
			КонецЕсли;			
			
			РегионОбъект.Записать();
			
			ТекущийРегион = РегионОбъект.Ссылка;
			
		Иначе
			
			ТекущийРегион = РодительскийРегион;
			
		КонецЕсли;		
	
		КоллекцияЭлементовЗаполнитьРегионы(ЭлементКоллекции, ТекущийРегион);
		
	КонецЦикла;
	
КонецПроцедуры//


&НаСервере
Процедура ЗагрузитьРегионыНаСервере()
	
	КоллекцияЭлементовЗаполнитьРегионы(ДеревоРегионов);
	
КонецПроцедуры// ДобавитьРегионВСправочник()


&НаКлиенте
Процедура ЗагрузитьРегионы(Команда)
	
	ЗагрузитьРегионыНаСервере();
	
	ВладелецФормы.Элементы.Список.Обновить();
	
	Закрыть();
	
КонецПроцедуры


&НаКлиенте
Процедура ПометитьРегионСРодителями(ТекущийРегион)
	
	РегионРодитель = ТекущийРегион;
	
	Пока РегионРодитель <> Неопределено Цикл
		
		РегионРодитель.Пометка = Истина;
		
		РегионРодитель = РегионРодитель.ПолучитьРодителя();
		
	КонецЦикла;
	
КонецПроцедуры// ПометитьРегионСРодителями(ТекущийРегион)
	

&НаКлиенте
Процедура УстановитьЗначениеПометокЭлементов(КоллекцияЭлементов, ЗначениеПометок)
	
	ЭлементыКоллекции = КоллекцияЭлементов.ПолучитьЭлементы();
	
	Для Каждого ЭлементКоллекции Из ЭлементыКоллекции Цикл
		
		ЭлементКоллекции.Пометка = ЗначениеПометок;
		
		УстановитьЗначениеПометокЭлементов(ЭлементКоллекции, ЗначениеПометок);
		
	КонецЦикла;	
	
КонецПроцедуры// УстановитьЗначениеПометокЭлементов(КоллекцияЭлементов, ЗначениеПометок)


&НаКлиенте
Процедура ПометитьВсе(Команда)
	
	УстановитьЗначениеПометокЭлементов(ДеревоРегионов, Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура СнятьВсе(Команда)
	
	УстановитьЗначениеПометокЭлементов(ДеревоРегионов, Ложь);
	
КонецПроцедуры


&НаКлиенте
Процедура ДеревоРегионовПометкаПриИзменении(КодРегиона)	
	
	РегионыТекущаяСтрока = Элементы.ДеревоРегионов.ТекущиеДанные;
	
	Если РегионыТекущаяСтрока <> Неопределено Тогда
		
		Если РегионыТекущаяСтрока.Пометка Тогда
		
			ПометитьРегионСРодителями(РегионыТекущаяСтрока);
			
		КонецЕсли;	
		
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура ПометитьВложенные(Команда)
	
	РегионыТекущаяСтрока = Элементы.ДеревоРегионов.ТекущиеДанные;
	
	Если РегионыТекущаяСтрока <> Неопределено Тогда
		
		// Пометим текущий регион и всех его родителей.
		
		ПометитьРегионСРодителями(РегионыТекущаяСтрока);
		
		// пометим дочерние строки		
		
		УстановитьЗначениеПометокЭлементов(РегионыТекущаяСтрока, Истина);		
		
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура СнятьВложенные(Команда)	
	
	РегионыТекущаяСтрока = Элементы.ДеревоРегионов.ТекущиеДанные;
	
	Если РегионыТекущаяСтрока <> Неопределено Тогда
		
		УстановитьЗначениеПометокЭлементов(РегионыТекущаяСтрока, Ложь);		
		
	КонецЕсли;	
	
КонецПроцедуры

