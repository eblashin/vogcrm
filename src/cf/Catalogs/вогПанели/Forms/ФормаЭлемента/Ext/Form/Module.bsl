
&НаКлиенте
Перем РедактируемыйЭлементИзображения;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьДанныеСторонПанели();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.СтороныПанели.Очистить();
	ТекущийОбъект.ИзображенияСторон.Очистить();
	Для каждого КлючЗначение Из ДанныеСторон Цикл
		ТаблицаКоллекций = ЭтотОбъект[КлючЗначение.Значение.ИмяТаблицаКоллекций];		
		Для каждого СтрокаКоллекции Из ТаблицаКоллекций Цикл
			НоваяСтрока = ТекущийОбъект.СтороныПанели.Добавить();
			НоваяСтрока.Сторона   = КлючЗначение.Ключ;
			НоваяСтрока.Коллекция = СтрокаКоллекции.Коллекция;
		
		КонецЦикла;
		
		ФайлКартинки = ЭтотОбъект[КлючЗначение.Значение.ИмяФайлКартинки];
		Если ЗначениеЗаполнено(ФайлКартинки) Тогда
			НоваяСтрока = ТекущийОбъект.ИзображенияСторон.Добавить();
			НоваяСтрока.Сторона      = КлючЗначение.Ключ;
			НоваяСтрока.ФайлКартинки = ФайлКартинки;
		
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "Запись_Файл"
	  И РедактируемыйЭлементИзображения <> Неопределено Тогда
			
		Модифицированность = Истина;
		СсылкаНаФайл = ?(ТипЗнч(Источник) = Тип("Массив"), Источник[0], Источник);
		
		ИмяРеквизита = СтрЗаменить(РедактируемыйЭлементИзображения.Имя, "ФайлКартинкиАдрес__", "ФайлКартинки__");
		
		ЭтотОбъект[ИмяРеквизита] = СсылкаНаФайл;
		ЭтотОбъект[РедактируемыйЭлементИзображения.Имя] = НавигационнаяСсылкаКартинки(СсылкаНаФайл, УникальныйИдентификатор);
			
		РедактируемыйЭлементИзображения = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#КонецОбласти

#Область ПодключаемыеПроцедурыФункции

&НаКлиенте
Процедура Подключаемый_ФайлКартинкиАдресНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗаблокироватьДанныеФормыДляРедактирования();
	ДобавитьИзображениеНаКлиенте(Элемент);
	
КонецПроцедуры // Подключаемый_ФайлКартинкиАдресНажатие()

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

#Область МеханизмКартинок

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = НСтр("ru='Для выбора изображения необходимо записать объект. Записать?'");
		Ответ = Неопределено;

		ПоказатьВопрос(Новый ОписаниеОповещения("ДобавитьИзображениеНаКлиентеЗавершение", ЭтотОбъект, Элемент), ТекстВопроса, РежимДиалогаВопрос.ДаНет);
        Возврат;
		
	КонецЕсли;
	
	ДобавитьИзображениеНаКлиентеФрагмент(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеЗавершение(РезультатВопроса, Элемент) Экспорт
    
    Ответ = РезультатВопроса;
    
    Если Ответ = КодВозвратаДиалога.Да Тогда
        Если Не Записать() Тогда
            Возврат;
        КонецЕсли;
    Иначе
        Возврат;
    КонецЕсли;
    
    ДобавитьИзображениеНаКлиентеФрагмент(Элемент);

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиентеФрагмент(Элемент)
    
    Перем ИдентификаторФайла;
    
    ВыборИзображения   = Истина;
    ИдентификаторФайла = Новый УникальныйИдентификатор;
	
	РедактируемыйЭлементИзображения = Элемент;
    ПрисоединенныеФайлыКлиент.ДобавитьФайлы(Объект.Ссылка, ИдентификаторФайла, CRM_ОбщегоНазначенияКлиент.ФильтрФайловИзображений());
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НавигационнаяСсылкаКартинки(ФайлКартинки, ИдентификаторФормы)
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	
КонецФункции

#КонецОбласти

&НаСервере
Процедура СформироватьДанныеСторонПанели()

	СоответствиеДанныхСторон = Новый Соответствие;
	МенеджерСторон 			 = Перечисления.вогСтороныПанелей;
	
	//Создание реквизитов
	МассивДобавляемыхРеквизитов = Новый Массив;
	Для каждого ЗначениеСтороны Из МенеджерСторон Цикл
		ИдентификаторЭлемента = XMLСтрока(ЗначениеСтороны);
		МассивДобавляемыхРеквизитов.Добавить(
			Новый РеквизитФормы("ФайлКартинкиАдрес__" + ИдентификаторЭлемента, Новый ОписаниеТипов("Строка")));	
		МассивДобавляемыхРеквизитов.Добавить(
			Новый РеквизитФормы("ФайлКартинки__" + ИдентификаторЭлемента, Новый ОписаниеТипов("СправочникСсылка.вогПанелиПрисоединенныеФайлы")));	
			
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ТаблицаКоллекцийСтороныПанели__" + ИдентификаторЭлемента, Новый ОписаниеТипов("ТаблицаЗначений"),,, Истина));
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Коллекция", Новый ОписаниеТипов("СправочникСсылка.вогКоллекцииНоменклатуры") , "ТаблицаКоллекцийСтороныПанели__" + ИдентификаторЭлемента));
				
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	//Элементы
	Для каждого ЗначениеСтороны Из МенеджерСторон Цикл
		СтрокиСтороныПанели = Объект.СтороныПанели.НайтиСтроки(Новый Структура("Сторона", ЗначениеСтороны));
		Если СтрокиСтороныПанели.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ИдентификаторЭлемента = XMLСтрока(ЗначениеСтороны);
		Группа = СоздатьНайтиОбычнуюГруппу("Группа__" + ИдентификаторЭлемента, 
			Элементы.ГруппаОбластьФормы,
			ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная,
			ОтображениеОбычнойГруппы.СлабоеВыделение);
			
		ЭлементФайлКартинки 				   = Элементы.Добавить("ФайлКартинкиАдрес__" + ИдентификаторЭлемента, Тип("ПолеФормы"), Группа);
		ЭлементФайлКартинки.Вид				   = ВидПоляФормы.ПолеКартинки;
		ЭлементФайлКартинки.ПутьКДанным 	   = "ФайлКартинкиАдрес__" + ИдентификаторЭлемента;
		ЭлементФайлКартинки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭлементФайлКартинки.РазмерКартинки	   = РазмерКартинки.Пропорционально;
		ЭлементФайлКартинки.Гиперссылка		   = Истина;
		ЭлементФайлКартинки.ТекстНевыбраннойКартинки = НСтр("ru = 'нет изображения'");
		
		ЭлементФайлКартинки.УстановитьДействие("Нажатие", "Подключаемый_ФайлКартинкиАдресНажатие");
		
		СтрокиИзображенияСторон = Объект.ИзображенияСторон.НайтиСтроки(Новый Структура("Сторона", ЗначениеСтороны));
		Если СтрокиИзображенияСторон.Количество() > 0 Тогда
			ФайлКартинки = СтрокиИзображенияСторон[0].ФайлКартинки;
			Если ЗначениеЗаполнено(ФайлКартинки) Тогда
				ДанныеФайлаКартинки = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, УникальныйИдентификатор);
				Если ЭтоАдресВременногоХранилища(ДанныеФайлаКартинки.СсылкаНаДвоичныеДанныеФайла) Тогда
					ЭтотОбъект["ФайлКартинкиАдрес__" + ИдентификаторЭлемента] = ДанныеФайлаКартинки.СсылкаНаДвоичныеДанныеФайла;
					ЭтотОбъект["ФайлКартинки__" + ИдентификаторЭлемента]      = ФайлКартинки;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ЭлементТаблица						 = Элементы.Добавить("ТаблицаКоллекцийСтороныПанели__" + ИдентификаторЭлемента, Тип("ТаблицаФормы"), Группа);
		ЭлементТаблица.ПутьКДанным			 = "ТаблицаКоллекцийСтороныПанели__" + ИдентификаторЭлемента;
		ЭлементТаблица.ПоложениеЗаголовка	 = ПоложениеЗаголовкаЭлементаФормы.Нет;	
		ЭлементТаблица.ВысотаВСтрокахТаблицы = 4;
		
		ЭлементКолонка 			      = Элементы.Добавить("Коллекция__" + ИдентификаторЭлемента, Тип("ПолеФормы"), ЭлементТаблица);
		ЭлементКолонка.Вид			  = ВидПоляФормы.ПолеВвода;
		ЭлементКолонка.ПутьКДанным	  = "ТаблицаКоллекцийСтороныПанели__" + ИдентификаторЭлемента + "." + "Коллекция";
		
		ЗаполнитьДанныеТаблицы(ЭтотОбъект["ТаблицаКоллекцийСтороныПанели__" + ИдентификаторЭлемента], СтрокиСтороныПанели);
		
		СоответствиеДанныхСторон.Вставить(ЗначениеСтороны, 
			Новый Структура("ИмяФайлКартинки, ИмяТаблицаКоллекций", "ФайлКартинки__" + ИдентификаторЭлемента, "ТаблицаКоллекцийСтороныПанели__" + ИдентификаторЭлемента)
		);
		
	КонецЦикла;
	
	ДанныеСторон = Новый ФиксированноеСоответствие(СоответствиеДанныхСторон);
	
КонецПроцедуры // СформироватьДанныеСторонПанели()

&НаСервере
Процедура ЗаполнитьДанныеТаблицы(Таблица, СтрокиСтороны)

	Для каждого СтрокаСтороны Из СтрокиСтороны Цикл
		ЗаполнитьЗначенияСвойств(Таблица.Добавить(), СтрокаСтороны);	
	
	КонецЦикла;	

КонецПроцедуры // ЗаполнитьДанныеТаблицы()

#Область ОписаниеЭлементов
	
&НаСервере
Функция СоздатьНайтиКоманду(ИмяКоманды, 
							Действие,
							Заголовок = "",
							ОтображениеКнопки = Неопределено,
							Картинка = Неопределено)
							
	Команда = Команды.Найти(ИмяКоманды);						
	Если Команда = Неопределено Тогда
		Команда 			= Команды.Добавить(ИмяКоманды);
		Команда.Действие	= Действие;
		Команда.Заголовок	= Заголовок;
		
		Если ОтображениеКнопки <> Неопределено Тогда
			Команда.Отображение	= ОтображениеКнопки;
		КонецЕсли;
		
		Если Картинка <> Неопределено Тогда
			Команда.Картинка = Картинка;
		КонецЕсли;
		
	КонецЕсли;			
	
	Возврат Команда;
	
КонецФункции // СоздатьНайтиКоманду()

&НаСервере
Функция СоздатьНайтиКнопку(ИмяКнопки, 
						   ИмяКоманды,
						   Родитель = Неопределено,
						   Ширина = Неопределено, 
						   Высота = Неопределено);  
						   
	Кнопка = Элементы.Найти(ИмяКнопки);
	Если Кнопка = Неопределено Тогда
		Кнопка 			  = Элементы.Добавить(ИмяКнопки, Тип("КнопкаФормы"), ?(Родитель = Неопределено, ЭтаФорма, Родитель));
		Кнопка.ИмяКоманды = ИмяКоманды;
		
		Если Ширина <> Неопределено Тогда
			Кнопка.Ширина = Ширина;
		КонецЕсли;
		
		Если Высота <> Неопределено Тогда
			Кнопка.Высота = Высота;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Кнопка;
	
КонецФункции // СоздатьНайтиКнопку()

&НаСервере
Функция СоздатьНайтиОбычнуюГруппу(ИмяГруппы,
						   		Родитель = Неопределено,
						   		Группировка = Неопределено,
						   		Отображение = Неопределено, 
						   		РастягиватьПоГоризонтали = Неопределено,
						   		РастягиватьПоВертикали = Неопределено,
						   		ЗаголовокГруппы = "")
						   	
	Группа = Элементы.Найти(ИмяГруппы);
	Если Группа = Неопределено Тогда
		Группа   		   		  		= Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), ?(Родитель = Неопределено, ЭтаФорма, Родитель));	
		Группа.Вид		   		  		= ВидГруппыФормы.ОбычнаяГруппа;	
		Группа.Группировка 		  		= ?(Группировка = Неопределено, ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, Группировка);
		Группа.Отображение 		   		= ?(Отображение = Неопределено, ОтображениеОбычнойГруппы.Нет, Отображение);
		Группа.ОтображатьЗаголовок 		= ЗначениеЗаполнено(ЗаголовокГруппы);	
		Группа.Заголовок 				= ЗаголовокГруппы;
		Группа.РастягиватьПоГоризонтали = РастягиватьПоГоризонтали;
		Группа.РастягиватьПоВертикали   = РастягиватьПоВертикали;
		
	КонецЕсли;
	
	Возврат Группа;	
	
КонецФункции // СоздатьНайтиГруппу()

#КонецОбласти

#КонецОбласти
