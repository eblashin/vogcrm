//////////////////////////////////////////////////////////////////////////////// 
// ПЕРЕМЕННЫЕ

&НаКлиенте
Перем ВыполняетсяЗакрытие;

///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура СброситьЗначенияРеквизитов(Форма)
	Форма.Январь	= Ложь;
	Форма.Февраль	= Ложь;
	Форма.Март		= Ложь;
	Форма.Апрель	= Ложь;
	Форма.Май		= Ложь;
	Форма.Июнь		= Ложь;
	Форма.Июль		= Ложь;
	Форма.Август	= Ложь;
	Форма.Сентябрь	= Ложь;
	Форма.Октябрь	= Ложь;
	Форма.Ноябрь	= Ложь;
	Форма.Декабрь	= Ложь;
	
	Форма.Пн	= Ложь;
	Форма.Вт	= Ложь;
	Форма.Ср	= Ложь;
	Форма.Чт	= Ложь;
	Форма.Пт	= Ложь;
	Форма.Сб	= Ложь;
	Форма.Вс	= Ложь;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыФормыПоРасписанию(Форма, Расписание)
	СброситьЗначенияРеквизитов(Форма);
	
	// Перенос совпадающих по именам атрибутов
	ЗаполнитьЗначенияСвойств(Форма, Расписание);
	
	// Дни недели
	Для Каждого н Из Расписание.ДниНедели Цикл
		Если н = 1 Тогда
			Форма.Пн = Истина;
		ИначеЕсли н = 2 Тогда
			Форма.Вт = Истина;
		ИначеЕсли н = 3 Тогда
			Форма.Ср = Истина;
		ИначеЕсли н = 4 Тогда
			Форма.Чт = Истина;
		ИначеЕсли н = 5 Тогда
			Форма.Пт = Истина;
		ИначеЕсли н = 6 Тогда
			Форма.Сб = Истина;
		ИначеЕсли н = 7 Тогда
			Форма.Вс = Истина;
		КонецЕсли;
	КонецЦикла;
	
	// Месяцы
	Для Каждого н Из Расписание.Месяцы Цикл
		Если н = 1 Тогда
			Форма.Январь = Истина;
		ИначеЕсли н = 2 Тогда
			Форма.Февраль = Истина;
		ИначеЕсли н = 3 Тогда
			Форма.Март = Истина;
		ИначеЕсли н = 4 Тогда
			Форма.Апрель = Истина;
		ИначеЕсли н = 5 Тогда
			Форма.Май = Истина;
		ИначеЕсли н = 6 Тогда
			Форма.Июнь = Истина;
		ИначеЕсли н = 7 Тогда
			Форма.Июль = Истина;
		ИначеЕсли н = 8 Тогда
			Форма.Август = Истина;
		ИначеЕсли н = 9 Тогда
			Форма.Сентябрь = Истина;
		ИначеЕсли н = 10 Тогда
			Форма.Октябрь = Истина;
		ИначеЕсли н = 11 Тогда
			Форма.Ноябрь = Истина;
		ИначеЕсли н = 12 Тогда
			Форма.Декабрь = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если Расписание.ДеньВМесяце >= 0 Тогда
		Форма.ДеньВМесяцеСНачалаСКонца = 1;
		Форма.ДеньВМесяце = Расписание.ДеньВМесяце;
	Иначе
		Форма.ДеньВМесяцеСНачалаСКонца = -1;
		Форма.ДеньВМесяце = - Расписание.ДеньВМесяце;
	КонецЕсли;
	
	Если Расписание.ДеньНеделиВМесяце >= 0 Тогда
		Форма.ДеньНеделиВМесяцеСНачалаСКонца = 1;
		Форма.ДеньНеделиВМесяце = Расписание.ДеньНеделиВМесяце;
	Иначе
		Форма.ДеньНеделиВМесяцеСНачалаСКонца = -1;
		Форма.ДеньНеделиВМесяце = - Расписание.ДеньНеделиВМесяце;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьРасписаниеПоРеквизитамФормы(Форма, Расписание)
	// Перенос совпадающих по именам атрибутов
	ЗаполнитьЗначенияСвойств(Расписание, Форма);
	Расписание.ДатаНачала	= Форма.Объект.ДатаНачала;
	Расписание.ДатаКонца	= Форма.Объект.ДатаОкончания;
	
	// Дни недели
	Расписание.ДниНедели.Очистить();
	МассивДниНедели = Новый Массив();
	Если Форма.Пн Тогда
		МассивДниНедели.Добавить(1);
	КонецЕсли;
	Если Форма.Вт Тогда
		МассивДниНедели.Добавить(2);
	КонецЕсли;
	Если Форма.Ср Тогда
		МассивДниНедели.Добавить(3);
	КонецЕсли;
	Если Форма.Чт Тогда
		МассивДниНедели.Добавить(4);
	КонецЕсли;
	Если Форма.Пт Тогда
		МассивДниНедели.Добавить(5);
	КонецЕсли;
	Если Форма.Сб Тогда
		МассивДниНедели.Добавить(6);
	КонецЕсли;
	Если Форма.Вс Тогда
		МассивДниНедели.Добавить(7);
	КонецЕсли;
	Расписание.ДниНедели = МассивДниНедели;
	
	// Месяцы
	Расписание.Месяцы.Очистить();
	МассивМесяцы = Новый Массив();
	Если Форма.Январь Тогда
		МассивМесяцы.Добавить(1);
	КонецЕсли;
	Если Форма.Февраль Тогда
		МассивМесяцы.Добавить(2);
	КонецЕсли;
	Если Форма.Март Тогда
		МассивМесяцы.Добавить(3);
	КонецЕсли;
	Если Форма.Апрель Тогда
		МассивМесяцы.Добавить(4);
	КонецЕсли;
	Если Форма.Май Тогда
		МассивМесяцы.Добавить(5);
	КонецЕсли;
	Если Форма.Июнь Тогда
		МассивМесяцы.Добавить(6);
	КонецЕсли;
	Если Форма.Июль Тогда
		МассивМесяцы.Добавить(7);
	КонецЕсли;
	Если Форма.Август Тогда
		МассивМесяцы.Добавить(8);
	КонецЕсли;
	Если Форма.Сентябрь Тогда
		МассивМесяцы.Добавить(9);
	КонецЕсли;
	Если Форма.Октябрь Тогда
		МассивМесяцы.Добавить(10);
	КонецЕсли;
	Если Форма.Ноябрь Тогда
		МассивМесяцы.Добавить(11);
	КонецЕсли;
	Если Форма.Декабрь Тогда
		МассивМесяцы.Добавить(12);
	КонецЕсли;
	Расписание.Месяцы = МассивМесяцы;
	
	Расписание.ДеньВМесяце = Форма.ДеньВМесяце * Форма.ДеньВМесяцеСНачалаСКонца;
	Расписание.ДеньНеделиВМесяце = Форма.ДеньНеделиВМесяце * Форма.ДеньНеделиВМесяцеСНачалаСКонца;
КонецПроцедуры


///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ СЕРВЕР


&НаСервере
Функция ПолучитьОбъектРасписание()
	РасписаниеИзХранилищаЗначения = Объект.Ссылка.Расписание.Получить();
	Если ТипЗнч(РасписаниеИзХранилищаЗначения) = Тип("РасписаниеРегламентногоЗадания") Тогда
		Возврат РасписаниеИзХранилищаЗначения;
	Иначе
		Возврат Новый РасписаниеРегламентногоЗадания();
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьПредставлениеРасписанияСервер(Расписание, ОграничитьДлиной = Неопределено)
	Возврат Справочники.CRM_РядыСобытий.ПолучитьПредставлениеРасписания(Расписание);
КонецФункции


///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ КЛИЕНТ

&НаКлиенте
Функция ПолучитьПредставлениеРасписанияКлиент(Расписание)
	РасписаниеСтрока = Строка(Расписание);
	ПозицияТочкаСЗапятой = Найти(РасписаниеСтрока, ";");
	Если ПозицияТочкаСЗапятой > 0 Тогда
		РасписаниеСтрока = Лев(РасписаниеСтрока, ПозицияТочкаСЗапятой - 1);
	КонецЕсли;
	Возврат РасписаниеСтрока;
КонецФункции

&НаКлиенте
Процедура ПриИзмененияРеквизитовРасписанияОбщий(Элемент)
	ЗаполнитьРасписаниеПоРеквизитамФормы(ЭтотОбъект, ТекущееРасписание);
	ПредставлениеРасписания = ПолучитьПредставлениеРасписанияКлиент(ТекущееРасписание);
КонецПроцедуры

&НаКлиенте
Функция ПроверитьНаКорректность()
	Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Дата начала должна быть заполнена!'"),, "ДатаНачала", "Объект");
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Дата окончания должна быть заполнена!'"),, "ДатаОкончания", "Объект");
		Возврат Ложь;
	КонецЕсли;
	
	Если НачалоДня(Объект.ДатаОкончания) < НачалоДня(Объект.ДатаНачала) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Дата окончания должна быть больше даты начала!'"),, "ДатаОкончания", "Объект");
		Возврат Ложь;
	КонецЕсли;
	
	//Если Не ЗначениеЗаполнено(ВремяНачала) Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Время начала должно быть заполнено!'"),, "ВремяНачала");
	//	Возврат Ложь;
	//КонецЕсли;
	//
	//Если Не ЗначениеЗаполнено(ВремяКонца) Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Время окончания должно быть заполнено!'"),, "ВремяКонца");
	//	Возврат Ложь;
	//КонецЕсли;
	
	//Если ЗначениеЗаполнено(ВремяКонца) И ВремяКонца < ВремяНачала Тогда
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Время окончания должно быть больше времени начала!'"),, "ВремяКонца");
	//	Возврат Ложь;
	//КонецЕсли;
	
	Возврат Истина;
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	ПараметрыЗакрытия = Новый Структура;
	
	ПараметрыЗакрытия.Вставить("ВремяНачала", ЭтотОбъект.ВремяНачала);
	ПараметрыЗакрытия.Вставить("ВремяКонца", ЭтотОбъект.ВремяКонца);
	

	Если Модифицированность Или Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Записать();
		
		Если Не ДанныеБылиИзменены Тогда
			Модифицированность = Истина;
		КонецЕсли;
		Если Не Модифицированность Тогда
			ПараметрыЗакрытия.Вставить("Ссылка", Объект.Ссылка);
			ПараметрыЗакрытия.Вставить("ДанныеБылиИзменены", ДанныеБылиИзменены);
			ПараметрыЗакрытия.Вставить("ПризнакЗакрытия", Истина);
			Закрыть(ПараметрыЗакрытия);
		КонецЕсли;
	Иначе
		ПараметрыЗакрытия.Вставить("ПризнакЗакрытия", Неопределено);
		Закрыть(ПараметрыЗакрытия);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	ПараметрыЗакрытия = Новый Структура;
	ПараметрыЗакрытия.Вставить("ПризнакЗакрытия", Неопределено);
	Закрыть(ПараметрыЗакрытия);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Попытка
		Если ТипЗнч(ВладелецФормы.Объект.Ссылка) <> Тип("ДокументСсылка.CRM_Мероприятие") 
			И Не ТипЗнч(ВладелецФормы.Объект.Ссылка) = Тип("СправочникСсылка.вогШаблоныПоручений")  //Павелко, Таск 000000793, 05.11.2019
			И Не ТипЗнч(ВладелецФормы.Объект.Ссылка) = Тип("СправочникСсылка.вогШаблоныМероприятий") Тогда //Павелко, Таск 000000794, 08.11.2019
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	Исключение
		Отказ = Истина;
		Возврат;
	КонецПопытки;
		
	Если ТипЗнч(ТекущееРасписание) <> Тип("РасписаниеРегламентногоЗадания") Тогда
		ТекущееРасписание = Новый РасписаниеРегламентногоЗадания();
	КонецЕсли;
	
	ТекущееРасписание.ВремяНачала	= ВремяНачала;
	ТекущееРасписание.ВремяКонца	= ВремяКонца;
	ТекущееРасписание.ДатаНачала	= Объект.ДатаНачала;
	ТекущееРасписание.ДатаКонца		= Объект.ДатаОкончания;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И ТекущееРасписание.ПериодПовтораДней = 0 Тогда
		ТекущееРасписание.ПериодПовтораДней = 1;
	КонецЕсли;
	
	ЗаполнитьРеквизитыФормыПоРасписанию(ЭтотОбъект, ТекущееРасписание);
	
	ПредставлениеРасписания = ПолучитьПредставлениеРасписанияСервер(ТекущееРасписание);
	
	Модифицированность = Ложь;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекущееРасписание = ПолучитьОбъектРасписание();
	Если Параметры.Свойство("ВремяНачала") Тогда
		ЭтотОбъект.ВремяНачала = Параметры.ВремяНачала;
	КонецЕсли;
	Если Параметры.Свойство("ВремяКонца") Тогда
		ЭтотОбъект.ВремяКонца = Параметры.ВремяКонца;
	КонецЕсли;
	Если Параметры.Свойство("ДатаНачала") Тогда
		Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
			Объект.ДатаНачала = Параметры.ДатаНачала;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не ПроверитьНаКорректность() Тогда
		Отказ = Истина;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПередЗакрытием".
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	Если Модифицированность Тогда
		Отказ = Истина;
		ОбратныйВызов = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОбратныйВызов, НСтр("ru = 'Данные были изменены. Сохранить данные?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;	
КонецПроцедуры // ПередЗакрытием()

&НаКлиенте
// Процедура - обработчик ответа на вопрос перед закрытием формы.
//
// Параметры:
//	Результат				- КодВозвратаДиалога	- Ответ на вопрос.
//	ДополнительныеПараметры	- Структура				- Структура дополнительных параметров.
//
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		Если ПроверитьНаКорректность() Тогда
			Записать();
		Иначе
			Возврат;
		КонецЕсли;
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	Модифицированность	= Ложь;
	Закрыть();
КонецПроцедуры // ПередЗакрытиемЗавершение()

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Расписание = Новый РасписаниеРегламентногоЗадания();
	ЗаполнитьРасписаниеПоРеквизитамФормы(ЭтотОбъект, Расписание);
	ТекущийОбъект.Наименование = Справочники.CRM_РядыСобытий.ПолучитьПредставлениеРасписания(Расписание,, 150);
	ТекущийОбъект.Расписание = Новый ХранилищеЗначения(Расписание, Новый СжатиеДанных(9));
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПредставлениеРасписания = ПолучитьПредставлениеРасписанияСервер(ТекущееРасписание);
	
	МассивДатРасписания = Справочники.CRM_РядыСобытий.ПолучитьМассивДатРасписания(ТекущийОбъект.ДатаНачала, ТекущийОбъект.ДатаОкончания, ТекущийОбъект.Ссылка);
	Если МассивДатРасписания.Количество() = 0 Тогда
		Модифицированность = Истина;
		ДанныеБылиИзменены = Ложь;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Расписание настроенно некорректно - в указанный период не попадает ни одного события!'"), СтатусСообщения.Важное);
	Иначе
		Модифицированность = Ложь;
		ДанныеБылиИзменены = Истина;
	КонецЕсли;
КонецПроцедуры

ВыполняетсяЗакрытие = Ложь;