
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// ++ VOG Солодов В.В. 01.10.2019

// Заполняет номер договора по шаблону Типа договора.
// Параметры:
//	Объект - СправочникОбъект.ДоговорыКонтрагентов, ДанныеФормыСтруктура - элемент,
//		для которого нужно сформировать номер
//
Процедура СформироватьНомерДоговораПоШаблону(Объект) Экспорт
	
	Если Не ЗначениеЗаполнено(Объект.вогТипДоговора)
		Или Не ЗначениеЗаполнено(Объект.Организация)
		Или Не Объект.вогФормаДоговора = Перечисления.вогТипыФормДоговоров.НашаФорма Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонНомера 			= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.вогТипДоговора, "ШаблонНомера");
	Префикс 				= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.вогТипДоговора, "Префикс");
	ПорядковыйНомер 		= "";
	
	Если Не ЗначениеЗаполнено(ШаблонНомера)
		Или Не ЗначениеЗаполнено(Префикс) Тогда
		Возврат;
	КонецЕсли;
	
	НачальныйНомер 			= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.вогТипДоговора, "НачальныйНомер");
	
	Если Не ЗначениеЗаполнено(НачальныйНомер) Тогда
		НачальныйНомер 		= 1;
	КонецЕсли;
	
	ТекстНомера 			= СтрЗаменить(ШаблонНомера, "[Префикс]", Префикс);
	
	Если СтрНайти(ШаблонНомера, "[НомерДоговора]") > 0 Тогда
		НомерДоговора 		= ПолучитьНомерДоговораПоПорядку(Объект);
		НомерДоговора 		= Формат(НомерДоговора, "ЧГ=0");
	ИначеЕсли СтрНайти(ШаблонНомера, "[НомерОсновногоДоговора]") > 0 Тогда
		СтруктураДоговора 	= ПолучитьСтруктуруДопДоговора(Объект);
		НомерДоговора 		= СтруктураДоговора.НомерОсновногоДоговора;
		ПорядковыйНомер 	= СтруктураДоговора.ПорядковыйНомер;
	Иначе
		НомерДоговора 		= "";
	КонецЕсли;
	
	НомерДоговораСтрока 	= СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Строка(НомерДоговора), 5, "0", "Слева");
	
	ТекстНомера 			= СтрЗаменить(ТекстНомера, "[НомерДоговора]", 			НомерДоговораСтрока);
	ТекстНомера 			= СтрЗаменить(ТекстНомера, "[НомерОсновногоДоговора]", 	НомерДоговораСтрока);
	ТекстНомера 			= СтрЗаменить(ТекстНомера, "[ДатаДоговора]", 			Формат(Объект.ДатаДоговора, "ДФ=ddMMyyyy"));
	ТекстНомера 			= СтрЗаменить(ТекстНомера, "[ПН]", 						ПорядковыйНомер);
	
	Объект.НомерДоговора 	= ТекстНомера;
	
КонецПроцедуры

// Процедура составляет наименование договора из номера и даты договора.
// Параметры:
//	Объект - СправочникОбъект.ДоговорыКонтрагентов, ДанныеФормыСтруктура - элемент,
//		для которого нужно сформировать наименование
//
Процедура СформироватьНаименованиеДоговора(Объект) Экспорт
	
	//START Кайдашов 04/02/20 CRM-190
	ТекстНаименования = НСтр("ru = '№ %НомерДоговора% от %ДатаДоговора%'");
	// +++ VOG Кулаков П.Л. 16.03.2020 CRM-445
	ТекстНаименования = НСтр("ru = 'Договор поставки № %НомерДоговора% от %ДатаДоговора%'");
	// --- VOG Кулаков П.Л.
	ТекстНаименования = СтрЗаменить(ТекстНаименования, "%НомерДоговора%", СокрЛП(Объект.НомерДоговора));
	ТекстНаименования = СтрЗаменить(
		ТекстНаименования,
		"%ДатаДоговора%",
		СокрЛП(Строка(Формат(Объект.вогДатаНачалаДействия, "ДФ=dd.MM.yyyy"))));
	Если ЗначениеЗаполнено(Объект.Владелец) тогда
		//START Кайдашов 25/02/20 CRM-350
		// +++ VOG Кулаков П.Л. 16.03.2020 CRM-445
		//ТекстНаименования = ТекстНаименования + " юр.лицо "+СокрЛП(Объект.Владелец)+" ("+СокрЛП(Объект.Владелец.Партнер)+")";
		// --- VOG Кулаков П.Л.
	КонецЕсли;
	
	Объект.Наименование = ТекстНаименования;
//END Кайдашов CRM-190

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает порядковый номер договора.
// Параметры:
//	Объект - СправочникОбъект.ДоговорыКонтрагентов - элемент справочника ДоговорыКонтрагентов
//
// Возвращаемое значение:
//	Число - номер договора
//
Функция ПолучитьНомерДоговораПоПорядку(Объект)
	
	НачальныйНомер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.вогТипДоговора, "НачальныйНомер");
	
	Если НачальныйНомер > 0 Тогда
		НомерДоговора = НачальныйНомер;
	Иначе
		НомерДоговора = 1;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДоговорыКонтрагентов.Ссылка) КАК КоличествоДоговоров
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.вогТипДоговора В (ЗНАЧЕНИЕ(Справочник.вогТипыДоговоровКонтрагентов.ДоговорПоставкиТовара), ЗНАЧЕНИЕ(Справочник.вогТипыДоговоровКонтрагентов.ДоговорПоставкиТовараРазовый))
		|	И ДоговорыКонтрагентов.Организация = &Организация
		|	И НЕ ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("вогТипДоговора", Объект.вогТипДоговора);
	Запрос.УстановитьПараметр("Организация", 	Объект.Организация);
	Запрос.УстановитьПараметр("Ссылка", 		Объект.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НомерДоговора = НомерДоговора + ВыборкаДетальныеЗаписи.КоличествоДоговоров;
	КонецЦикла;
	
	Возврат НомерДоговора;
	
КонецФункции

// Возвращает структуру с данными доп. договора.
// Параметры:
//	Объект - СправочникОбъект.ДоговорыКонтрагентов - элемент справочника ДоговорыКонтрагентов
//
// Возвращаемое значение:
//	Структура - струтура доп. договора, содержащая НомерОсновногоДоговора и ПорядковыйНомер - порядковый
//		номер доп. договора в течение дня
//
Функция ПолучитьСтруктуруДопДоговора(Объект)
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("НомерОсновногоДоговора", 	"");
	СтруктураВозврата.Вставить("ПорядковыйНомер", 			"");
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
		|	ДоговорыКонтрагентов.вогТипДоговора КАК вогТипДоговора,
		|	ДоговорыКонтрагентов.вогОсновной КАК вогОсновной,
		|	ДоговорыКонтрагентов.ДатаДоговора КАК ДатаДоговора,
		|	ДоговорыКонтрагентов.НомерДоговора КАК НомерДоговора
		|ПОМЕСТИТЬ ВТ_ВсеДоговора
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Организация = &Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ВсеДоговора.Ссылка) КАК Количество
		|ПОМЕСТИТЬ ВТ_КоличествоДоговоров
		|ИЗ
		|	ВТ_ВсеДоговора КАК ВТ_ВсеДоговора
		|ГДЕ
		|	ВТ_ВсеДоговора.вогТипДоговора = &ТипДоговора
		|	И НАЧАЛОПЕРИОДА(ВТ_ВсеДоговора.ДатаДоговора, ДЕНЬ) > &ДатаДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВТ_ВсеДоговора.НомерДоговора КАК НомерДоговора,
		|	ЕСТЬNULL(ВТ_КоличествоДоговоров.Количество, 0) КАК Количество
		|ИЗ
		|	ВТ_ВсеДоговора КАК ВТ_ВсеДоговора
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоДоговоров КАК ВТ_КоличествоДоговоров
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВТ_ВсеДоговора.вогТипДоговора = ЗНАЧЕНИЕ(Справочник.вогТипыДоговоровКонтрагентов.ДоговорПоставкиТовара)
		|	И ВТ_ВсеДоговора.вогОсновной = ИСТИНА";
	
	Запрос.УстановитьПараметр("Организация", 	Объект.Организация);
	Запрос.УстановитьПараметр("ТипДоговора", 	Объект.вогТипДоговора);
	Запрос.УстановитьПараметр("ДатаДоговора", 	НачалоДня(Объект.ДатаДоговора));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.НомерДоговора) Тогда
			
			ТипОсновногоДоговора 	= Справочники.вогТипыДоговоровКонтрагентов.ДоговорПоставкиТовара;
			Префикс 				= ТипОсновногоДоговора.Префикс;
			
			Если СтрНачинаетсяС(ВыборкаДетальныеЗаписи.НомерДоговора, Префикс + "/") Тогда
				
				НомерОсновногоДоговора 	= СтрЗаменить(НомерОсновногоДоговора, Префикс + "/", "");
				
				СтруктураВозврата.НомерОсновногоДоговора 	= Лев(НомерОсновногоДоговора, 5);
				СтруктураВозврата.ПорядковыйНомер 			= Строка(ВыборкаДетальныеЗаписи.Количество + 1);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураВозврата;
	
КонецФункции
// -- VOG Солодов В.В. 01.10.2019

#КонецОбласти

#КонецЕсли
