
// + Тищенко В.В.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Начало Видимость страниц
	
	СписокСтраниц = Новый Массив;
	Для каждого ТекЭлемент Из Элементы.ГруппаНастройкОбъекта.ПодчиненныеЭлементы Цикл
		Если ТекЭлемент.Вид=ВидПоляФормы.ПолеФлажка Тогда
			СписокСтраниц.Добавить(ТекЭлемент.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого ТекСтраница Из СписокСтраниц Цикл
		УстановитьВидимостьСтраницыФормы(ТекСтраница,Объект[ТекСтраница]);
	КонецЦикла;
	
	// Конец Видимость страниц
	
	// + Начало Заполненеие реквизитов
	
	Если Параметры.Ключ.Пустая() ИЛИ Объект.РеквизитыДляКонтроляЗаполнененияТорговаяТочка.Количество() = 0 Тогда
		
		СоотвестивиеТаблиц 	= Новый Соответствие;
		СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовТорговаяТочка()"	,Объект.РеквизитыДляКонтроляЗаполнененияТорговаяТочка);
		СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовКонтактноеЛицо()"	,Объект.РеквизитыДляКонтроляЗаполнененияКонтактноеЛицо);
		СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовКлиент()"			,Объект.РеквизитыДляКонтроляЗаполнененияКлиенты);
		СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовЮрЛицо()"			,Объект.РеквизитыДляКонтроляЗаполнененияЮрЛица);
		Результат 			= Неопределено;
		
		Для каждого ТаблицаРеквизитов Из СоотвестивиеТаблиц Цикл
				 Выполнить("Результат = " + ТаблицаРеквизитов.Ключ);
			Для каждого РеквизитыОбъекта Из Результат Цикл
				СтрокаДобавления 						= ТаблицаРеквизитов.Значение.Добавить();
				СтрокаДобавления.ИмяРеквизита 			= РеквизитыОбъекта.Значение;
				СтрокаДобавления.ПредставлениеРеквизита = РеквизитыОбъекта.Представление;
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
		
	// - Конец Заполненеие реквиизтов
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ИспользоватьНастройкиДляФормы3в1ПриИзменении(Неопределено);
	
	Если Не Объект.СоздаватьАнкетуВместоОбъектов Тогда
		Объект.ВариантОпроса = Неопределено;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

// ++ VOG Солодов В.В. 23.08.2019 task 577
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого СтрокаТЧ Из Объект.РеквизитыДляКонтроляЗаполнененияТорговаяТочка Цикл
		
		Если ЭтоАдресВременногоХранилища(СтрокаТЧ.АдресПараметровВыбора) Тогда
			СоответствиеПараметровВыбора 	= ПолучитьИзВременногоХранилища(СтрокаТЧ.АдресПараметровВыбора);
		Иначе
			СоответствиеПараметровВыбора 	= Новый Соответствие;
		КонецЕсли;
			
		СтруктураОтбора = Новый Структура("ИмяРеквизита", СтрокаТЧ.ИмяРеквизита);
		НайденныеСтроки = ТекущийОбъект.РеквизитыДляКонтроляЗаполнененияТорговаяТочка.НайтиСтроки(СтруктураОтбора);
			
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НайденнаяСтрока.ПараметрыВыбора = Новый ХранилищеЗначения(
				СоответствиеПараметровВыбора, Новый СжатиеДанных(9));
		КонецЦикла;
			
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьПараметрыВыбораТЧ(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьПараметрыВыбораТЧ(ТекущийОбъект);
	
КонецПроцедуры
// -- VOG Солодов В.В. 23.08.2019

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьНастройкиДляФормы3в1ПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ГруппаНастройкОбъекта"		,"Видимость",Объект.ИспользоватьНастройкиДляФормы3в1);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ИспользоватьГеокодирование"	,"Видимость",Объект.ИспользоватьНастройкиДляФормы3в1);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ПроверитьТочкуУКлиента"		,"Видимость",Объект.ИспользоватьНастройкиДляФормы3в1);

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ГруппаНастройкиТорговойТочки","Видимость",Объект.НастройкиТорговаяТочка);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ГруппаНастройкиКлиент"		,"Видимость",Объект.НастройкиКлиент);
	
	Если НЕ Объект.ИспользоватьНастройкиДляФормы3в1 Тогда
		
		МассивНастроек = Новый Массив;
		МассивНастроек.Добавить("НастройкиТорговаяТочка");
		МассивНастроек.Добавить("НастройкиКонтактноеЛицо");
		МассивНастроек.Добавить("НастройкиКлиент");
		МассивНастроек.Добавить("НастройкиЮрЛица");
		
		Для каждого РеквизитНастроек Из МассивНастроек Цикл
			Объект[РеквизитНастроек] = Ложь;
			УстановитьВидимостьСтраницыФормы(РеквизитНастроек,Объект[РеквизитНастроек]);
		КонецЦикла;
		
		ОбновитьТаблицыДоступныхРеквизитов();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиВидимостиСтраницы(Элемент)
	
	УстановитьВидимостьСтраницыФормы(Элемент.Имя,Объект[Элемент.Имя]);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ГруппаНастройкиТорговойТочки","Видимость",Объект.НастройкиТорговаяТочка);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ГруппаНастройкиКлиент"		,"Видимость",Объект.НастройкиКлиент);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеквизитыДляКонтроляЗаполнененияОсновное

&НаКлиенте
Процедура СоздаватьАнкетуВместоОбъектовПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
	// ++ VOG Солодов В.В. 26.12.2019 CRM-77
	Если Объект.СоздаватьАнкетуВместоОбъектов Тогда
		Объект.РежимВыбораКонтактныхЛиц = Ложь;
	КонецЕсли;
	// -- VOG Солодов В.В. 26.12.2019
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеквизитыДляКонтроляЗаполнененияТорговаяТочка

&НаКлиенте
Процедура РеквизитыДляКонтроляЗаполнененияТорговаяТочкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.РеквизитыДляКонтроляЗаполнененияТорговаяТочка.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ТекущаяСтрока.ОбязателенДляЗаполнения Тогда
			ТекущаяСтрока.ДоступностьРеквизита = Истина;
		КонецЕсли;
		
		Если ТекущаяСтрока.ОбязателенДляЗаполнения ИЛИ ТекущаяСтрока.ДоступностьРеквизита Тогда
			ТекущаяСтрока.Использование = Истина;
		Иначе
			ТекущаяСтрока.Использование = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// ++ VOG Солодов В.В. 23.08.2019 task 577
&НаКлиенте
Процедура РеквизитыДляКонтроляЗаполнененияТорговаяТочкаОграничитьВыборПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РеквизитыДляКонтроляЗаполнененияТорговаяТочка.ТекущиеДанные;
	
	Если Не ТекущиеДанные = Неопределено Тогда
		
		ТекущиеДанные.ОграничитьВыбор = Не ТекущиеДанные.ОграничитьВыбор;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ИмяСправочника", 			"вогТорговыеТочки");
		ПараметрыОткрытия.Вставить("ИмяРеквизита", 				ТекущиеДанные.ПредставлениеРеквизита);
		ПараметрыОткрытия.Вставить("УникальныйИдентификатор", 	УникальныйИдентификатор);
		ПараметрыОткрытия.Вставить("АдресПараметровВыбора", 	ТекущиеДанные.АдресПараметровВыбора);
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОграничитьВыборЗавершение", ЭтотОбъект, ТекущиеДанные);
		
		ОткрытьФорму(
			"Справочник.вогВидыТорговыхТочек.Форма.ФормаРедактированияПараметровВыбора",
			ПараметрыОткрытия,
			ЭтотОбъект,
			ЭтотОбъект,
			,
			,
			ОповещениеОЗавершении,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничитьВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЭтоАдресВременногоХранилища(Результат) Тогда
		
		СоответствиеПараметров = ПолучитьИзВременногоХранилища(Результат);
		
		Если ТипЗнч(СоответствиеПараметров) = Тип("Соответствие") И СоответствиеПараметров.Количество() > 0 Тогда
			ДополнительныеПараметры.АдресПараметровВыбора = 
				ПоместитьВоВременноеХранилище(СоответствиеПараметров, УникальныйИдентификатор);
		Иначе
			ДополнительныеПараметры.АдресПараметровВыбора = "";
		КонецЕсли;

	КонецЕсли;
	
	ДополнительныеПараметры.ОграничитьВыбор = ЗначениеЗаполнено(ДополнительныеПараметры.АдресПараметровВыбора);
	
КонецПроцедуры
// -- VOG Солодов В.В. 23.08.2019

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеквизитыРеквизитыДляКонтроляЗаполнененияКонтактноеЛицо

&НаКлиенте
Процедура РеквизитыДляКонтроляЗаполнененияКонтактноеЛицоПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.РеквизитыДляКонтроляЗаполнененияКонтактноеЛицо.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ТекущаяСтрока.ОбязателенДляЗаполнения Тогда
			ТекущаяСтрока.ДоступностьРеквизита = Истина;
		КонецЕсли;
		
		Если ТекущаяСтрока.ОбязателенДляЗаполнения ИЛИ ТекущаяСтрока.ДоступностьРеквизита Тогда
			ТекущаяСтрока.Использование = Истина;
		Иначе
			ТекущаяСтрока.Использование = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеквизитыДляКонтроляЗаполнененияКлиенты

&НаКлиенте
Процедура РеквизитыДляКонтроляЗаполнененияКлиентыПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.РеквизитыДляКонтроляЗаполнененияКлиенты.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ТекущаяСтрока.ОбязателенДляЗаполнения Тогда
			ТекущаяСтрока.ДоступностьРеквизита = Истина;
		КонецЕсли;
		
		Если ТекущаяСтрока.ОбязателенДляЗаполнения ИЛИ ТекущаяСтрока.ДоступностьРеквизита Тогда
			ТекущаяСтрока.Использование = Истина;
		Иначе
			ТекущаяСтрока.Использование = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеквизитыДляКонтроляЗаполнененияЮрЛица

&НаКлиенте
Процедура РеквизитыДляКонтроляЗаполнененияЮрЛицаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.РеквизитыДляКонтроляЗаполнененияЮрЛица.ТекущиеДанные;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ТекущаяСтрока.ОбязателенДляЗаполнения Тогда
			ТекущаяСтрока.ДоступностьРеквизита = Истина;
		КонецЕсли;
		
		Если ТекущаяСтрока.ОбязателенДляЗаполнения ИЛИ ТекущаяСтрока.ДоступностьРеквизита Тогда
			ТекущаяСтрока.Использование = Истина;
		Иначе
			ТекущаяСтрока.Использование = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НастройкаКлассификаторов(Команда)
	
	Если Объект.ИспользоватьКлассификаторы Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
			ПоказатьПредупреждение(Неопределено,НСтр("ru='Перед настройкой классификаторов. Требуется записать объект'"));
			Возврат;
		КонецЕсли;
		ПараметрыФормы = Новый Структура("ВидТорговойТочки",Объект.Ссылка);
		ОткрытьФорму("Обработка.вогНастройкаФормы3В1.Форма", ПараметрыФормы,ЭтаФорма, 
		УникальныйИдентификатор, , , ,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ПоказатьПредупреждение(Неопределено,НСтр("ru='Для настройки классификаторов. Требуется указать Использовать настройки классификаторов'"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПоляЗаполнения(Команда)
	
	ОП 				= Новый ОписаниеОповещения("ОкончаниеПоляЗаполненеия",ЭтаФорма);
	ТекстЗапроса 	= НСтр("ru = 'При обновлении списка полей все настройки будут удалены ?'"); 
	ПоказатьВопрос(ОП,ТекстЗапроса,РежимДиалогаВопрос.ДаНет);
		
КонецПроцедуры

#КонецОбласти

#Область ВнешнийВидФормы

Процедура УстановитьВидимостьДоступность()
	
	Элементы.ВариантОпроса.Видимость = Объект.СоздаватьАнкетуВместоОбъектов;
	
	// ++ VOG Солодов В.В. 26.12.2019 CRM-77
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"РежимВыбораКонтактныхЛиц",
		"Доступность",
		Не Объект.СоздаватьАнкетуВместоОбъектов);
	// -- VOG Солодов В.В. 26.12.2019
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьСтраницыФормы(ИмяСтраницы,Значение)

	ИмяЭлемента = "Страница" + ИмяСтраницы;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,ИмяЭлемента,"Видимость",Значение);

КонецПроцедуры

&НаСервере
Процедура ПолучитьРеквизитыСтраницы(ИмяСтраницы)

	

КонецПроцедуры 

&НаСервере
Функция СформироватьСписокРеквизитовТорговаяТочка()

	РеквизитыОбъекта = Новый СписокЗначений;	
	РеквизитыОбъекта.Добавить("ТорговаяТочкаНаименование"				,"Наименование");
	РеквизитыОбъекта.Добавить("ТорговаяТочкаВид"						,"Вид");
	РеквизитыОбъекта.Добавить("ТорговаяТочкаНаименованиеПолное"			,"Наименование для печати");
	РеквизитыОбъекта.Добавить("ТорговаяТочкаКлиент"						,"Клиент");
	РеквизитыОбъекта.Добавить("ТорговаяТочкаВывеска"					,"Вывеска");
	РеквизитыОбъекта.Добавить("КоманднаяПанельНаправленияДеятельности"	,"Направление деятельности");
	РеквизитыОбъекта.Добавить("ГруппаТорговаяТочкаКонтактнаяИнформация"	,"Адрес Торговой точки");
	РеквизитыОбъекта.Добавить("ТорговаяТочка_АдресПервичнойДокументации","Адрес для первичной документации");
	РеквизитыОбъекта.Добавить("ГруппаТорговаяТочкаТелефон"				,"Телефон торговой точки");
	РеквизитыОбъекта.Добавить("ГруппаТорговаяТочкаСайт"					,"Сайт");
	РеквизитыОбъекта.Добавить("ТорговаяТочкаГрузополучатель"			,"Грузополучатель");
	
	Возврат РеквизитыОбъекта;
	
КонецФункции

&НаСервере
Функция СформироватьСписокРеквизитовКонтактноеЛицо()

	РеквизитыОбъекта = Новый СписокЗначений;
	РеквизитыОбъекта.Добавить("ГруппаКонтактноеЛицоФИО"		,"ФИО");
	РеквизитыОбъекта.Добавить("КонтактноеЛицоДолжность"		,"Должность");
	РеквизитыОбъекта.Добавить("ГруппаКонтактноеЛицоТелефон"	,"Телефон");
	РеквизитыОбъекта.Добавить("ГруппаКонтактноеЛицоEmail"	,"e-mail");
	// { VOG RMV 2019-02-15
	РеквизитыОбъекта.Добавить("КонтактноеЛицоРоль"			,"Роль");	
	// } VOG RMV 2019-02-15	
	
	Возврат РеквизитыОбъекта;
	
КонецФункции

&НаСервере
Функция СформироватьСписокРеквизитовКлиент()

	РеквизитыОбъекта = Новый СписокЗначений;
	РеквизитыОбъекта.Добавить("ПартнерНаименование"	,"Наименование");
	РеквизитыОбъекта.Добавить("ПартнерВажность"		,"Важность");
	РеквизитыОбъекта.Добавить("CRM_ТипыОтношений"	,"Типы отношений");
	РеквизитыОбъекта.Добавить("ПартнерБизнесРегион"	,"Бизнес-регион");
	РеквизитыОбъекта.Добавить("ГруппаПартнерТелефон","Телефон");
	РеквизитыОбъекта.Добавить("ГруппаПартнерEmail"	,"e-mail");
	РеквизитыОбъекта.Добавить("ГруппаПартнерАдрес"	,"Адрес");
	РеквизитыОбъекта.Добавить("ГруппаПартнерВебСайт","Сайт");
	
	Возврат РеквизитыОбъекта;
	
КонецФункции

&НаСервере
Функция СформироватьСписокРеквизитовЮрЛицо()

	РеквизитыОбъекта = Новый СписокЗначений;
	РеквизитыОбъекта.Добавить("ЮрЛицоОрганизационноПравоваяФорма","Орг.-прав. форма");
	РеквизитыОбъекта.Добавить("ЮрЛицоНаименование","Наименование");
	РеквизитыОбъекта.Добавить("ЮрЛицоНаименованиеПолное","Публичное наименование");
	РеквизитыОбъекта.Добавить("ГруппаЮрЛицоАдрес","Адрес");
	РеквизитыОбъекта.Добавить("ГруппаИНН","ИНН / КПП");
	
	Возврат РеквизитыОбъекта;
	
КонецФункции

&НаСервере
Процедура ОбновитьТаблицыДоступныхРеквизитов()

	СоотвестивиеТаблиц 	= Новый Соответствие;
	СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовТорговаяТочка()"	,Объект.РеквизитыДляКонтроляЗаполнененияТорговаяТочка);
	СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовКонтактноеЛицо()"	,Объект.РеквизитыДляКонтроляЗаполнененияКонтактноеЛицо);
	СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовКлиент()"			,Объект.РеквизитыДляКонтроляЗаполнененияКлиенты);
	СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовЮрЛицо()"			,Объект.РеквизитыДляКонтроляЗаполнененияЮрЛица);
	Результат 			= Неопределено;
	
	Для каждого ТаблицаРеквизитов Из СоотвестивиеТаблиц Цикл
		Выполнить("Результат = " + ТаблицаРеквизитов.Ключ);
		ТаблицаРеквизитов.Значение.Очистить();
		Для каждого РеквизитыОбъекта Из Результат Цикл
			СтрокаДобавления 						= ТаблицаРеквизитов.Значение.Добавить();
			СтрокаДобавления.ИмяРеквизита 			= РеквизитыОбъекта.Значение;
			СтрокаДобавления.ПредставлениеРеквизита = РеквизитыОбъекта.Представление;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеПоляЗаполненеия(РезультатОтвета, ДополнительныеПараметры) Экспорт

	Если РезультатОтвета = КодВозвратаДиалога.Да Тогда
		ОбновитьПоляЗаполненияСервер();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьПоляЗаполненияСервер()

	// + Начало Заполненеие реквизитов
	
	Объект.РеквизитыДляКонтроляЗаполнененияТорговаяТочка.Очистить();
	Объект.РеквизитыДляКонтроляЗаполнененияКонтактноеЛицо.Очистить();
	Объект.РеквизитыДляКонтроляЗаполнененияКлиенты.Очистить();
	Объект.РеквизитыДляКонтроляЗаполнененияЮрЛица.Очистить();
	
	СоотвестивиеТаблиц 	= Новый Соответствие;
	СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовТорговаяТочка()"	,Объект.РеквизитыДляКонтроляЗаполнененияТорговаяТочка);
	СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовКонтактноеЛицо()"	,Объект.РеквизитыДляКонтроляЗаполнененияКонтактноеЛицо);
	СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовКлиент()"			,Объект.РеквизитыДляКонтроляЗаполнененияКлиенты);
	СоотвестивиеТаблиц.Вставить("СформироватьСписокРеквизитовЮрЛицо()"			,Объект.РеквизитыДляКонтроляЗаполнененияЮрЛица);
	Результат 			= Неопределено;
	
	Для каждого ТаблицаРеквизитов Из СоотвестивиеТаблиц Цикл
		Выполнить("Результат = " + ТаблицаРеквизитов.Ключ);
		Для каждого РеквизитыОбъекта Из Результат Цикл
			СтрокаДобавления 						= ТаблицаРеквизитов.Значение.Добавить();
			СтрокаДобавления.ИмяРеквизита 			= РеквизитыОбъекта.Значение;
			СтрокаДобавления.ПредставлениеРеквизита = РеквизитыОбъекта.Представление;
		КонецЦикла;
	КонецЦикла;
	
	// - Конец Заполненеие реквиизтов	

КонецПроцедуры

// ++ VOG Солодов В.В. 27.08.2019 task 577
&НаСервере
Процедура ЗаполнитьПараметрыВыбораТЧ(ТекущийОбъект)
	
	Для Каждого СтрокаТЧ Из ТекущийОбъект.РеквизитыДляКонтроляЗаполнененияТорговаяТочка Цикл
		
		СоответствиеПараметровВыбора = СтрокаТЧ.ПараметрыВыбора.Получить();
		
		Если ТипЗнч(СоответствиеПараметровВыбора) = Тип("Соответствие")
			И СоответствиеПараметровВыбора.Количество() > 0 Тогда
			
			СтруктураОтбора = Новый Структура("ИмяРеквизита", СтрокаТЧ.ИмяРеквизита);
			НайденныеСтроки = Объект.РеквизитыДляКонтроляЗаполнененияТорговаяТочка.НайтиСтроки(СтруктураОтбора);
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НайденнаяСтрока.АдресПараметровВыбора 	= 
					ПоместитьВоВременноеХранилище(СоответствиеПараметровВыбора, УникальныйИдентификатор);
				НайденнаяСтрока.ОграничитьВыбор 		= Истина;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
// -- VOG Солодов В.В. 27.08.2019

#КонецОбласти

// - Тищенко В.В.