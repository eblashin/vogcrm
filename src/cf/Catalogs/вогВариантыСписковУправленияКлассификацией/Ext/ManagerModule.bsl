#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Помещает во временное хранилище схему компоновки данных,
// настройки компоновки данных и возвращает их адреса
//
// Параметры:
//	ЦельСсылка - Ссылка, СправочникСсылка.скНастройкиЗапускаБизнесПроцессовОбъектов - цель, для которой требуется получить адреса
//
// Возвращаемое значение:
//	Структура - структура, содержащая адреса
//				СхемаКомпоновкиДанных - Строка - адрес схемы компоновки данных
//				НастройкиКомпоновкиДанных - Строка - адрес настроек компоновки данных
//
Функция АдресаСхемыКомпоновкиДанныхИНастроекВоВременномХранилище(ЭлементНастройки) Экспорт
	
	Адреса = Новый Структура("СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных");
	
	Если ТипЗнч(ЭлементНастройки) = Тип("ДанныеФормыСтруктура") Тогда
		ЭлементНастройкиСсылка = ЭлементНастройки.Ссылка;
	Иначе
		ЭлементНастройкиСсылка = ЭлементНастройки;
	КонецЕсли;
	
	// Получим схему компоновки данных
	Если ЗначениеЗаполнено(ЭлементНастройки.СхемаКомпоновкиДанных) ИЛИ ЭлементНастройкиСсылка.ХранилищеСхемыКомпоновкиДанных.Получить() = Неопределено Тогда
		СхемаИНастройки = ОписаниеИСхемаКомпоновкиДанныхНастройкиПоИмениМакета(ЭлементНастройкиСсылка, ЭлементНастройки.СхемаКомпоновкиДанных);
		СхемаКомпоновкиДанных = СхемаИНастройки.СхемаКомпоновкиДанных;
	Иначе
		СхемаКомпоновкиДанных = ЭлементНастройкиСсылка.ХранилищеСхемыКомпоновкиДанных.Получить();
	КонецЕсли;
	
	Если СхемаКомпоновкиДанных = Неопределено И ПустаяСтрока(ЭлементНастройки.СхемаКомпоновкиДанных) Тогда
		СхемаКомпоновкиДанных = Неопределено;
	ИначеЕсли СхемаКомпоновкиДанных = Неопределено И Не ПустаяСтрока(ЭлементНастройки.СхемаКомпоновкиДанных) Тогда
		СхемаКомпоновкиДанных = Справочники.вогВариантыСписковУправленияКлассификацией.ПолучитьМакет(ЭлементНастройки.СхемаКомпоновкиДанных);
	КонецЕсли;
	
	Адреса.СхемаКомпоновкиДанных = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());
	
	Настройки = ЭлементНастройкиСсылка.ХранилищеНастроекКомпоновкиДанных.Получить();
	
	Если ЗначениеЗаполнено(Настройки) Тогда
		Адреса.НастройкиКомпоновкиДанных = ПоместитьВоВременноеХранилище(Настройки, Новый УникальныйИдентификатор());
	КонецЕсли;
	
	Возврат Адреса;
	
КонецФункции

// Функция возвращает структуру с синонимом и схемой компоновки данных по имени макета
//
// Параметры:
//	НастройкаСсылка - Ссылка, СправочникСсылка.скНастройкиЗапускаБизнесПроцессовОбъектов - цель, для которой требуется получить схему
//	ИмяМакета - Строка, Неопределено - имя получаемого макета схемы компоновки данных
//
// Возвращаемое значение:
//	Структура - Описание - Строка - синоним получаемого макета
//				СхемаКомпоновкиДанных - СхемаКомпоновкиДанных, Неопределено - найденная схема компоновки данных
//				НастройкиКомпоновкиДанных - НастройкиКомпоновкиДанных, Неопределено - найденные настройки компоновки данных
//
Функция ОписаниеИСхемаКомпоновкиДанныхНастройкиПоИмениМакета(НастройкаСсылка, ИмяМакета = Неопределено) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("Описание",                  "");
	ВозвращаемоеЗначение.Вставить("СхемаКомпоновкиДанных",     Неопределено);
	ВозвращаемоеЗначение.Вставить("НастройкиКомпоновкиДанных", Неопределено);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВариантыСписковУправленияКлассификацией.ХранилищеСхемыКомпоновкиДанных КАК ХранилищеСхемыКомпоновкиДанных,
	|	ВариантыСписковУправленияКлассификацией.ХранилищеНастроекКомпоновкиДанных КАК ХранилищеНастроекКомпоновкиДанных
	|ИЗ
	|	Справочник.вогВариантыСписковУправленияКлассификацией КАК ВариантыСписковУправленияКлассификацией
	|ГДЕ
	|	ВариантыСписковУправленияКлассификацией.Ссылка = &НастройкаСсылка");
	
	Запрос.УстановитьПараметр("НастройкаСсылка", НастройкаСсылка);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Не ЗначениеЗаполнено(ИмяМакета) Тогда
		
		ВозвращаемоеЗначение.Описание = ИмяМакета;
		Если Выборка.Следующий() Тогда
			ВозвращаемоеЗначение.СхемаКомпоновкиДанных = Выборка.ХранилищеСхемыКомпоновкиДанных.Получить();
			ВозвращаемоеЗначение.НастройкиКомпоновкиДанных = Выборка.ХранилищеНастроекКомпоновкиДанных.Получить();
		КонецЕсли;
		
	Иначе
		
		Макет = Метаданные.НайтиПоТипу(ТипЗнч(НастройкаСсылка)).Макеты.Найти(ИмяМакета);
		Если НЕ Макет = Неопределено Тогда
			ВозвращаемоеЗначение.Описание = Макет.Синоним;
			ВозвращаемоеЗначение.СхемаКомпоновкиДанных = Справочники.вогВариантыСписковУправленияКлассификацией.ПолучитьМакет(ИмяМакета);
			Если Выборка.Следующий() Тогда
				ВозвращаемоеЗначение.НастройкиКомпоновкиДанных = Выборка.ХранилищеНастроекКомпоновкиДанных.Получить();
			Иначе
				ВозвращаемоеЗначение.НастройкиКомпоновкиДанных = ВозвращаемоеЗначение.СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
			КонецЕсли;
			
			Если ВозвращаемоеЗначение.НастройкиКомпоновкиДанных = Неопределено Тогда
				ВозвращаемоеЗначение.НастройкиКомпоновкиДанных = ВозвращаемоеЗначение.СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#КонецЕсли