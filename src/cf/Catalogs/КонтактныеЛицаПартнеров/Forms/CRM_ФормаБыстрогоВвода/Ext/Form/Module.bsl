#Область Служебные_Процедуры_и_Функции

&НаСервере
Функция ПреобразоватьСписокПолейВСтроку(СоответствиеПолей)
	
	Результат = "";
	Для Каждого Элемент Из СоответствиеПолей Цикл
		
		Значение = Элемент.Значение;
		Если ПустаяСтрока(Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		Результат = Результат + ?(Результат = "", "", Символы.ПС) + 
			Элемент.Представление + "=" + СтрЗаменить(Значение, Символы.ПС, Символы.ПС + Символы.Таб);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПроверкаЗаполнения()
	
	ОшибокНет = Истина;
	
	Если НЕ ЗначениеЗаполнено(Наименование) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнено наименование'"), , "Наименование");
		ОшибокНет = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Клиент) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнен клиент'"), , "Клиент");
		ОшибокНет = Ложь;
	КонецЕсли;

	Возврат ОшибокНет;
	
КонецФункции

&НаСервере
Функция СоздатьНовоеКонтактноеЛицо()
	
	НовоеКонтактноеЛицо = Справочники.КонтактныеЛицаПартнеров.СоздатьЭлемент();
	НовоеКонтактноеЛицо.Владелец		= Клиент;
	НовоеКонтактноеЛицо.CRM_Имя			= Имя;
	НовоеКонтактноеЛицо.CRM_Отчество	= Отчество;
	НовоеКонтактноеЛицо.CRM_Фамилия		= Фамилия;
	НовоеКонтактноеЛицо.CRM_Должность	= Должность;
	НовоеКонтактноеЛицо.Наименование	= Наименование;
	НовоеКонтактноеЛицо.Автор = Пользователи.АвторизованныйПользователь();
	НовоеКонтактноеЛицо.ДатаРегистрацииСвязи = ТекущаяДатаСеанса();
	
	Если ЭтоКонтактныйКлиент И ЗначениеЗаполнено(КонтактныйКлиент) Тогда
		
		НовоеКонтактноеЛицо.CRM_Состояние			= Состояние;
		НовоеКонтактноеЛицо.CRM_РольКонтактногоЛица	= Роль;
		НовоеКонтактноеЛицо.Пол	= КонтактныйКлиент.Пол;
		
		Для Каждого СтрокаТаблицы Из КонтактныйКлиент.КонтактнаяИнформация Цикл
			ТекТипКИ = Неопределено;
			ТекВидКИ = Неопределено;
			Если СтрокаТаблицы.Вид = Справочники.ВидыКонтактнойИнформации.CRM_МобильныйТелефонЧастногоЛица Тогда
				ТекТипКИ = СтрокаТаблицы.Тип;
				ТекВидКИ = Справочники.ВидыКонтактнойИнформации.МобильныйТелефонКонтактногоЛица;
			ИначеЕсли СтрокаТаблицы.Вид = Справочники.ВидыКонтактнойИнформации.EmailПартнера Тогда
				ТекТипКИ = СтрокаТаблицы.Тип;
				ТекВидКИ = Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица;
			ИначеЕсли СтрокаТаблицы.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонПартнера Тогда
				ТекТипКИ = СтрокаТаблицы.Тип;
				ТекВидКИ = Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица;
			КонецЕсли;
			Если ЗначениеЗаполнено(ТекТипКИ) И ЗначениеЗаполнено(ТекВидКИ) Тогда
				НоваяСтрока = НовоеКонтактноеЛицо.КонтактнаяИнформация.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы,, "Вид");
				НоваяСтрока.Вид = ТекВидКИ;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если ЗначениеЗаполнено(ВидТелефонаКонтактногоЛица) И ЗначениеЗаполнено(ТелефонКонтактногоЛица) Тогда
			КодСтраныСтрока 		= ?(ЗначениеЗаполнено(КодСтраныКонтактногоЛица),"+"+КодСтраныКонтактногоЛица,"");
			НовыйКонтакт 			= НовоеКонтактноеЛицо.КонтактнаяИнформация.Добавить();
			СписокПолей 			= Новый СписокЗначений;
			СписокПолей.Добавить(КодСтраныСтрока,			"КодСтраны");
			СписокПолей.Добавить(КодГородаКонтактногоЛица,	"КодГорода");
			СписокПолей.Добавить(ТелефонКонтактногоЛица,	"НомерТелефона");
			СписокПолей.Добавить(ДобНомерКонтактногоЛица,	"Добавочный");
			СписокПолей.Добавить("",						"Комментарий");
			НовыйКонтакт.ЗначенияПолей = ПреобразоватьСписокПолейВСтроку(СписокПолей);
			
			НовыйКонтакт.Вид	= ВидТелефонаКонтактногоЛица;
			НовыйКонтакт.Тип	= ВидТелефонаКонтактногоЛица.Тип;
			
			Представление = СокрЛП(КодСтраныСтрока);
			Если Не ПустаяСтрока(КодГородаКонтактногоЛица) Тогда
				Представление = Представление + ?(ПустаяСтрока(Представление), "", " ") + "(" + СокрЛП(КодГородаКонтактногоЛица) + ")";
			КонецЕсли;
			Если Не ПустаяСтрока(ТелефонКонтактногоЛица) Тогда
				Представление = Представление + ?(ПустаяСтрока(Представление), "", " ") + СокрЛП(ТелефонКонтактногоЛица);
			КонецЕсли;
			Если НЕ ПустаяСтрока(ДобНомерКонтактногоЛица) Тогда
				Представление = Представление + ?(ПустаяСтрока(Представление), "", ", ") + "доб. " + СокрЛП(ДобНомерКонтактногоЛица);
			КонецЕсли;
			
			НовыйКонтакт.Представление 			= Представление;
			НовыйКонтакт.НомерТелефона 			= Представление;
			НовыйКонтакт.НомерТелефонаБезКодов 	= СокрЛП(ТелефонКонтактногоЛица);
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВидEmailКонтактногоЛица) И ЗначениеЗаполнено(EmailКонтактногоЛица) Тогда
			НовыйКонтакт 				= НовоеКонтактноеЛицо.КонтактнаяИнформация.Добавить();
			НовыйКонтакт.Вид			= ВидEmailКонтактногоЛица;
			НовыйКонтакт.Тип			= ВидEmailКонтактногоЛица.Тип;
	 		НовыйКонтакт.Представление 	= СокрЛП(EmailКонтактногоЛица);

			Попытка
				Результат = ОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(EmailКонтактногоЛица);
			Исключение
				СообщениеОбОшибке = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
				Возврат Неопределено;
			КонецПопытки;
			
			Если Результат.Количество() > 0 Тогда
				НовыйКонтакт.АдресЭП = Результат[0].Адрес;
				
				Поз = Найти(НовыйКонтакт.АдресЭП, "@");
				Если Поз <> 0 Тогда
					НовыйКонтакт.ДоменноеИмяСервера = Сред(НовыйКонтакт.АдресЭП, Поз+1);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		НовоеКонтактноеЛицо.Записать();
		Если ЭтоКонтактныйКлиент И ЗначениеЗаполнено(КонтактныйКлиент) Тогда
			РегистрыСведений.CRM_СвязиФизЛицСКонтактнымиЛицамиПартнеров.ЗаписатьФизЛицо(НовоеКонтактноеЛицо.Ссылка, КонтактныйКлиент);
		КонецЕсли;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат НовоеКонтактноеЛицо.Ссылка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоФизЛицу()
	
	Фамилия			= КонтактныйКлиент.CRM_Фамилия;
	Имя				= КонтактныйКлиент.CRM_Имя;
	Отчество		= КонтактныйКлиент.CRM_Отчество;
	Наименование	= КонтактныйКлиент.Наименование;
	
	Для Каждого СтрокаТаблицы Из КонтактныйКлиент.КонтактнаяИнформация Цикл
		ТекТипКИ = Неопределено;
		ТекВидКИ = Неопределено;
		Если СтрокаТаблицы.Вид = Справочники.ВидыКонтактнойИнформации.CRM_МобильныйТелефонЧастногоЛица Тогда
			МобТелефон = СтрокаТаблицы.Представление;
		ИначеЕсли СтрокаТаблицы.Вид = Справочники.ВидыКонтактнойИнформации.EmailПартнера Тогда
			РабочийЕмайл = СтрокаТаблицы.Представление;
		ИначеЕсли СтрокаТаблицы.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонПартнера Тогда
			РабочийТелефон = СтрокаТаблицы.Представление;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Обработчики_Событий_Форм

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПараметрыНового") Тогда
		Если Параметры.ПараметрыНового.Свойство("ЭтоКонтактныйКлиент") И Параметры.ПараметрыНового.ЭтоКонтактныйКлиент = Истина Тогда
			Заголовок						= НСтр("ru = 'Регистрация новой связи с юридическим лицом'");
			Элементы.ГруппаСтраниц.ТекущаяСтраница	= Элементы.СтраницаКонтактногоКлиента;
			ЭтоКонтактныйКлиент						= Параметры.ПараметрыНового.ЭтоКонтактныйКлиент;
			КонтактныйКлиент						= Параметры.ПараметрыНового.КонтактныйКлиент;
			Состояние								= Перечисления.CRM_Состояние.Работает;
			ЗаполнитьПоФизЛицу();
		Иначе
			Элементы.ГруппаСтраниц.ТекущаяСтраница = Элементы.СтраницаКонтактногоЛица;
			Наименование			= Параметры.ПараметрыНового.Наименование;
			ВидEmailКонтактногоЛица	= Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица;
			EmailКонтактногоЛица	= Параметры.ПараметрыНового.АдресПочты;
		КонецЕсли;
	КонецЕсли;
	// +Софтфон
	Если Параметры.Свойство("Основание") И ТипЗнч(Параметры.Основание) = Тип("Структура") Тогда
		Если Параметры.Основание.Свойство("Интерес") Тогда
			сфпИнтерес = Параметры.Основание.Интерес;
		КонецЕсли;	
		Клиент = ?(Параметры.Основание.Свойство("Владелец"),Параметры.Основание.Владелец, ПредопределенноеЗначение("Справочник.Партнеры.ПустаяСсылка"));
		Если Параметры.Основание.Свойство("НомерТелефона") Тогда
			Телефон = сфпСофтФонПроСервер.сфпУбратьИзНомераТелефонаВсеПрефиксы(Параметры.Основание.НомерТелефона);		
			СтруктураНомера = сфпСофтФонПроСервер.сфпЗаполнитьСтруктуруПолейПоПредставлениюТелефон(Телефон);
			Если Найти(СтруктураНомера.КодГорода, "9") = 1 Тогда
				ВидТелефонаКонтактногоЛица = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.МобильныйТелефонКонтактногоЛица");
			Иначе	
				ВидТелефонаКонтактногоЛица = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица");
			КонецЕсли;			
			Если ЗначениеЗаполнено(СтруктураНомера.КодГорода) Тогда
				КодГородаКонтактногоЛица = СтруктураНомера.КодГорода;
			КонецЕсли;	
			Если ЗначениеЗаполнено(СтруктураНомера.КодСтраны) Тогда
				КодСтраныКонтактногоЛица = СтруктураНомера.КодСтраны;
			КонецЕсли;				
			ТелефонКонтактногоЛица = СтруктураНомера.НомерТелефона;
		КонецЕсли;					
	КонецЕсли;		
	// +Софтфон
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(сфпИнтерес) Тогда
		ВидТелефонаКонтактногоЛицаПриИзменении(Неопределено);
	КонецЕсли;		
КонецПроцедуры

#КонецОбласти

#Область Обработчики_Команд_Формы

&НаКлиенте
Процедура ЗарегистрироватьКонтактноеЛицо(Команда)
	
	Если НЕ ПроверкаЗаполнения() Тогда
		Возврат;
	КонецЕсли;
	
	НовоеКонтактноеЛицо = СоздатьНовоеКонтактноеЛицо();
	
	Если ЗначениеЗаполнено(НовоеКонтактноеЛицо) Тогда 
		Если ЭтоКонтактныйКлиент Тогда
			Оповестить("Создан новый контактный клиент",НовоеКонтактноеЛицо);
		Иначе
			Оповестить("Создано новое контактное лицо",НовоеКонтактноеЛицо);
		КонецЕсли;
		// +Софтфон		
		Если ЗначениеЗаполнено(сфпИнтерес) Тогда
			Оповестить("СозданКонтактДляИнтереса", Новый Структура("сфпИнтерес, Контакт", сфпИнтерес, НовоеКонтактноеЛицо));
		КонецЕсли;			
		// -Софтфон		
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Обработчики_Элементов_Формы

&НаКлиенте
Процедура ВидТелефонаКонтактногоЛицаПриИзменении(Элемент)
	
	Элементы.ГруппаТелефонКонтактногоЛица.Доступность = ЗначениеЗаполнено(ВидТелефонаКонтактногоЛица);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидEmailКонтактногоЛицаПриИзменении(Элемент)
	
	Элементы.EmailКонтактногоЛица.Доступность = ЗначениеЗаполнено(ВидEmailКонтактногоЛица);
	
КонецПроцедуры

&НаКлиенте
Процедура EmailКонтактногоЛицаПриИзменении(Элемент)
	
	РезультатПроверки = CRM_ОбщегоНазначенияКлиентСервер.АнализАдресаЭП(СокрЛП(Элемент.ТекстРедактирования));
	Если РезультатПроверки.КодОшибки<>0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатПроверки.Сообщение, , Элемент.Имя);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФамилияПриИзменении(Элемент)
	
	Наименование = СокрЛП(?(ЗначениеЗаполнено(Фамилия),СокрЛП(Фамилия) + " ", "")
						+ ?(ЗначениеЗаполнено(Имя),СокрЛП(Имя) + " ", "")
						+ ?(ЗначениеЗаполнено(Отчество),СокрЛП(Отчество), ""));
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяПриИзменении(Элемент)
	
	Наименование = СокрЛП(?(ЗначениеЗаполнено(Фамилия),СокрЛП(Фамилия) + " ", "")
						+ ?(ЗначениеЗаполнено(Имя),СокрЛП(Имя) + " ", "")
						+ ?(ЗначениеЗаполнено(Отчество),СокрЛП(Отчество), ""));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчествоПриИзменении(Элемент)
	
	Наименование = СокрЛП(?(ЗначениеЗаполнено(Фамилия),СокрЛП(Фамилия) + " ", "")
						+ ?(ЗначениеЗаполнено(Имя),СокрЛП(Имя) + " ", "")
						+ ?(ЗначениеЗаполнено(Отчество),СокрЛП(Отчество), ""));
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЭтоКонтактныйКлиент Тогда
		СтандартнаяОбработка = Ложь;
		
		СтруктураОтбора = Новый Структура("ЮрФизЛицо", ПредопределенноеЗначение("Перечисление.КомпанияЧастноеЛицо.Компания"));
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
		ПараметрыФормы.Вставить("РежимВыбора", Истина);
		ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
		
		ОткрытьФорму("Справочник.Партнеры.ФормаВыбора", ПараметрыФормы, Элемент,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

