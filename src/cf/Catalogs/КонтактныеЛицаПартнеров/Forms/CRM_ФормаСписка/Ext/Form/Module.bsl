//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД И РЕКВИЗИТОВ ФОРМЫ         

// +СофтФон

&НаКлиенте
// Процедура - обработчик команды формы "Позвонить".
//
Процедура Позвонить(Команда)
	ТД = Элементы.Список.ТекущиеДанные;
	Если ТД = Неопределено Тогда Возврат; КонецЕсли;
	СписокОбъектов = Новый СписокЗначений;
	СписокОбъектов.Добавить(ТД.Ссылка);
	сфпСофтФонПроКлиент.сфпПозвонитьВыбравТелефон(СписокОбъектов);
КонецПроцедуры // Позвонить()

// -СофтФон

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//+вог
	Если Параметры.Свойство("ОбъектСвязи") Тогда
		ОбъектСвязи = Параметры.ОбъектСвязи;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, 
			//"ВидСвязи", Справочники.вогВидыСвязейКонтактныхЛиц.НеСвязан, ВидСравненияКомпоновкиДанных.НеРавно);
			"ВидСвязи", Справочники.вогВидыСвязейКонтактныхЛиц.Сотрудник, ВидСравненияКомпоновкиДанных.Равно);
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, 
		"ОбъектСвязи", ОбъектСвязи);
	
	// +++ VOG Кулаков П.Л. 03.03.2020 CRM-412
	// Добавим партнера в дополнительные свойства динамического списка для дальнейшей обработки
	Список.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ОбъектСвязи",ОбъектСвязи);
	// --- VOG Кулаков П.Л.
	
	Элементы.ДанныеСвязи.Видимость = ОбъектСвязи <> Неопределено;
	//-вог
	Список.Параметры.УстановитьЗначениеПараметра("ТекДата", CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса());	
	
КонецПроцедуры

#КонецОбласти

//+вог

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	Если ЗначениеЗаполнено(ОбъектСвязи) Тогда
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ОбъектСвязи", ОбъектСвязи);	
		ПараметрыФормы.Вставить("Ключ"		 , Элемент.ТекущаяСтрока);	
		
		ОткрытьФорму("Справочник.КонтактныеЛицаПартнеров.ФормаОбъекта", 
			ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)	
	
	Если Не Копирование Тогда
		Отказ = Истина;
		
		СписокВариантов = Новый СписокЗначений;
		Если ЗначениеЗаполнено(ОбъектСвязи) Тогда
			СписокВариантов.Добавить("Выбрать", НСтр("ru = 'Выбрать'"));
		КонецЕсли;
		
		СписокВариантов.Добавить("Создать", НСтр("ru = 'Создать'"));
		СписокВариантов.Добавить("Отмена" , НСтр("ru = 'Отмена'"));
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Элемент", Элемент);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("СписокПередНачаломДобавленияЗавершение", ЭтотОбъект, ПараметрыОповещения);	
		Если СписокВариантов.Количество() = 2 Тогда
			ВыполнитьОбработкуОповещения(ОписаниеОповещения, СписокВариантов[0].Значение);
		Иначе	
			ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Выберите действие...'"), СписокВариантов);	
		КонецЕсли;
					
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавленияЗавершение(Вариант, Контекст) Экспорт
	
	Если Вариант = Неопределено
	  ИЛИ Вариант = "Отмена" Тогда 
		Возврат;
	КонецЕсли;	
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОбъектСвязи", ОбъектСвязи);	
	
	Если Вариант = "Создать" Тогда
		СуффиксИмяФормы = "ФормаОбъекта";		
	Иначе			
		СуффиксИмяФормы = "ФормаВыбора";		
		ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
		
	КонецЕсли;
	
	ОткрытьФорму("Справочник.КонтактныеЛицаПартнеров." + СуффиксИмяФормы,
		ПараметрыФормы, Контекст.Элемент, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	//Связи
	Если ЗначениеЗаполнено(ОбъектСвязи) Тогда
		УстановитьСвязиОбъекта(ВыбранноеЗначение, ОбъектСвязи);	
		
	КонецЕсли;
	
	Элемент.Обновить();

КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСвязиОбъекта(МассивОбъектов, ОбъектСвязи)

	Для каждого КонтактноеЛицо Из МассивОбъектов Цикл
		вогУправлениеСвязями.УстановитьСвязьОбъекта(КонтактноеЛицо, ОбъектСвязи);
	
	КонецЦикла;	

КонецПроцедуры // УстановитьСвязиОбъекта()

// +++ VOG Кулаков П.Л. 03.03.2020 CRM-412
&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ОбъектСвязи = Неопределено;
	Настройки.ДополнительныеСвойства.Свойство("ОбъектСвязи",ОбъектСвязи);
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вогРолиКонтактныхЛиц.КонтактноеЛицо КАК КонтактноеЛицо,
		|	вогРолиКонтактныхЛиц.CRM_РольКонтактногоЛица КАК РольКонтактногоЛица
		|ИЗ
		|	РегистрСведений.вогРолиКонтактныхЛиц КАК вогРолиКонтактныхЛиц
		|ГДЕ
		|	вогРолиКонтактныхЛиц.КонтактноеЛицо В(&КонтактныеЛица)
		|	И вогРолиКонтактныхЛиц.ОбъектСвязи = &ОбъектСвязи
		|ИТОГИ ПО
		|	КонтактноеЛицо";
	
	Запрос.УстановитьПараметр("КонтактныеЛица", Строки.ПолучитьКлючи());
	Запрос.УстановитьПараметр("ОбъектСвязи", ОбъектСвязи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКонтактноеЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКонтактноеЛицо.Следующий() Цикл
		
		Роли = "";
		
		ВыборкаДетальныеЗаписи = ВыборкаКонтактноеЛицо.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Роли = Роли + ?(Роли = "","","; ") + ВыборкаДетальныеЗаписи.РольКонтактногоЛица;
		КонецЦикла;
		
		СтрокаСписка = Строки[ВыборкаКонтактноеЛицо.КонтактноеЛицо];
		СтрокаСписка.Данные.CRM_РольКонтактногоЛица = Роли;
		
	КонецЦикла;
	
КонецПроцедуры // --- VOG Кулаков П.Л.

#КонецОбласти

//-вог
