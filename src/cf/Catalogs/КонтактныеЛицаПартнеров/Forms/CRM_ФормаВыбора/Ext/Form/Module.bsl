////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ПодготовитьРезультатВыбора(Отказ = Ложь)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	Если ВыделенныеСтроки = Неопределено ИЛИ ВыделенныеСтроки.Количество() <= 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	МассивВыбора = Новый массив;
	
	// ++ VOG Солодов В.В. 27.05.2019 task 325
	Если Параметры.ОграничитьВыбор Тогда
		Для Каждого ЭлементМассива Из ВыделенныеСтроки Цикл
			ЗначенияЗаполнения = вогУправлениеСвязями.ПолучитьРольДолжностьКонтактногоЛица(ЭлементМассива);
			Если ЗначенияЗаполнения <> Неопределено Тогда
				МассивВыбора.Добавить(ЗначенияЗаполнения);
			Иначе
				ШаблонСообщения 
				= НСтр("ru = 'У контактного лица %1 не заполнена должность. Откройте карточку контактного лица и внесите изменения'");
				ТекстСообщения = СтрШаблон(ШаблонСообщения, ЭлементМассива);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для Каждого ЭлементМассива Из ВыделенныеСтроки Цикл
			МассивВыбора.Добавить(ЭлементМассива);
		КонецЦикла;
	КонецЕсли;
	// До изменения
	//Для Каждого ЭлементМассива Из ВыделенныеСтроки Цикл
	//	МассивВыбора.Добавить(ЭлементМассива);
	//КонецЦикла;
	// -- VOG Солодов В.В. 27.05.2019
		
	Возврат МассивВыбора;
	
КонецФункции	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ЭЛЕМЕНТОВ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ Копирование Тогда
		Если НЕ Параметры.ПараметрыНового = Неопределено Тогда
			Отказ = Истина;
			ПараметрыФормы = Новый Структура();
			ПараметрыФормы.Вставить("ПараметрыНового",Параметры.ПараметрыНового);
			ОткрытьФорму("Справочник.КонтактныеЛицаПартнеров.ФормаОбъекта",ПараметрыФормы,Элементы.Список);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ ФОРМЫ

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	
	// ++ VOG Солодов В.В. 27.05.2019 task 325
	Если Параметры.ОграничитьВыбор Тогда
		
		Отказ 			= Ложь;
		РезультатВыбора = ПодготовитьРезультатВыбора(Отказ);
		
		Если Не Отказ И РезультатВыбора.Количество() Тогда
			ОповеститьОВыборе(РезультатВыбора);
		КонецЕсли;
		
	Иначе
		РезультатВыбора = ПодготовитьРезультатВыбора();
		ОповеститьОВыборе(РезультатВыбора);
	КонецЕсли;
	// До изменения
	//РезультатВыбора = ПодготовитьРезультатВыбора();
	//ОповеститьОВыборе(РезультатВыбора);
	// -- VOG Солодов В.В. 27.05.2019
КонецПроцедуры

#Область ОбработчикиСобытийФормы
&НаСервере

Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПрограммноеОткрытие") И Параметры.ПрограммноеОткрытие
		Или Параметры.Свойство("ОграничитьВыбор") И Параметры.ОграничитьВыбор Тогда
		Элементы.СписокВыбратьПрограммно.Видимость	= Истина;
	Иначе
		Элементы.СписокВыбратьПрограммно.Видимость	= Ложь;
		Элементы.СписокВыбрать.Видимость			= Истина;
	КонецЕсли;
	
	// +++ VOG Кулаков П.Л. 03.03.2020 CRM-412
	// Добавим партнера в дополнительные свойства динамического списка для дальнейшей обработки
	//Список.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ОбъектСвязи",Параметры.ОбъектСвязи);
	// --- VOG Кулаков П.Л.
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

// ++ VOG Солодов В.В. 27.05.2019 task 325
&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если Параметры.ОграничитьВыбор Тогда
		
		Отказ 					= Ложь;
		СтандартнаяОбработка 	= Ложь;
		РезультатВыбора 		= ПодготовитьРезультатВыбора(Отказ);
		
		Если Не Отказ И РезультатВыбора.Количество() Тогда
			ОповеститьОВыборе(РезультатВыбора);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // -- VOG Солодов В.В. 27.05.2019

// +++ VOG Кулаков П.Л. 03.03.2020 CRM-412
&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	//ОбъектСвязи = Неопределено;
	//Настройки.ДополнительныеСвойства.Свойство("ОбъектСвязи",ОбъектСвязи);
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вогРолиКонтактныхЛиц.КонтактноеЛицо КАК КонтактноеЛицо,
		|	вогРолиКонтактныхЛиц.CRM_РольКонтактногоЛица КАК РольКонтактногоЛица
		|ИЗ
		|	РегистрСведений.вогРолиКонтактныхЛиц КАК вогРолиКонтактныхЛиц
		|ГДЕ
		|	вогРолиКонтактныхЛиц.КонтактноеЛицо В(&КонтактныеЛица)
		|ИТОГИ ПО
		|	КонтактноеЛицо";
	
	Запрос.УстановитьПараметр("КонтактныеЛица", Строки.ПолучитьКлючи());
	//Запрос.УстановитьПараметр("ОбъектСвязи", ОбъектСвязи);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаКонтактноеЛицо = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКонтактноеЛицо.Следующий() Цикл
		
		Роли = "";
		
		ВыборкаДетальныеЗаписи = ВыборкаКонтактноеЛицо.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Роли = Роли + ?(Роли = "","","; ") + ВыборкаДетальныеЗаписи.РольКонтактногоЛица;
		КонецЦикла;
		
		СтрокаСписка = Строки[ВыборкаКонтактноеЛицо.КонтактноеЛицо];
		СтрокаСписка.Данные.CRM_РольКонтактногоЛица = Роли;
		
	КонецЦикла;
	
КонецПроцедуры // --- VOG Кулаков П.Л.

#КонецОбласти
