#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	// + Тищенко В.В. Начало коментирования
	
	//+вог
	// переход к более гибкой схеме привязки КЛ
	//Если ЭтоНовый()
	//  И Не ЗначениеЗаполнено(Владелец) Тогда
	//	Владелец = Справочники.Партнеры.вогВладелецКонтактныхЛиц;
	//КонецЕсли;
	//-вог
	
	// - Тищенко В.В. Конец коментирования
	
	// { VOG RMV 2019-02-21
	// При установке или снятии пометки удаления проверять связи не нужно
	Если ПометкаУдаления <> Ссылка.ПометкаУдаления Тогда
		Возврат	
	КонецЕсли;	
	// } VOG RMV 2019-02-21
	
	// + VOG Солодов В.В.
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ДанныеСвязи") <> Истина Тогда
		
		ТекстОшибки = НСтр("ru = 'Не заполнен ""Объект связи"".'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,, Отказ);
					
	Иначе
		//Кайдашов CRM-186 закомментировал проверку
		//Если ЭтотОбъект.ДополнительныеСвойства.ДанныеСвязи.Свойство("CRM_Должность") <> Истина
		//	Или Не ЗначениеЗаполнено(ЭтотОбъект.ДополнительныеСвойства.ДанныеСвязи.CRM_Должность) Тогда
		//	
		//	ТекстОшибки = НСтр("ru = 'Не заполнено поле ""Должность"".'");
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		//	
		//КонецЕсли;
			
		//Если ЭтотОбъект.ДополнительныеСвойства.ДанныеСвязи.Свойство("CRM_РольКонтактногоЛица") <> Истина
		//	Или Не ЗначениеЗаполнено(ЭтотОбъект.ДополнительныеСвойства.ДанныеСвязи.CRM_РольКонтактногоЛица) Тогда
		//	
		//	ТекстОшибки = НСтр("ru = 'Не заполнено поле ""Роль"".'");
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		//	
		//КонецЕсли;
		
	КонецЕсли;
	
	// VOG Солодов В.В. 27.05.2019 task 325
	Если Не Отказ И ЭтоНовый() Тогда
		ДополнительныеСвойства.Вставить("ЭтоНовый", Истина);
	КонецЕсли;
	// - VOG Солодов В.В.	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Наименование") Тогда
		//создание из взаимодействия по описанию участника
			Наименование = ДанныеЗаполнения.Наименование;
		ИначеЕсли ДанныеЗаполнения.Свойство("Описание") Тогда
			Наименование = ДанныеЗаполнения.Описание;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("Владелец") Тогда
			Владелец = ДанныеЗаполнения.Владелец;
		КонецЕсли
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Партнеры") Тогда
		Владелец = ДанныеЗаполнения;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		ФизЛицо = ДанныеЗаполнения;
	КонецЕсли;
	
	//уточнить автора информации
	Если НЕ ЗначениеЗаполнено(Автор) Тогда
		Автор = Пользователи.АвторизованныйПользователь();
	КонецЕсли;
	
	//уточнить дату регистрации связи
	Если НЕ ЗначениеЗаполнено(ДатаРегистрацииСвязи) Тогда
		ДатаРегистрацииСвязи = ТекущаяДатаСеанса();
	КонецЕсли;
	
	// + Тищенко В.В. Начало коментирования
	
	//+вог
	// переход к более гибкой схеме привязки КЛ
//	Владелец = Справочники.Партнеры.вогВладелецКонтактныхЛиц;
	//-вог
	
	// - Тищенко В.В. Конец коментирования
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	//Связи
	// ++ VOG Солодов В.В. 27.05.2019 task 325
	Если ДополнительныеСвойства.Свойство("ЭтоНовый")
		И ДополнительныеСвойства.ЭтоНовый = Истина
		И ДополнительныеСвойства.Свойство("ОбъектСвязи") Тогда
		вогУправлениеСвязями.УстановитьСвязьОбъекта(Ссылка, ДополнительныеСвойства.ОбъектСвязи, ДополнительныеСвойства.ДанныеСвязи);
	Иначе
		УстановитьСвязиОбъекта();
	КонецЕсли;
	// До изменения
	//Если ДополнительныеСвойства.Свойство("ОбъектСвязи") Тогда
	//	вогУправлениеСвязями.УстановитьСвязьОбъекта(Ссылка, ДополнительныеСвойства.ОбъектСвязи, ДополнительныеСвойства.ДанныеСвязи);
	//КонецЕсли;
	// -- VOG Солодов В.В. 27.05.2019
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты) // ++ Тищенко В.В.
	
	// ++ Тищенко В.В. 20.03.2019
	// Задача 000000258
	
	// Проверка заполнения контактной информации из формы 3 в 1 
	// Запретить создавать объект если не указано хоть одна контактная информация (телефон, почта)	
	Если ДополнительныеСвойства.Свойство("НеПроверятьДополнительныеПоля") Тогда
		ПроверяемыеРеквизиты.Очистить();	
		
		ЕстьЗаполненыйТелефон 		= КонтактнаяИнформация.НайтиСтроки(Новый Структура("Тип",Перечисления.ТипыКонтактнойИнформации.Телефон)).Количество() <> 0;
		ЕстьЗаполненныйЭлекАдрес 	= КонтактнаяИнформация.НайтиСтроки(Новый Структура("Тип",Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)).Количество() <> 0;
		
		Если НЕ ЕстьЗаполненыйТелефон И НЕ ЕстьЗаполненныйЭлекАдрес Тогда
			ТекстСообщения 	= НСтр("ru = 'Для содания контактного лица необходимо указать контактную информацию (Телефон или адрес элект.почты)'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Отказ 			= Истина;
		КонецЕсли;
	КонецЕсли;	
	
	// -- Тищенко В.В.
	
КонецПроцедуры // -- Тищенко В.В.

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Процедура УстановитьСвязиОбъекта()
	
	Если ДополнительныеСвойства.Свойство("ДанныеСвязи") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&Период КАК Период,
		|	вогСвязиКонтактныхЛицСрезПоследних.ОбъектСвязи КАК ОбъектСвязи,
		|	ВЫБОР
		|		КОГДА &НовоеСостояние = ЗНАЧЕНИЕ(Перечисление.CRM_Состояние.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.CRM_Состояние.Работает)
		|		ИНАЧЕ &НовоеСостояние
		|	КОНЕЦ КАК CRM_Состояние,
		|	&Должность КАК CRM_Должность,
		|	&РольКонтактногоЛица КАК CRM_РольКонтактногоЛица,
		|	вогСвязиКонтактныхЛицСрезПоследних.ОсновноеКонтактноеЛицо КАК ОсновноеКонтактноеЛицо,
		// ++ VOG Солодов В.В. 26.07.2019 task 479
		|	&Собственник КАК Собственник
		// -- VOG Солодов В.В. 26.07.2019
		|ИЗ
		|	РегистрСведений.вогСвязиКонтактныхЛиц.СрезПоследних КАК вогСвязиКонтактныхЛицСрезПоследних
		|ГДЕ
		|	вогСвязиКонтактныхЛицСрезПоследних.КонтактноеЛицо = &КонтактноеЛицо
		|	И вогСвязиКонтактныхЛицСрезПоследних.CRM_Состояние = ЗНАЧЕНИЕ(Перечисление.CRM_Состояние.Работает)
		|	И (вогСвязиКонтактныхЛицСрезПоследних.CRM_Должность <> &Должность
		|			ИЛИ вогСвязиКонтактныхЛицСрезПоследних.CRM_РольКонтактногоЛица <> &РольКонтактногоЛица
		// ++ VOG Солодов В.В. 26.07.2019 task 479
		|			ИЛИ вогСвязиКонтактныхЛицСрезПоследних.Собственник <> &Собственник
		// -- VOG Солодов В.В. 26.07.2019
		// ++ VOG Солодов В.В. 24.09.2020 Изм. 000003208
		|			ИЛИ вогСвязиКонтактныхЛицСрезПоследних.CRM_Состояние <> &НовоеСостояние)";
		// -- VOG Солодов В.В. 24.09.2020 Изм. 000003208
		
		Запрос.УстановитьПараметр("КонтактноеЛицо", 		Ссылка);
		Запрос.УстановитьПараметр("Период", 				ТекущаяДата());
		Запрос.УстановитьПараметр("НовоеСостояние", 		ДополнительныеСвойства.ДанныеСвязи.CRM_Состояние);
		Запрос.УстановитьПараметр("Должность", 				ДополнительныеСвойства.ДанныеСвязи.CRM_Должность);
		Запрос.УстановитьПараметр("РольКонтактногоЛица", 	ДополнительныеСвойства.ДанныеСвязи.CRM_РольКонтактногоЛица);
		// ++ VOG Солодов В.В. 26.07.2019 task 479
		Запрос.УстановитьПараметр("Собственник", 			вогСобственник);
		// -- VOG Солодов В.В. 26.07.2019 
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДанные = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДанные.Следующий() Цикл
			вогУправлениеСвязями.УстановитьСвязьОбъекта(Ссылка, ВыборкаДанные.ОбъектСвязи, ВыборкаДанные);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли