
////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы
//
&НаСервере
Процедура УстановитьОтборПоДоступнымПользователям()
	ПользовательскийОтбор = ПользователиСписок.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПользователиСписок.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	ПользовательскийОтбор.Элементы.Очистить();
	ЭлементОтбора = ПользовательскийОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.Использование = Истина;
	СписокДоступныхПользователей = CRM_УправлениеДоступомКПользователям.ПолучитьСписокДоступныхПользователей();
	ЭлементОтбора.ПравоеЗначение = СписокДоступныхПользователей;
КонецПроцедуры	

&НаСервере
Процедура УстановитьОтборПоДоступнымПодразделениям()
	ПользовательскийОтбор = Подразделения.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Подразделения.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки);
	ПользовательскийОтбор.Элементы.Очистить();
	ЭлементОтбора = ПользовательскийОтбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.Использование = Истина;
	СписокДоступныхПодразделений = CRM_УправлениеДоступомКПользователям.ПолучитьСписокДоступныхПодразделений();
	ЭлементОтбора.ПравоеЗначение = СписокДоступныхПодразделений;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.РежимВыбора Тогда
		ПоказыватьНедействительныхПользователей = (CRM_ХранилищеНастроек.Загрузить("ПоказыватьНедействительныхПользователей") = Истина);
		
		Элементы.ФормаПоказыватьНедействительныхПользователей.Пометка = ПоказыватьНедействительныхПользователей;
		
		// Только если не режим выбора, делаем фильтрацию.
		
		Если ПоказыватьНедействительныхПользователей Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ПользователиСписок.Отбор, "Недействителен");
		Иначе	
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				ПользователиСписок.Отбор,
				"Недействителен",
				Ложь);
		КонецЕсли;
			
	КонецЕсли;
	
	ИспользоватьГруппы = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыПользователей");
	
	Если ТипЗнч(Параметры.ТекущаяСтрока) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		Если ИспользоватьГруппы Тогда
			Элементы.ГруппыПользователей.ТекущаяСтрока = Параметры.ТекущаяСтрока;
		Иначе
			Параметры.ТекущаяСтрока = Неопределено;
		КонецЕсли;
	Иначе
		ТекущийЭлемент = Элементы.ПользователиСписок;
		Элементы.ГруппыПользователей.ТекущаяСтрока = Справочники.ГруппыПользователей.ВсеПользователи;
		ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "ГруппаПользователей", Справочники.ГруппыПользователей.ВсеПользователи);
		ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "ВыбиратьИерархически", Истина);
	КонецЕсли;
	
	Если НЕ ИспользоватьГруппы Тогда
		Параметры.ВыборГруппПользователей = Ложь;
		Элементы.ГруппаПоказыватьПользователейДочернихГрупп.Видимость = Ложь;
		Элементы.СоздатьГруппуПользователей.Видимость = Ложь;
	КонецЕсли;
	
	// Настройка постоянных данных для списка пользователей.
	ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "ПустойУникальныйИдентификатор", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	ГруппаПользователейВсеПользователи = Справочники.ГруппыПользователей.ВсеПользователи;
	
	Если НЕ ПравоДоступа("Добавление", Метаданные.Справочники.ГруппыПользователей) Тогда
		Элементы.СоздатьГруппуПользователей.Видимость = Ложь;
	КонецЕсли;
	Если НЕ ПравоДоступа("Добавление", Метаданные.Справочники.Пользователи) Тогда
		Элементы.СоздатьПользователя.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		
		РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		Если Элементы.Найти("ПользователиИБ") <> Неопределено Тогда
			Элементы.ПользователиИБ.Видимость = Ложь;
		КонецЕсли;
		
		// Отбор не помеченных на удаление.
		
		//ПользователиСписок.Отбор.Элементы[0].Использование = Истина;
		
		Элементы.ПользователиСписок.РежимВыбора        =    Истина;
		Элементы.ГруппыПользователей.РежимВыбора       =    Параметры.ВыборГруппПользователей;
		Элементы.ВыбратьГруппуПользователей.Видимость  =    Параметры.ВыборГруппПользователей;
		Элементы.ВыбратьПользователя.КнопкаПоУмолчанию = НЕ Параметры.ВыборГруппПользователей;
		
		Если Параметры.ЗакрыватьПриВыборе = Ложь Тогда
			// Режим подбора
			Элементы.ПользователиСписок.МножественныйВыбор = Истина;
			Элементы.ПользователиСписок.РежимВыделения = РежимВыделенияТаблицы.Множественный;
			
			Если Параметры.ВыборГруппПользователей Тогда
				Заголовок                                     = НСтр("ru = 'Подбор пользователей и групп'");
				Элементы.ВыбратьПользователя.Заголовок        = НСтр("ru = 'Выбрать пользователей'");
				
				Элементы.ВыбратьГруппуПользователей.Заголовок = НСтр("ru = 'Выбрать группы'");
				
				Элементы.ГруппыПользователей.МножественныйВыбор = Истина;
				Элементы.ГруппыПользователей.РежимВыделения = РежимВыделенияТаблицы.Множественный;
			Иначе
				Заголовок                                     = НСтр("ru = 'Подбор пользователей'");
			КонецЕсли;
		Иначе
			Если Параметры.ВыборГруппПользователей Тогда
				Заголовок                                     = НСтр("ru = 'Выбор пользователя или группы'");
				Элементы.ВыбратьПользователя.Заголовок        = НСтр("ru = 'Выбрать пользователя'");
			Иначе
				Заголовок                                     = НСтр("ru = 'Выбор пользователя'");
			КонецЕсли;
		КонецЕсли;
	Иначе
		Элементы.ВыбратьПользователя.Видимость        = Ложь;
		Элементы.ВыбратьГруппуПользователей.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.АдресКартинки.Видимость	= ИспользоватьГруппы И ПоказатьСкрытьИзображениеПометка;
	Элементы.ГруппаКартинки.Видимость	= НЕ ИспользоватьГруппы И ПоказатьСкрытьИзображениеПометка;
	
	Если Параметры.РежимВыбора И Параметры.Свойство("ТолькоГруппы") Тогда
		Элементы.ВыбратьПользователя.Видимость	= НЕ Параметры.ТолькоГруппы;
		Элементы.ГруппаСписокКартинка.Видимость = НЕ Параметры.ТолькоГруппы;
		Элементы.ГруппаПоказыватьПользователейДочернихГрупп.Видимость = НЕ Параметры.ТолькоГруппы 
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьГруппыПользователей") Тогда
		Элементы.РежимПодбора.Видимость = Ложь;
	КонецЕсли;
		
	РежимПодбора = "ПоПодразделениям";
	
	CRM_МодификацияКонфигурацииПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтборПоДоступнымПодразделениям();
	УстановитьОтборПоДоступнымПользователям();
	РежимПодбораПриИзменении(Неопределено);
	ОбновитьСодержимоеФормыПриИзмененииГруппы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененСоставГруппыПользователей" Тогда
		Если Параметр = Элементы.ГруппыПользователей.ТекущаяСтрока Тогда
			Элементы.ПользователиСписок.Обновить();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ИзмененПользовательИБ" Тогда
		Если Элементы.ПользователиСписок = Источник.ВладелецФормы Тогда
			СписокПриАктивизацииСтрокиНаСервере(Элементы.ПользователиСписок.ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Настройки[ВыбиратьИерархически] = Неопределено Тогда
		ВыбиратьИерархически = Истина;
	КонецЕсли;
	
	Если НЕ Настройки["ПоказатьСкрытьИзображениеПометка"] = Неопределено Тогда
		ПоказатьСкрытьИзображениеПометка	= Настройки["ПоказатьСкрытьИзображениеПометка"];
	Иначе
		ПоказатьСкрытьИзображениеПометка	= Ложь;
	КонецЕсли;
	
	Если Настройки["РежимПодбора"] = Неопределено ИЛИ (НЕ ПолучитьФункциональнуюОпцию("ИспользоватьГруппыПользователей") И Настройки["РежимПодбора"]<>"ПоПодразделениям") Тогда
		Настройки["РежимПодбора"] = "ПоПодразделениям";
	КонецЕсли;
	
	Элементы.ПоказатьСкрытьИзображение.Пометка	= ПоказатьСкрытьИзображениеПометка;
	Элементы.ГруппаКартинки.Видимость			= НЕ ИспользоватьГруппы И ПоказатьСкрытьИзображениеПометка;
	Элементы.АдресКартинки.Видимость			= ИспользоватьГруппы И ПоказатьСкрытьИзображениеПометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	// ++ Тищенко В.В. 28.01.2019	
	ОповеститьОВыборе(ВыбранноеЗначение);
	// -- Тищенко В.В. 	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Обработчики событий команд и элементов формы.
//

&НаКлиенте
Процедура СоздатьГруппуПользователей(Команда)
	
	Элементы.ГруппыПользователей.ДобавитьСтроку();
	
КонецПроцедуры


&НаКлиенте
Процедура ГруппыПользователейПриАктивизацииСтроки(Элемент)
	
	ОбновитьСодержимоеФормыПриИзмененииГруппы();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПользователейВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОповеститьОВыборе(Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПользователейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если НЕ Копирование Тогда
		Отказ = Истина;
		ПараметрыФормы = Новый Структура;
		
		Если ЗначениеЗаполнено(Элементы.ГруппыПользователей.ТекущаяСтрока) Тогда
			
			ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("Родитель", Элементы.ГруппыПользователей.ТекущаяСтрока));
		КонецЕсли;
		
		ОткрытьФорму("Справочник.ГруппыПользователей.ФормаОбъекта", ПараметрыФормы, Элементы.ГруппыПользователей);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПользователиСписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОповеститьОВыборе(Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПользователиСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ГруппаНовогоПользователя", Элементы.ГруппыПользователей.ТекущаяСтрока);
	
	Если Копирование И Элемент.ТекущиеДанные <> Неопределено Тогда
		ПараметрыФормы.Вставить("ЗначениеКопирования", Элемент.ТекущаяСтрока);
	КонецЕсли;
	
	Если НЕ Копирование Тогда
		Если НЕ Параметры.ПараметрыНового = Неопределено Тогда
			ПараметрыФормы.Вставить("ПараметрыНового",Параметры.ПараметрыНового);
		КонецЕсли;
	КонецЕсли;
	
	ОткрытьФорму("Справочник.Пользователи.ФормаОбъекта", ПараметрыФормы, Элементы.ПользователиСписок);
	
КонецПроцедуры


&НаКлиенте
Процедура ВыбиратьИерархическиПриИзменении(Элемент)
	
	ОбновитьСодержимоеФормыПриИзмененииГруппы();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции формы.
//

&НаКлиенте
Процедура ОбновитьСодержимоеФормыПриИзмененииГруппы()
	
	Если РежимПодбора = "ПоГруппам" Тогда
		Если НЕ ИспользоватьГруппы
		 ИЛИ Элементы.ГруппыПользователей.ТекущаяСтрока = ГруппаПользователейВсеПользователи Тогда
			//
			Элементы.ГруппаПоказыватьПользователейДочернихГрупп.ТекущаяСтраница = Элементы.ГруппаНельзяУстановитьСвойство;
			ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "ВыбиратьИерархически", Истина);
			ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "ГруппаПользователей", ГруппаПользователейВсеПользователи);
		Иначе
			Элементы.ГруппаПоказыватьПользователейДочернихГрупп.ТекущаяСтраница = Элементы.ГруппаУстановитьСвойство;
			ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "ВыбиратьИерархически", ВыбиратьИерархически);
			ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "ГруппаПользователей", Элементы.ГруппыПользователей.ТекущаяСтрока);
		КонецЕсли;
		ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "Подразделение", ПредопределенноеЗначение("Справочник.СтруктураПредприятия.ПустаяСсылка"));
	Иначе
		ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "ГруппаПользователей", ГруппаПользователейВсеПользователи);
		ОбновитьЗначениеПараметраКомпоновкиДанных(ПользователиСписок, "Подразделение", Элементы.Подразделения.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗначениеПараметраКомпоновкиДанных(Знач ВладелецПараметров, Знач ИмяПараметра, Знач ЗначениеПараметра)
	
	Для каждого Параметр Из ВладелецПараметров.Параметры.Элементы Цикл
		Если Строка(Параметр.Параметр) = ИмяПараметра Тогда
			Если Параметр.Использование И Параметр.Значение = ЗначениеПараметра Тогда
				Возврат;
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ВладелецПараметров.Параметры.УстановитьЗначениеПараметра(ИмяПараметра, ЗначениеПараметра);
	
КонецПроцедуры


&НаКлиенте
Процедура ПоказыватьНедействительныхПользователей(Команда)
	
	ПоказыватьНедействительныхПользователей = Не ПоказыватьНедействительныхПользователей;
	
	Элементы.ФормаПоказыватьНедействительныхПользователей.Пометка = ПоказыватьНедействительныхПользователей;
	
	CRM_ХранилищеНастроек.Сохранить("ПоказыватьНедействительныхПользователей", "", ПоказыватьНедействительныхПользователей);
	
	Если ПоказыватьНедействительныхПользователей Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ПользователиСписок.Отбор, "Недействителен");
	Иначе	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			ПользователиСписок.Отбор,
			"Недействителен",
			Ложь);
	КонецЕсли;
		
КонецПроцедуры


// +CRM

&НаСервере
Процедура ВывестиНедоступностьКартинки(ТекущаяСтрокаСписка)
	АдресКартинки = "";
	Элементы.АдресКартинки.ТекстНевыбраннойКартинки
		= НСтр("ru = 'Картинка не доступна (не доступен том) обратитесь к администратору.'");
КонецПроцедуры // ВывестиНедоступностьКартинки()

&НаСервереБезКонтекста
Функция ПолучитьНавигационнуюСсылкуКартинки(ФайлКартинки, ИдентификаторФормы)
	
	Попытка
		УстановитьПривилегированныйРежим(Истина);
		Возврат ПрисоединенныеФайлы.ПолучитьДанныеФайла(ФайлКартинки, ИдентификаторФормы).СсылкаНаДвоичныеДанныеФайла;
	Исключение
		Возврат "";
	КонецПопытки;
	
КонецФункции

&НаСервере
Процедура СписокПриАктивизацииСтрокиНаСервере(ТекущаяСтрокаСписка)
	Если НЕ ТекущаяСтрокаСписка = Неопределено Тогда
		Если НЕ ТекущаяСтрокаСписка.CRM_Фотография.Пустая() Тогда
			АдресКартинки = ПолучитьНавигационнуюСсылкуКартинки(ТекущаяСтрокаСписка.CRM_Фотография, УникальныйИдентификатор);
			Если ПустаяСтрока(АдресКартинки) Тогда
				ВывестиНедоступностьКартинки(ТекущаяСтрокаСписка);
			КонецЕсли;	
		Иначе
			АдресКартинки = "";
		КонецЕсли;
	Иначе
		АдресКартинки = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбработчикОжиданияСписокПриАктивизацииСтроки()
	СписокПриАктивизацииСтрокиНаСервере(Элементы.ПользователиСписок.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ПользователиСписокПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_ОбработчикОжиданияСписокПриАктивизацииСтроки", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьИзображение(Команда)
	
	Элементы.ПоказатьСкрытьИзображение.Пометка	= НЕ Элементы.ПоказатьСкрытьИзображение.Пометка;
	ПоказатьСкрытьИзображениеПометка	= Элементы.ПоказатьСкрытьИзображение.Пометка;
	Элементы.ГруппаКартинки.Видимость			= НЕ ИспользоватьГруппы И ПоказатьСкрытьИзображениеПометка;
	Элементы.АдресКартинки.Видимость			= ИспользоватьГруппы И ПоказатьСкрытьИзображениеПометка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияПриАктивизацииСтроки(Элемент)
	ОбновитьСодержимоеФормыПриИзмененииГруппы();
КонецПроцедуры

&НаКлиенте
Процедура РежимПодбораПриИзменении(Элемент)

	Если РежимПодбора = "ПоГруппам" Тогда
		Элементы.ГруппаДеревоКартинка.Видимость	= Истина;
		Элементы.ГруппаДеревоПодразделения.Видимость = Ложь;
	Иначе
		Элементы.ГруппаДеревоКартинка.Видимость	= Ложь;
		Элементы.ГруппаДеревоПодразделения.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры


// -CRM