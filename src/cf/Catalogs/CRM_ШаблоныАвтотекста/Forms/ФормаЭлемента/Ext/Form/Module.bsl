
&НаСервере
Процедура УстановитьДоступностьПринадлежности()
	
	Элементы.ГруппаПринадлежность.Видимость = (Объект.Назначение = Перечисления.CRM_НазначенияАвтотекста.ТегШаблона) ИЛИ
	(Объект.Назначение = Перечисления.CRM_НазначенияАвтотекста.ТегШаблонаЗначениеКолонки);
	
	Элементы.ТабличнаяЧасть.Видимость = (Объект.Назначение = Перечисления.CRM_НазначенияАвтотекста.ТегШаблонаЗначениеКолонки);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваСсылкиНаОбъект()
	
	Если ЗначениеЗаполнено(Объект.Принадлежность) Тогда
		СсылкаНаОбъект = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Объект.Принадлежность).ПустаяСсылка();
	ИначеЕсли (Объект.Назначение = Перечисления.CRM_НазначенияАвтотекста.АвтотекстЭлектронноеПисьмо) Тогда
		СсылкаНаОбъект = Документы.ЭлектронноеПисьмоИсходящее.ПустаяСсылка();
	ИначеЕсли (Объект.Назначение = Перечисления.CRM_НазначенияАвтотекста.АвтотекстСМССообщение) Тогда
		СсылкаНаОбъект = Документы.СообщениеSMS.ПустаяСсылка();
	ИначеЕсли (Объект.Назначение = Перечисления.CRM_НазначенияАвтотекста.АвтотекстЗадачаИсполнителя) Тогда
		СсылкаНаОбъект = Задачи.ЗадачаИсполнителя.ПустаяСсылка();
	Иначе
		СсылкаНаОбъект = Неопределено;
	КонецЕсли;
	
	Элементы.ГруппаПроверки.Доступность = (НЕ СсылкаНаОбъект = Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеПриИзменении(Элемент)
	
	Объект.Принадлежность		= "";
	ПринадлежностьПредставление	= "";
	СсылкаНаОбъект				= Неопределено;
	
	УстановитьСвойстваСсылкиНаОбъект();
	УстановитьДоступностьПринадлежности();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ИзМакета = Ложь;
	КонецЕсли;
	
	УстановитьДоступностьПринадлежности();
	ПолеТекстовогоДокумента.УстановитьТекст(Объект.Действие);
	
	Если ЗначениеЗаполнено(Объект.Принадлежность) Тогда
		ПринадлежностьПредставление = Метаданные.НайтиПоПолномуИмени(Объект.Принадлежность).Представление();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Принадлежность) И ЗначениеЗаполнено(Объект.ИмяТабличнойЧасти) Тогда
		ТабличнаяЧасть = Метаданные.НайтиПоПолномуИмени(Объект.Принадлежность).ТабличныеЧасти[Объект.ИмяТабличнойЧасти].Синоним;
	КонецЕсли;
	
	УстановитьСвойстваСсылкиНаОбъект();
	
	Элементы.ФормаВосстановитьИзМакета.Видимость		= Объект.ИзМакета;
	Элементы.Родитель.ТолькоПросмотр					= Объект.ИзМакета;
	Элементы.Назначение.ТолькоПросмотр					= Объект.ИзМакета;
	Элементы.Представление.ТолькоПросмотр				= Объект.ИзМакета;
	Элементы.ПринадлежностьПредставление.ТолькоПросмотр	= Объект.ИзМакета;
	Элементы.ТабличнаяЧасть.ТолькоПросмотр				= Объект.ИзМакета;
	
	Если Объект.Родитель = Справочники.CRM_ШаблоныАвтотекста.АвтотекстЭлектронногоПисьма Тогда
		Элементы.ПредставлениеLAT.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеТекстовогоДокументаПриИзменении(Элемент)
	
	Объект.Действие = ПолеТекстовогоДокумента.ПолучитьТекст();
	
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежностьПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПринадлежностьПредставлениеНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.CRM_ШаблоныАвтотекста.Форма.ФормаВыбораПринадлежности",,Элемент,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежностьПредставлениеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		Объект.Принадлежность		= Результат.Значение;
		ПринадлежностьПредставление	= Результат.Представление;
		ТабличнаяЧасть				= "";
		Объект.ИмяТабличнойЧасти	= "";
	КонецЕсли;
	
	Модифицированность = Истина;
	
	УстановитьСвойстваСсылкиНаОбъект();
	
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежностьПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.Принадлежность = "";
	ПринадлежностьПредставление = "";
	СсылкаНаОбъект = Неопределено;
	Элементы.ГруппаПроверки.Доступность = Ложь;
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция СформироватьСписокТабличныхЧастей()
	
	СписокТЧ = Новый СписокЗначений;
	Если ЗначениеЗаполнено(Объект.Принадлежность) Тогда
		МетаОбъект = Метаданные.НайтиПоПолномуИмени(Объект.Принадлежность);
		
		Для Каждого ТабЧасть Из МетаОбъект.ТабличныеЧасти Цикл
			СписокТЧ.Добавить(ТабЧасть.Имя, ТабЧасть.Синоним);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СписокТЧ;
	
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = СформироватьСписокТабличныхЧастей();
	
КонецПроцедуры

&НаСервере
Функция ВернутьСинонимТабличнойЧасти(ВыбранноеЗначение)
	
	Если ЗначениеЗаполнено(Объект.Принадлежность) Тогда
		Возврат Метаданные.НайтиПоПолномуИмени(Объект.Принадлежность).ТабличныеЧасти[ВыбранноеЗначение].Синоним;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка		= Ложь;
	Объект.ИмяТабличнойЧасти	= ВыбранноеЗначение;
	ТабличнаяЧасть				= ВернутьСинонимТабличнойЧасти(ВыбранноеЗначение);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПроверкуДействия()
	
	CRM_АвтотекстПереопределяемый.ПроверитьВыполнениеДействия(Объект.Действие, СсылкаНаОбъект, Объект.Назначение, Объект.ИмяТабличнойЧасти, ТабличнаяЧасть);
	
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	
	Если НЕ ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
		Возврат;
	КонецЕсли;
	ВыполнитьПроверкуДействия();
	
КонецПроцедуры

&НаКлиенте
Процедура СсылкаНаОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Отбор",Новый Структура("CRM_Личная", Ложь));
		ПараметрыФормы.Вставить("РежимВыбора"	, Истина);
		ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
		ОткрытьФорму("Задача.ЗадачаИсполнителя.ФормаВыбора", ПараметрыФормы, Элемент);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВосстановитьЗначениеИзМакета()
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(Объект.Ссылка);
	
	СтруктураЗначений = Справочники.CRM_ШаблоныАвтотекста.ПолучитьЗначениеИзМакета(Объект.Ссылка);
	
	Объект.Наименование	= СтруктураЗначений.Наименование;
	Объект.Действие		= СтруктураЗначений.Действие;
	
	ПолеТекстовогоДокумента.УстановитьТекст(СтруктураЗначений.Действие);
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьИзМакета(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВосстановитьИзМакетаЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Элемент будет перезаполнен из макета справочника. Продолжить?'"), РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьИзМакетаЗавершение(Ответ, ДополнительныеПараметры) экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВосстановитьЗначениеИзМакета();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры
