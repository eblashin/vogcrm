
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	         
	ЕстьКИ = КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.Количество()>0;
	ЕстьДР = СвойстваОписаниеДополнительныхРеквизитов.Количество()>0;
	
	Элементы.Декорация1.Видимость				= (ЕстьКИ ИЛИ ЕстьДР);
	Элементы.КонтактнаяИнформация.Видимость		= ЕстьКИ;
	Элементы.ДополнительныеРеквизиты.Видимость	= ЕстьДР;
	
КонецПроцедуры

&НаСервере
Процедура СодатьКонтактноеЛицоПартнера()
	
	НовоеКонтактноеЛицо = Справочники.КонтактныеЛицаПартнеров.СоздатьЭлемент();
	
	НовоеКонтактноеЛицо.Владелец					= Партнер;
	НовоеКонтактноеЛицо.Наименование				= Партнер.Наименование;
	НовоеКонтактноеЛицо.ДатаРождения				= Партнер.ДатаРождения;
	НовоеКонтактноеЛицо.CRM_НапоминатьОДнеРождения	= Партнер.CRM_НапоминатьОДнеРождения;
	НовоеКонтактноеЛицо.CRM_Имя						= Партнер.CRM_Имя;
	НовоеКонтактноеЛицо.CRM_Фамилия					= Партнер.CRM_Фамилия;
	НовоеКонтактноеЛицо.CRM_Отчество				= Партнер.CRM_Отчество;
	НовоеКонтактноеЛицо.Пол							= Партнер.Пол;
	НовоеКонтактноеЛицо.ДатаРегистрацииСвязи		= Партнер.ДатаРегистрации;
	НовоеКонтактноеЛицо.CRM_Состояние			= Перечисления.CRM_Состояние.Работает;
	НовоеКонтактноеЛицо.Автор = Пользователи.АвторизованныйПользователь();
	
	// контактная информация
	Для Каждого СтрокаТаблицы Из КонтактнаяИнформацияОписаниеДополнительныхРеквизитов Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ВидПриемник) Тогда
			НоваяСтрокаКИ = НовоеКонтактноеЛицо.КонтактнаяИнформация.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаКИ,СтрокаТаблицы);
			НоваяСтрокаКИ.Вид = СтрокаТаблицы.ВидПриемник;
			
			// Заполним значения дополнительных реквизитов таб. части.
			Если СтрокаТаблицы.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
				МассивСтрок = Партнер.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Тип, Вид",СтрокаТаблицы.Тип,СтрокаТаблицы.Вид));
				Если МассивСтрок.Количество() > 0 Тогда
					НоваяСтрокаКИ.ДоменноеИмяСервера	= МассивСтрок[0].ДоменноеИмяСервера;
					НоваяСтрокаКИ.АдресЭП				= МассивСтрок[0].АдресЭП;
				КонецЕсли;
			ИначеЕсли СтрокаТаблицы.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
				МассивСтрок = Партнер.КонтактнаяИнформация.НайтиСтроки(Новый Структура("Тип, Вид",СтрокаТаблицы.Тип,СтрокаТаблицы.Вид));
				Если МассивСтрок.Количество() > 0 Тогда
					НоваяСтрокаКИ.ДоменноеИмяСервера	= МассивСтрок[0].ДоменноеИмяСервера;
				КонецЕсли;
			КонецЕсли;
			
			СтрокаТаблицы.Представление = "";
			СтрокаТаблицы.ЗначенияПолей.Очистить();
		КонецЕсли;
	КонецЦикла;
	
	// Дополнительные реквизиты и сведения.
	Для Каждого Стр Из СвойстваОписаниеДополнительныхРеквизитов Цикл
		Если НЕ ЗначениеЗаполнено(Стр.СвойствоПриемник) Тогда Продолжить; КонецЕсли;
		
		Значение = Стр.Значение;
		Если ЗначениеЗаполнено(Значение) Тогда
			Если ТипЗнч(Значение) = Тип("Булево") И Значение = Ложь Тогда
				Продолжить;
			КонецЕсли;
			
			новСтр = НовоеКонтактноеЛицо.ДополнительныеРеквизиты.Добавить();
			новСтр.Свойство = Стр.СвойствоПриемник;
			новСтр.Значение = Значение;
			
			///////////////////////////////////////////////////////////////
			// поддержка строк неограниченной длины.
			Свойство = Стр.СвойствоПриемник.ПолучитьОбъект();
			Если УправлениеСвойствамиСлужебный.ИспользоватьНеограниченнуюСтроку(Свойство.ТипЗначения, Свойство.МногострочноеПолеВвода) Тогда
				новСтр.ТекстоваяСтрока = Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	НовоеКонтактноеЛицо.Записать();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьТаблицуСоответствий()
	
	// Тут будет блок  получения таблицы из ранее сохраненых данных пользователя.
	ТаблицаСоответствийКонтактнойИнформации = ХранилищеОбщихНастроек.Загрузить(Пользователи.ТекущийПользователь(), "ТаблицаСоответствийКонтактнойИнформации");
	
	//ТаблицаСоответствийКонтактнойИнформации = Неопределено;
	
	Если ТаблицаСоответствийКонтактнойИнформации = Неопределено Тогда
		// Если ничего не получили, то заполним по умолчанию.
		
		// ТелефонПартнера ---> ТелефонКонтактногоЛица
		НоваяСтрока						= ТаблицаСоответствий.Добавить();
		НоваяСтрока.Родитель			= Справочники.ВидыКонтактнойИнформации.СправочникПартнеры;
		НоваяСтрока.Вид					= Справочники.ВидыКонтактнойИнформации.ТелефонПартнера;
		НоваяСтрока.РодительПриемник	= Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров;
		НоваяСтрока.ВидПриемник			= Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица;
		
		// EmailПартнера ---> EmailКонтактногоЛица
		НоваяСтрока						= ТаблицаСоответствий.Добавить();
		НоваяСтрока.Родитель			= Справочники.ВидыКонтактнойИнформации.СправочникПартнеры;
		НоваяСтрока.Вид					= Справочники.ВидыКонтактнойИнформации.EmailПартнера;
		НоваяСтрока.РодительПриемник	= Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров;
		НоваяСтрока.ВидПриемник			= Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица;
		
		// МобильныйТелефонЧастногоЛица ---> МобильныйТелефонКонтактногоЛица
		НоваяСтрока						= ТаблицаСоответствий.Добавить();
		НоваяСтрока.Родитель			= Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыЧастноеЛицо;
		НоваяСтрока.Вид					= Справочники.ВидыКонтактнойИнформации.CRM_МобильныйТелефонЧастногоЛица;
		НоваяСтрока.РодительПриемник	= Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров;
		НоваяСтрока.ВидПриемник			= Справочники.ВидыКонтактнойИнформации.МобильныйТелефонКонтактногоЛица;
	Иначе
		Для Каждого СтрокаТаб Из ТаблицаСоответствийКонтактнойИнформации Цикл
			НоваяСтрока = ТаблицаСоответствий.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаб);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьТаблицаСоответствий()
	
	Для Каждого СтрокаТаб Из КонтактнаяИнформацияОписаниеДополнительныхРеквизитов Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаб.ВидПриемник) Тогда Продолжить; КонецЕсли;
		
		Массив = ТаблицаСоответствий.НайтиСтроки(Новый Структура("Родитель, Вид, РодительПриемник",СтрокаТаб.Родитель,СтрокаТаб.Вид,СтрокаТаб.ВидПриемник.Родитель));
		Если НЕ Массив.Количество() = 0 Тогда
			Массив[0].ВидПриемник = СтрокаТаб.ВидПриемник;
		Иначе
			НовоеСоответствие					= ТаблицаСоответствий.Добавить();
			НовоеСоответствие.Родитель			= СтрокаТаб.Родитель;
			НовоеСоответствие.Вид				= СтрокаТаб.Вид;
			НовоеСоответствие.РодительПриемник	= СтрокаТаб.ВидПриемник.Родитель;
			НовоеСоответствие.ВидПриемник		= СтрокаТаб.ВидПриемник;
		КонецЕсли;
	КонецЦикла;
	
	ТабЗначТаблицаСоответствий = ТаблицаСоответствий.Выгрузить();
	
	ХранилищеОбщихНастроек.Сохранить(Пользователи.ТекущийПользователь(),"ТаблицаСоответствийКонтактнойИнформации",ТабЗначТаблицаСоответствий);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеКИ(ДопРеквизиты, ЗначенияДопРеквизитов)
	
	Для Каждого СтрокаДР Из ДопРеквизиты Цикл
		СписокДоступныхВидов = ПолучитьСписокДоступныхВидовКИ(СтрокаДР.Тип, Неопределено);
		Если ЗначениеЗаполнено(ЗначенияДопРеквизитов[СтрокаДР.ИмяРеквизита]) И СписокДоступныхВидов.Количество() > 0 Тогда
			НоваяСтрокаДР = КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДР, СтрокаДР);
			НоваяСтрокаДР.Представление = ЗначенияДопРеквизитов[СтрокаДР.ИмяРеквизита];
			МассивСтрок = ТаблицаСоответствий.НайтиСтроки(Новый Структура("Родитель, Вид",НоваяСтрокаДР.Родитель,НоваяСтрокаДР.Вид));
			Если НЕ МассивСтрок.Количество() = 0 Тогда
				НоваяСтрокаДР.ВидПриемник = МассивСтрок[0].ВидПриемник;
			КонецЕсли;
			НоваяСтрокаДР.ВидПредставлениеСтрокой = Строка(НоваяСтрокаДР.Вид) + ?(ЗначениеЗаполнено(Строка(НоваяСтрокаДР.Представление)), ": " + Строка(НоваяСтрокаДР.Представление), "");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокДоступныхВидовКИ(ЗначениеТипа, ЗначениеВида, КонтакноеЛицо = Ложь)
	
	СписокВидов = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров);
	
	Запрос.УстановитьПараметр("Тип", ЗначениеТипа);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыКонтактнойИнформации.Ссылка КАК Ссылка,
	               |	ВидыКонтактнойИнформации.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	               |ГДЕ
	               |	ВидыКонтактнойИнформации.Родитель = &Родитель
	               |	И (НЕ ВидыКонтактнойИнформации.ЭтоГруппа)
	               |	И (НЕ ВидыКонтактнойИнформации.ПометкаУдаления)
	               |	И ВидыКонтактнойИнформации.Тип = &Тип";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ЗначениеВида) И (Выборка.Ссылка = ЗначениеВида) Тогда
			СписокВидов.Добавить(Выборка.Ссылка,Выборка.Наименование);
		КонецЕсли;
		
		МассивСтрок = КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("ВидПриемник", Выборка.Ссылка));
		Если МассивСтрок.Количество() = 0 Тогда
			СписокВидов.Добавить(Выборка.Ссылка,Выборка.Наименование);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокВидов;
	
КонецФункции

&НаСервере
Процедура ПолучитьДопРеквизитыИСведения(Свойства_ОписаниеДР, ЗначенияДопРеквизитов)
	
	Для Каждого СтрокаДР Из Свойства_ОписаниеДР Цикл
		
		СписокДоступныхСвойств = ПолучитьСписокДоступныхСвойств(СтрокаДР.Свойство, Неопределено);
		
		Если ЗначениеЗаполнено(ЗначенияДопРеквизитов[СтрокаДР.ИмяРеквизитаЗначение]) И (СписокДоступныхСвойств.Количество() > 0) Тогда
			НоваяСтрокаДР = СвойстваОписаниеДополнительныхРеквизитов.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДР, СтрокаДР);
			
			НоваяСтрокаДР.Значение = ЗначенияДопРеквизитов[СтрокаДР.ИмяРеквизитаЗначение];
			СписокДоступныхСвойств = ПолучитьСписокДоступныхСвойств(СтрокаДР.Свойство, НоваяСтрокаДР.СвойствоПриемник);
			Элемент = СписокДоступныхСвойств.НайтиПоЗначению(СтрокаДР.Свойство);
			Если НЕ Элемент = Неопределено Тогда
				НоваяСтрокаДР.СвойствоПриемник = Элемент.Значение;
			КонецЕсли;
			НоваяСтрокаДР.СвойствоЗначениеСтрокой = Строка(НоваяСтрокаДР.Свойство) + ?(ЗначениеЗаполнено(Строка(НоваяСтрокаДР.Значение)), ": " + Строка(НоваяСтрокаДР.Значение), "");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокДоступныхСвойств(ТекущееСвойство, ЗначениеСвойства,КонтакноеЛицо = Ложь)
	
	СписокСвойств = Новый СписокЗначений;
	Набор = Новый СписокЗначений;
	Набор.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_КонтактныеЛицаПартнеров,    НСтр("ru = 'Для контактных лиц партнеров'"));;
	ТабЧасть = Партнер.ДополнительныеРеквизиты.Выгрузить();
	ТабЧасть.Очистить();
	ТаблицаДоступныхСвойств = УправлениеСвойствамиСлужебный.ЗначенияСвойств(ТабЧасть, Набор, Ложь);
	
	Для Каждого СтрокаТЗ Из ТаблицаДоступныхСвойств Цикл
		Если СтрокаТЗ.ТипЗначения = ТекущееСвойство.ТипЗначения Тогда
			
			Если ЗначениеЗаполнено(ЗначениеСвойства) И (ЗначениеСвойства = СтрокаТЗ.Свойство) Тогда
				СписокСвойств.Добавить(СтрокаТЗ.Свойство, СтрокаТЗ.Наименование);
			КонецЕсли;
			
			МассивСтрок = СвойстваОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("СвойствоПриемник", СтрокаТЗ.Свойство));
			
			Если МассивСтрок.Количество() = 0 Тогда
				СписокСвойств.Добавить(СтрокаТЗ.Свойство, СтрокаТЗ.Наименование);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокСвойств;
	
КонецФункции

&НаСервере
Функция ТребуетсяПеренестиДопРеквизиты(Свойства_ОписаниеДР,ЗначенияДопРеквизитов)
	
	Для Каждого СтрокаДР Из Свойства_ОписаниеДР Цикл
		Значение = ЗначенияДопРеквизитов[СтрокаДР.ИмяРеквизитаЗначение];
		
		Если ТипЗнч(Значение) = Тип("Булево") И Значение = Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Значение) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ТребуетсяПеренестиКИ(ДопРеквизиты,ЗначенияДопРеквизитов)
	
	Для Каждого СтрокаДР Из ДопРеквизиты Цикл
		Если ЗначениеЗаполнено(ЗначенияДопРеквизитов[СтрокаДР.ИмяРеквизита]) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПартнерСсылка") Тогда
		Партнер	= Параметры.ПартнерСсылка;
	КонецЕсли;
	Если Параметры.Свойство("ВидПартнера") Тогда
		ВидПартнера	= Параметры.ВидПартнера;
	КонецЕсли;
	Если Параметры.Свойство("ЗначенияДопРеквизитов") Тогда
		Если Параметры.Свойство("КонтактнаяИнформацияОписаниеДополнительныхРеквизитов") Тогда
			ПереноситьКИ	= ТребуетсяПеренестиКИ(Параметры.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов, Параметры.ЗначенияДопРеквизитов);
			// Контактрная информация
			ПолучитьДанныеКИ(Параметры.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов, Параметры.ЗначенияДопРеквизитов);
		КонецЕсли;
		Если Параметры.Свойство("Свойства_ОписаниеДополнительныхРеквизитов") Тогда
			ПереноситьДопРеквизиты	= ТребуетсяПеренестиДопРеквизиты(Параметры.Свойства_ОписаниеДополнительныхРеквизитов, Параметры.ЗначенияДопРеквизитов);
			// Дополнительные свойства и реквизиты.
			ПолучитьДопРеквизитыИСведения(Параметры.Свойства_ОписаниеДополнительныхРеквизитов, Параметры.ЗначенияДопРеквизитов);
		КонецЕсли;
	КонецЕсли;
	// Получим таблицу соответствий видов контактной информации.
	ПолучитьТаблицуСоответствий();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура КонтактнаяИнформацияОписаниеДополнительныхРеквизитовПриАктивизацииСтроки(Элемент)
	Элементы.ВидПриемник.СписокВыбора.Очистить();
	ТекущиеДанные = Элементы.КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	СписокДоступныхВидов = ПолучитьСписокДоступныхВидовКИ(ТекущиеДанные.Тип, ТекущиеДанные.ВидПриемник);
	Для Каждого ЭлементСписка Из СписокДоступныхВидов Цикл
		Элементы.ВидПриемник.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СвойстваОписаниеДополнительныхРеквизитовПриАктивизацииСтроки(Элемент)
	Элементы.СвойствоПриемник.СписокВыбора.Очистить();
	ТекущиеДанные = Элементы.СвойстваОписаниеДополнительныхРеквизитов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	СписокДоступныхСвойств = ПолучитьСписокДоступныхСвойств(ТекущиеДанные.Свойство, ТекущиеДанные.СвойствоПриемник);
	Для Каждого ЭлементСписка Из СписокДоступныхСвойств Цикл
		Элементы.СвойствоПриемник.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработкаКоманд

&НаСервере
Процедура ПодготовитьКонтактнаяИнформацияОписаниеДополнительныхРеквизитов()
	
	ТабКИ = КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.Выгрузить();
	Для Каждого СтрокаТаблицы Из ТабКИ Цикл
		Если НЕ СтрокаТаблицы.Партнер Тогда Продолжить; КонецЕсли;
		
		МассивСтрок = КонтактнаяИнформацияОписаниеДополнительныхРеквизитов.НайтиСтроки(Новый Структура("Вид", СтрокаТаблицы.Вид));
		Если ЗначениеЗаполнено(СтрокаТаблицы.ВидПриемник) Тогда
			МассивСтрок[0].ЗначенияПолей.Очистить();
			МассивСтрок[0].Представление = "";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Перенести(Команда)
	
	СохранитьТаблицаСоответствий();
	СодатьКонтактноеЛицоПартнера();
	
	// контактная инф.
	ПодготовитьКонтактнаяИнформацияОписаниеДополнительныхРеквизитов();
	
	СтруктураВозврата = Новый Структура("КонтактнаяИнформацияОписаниеДополнительныхРеквизитов, СвойстваОписаниеДополнительныхРеквизитов",КонтактнаяИнформацияОписаниеДополнительныхРеквизитов,СвойстваОписаниеДополнительныхРеквизитов);
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
