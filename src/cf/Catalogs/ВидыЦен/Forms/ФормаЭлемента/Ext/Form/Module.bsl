////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Процедура управляет видимостью элементов.
//
Процедура УстановитьВидимостьЭлементов()
	
	Если СпособРасчетаЦены = "Рассчитывается динамически" Тогда
		
		Элементы.БазовыйВидЦен.Видимость = Истина;
		Элементы.БазовыйВидЦен.АвтоВыборНезаполненного = Истина;
		Элементы.БазовыйВидЦен.АвтоОтметкаНезаполненного = Истина;
		Элементы.Процент.Видимость = Истина;
		
		ОписаниеСпособаРасчета = "Цены не хранятся.
									|Автоматически пересчитываются в документах относительно базовой цены.";	
									
		Объект.РассчитываетсяДинамически = Истина;							
									
	ИначеЕсли СпособРасчетаЦены = "Рассчитывается" Тогда
	
		Элементы.БазовыйВидЦен.Видимость = Истина;
		Элементы.БазовыйВидЦен.АвтоВыборНезаполненного = Истина;
		Элементы.БазовыйВидЦен.АвтоОтметкаНезаполненного = Истина;
		Элементы.Процент.Видимость = Истина;
		
		ОписаниеСпособаРасчета = "Цены назначаются и хранятся для каждой позиции номенклатуры.
									|Могут быть рассчитаны относительно базовой цены при помощи механизма формирования цен.";	
									
		Объект.РассчитываетсяДинамически = Ложь;							
									
	Иначе
	
		Элементы.БазовыйВидЦен.Видимость = Ложь;
		Элементы.БазовыйВидЦен.АвтоВыборНезаполненного = Ложь;
		Элементы.БазовыйВидЦен.АвтоОтметкаНезаполненного = Ложь;
		Элементы.Процент.Видимость = Ложь;
		
		Объект.БазовыйВидЦен = Неопределено;
		Объект.Процент = 0;
		
		ОписаниеСпособаРасчета = "Цены назначаются и хранятся для каждой позиции номенклатуры. 
									|На основании цен этого вида могут рассчитываться цены других видов.";
									
		Объект.РассчитываетсяДинамически = Ложь;							
									
	КонецЕсли;
	
КонецПроцедуры

// +CRM

&НаСервереБезКонтекста
// Функция возвращает валюту учета.
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	СправочникСсылка	- Валюта учета.
//
Функция ПолучитьВалютуУчета()
	Возврат Константы.ВалютаУправленческогоУчета.Получить();
КонецФункции // ПолучитьВалютуУчета()

// -CRM

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере формы.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Объект.РассчитываетсяДинамически Тогда
			СпособРасчетаЦены = "Рассчитывается динамически";
		Иначе
			Если НЕ ЗначениеЗаполнено(Объект.БазовыйВидЦен) Тогда
				СпособРасчетаЦены = "Вручную";
			Иначе
				СпособРасчетаЦены = "Рассчитывается";
			КонецЕсли;
		КонецЕсли;
	Иначе
	    СпособРасчетаЦены = "Вручную";
		Объект.РассчитываетсяДинамически = Ложь;
	КонецЕсли; 
	
	УстановитьВидимостьЭлементов();
	
	Пример = 987654.321;
	ОтформатированныйПример = Формат(Пример, Объект.ФорматЦены);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

// +CRM

&НаКлиенте
// Процедура - обработчик события формы "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ ЗначениеЗаполнено(Объект.ВалютаЦены) Тогда
		Объект.ВалютаЦены = ПолучитьВалютуУчета();
	КонецЕсли;	
КонецПроцедуры // ПередЗаписью()

// -CRM

#Область ПроцедурыОбработчикиСобытийРеквизитовФормы

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода СпособРасчетаЦены.
//
Процедура СпособРасчетаЦеныПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементов();	
	
КонецПроцедуры

&НаКлиенте
// Процедура - установка формата цен.
//
Процедура Установить(Команда)
	
	Конструктор = Новый КонструкторФорматнойСтроки(Объект.ФорматЦены);	
	Конструктор.ДоступныеТипы = Новый ОписаниеТипов("Число");
	Конструктор.Показать(Новый ОписаниеОповещения("УстановкаФорматаЗавершение", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановкаФорматаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
	    Объект.ФорматЦены = Результат;
	КонецЕсли;
	
	ОтформатированныйПример = Формат(Пример, Объект.ФорматЦены);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Пример.
//
Процедура ПримерПриИзменении(Элемент)
	
	ОтформатированныйПример = Формат(Пример, Объект.ФорматЦены);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
