
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// +Этот блок обязательно должен быть в самом начале процедуры, чтобы при отказе не выполнять избыточный код.
	Если НЕ CRM_РежимФормЗакладкиСервер.ВосстановлениеФормыПриЗапускеСеанса(ЭтотОбъект, Отказ, СтандартнаяОбработка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	// -Этот блок обязательно должен быть в самом начале процедуры, чтобы при отказе не выполнять избыточный код.
	
	ЗаполнитьМоделиКейсов(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	ПриЗакрытииНаСервере();
КонецПроцедуры

#КонецОбласти      

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьПоиск(Команда)
	ПодключитьОбработчикОжидания("Подключаемый_ЗаполнитьМоделиКейсов", 0.1, Истина);	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ПодключитьОбработчикОжидания("Подключаемый_ЗаполнитьМоделиКейсов", 0.1, Истина);	
КонецПроцедуры

&НаКлиенте
Процедура ВосстанавливатьФормуПриОткрытии(Команда)
	Элементы.КнопкаВосстанавливатьФормуПриОткрытии.Пометка = НЕ Элементы.КнопкаВосстанавливатьФормуПриОткрытии.Пометка;
	CRM_ХранилищеНастроек.Сохранить(ЭтотОбъект.ИмяФормы, "ВосстанавливатьФормуПриОткрытии", Элементы.КнопкаВосстанавливатьФормуПриОткрытии.Пометка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(СтрокаПоиска) И ВведенаСлишкомКороткаяСтрокаПоиска(СтрокаПоиска) Тогда
		СтрокаПоиска = "";
		ТекущийЭлемент = Элементы.СтрокаПоиска;
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("Подключаемый_ЗаполнитьМоделиКейсов", 0.1, Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	Если Не ПустаяСтрока(Текст) И ВведенаСлишкомКороткаяСтрокаПоиска(Текст) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти      

#Область ПодключаемыеПроцедурыФункции

&НаКлиенте
Процедура Подключаемый_ЗаполнитьМоделиКейсов()
	ЗаполнитьМоделиКейсов();	
КонецПроцедуры // Подключаемый_ИнициализироватьТопологиюПомещения()

&НаКлиенте
Процедура Подключаемый_ОбработкаКомандыМоделиКейса(Команда)

	СтрокаОписания = НайтиСтрокуОписания(ЭтаФорма, Команда.Имя);
	Если СтрокаОписания = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	МодельКейса = СтрокаОписания.Ссылка;
	Если МодельКейса = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("CRM_ЭтоКейс", Истина);
	ПараметрыФормы.Вставить("МодельКейса", МодельКейса);
	
	ОткрытьФорму("Справочник.Проекты.Форма.CRM_ФормаСпискаКейсы", 
		ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры // Подключаемый_ОбработкаКомандыМоделиКейса()

#КонецОбласти      

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЗакрытииНаСервере()
	CRM_РежимФормЗакладкиСервер.ПриЗакрытииНаСервере(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМоделиКейсов(Отказ = Ложь)

	Ключ = "МоделиКейсов";
	ВыполнитьОбработкуДанныхФормы(Ключ);	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	CRM_МоделиКейсов.Ссылка КАК Ссылка,
		|	CRM_МоделиКейсов.Представление,
		|	CRM_МоделиКейсов.Описание
		|ИЗ
		|	Справочник.CRM_МоделиКейсов КАК CRM_МоделиКейсов
		|ГДЕ
		|	НЕ CRM_МоделиКейсов.ПометкаУдаления
		|	И CRM_МоделиКейсов.Наименование ПОДОБНО ""%"" + &СтрокаПоиска + ""%""
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не определены модели кейсов. Введите хотя бы одно значение в справочник ""Модели кейсов""'"),,,, Отказ);
		Возврат;	
		
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Количество 			 = Выборка.Количество();
	МинимальноКоличество = Цел(Количество / 3);
	Остаток              = Количество - МинимальноКоличество * 3;
	
	КоличествоВКолонке1 = МинимальноКоличество + ?(Остаток >= 1, 1, 0);
	КоличествоВКолонке2 = МинимальноКоличество + ?(Остаток >= 2, 1, 0);
	КоличествоВКолонке3 = МинимальноКоличество;
	
	ТаблицаМоделей = РезультатЗапроса.Выгрузить();
	Для Сч = 0 по КоличествоВКолонке1 - 1 Цикл
		ДобавитьЭлементМоделиКейсов(ТаблицаМоделей[Сч], Элементы.СГруппойКолонка1, Сч, Ключ);	
		
	КонецЦикла;
	
	Для Сч = КоличествоВКолонке1 По КоличествоВКолонке1 + КоличествоВКолонке2 - 1 Цикл
		ДобавитьЭлементМоделиКейсов(ТаблицаМоделей[Сч], Элементы.СГруппойКолонка2, Сч, Ключ);	
		
	КонецЦикла;

	Для Сч = КоличествоВКолонке1 + КоличествоВКолонке2 По КоличествоВКолонке1 + КоличествоВКолонке2 + КоличествоВКолонке3 - 1 Цикл
		ДобавитьЭлементМоделиКейсов(ТаблицаМоделей[Сч], Элементы.СГруппойКолонка3, Сч, Ключ);	
		
	КонецЦикла;
	
КонецПроцедуры // ИнициализироватьМоделиКейсов()

&НаСервере
Процедура ДобавитьЭлементМоделиКейсов(СтрокаМодели, ОбластьДобавления, Сч, Ключ)

	//Команды
	Команда = СоздатьНайтиКоманду(
		"КомандаМодельКейса" + Формат(Сч, "ЧГ="),
		"Подключаемый_ОбработкаКомандыМоделиКейса",
		СтрокаМодели.Представление,
		СтрокаМодели.Описание
	);
	
	//Элементы
	Кнопка = СоздатьНайтиКнопку(
		Команда.Имя,
		Команда.Имя,
		ОбластьДобавления,
		ВидКнопкиФормы.Гиперссылка
	);	
			
	ДобавитьОписание(Команда.Имя,, Команда.Имя, СтрокаМодели.Ссылка, Ключ);

КонецПроцедуры // ДобавитьЭлементМоделиКейсов()

&НаСервере
Процедура ВыполнитьОбработкуДанныхФормы(Ключ)
	
	МассивСтрок 			  = Новый Массив;
	МассивУдаляемыхРеквизитов = Новый Массив;
	СтрокиОписания = ТаблицаОписания.НайтиСтроки(
		Новый Структура("Ключ", Ключ));
	
	Для каждого СтрокаОписания Из СтрокиОписания Цикл
		Элемент = Элементы.Найти(СтрокаОписания.ИмяЭлемента);		
		Если Элемент <> Неопределено Тогда
			Элементы.Удалить(Элемент);				
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаОписания.ПутьКДанным) Тогда
			МассивУдаляемыхРеквизитов.Добавить(СтрокаОписания.ПутьКДанным);	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаОписания.ИмяКоманды) Тогда
			Команда = Команды.Найти(СтрокаОписания.ИмяКоманды);
			Если Команда <> Неопределено Тогда
				Команды.Удалить(Команда);
			
			КонецЕсли;
		
		КонецЕсли;
		
		МассивСтрок.Добавить(СтрокаОписания);
		
	КонецЦикла;
	
	//Удалим реквизиты
	Если МассивУдаляемыхРеквизитов.Количество() > 0 Тогда
		ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);	
	КонецЕсли;
	
	СтрокиОписания = ТаблицаОписания.НайтиСтроки(
		Новый Структура("Ключ", Ключ));
	Для каждого СтрокаОписания Из СтрокиОписания Цикл
		ТаблицаОписания.Удалить(СтрокаОписания);	
	КонецЦикла;

КонецПроцедуры // ВыполнитьОбработкуДанныхФормы()

&НаСервере
Процедура ДобавитьОписание(ИмяЭлемента, 
						   ПутьКДанным = "", 
						   ИмяКоманды = "", 
						   Ссылка = Неопределено, 
						   Ключ = "")

	НоваяСтрока = ТаблицаОписания.Добавить();	
	НоваяСтрока.ИмяЭлемента = ИмяЭлемента;
	НоваяСтрока.ПутьКДанным = ПутьКДанным;
	НоваяСтрока.ИмяКоманды  = ИмяКоманды;
	НоваяСтрока.Ссылка      = Ссылка;
	НоваяСтрока.Ключ	    = Ключ;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция НайтиСтрокуОписания(Форма, ИмяЭлемента)

	Строки = Форма.ТаблицаОписания.НайтиСтроки(Новый Структура("ИмяЭлемента", ИмяЭлемента));	
	Если Строки.Количество() > 0 Тогда
		Возврат Строки[0]
	Иначе	
		Возврат Неопределено;	
	КонецЕсли;
	
КонецФункции // НайтиСтрокуОписания()

&НаСервере
Функция СоздатьНайтиКоманду(ИмяКоманды, 
							Действие,
							Заголовок = "",
							Подсказка = "",
							ОтображениеКнопки = Неопределено,
							Картинка = Неопределено)
							
	Команда = Команды.Найти(ИмяКоманды);						
	Если Команда = Неопределено Тогда
		Команда 			= Команды.Добавить(ИмяКоманды);
		Команда.Действие	= Действие;
		Команда.Заголовок	= Заголовок;
		Команда.Подсказка   = Подсказка;
		Если ОтображениеКнопки <> Неопределено Тогда
			Команда.Отображение	= ОтображениеКнопки;
		КонецЕсли;
				
		Если Картинка <> Неопределено Тогда
			Команда.Картинка = Картинка;
		КонецЕсли;
		
	КонецЕсли;			
	
	Возврат Команда;
	
КонецФункции // СоздатьНайтиКоманду()

&НаСервере
Функция СоздатьНайтиКнопку(ИмяКнопки, 
						   ИмяКоманды,
						   Родитель = Неопределено,
						   Вид = Неопределено,
						   Ширина = 0, 
						   Высота = 0);  
						   
	Кнопка = Элементы.Найти(ИмяКнопки);
	Если Кнопка = Неопределено Тогда
		Кнопка 						    = Элементы.Добавить(ИмяКнопки, Тип("КнопкаФормы"), ?(Родитель = Неопределено, ЭтаФорма, Родитель));
		Кнопка.ИмяКоманды				= ИмяКоманды;
		Кнопка.Ширина 	 				= Ширина;
		Кнопка.Высота 	  				= Высота;
		
		Кнопка.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Если Вид <> Неопределено Тогда
			Кнопка.Вид	= Вид;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Кнопка;
	
КонецФункции // СоздатьНайтиКнопку()

&НаСервере
Функция СоздатьНайтиОбычнуюГруппу(ИмяГруппы,
						   		Родитель = Неопределено,
						   		Группировка = Неопределено,
						   		Отображение = Неопределено, 
						   		РастягиватьПоГоризонтали = Истина,
						   		РастягиватьПоВертикали = Истина,
						   		ЗаголовокГруппы = "")
						   	
	Группа = Элементы.Найти(ИмяГруппы);
	Если Группа = Неопределено Тогда
		Группа   		   		  		= Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), ?(Родитель = Неопределено, ЭтаФорма, Родитель));	
		Группа.Вид		   		  		= ВидГруппыФормы.ОбычнаяГруппа;	
		Группа.Группировка 		  		= ?(Группировка = Неопределено, ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, Группировка);
		Группа.Отображение 		   		= ?(Отображение = Неопределено, ОтображениеОбычнойГруппы.Нет, Отображение);
		//Группа.РастягиватьПоГоризонтали = РастягиватьПоГоризонтали;
		//Группа.РастягиватьПоВертикали   = РастягиватьПоВертикали;   
		Группа.ОтображатьЗаголовок 		= ЗначениеЗаполнено(ЗаголовокГруппы);	
		Группа.Заголовок 				= ЗаголовокГруппы;
					
	КонецЕсли;
	
	Возврат Группа;	
	
КонецФункции // СоздатьНайтиГруппу()

&НаКлиенте
Функция ВведенаСлишкомКороткаяСтрокаПоиска(Текст)
	Текст = СокрЛП(Текст);
	Если СтрДлина(Текст) < 2 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Введена слишком короткая строка поиска.'"));
		Возврат Истина;
	КонецЕсли;
	
	ЕстьНормальноеСлово = Ложь;
	МассивСлов = ВариантыОтчетовКлиентСервер.РазложитьСтрокуПоискаВМассивСлов(Текст);
	Для Каждого Слово Из МассивСлов Цикл
		Если СтрДлина(Слово) >= 2 Тогда
			ЕстьНормальноеСлово = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если Не ЕстьНормальноеСлово Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Введены слишком короткие слова для поиска.'"));
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

#КонецОбласти      
