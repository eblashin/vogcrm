
// ++ VOG Солодов В.В. 27.08.2019 task 578

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	//МассивИсточниковКоманд = Новый Массив;
	//МассивИсточниковКоманд.Добавить(Объект.Ссылка.Метаданные());
	//
	//ПараметрыРазмещения = Новый Структура;
	//ПараметрыРазмещения.Вставить("Источники", 		МассивИсточниковКоманд);
	//ПараметрыРазмещения.Вставить("КоманднаяПанель", Элементы.ФормаГруппаПечать);
	//ПараметрыРазмещения.Вставить("ПрефиксГрупп", 	"");
	//
	//ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыРазмещения);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаКоманднойПанели", 	"КоманднаяПанельФормы");
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", 	"СтраницаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ОтложеннаяИнициализация", 	Истина);
	
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры); 
	// Конец СтандартныеПодсистемы.Свойства
	
	// Подключаемые дополнительные команды
	вогУправлениеИнтерфейсомСервер.ПодключитьДополнительныеКоманды(ЭтотОбъект, Элементы.ФормаГруппаДействия);
	// Подключаемые дополнительные команды
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Владелец", "ТолькоПросмотр", Истина);
	КонецЕсли;
	
	//++ VOG Ульянов И.В. 10.03.2020 CRM-390
	Если Объект.ДоступноРедактированиеОтгрузкаПоСкануДоговораДо = Истина ИЛИ РольДоступна("ПолныеПрава") тогда
		Элементы.ОтгрузкаПоСкануДоговораДо.Видимость = Ложь;
		Элементы.ОтгрузкаПоСкануДоговора.Видимость = Истина;
		Элементы.ОтгрузкаПоСкануДоговора.Доступность = Истина;
		Элементы.ОтгрузкаПоСкануДоговора.ТолькоПросмотр = Ложь;
		ЭтаФорма.ОтгрузкаПоСкануДоговора = Объект.ОтгрузкаПоСкануДоговораДо;
	Иначе	
		Элементы.ОтгрузкаПоСкануДоговораДо.ТолькоПросмотр = Истина;
		Элементы.ОтгрузкаПоСкануДоговораДо.Видимость = Истина;
		Элементы.ОтгрузкаПоСкануДоговора.Видимость = Ложь;
	КонецЕсли;	
	//-- VOG Ульянов И.В. 10.03.2020 CRM-390
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
		
	// Вывод информации Общая
	РегистрыСведений.вогНастройкиОтображенияКлассификаторов.СформироватьМакет(
		Объект.Ссылка,
		ИнформацияОбъект,
		Метаданные.Справочники.вогКоммерческиеСоглашения,
		ЭтотОбъект,
		"КарточкаОбъекта");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//++ VOG Ульянов И.В. 06.03.2020 CRM-390
	//Если (ЭтаФорма.ОтгрузкаПоСкануДоговора > Объект.ДатаОкончанияДействия) И (Объект.ДатаОкончанияДействия <> '00010101') И (ЭтаФорма.ОтгрузкаПоСкануДоговора <> '00010101') тогда
	//	Отказ = Истина;
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата отгрузки по скану договора не может быть больше даты окончания действия КС.  " + Формат(Объект.ДатаОкончанияДействия,"ДФ=dd.MM.yyyy"));
	//КонецЕсли;
	//
	//Если (ЭтаФорма.ОтгрузкаПоСкануДоговора < Объект.ДатаНачалаДействия) И (Объект.ДатаОкончанияДействия <> '00010101') И (ЭтаФорма.ОтгрузкаПоСкануДоговора <> '00010101') тогда
	//	Отказ = Истина;
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата отгрузки по скану договора не может быть больше даты начала действия КС.  " + Формат(Объект.ДатаНачалаДействия,"ДФ=dd.MM.yyyy"));
	//КонецЕсли;	
	//
	//Если ЭтаФорма.ОтгрузкаПоСкануДоговора > Объект.ДатаПроверкиСканов ИЛИ (ЭтаФорма.ОтгрузкаПоСкануДоговора = '00010101') тогда
	//Иначе	
	//	Отказ = Истина;
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата отгрузки по скану договора не может быть меньше даты проверки сканов.  " + Формат(Объект.ДатаПроверкиСканов,"ДФ=dd.MM.yyyy"));
	//КонецЕсли;	    
	//
	//Если ДобавитьМесяц(Объект.ДатаПроверкиСканов,2) <= ЭтаФорма.ОтгрузкаПоСкануДоговора И (ЭтаФорма.ОтгрузкаПоСкануДоговора <> '00010101') тогда
	//	Отказ = Истина;
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Максимальный срок отгрузки без оригинала договора не может превышать 2-х календарных месяцев , с момента согласования скана договора " + Формат(Объект.ДатаПроверкиСканов,"ДФ=dd.MM.yyyy"));
	//КонецЕсли;	    
	
	//-- VOG Ульянов И.В. 06.03.2020 CRM-390	
	
	//++ VOG Иванов С.А. 25.10.2019 ID заявки: 000000776
	//Если Объект.СпособДоставкиТовара = ПредопределенноеЗначение("Перечисление.вогСпособыДоставкиТовара.ДоставкаТовараПоставщиком")
	//	И Объект.МинСтоимостьПартииТовараДляДоставки = 0 Тогда
	//	
	//	ТекстСообщения = НСтр("ru = 'Не заполнено поле ""Мин. стоимость партии товара для доставки.""'");
	//	
	//	Поле = "МинСтоимостьПартииТовараДляДоставки";
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Поле, "АвтоОтметкаНезаполненного", Истина);
	//	
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Объект." + Поле, "Объект", Отказ);
	//	
	//КонецЕсли;
	//
	//Если Объект.СпособДоставкиТовара = ПредопределенноеЗначение("Перечисление.вогСпособыДоставкиТовара.ДоставкаТовараПоставщиком")
	//	И Объект.МинСтоимостьПартииТовараДляОтказаДоставки = 0 Тогда
	//	
	//	ТекстСообщения = НСтр("ru = 'Не заполнено поле ""Мин. стоимость партии товара для отказа в доставке.""'");
	//	
	//	Поле = "МинСтоимостьПартииТовараДляОтказаДоставки";
	//	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, Поле, "АвтоОтметкаНезаполненного", Истина);
	//	
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Объект." + Поле, "Объект", Отказ);
	//	
	//КонецЕсли;
	//-- VOG Иванов С.А. 25.10.2019 ID заявки: 000000776
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект); 
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСтраницыКарточкаОбъекта

&НаКлиенте
Процедура СтатусСогласованияНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	вогОбщегоНазначенияКлиент.ОбработкаНажатияСтатусаСогласования(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСтраницыРеквизитыОбъекта

&НаКлиенте
Процедура КонтактноеЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыДанныхВыбора = Новый Структура;
	ПараметрыДанныхВыбора.Вставить("ДоговорКонтрагента", 	Объект.Ссылка);
	ПараметрыДанныхВыбора.Вставить("ОбъектСвязи", 			Объект.ЮридическоеЛицо);
	ПараметрыДанныхВыбора.Вставить("Партнер", 				Объект.Владелец);
	
	СписокВыбора = ПолучитьДанныеВыбора(ТипЗнч(Объект.вогПодписантПартнера), ПараметрыДанныхВыбора);
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Ссылка", СписокВыбора.ВыгрузитьЗначения());
	
	ПараметрыФормыВыбора = Новый Структура;
	ПараметрыФормыВыбора.Вставить("Отбор", СтруктураОтбора);
	ПараметрыФормыВыбора.Вставить("МножественныйВыбор", Ложь);
	
	ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("КонтактноеЛицоНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		"Справочник.КонтактныеЛицаПартнеров.Форма.CRM_ФормаВыбора",
		ПараметрыФормыВыбора,
		ЭтотОбъект,
		ЭтотОбъект,
		,
		,
		ОписаниеОповещенияОЗавершении,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактноеЛицоНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Неопределено Тогда
		Объект.вогПодписантПартнера = Результат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область СтандартныеПодсистемыПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область СтандартныеПодсистемыСвойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда,
												НавигационнаяСсылка = Неопределено,
												СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ПодключемыеДополнительныеКоманды

&НаКлиенте
Процедура Подключаемый_ОбработчикДополнительнойКоманды(Команда) Экспорт 
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтаФорма, "скДанныеЗапуска")
		И ЭтаФорма.скДанныеЗапуска.НайтиСтроки(Новый Структура("ИмяКоманды", Команда.Имя)).Количество() > 0 Тогда
	
		скМеханизмЗапускаБизнесПроцессовОбъектовКлиент.ОбработкаКомандыЗапускаБизнесПроцесса(ЭтаФорма, Команда, Объект.Ссылка);	
	Иначе
		вогУправлениеИнтерфейсомКлиент.ОбработчикКомандыФормы(Команда, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОписаниеОповещенияДополнительнойКоманды(Значение, ДополнительноеЗначение) Экспорт 
	
	вогУправлениеИнтерфейсомКлиент.ВыполнитьКодКомандыНаКлиенте(Значение, ДополнительноеЗначение, ЭтаФорма, ЭтотОбъект, Объект);
	
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ОписаниеОповещенияДополнительнойКомандыСервер(Значение, ДополнительноеЗначение) Экспорт 
	
	вогУправлениеИнтерфейсомСервер.ВыполнитьКодКомандыНаСервере(Значение, ДополнительноеЗначение, ЭтотОбъект, ЭтаФорма, Объект);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ПереходСтраницы(Команда)
	
	ВыполнитьПереходСтраницы(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейтиКоманда(Команда)
	
	ИмяКоманды = Команда.Имя;
	
	Для Каждого ЭлемКоманды Из Элементы.ГруппаКоманднаяПанельНавигация.ПодчиненныеЭлементы Цикл
		Если ИмяКоманды = ЭлемКоманды.ИмяКоманды Тогда
			ЭлемКоманды.ЦветТекста 		= Новый Цвет(128, 0, 128);
			ЭлемКоманды.Шрифт 			= Новый Шрифт(, 10, Ложь,, Истина);
		Иначе
			ЭлемКоманды.ЦветТекста	 	= Новый Цвет(28, 85, 174);
			ЭлемКоманды.Шрифт		 	= Новый Шрифт(, 10, Ложь,, Ложь);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыПереходаПоГиперссылке = ПараметрыПереходаПоГиперссылке(Команда.Имя);
	ГиперссылкаПерейтиСформироватьПараметрыИВопрос(ПараметрыПереходаПоГиперссылке);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьИнтервал(Команда)
	
	ПараметрыПериода = Новый Структура;
	ПараметрыПериода.Вставить("ДатаНачала", 	"ДатаНачалаДействия");
	ПараметрыПериода.Вставить("ДатаОкончания", 	"ДатаОкончанияДействия");
	
	вогОбщегоНазначенияКлиент.РедактироватьПериод(Объект, ПараметрыПериода);
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СтандартныеПодсистемыСвойства

&НаСервере 
Процедура СвойстваВыполнитьОтложеннуюИнициализацию()
	
	УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область НавигацияФормы

&НаКлиенте
Процедура ВыполнитьПереходСтраницы(ИмяКоманды)
	
	Попытка
		// Выделить кнопку перехода
		Для Каждого ЭлемКоманды Из Элементы.ГруппаКоманднаяПанельНавигация.ПодчиненныеЭлементы Цикл
			
			Если ИмяКоманды = ЭлемКоманды.ИмяКоманды Тогда
				ЭлемКоманды.ЦветТекста 	= Новый Цвет(128, 0, 128);
				ЭлемКоманды.Шрифт 		= Новый Шрифт(, 10, Ложь,, Истина);
			Иначе
				ЭлемКоманды.ЦветТекста 	= Новый Цвет(28, 85, 174);
				ЭлемКоманды.Шрифт 		= Новый Шрифт(, 10, Ложь,, Ложь);
			КонецЕсли;
			
		КонецЦикла;
		
		// Переход страницы
		Элементы.СтраницыКарточкаОбъекта.ТекущаяСтраница = Элементы[ИмяКоманды];
		
		// СтандартныеПодсистемы.Свойства
		Если Элементы[ИмяКоманды] = Элементы.СтраницаДополнительныеРеквизиты
			И Не ЭтотОбъект.ПараметрыСвойств.ВыполненаОтложеннаяИнициализация Тогда
			
			СвойстваВыполнитьОтложеннуюИнициализацию();
			
		КонецЕсли;
		// Конец СтандартныеПодсистемы.Свойства
		
	Исключение
		
		ШаблонСообщения 	= НСтр("ru = 'Не удалось перейти на страницу %1'");
		ТекстСообщения 		= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ИмяКоманды);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыПереходаПоГиперссылке(ИмяЭлемента)
	
	Если ИмяЭлемента = "ГиперссылкаПерейтиФайлы"
		Или ИмяЭлемента = "ГиперссылкаПерейтиИзображения" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВладелецФайла", 	Объект.Ссылка);
		ПараметрыФормы.Вставить("ТолькоПросмотр", 	ЭтотОбъект.ТолькоПросмотр);
		
		Если вогУправлениеПрисоединеннымиФайламиКлиентСерверПовтИсп.ИспользоватьРедактированиеПрисоединенныхФайловПоВидам(Объект.Ссылка) Тогда
			ФормаИмя = "ОбщаяФорма.вогФормаУправленияПрисоединеннымиФайлами";
			ПараметрыФормы.Вставить("ЗаголовокФормы", НСтр("ru = 'Присоединенные файлы'"));
		Иначе	
			ФормаИмя = "Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы";
		КонецЕсли;
		
		Если ИмяЭлемента = "ГиперссылкаПерейтиИзображения" Тогда
			ТипыФайлов = Новый Массив;
			ТипыФайлов.Добавить(ПредопределенноеЗначение("Перечисление.вогТипыПрисоединенныхФайлов.Изображение"));
			ПараметрыФормы.Вставить("ТипыФайлов", ТипыФайлов);
		КонецЕсли;
		
		ПараметрыПереходаПоГиперссылке = Новый Структура;
		ПараметрыПереходаПоГиперссылке.Вставить("ИмяФормы", 		ФормаИмя);
		ПараметрыПереходаПоГиперссылке.Вставить("ПараметрыФормы", 	ПараметрыФормы);
		
	КонецЕсли;
	
	Если Не ПараметрыПереходаПоГиперссылке.Свойство("РежимОткрытияОкнаФормы") Тогда
		ПараметрыПереходаПоГиперссылке.Вставить("РежимОткрытияОкнаФормы", РежимОткрытияОкнаФормы.Независимый);
	КонецЕсли;
	
	ПараметрыПереходаПоГиперссылке.Вставить("ИмяЭлемента", ИмяЭлемента);
	
	Возврат ПараметрыПереходаПоГиперссылке;
	
КонецФункции

&НаКлиенте
Процедура ГиперссылкаПерейтиСформироватьПараметрыИВопрос(ПараметрыПереходаПоГиперссылке)
	
	ОчиститьСообщения();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = Нстр("ru = 'Данные еще не записаны.
		|Переход к дополнительной информции возможен только после записи элемента.
		|Записать элемент?'");
		
		ОповещениеЗавершение = Новый ОписаниеОповещения(
			"ГиперссылкаПерейтиВопросЗавершение",
			ЭтотОбъект,
			ПараметрыПереходаПоГиперссылке);
		
		ПоказатьВопрос(ОповещениеЗавершение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		Возврат;
		
	КонецЕсли;
	
	ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке)
	
	ОткрытьФорму(
		ПараметрыПереходаПоГиперссылке.ИмяФормы,
		ПараметрыПереходаПоГиперссылке.ПараметрыФормы,
		,
		ЭтаФорма.УникальныйИдентификатор,
		,
		,
		,
		ПараметрыПереходаПоГиперссылке.РежимОткрытияОкнаФормы);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ГиперссылкаПерейтиВопросЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ЭлементЗаписан = Записать();
	Исключение
		Возврат;
	КонецПопытки;
	
	Если Не ЭлементЗаписан Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПереходаПоГиперссылке = ПараметрыПереходаПоГиперссылке(ДополнительныеПараметры.ИмяЭлемента);
	ГиперссылкаПерейти(ПараметрыПереходаПоГиперссылке);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтгрузкаПоСкануДоговораПриИзменении(Элемент) //++ VOG Ульянов И.В. 13.03.2020 CRM-389
	
	ЗаписатьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере() //++ VOG Ульянов И.В. 13.03.2020 CRM-389
	
	Отказ = Ложь;
	
	//Если (ЭтаФорма.ОтгрузкаПоСкануДоговора > Объект.ДатаОкончанияДействия) И (Объект.ДатаОкончанияДействия <> '00010101') И (ЭтаФорма.ОтгрузкаПоСкануДоговора <> '00010101') тогда
	//	Отказ = Истина;
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата отгрузки по скану договора не может быть больше даты окончания действия КС.  " + Формат(Объект.ДатаОкончанияДействия,"ДФ=dd.MM.yyyy"));
	//КонецЕсли;
	//
	//Если (ЭтаФорма.ОтгрузкаПоСкануДоговора < Объект.ДатаНачалаДействия) И (Объект.ДатаОкончанияДействия <> '00010101') И (ЭтаФорма.ОтгрузкаПоСкануДоговора <> '00010101') тогда
	//	Отказ = Истина;
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата отгрузки по скану договора не может быть больше даты начала действия КС.  " + Формат(Объект.ДатаНачалаДействия,"ДФ=dd.MM.yyyy"));
	//КонецЕсли;	
	//
	//Если ЭтаФорма.ОтгрузкаПоСкануДоговора > Объект.ДатаПроверкиСканов ИЛИ (ЭтаФорма.ОтгрузкаПоСкануДоговора = '00010101') тогда
	//Иначе	
	//	Отказ = Истина;
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Дата отгрузки по скану договора не может быть меньше даты проверки сканов.  " + Формат(Объект.ДатаПроверкиСканов,"ДФ=dd.MM.yyyy"));
	//КонецЕсли;	    
	//
	//Если ДобавитьМесяц(Объект.ДатаПроверкиСканов,2) <= ЭтаФорма.ОтгрузкаПоСкануДоговора И (ЭтаФорма.ОтгрузкаПоСкануДоговора <> '00010101') тогда
	//	Отказ = Истина;
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Максимальный срок отгрузки без оригинала договора не может превышать 2-х календарных месяцев , с момента согласования скана договора " + Формат(Объект.ДатаПроверкиСканов,"ДФ=dd.MM.yyyy"));
	//КонецЕсли;	
	
	Если Отказ = Истина тогда
		ЭтаФорма.ОтгрузкаПоСкануДоговора = '00010101';
	Иначе
		Объект.ОтгрузкаПоСкануДоговораДо = ЭтаФорма.ОтгрузкаПоСкануДоговора;
		УстановитьПривилегированныйРежим(Истина);
		Записать();
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;	
	
КонецПроцедуры	

#КонецОбласти

#КонецОбласти

// -- VOG Солодов В.В. 27.08.2019