////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ПОДСИСТЕМЫ СВОЙСТВ

#Область ПроцедурыПодсистемыСвойств

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры

&НаСервере
// Служебная процедура механизма свойств.
//
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект, РеквизитФормыВЗначение("Объект"));
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры // ОбновитьЭлементыДополнительныхРеквизитов()

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьПартнера(КонтактноеЛицо)

	Возврат КонтактноеЛицо.Владелец;

КонецФункции

&НаКлиенте
// Создать взаимодействие по выбранному контакту.
Процедура СоздатьВзаимодействие(ИмяФормы)
	
	Основание = Новый Структура();
	Основание.Вставить("Предмет", Объект.Ссылка);
	Основание.Вставить("Контакт",
						?(ЗначениеЗаполнено(Элементы.ПартнерыИКонтактныеЛица.ТекущиеДанные.КонтактноеЛицо),
						Элементы.ПартнерыИКонтактныеЛица.ТекущиеДанные.КонтактноеЛицо,
						Элементы.ПартнерыИКонтактныеЛица.ТекущиеДанные.Партнер));
	ОткрытьФорму(ИмяФормы, Новый Структура("Основание", Основание),,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВалютыДокумента()
	
	Элементы.Валюта.Подсказка = НСтр("ru = 'Курс: '") + Формат(Объект.CRM_Курс,"ЧДЦ=4; ЧН=0,0000") + НСтр("ru = ', крат.: '") + Объект.CRM_Кратность;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКурсИКратностьВалюты(Валюта, ДатаКурса)
	
	Возврат РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ДатаКурса,Новый Структура("Валюта", Валюта));
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьВидимостьИДоступностьФормы(Форма)
		
	Форма.Элементы.ФормаОбщаяКомандаCRM_СоздатьЛичнуюЗадачу.Доступность = НЕ ЗначениеЗаполнено(Форма._ЛичнаяЗадача);
	Форма.Элементы.ДатаАктуальности.Видимость = ?(ЗначениеЗаполнено(Форма.Объект.CRM_ПериодАктуальности),Истина,Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГруппуГиперссылок()
	
	ТекстКоманда = Команды.Найти("_ВыполнитьЗадачу");
	Если ТекстКоманда = Неопределено Тогда
		НоваяКомандаФормы = Команды.Добавить("_ВыполнитьЗадачу");
		НоваяКомандаФормы.Заголовок					= "Выполнить";
		НоваяКомандаФормы.Подсказка					= "Отметить задачу как выполненную";
		НоваяКомандаФормы.Действие					= "Подключаемый_ВыполнитьЗадачу";
		//НоваяКомандаФормы.ИзменяетСохраняемыеДанные	= Истина;
	КонецЕсли;
	
	МассивДобавляемыхРеквизитов = Новый Массив();
	
	Попытка
		ЭтотОбъект["_ЛичнаяЗадача"] = Задачи.ЗадачаИсполнителя.ПустаяСсылка();
		ЭтотОбъект["_ЛичнаяЗадачаСтрокой"] = "";
	Исключение
		ОписаниеТиповЗадача = Новый ОписаниеТипов("ЗадачаСсылка.ЗадачаИсполнителя");
		НовыйРеквизит = Новый РеквизитФормы("_ЛичнаяЗадача", ОписаниеТиповЗадача);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
		
		ОписаниеТиповЗадача = Новый ОписаниеТипов("Строка");
		НовыйРеквизит = Новый РеквизитФормы("_ЛичнаяЗадачаСтрокой", ОписаниеТиповЗадача);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
	КонецПопытки;
	
	Попытка
		ЭтотОбъект["_БизнесПроцесс"] = БизнесПроцессы.CRM_БизнесПроцесс.ПустаяСсылка();
		ЭтотОбъект["_БизнесПроцессСтрокой"] = "";
	Исключение
		ОписаниеТиповЗадача = Новый ОписаниеТипов("БизнесПроцессСсылка.CRM_БизнесПроцесс");
		НовыйРеквизит = Новый РеквизитФормы("_БизнесПроцесс", ОписаниеТиповЗадача);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
		
		ОписаниеТиповЗадача = Новый ОписаниеТипов("Строка");
		НовыйРеквизит = Новый РеквизитФормы("_БизнесПроцессСтрокой", ОписаниеТиповЗадача);
		МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
	КонецПопытки;
	
	Если МассивДобавляемыхРеквизитов.Количество() > 0 Тогда
		ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗадачаИсполнителя.Ссылка КАК Ссылка,
	|	0 КАК ВидСсылки
	|ПОМЕСТИТЬ ЛичныеЗадачи
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ
	|	(НЕ ЗадачаИсполнителя.ПометкаУдаления)
	|	И ЗадачаИсполнителя.CRM_Личная
	|	И (НЕ ЗадачаИсполнителя.Выполнена)
	|	И ЗадачаИсполнителя.Предмет = &Предмет
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////";
	Если ЗначениеЗаполнено(Объект.CRM_Проект) И ЗначениеЗаполнено(Объект.CRM_Проект.CRM_КартаМаршрута) Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	CRM_БизнесПроцесс.Ссылка КАК Ссылка,
		|	1 КАК ВидСсылки
		|ПОМЕСТИТЬ БизнесПроцессы
		|ИЗ
		|	БизнесПроцесс.CRM_БизнесПроцесс КАК CRM_БизнесПроцесс
		|ГДЕ
		|	(НЕ CRM_БизнесПроцесс.ПометкаУдаления)
		|	И CRM_БизнесПроцесс.КартаМаршрута = &КартаМаршрута
		|	И CRM_БизнесПроцесс.Предмет = &Предмет
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	ЛичныеЗадачи.Ссылка,
	|	ЛичныеЗадачи.ВидСсылки
	|ИЗ
	|	ЛичныеЗадачи КАК ЛичныеЗадачи";
	Если ЗначениеЗаполнено(Объект.CRM_Проект) И ЗначениеЗаполнено(Объект.CRM_Проект.CRM_КартаМаршрута) Тогда
	ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БизнесПроцессы.Ссылка,
		|	БизнесПроцессы.ВидСсылки
		|ИЗ
		|	БизнесПроцессы КАК БизнесПроцессы";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Предмет",Объект.Ссылка);
	Если ЗначениеЗаполнено(Объект.CRM_Проект) И ЗначениеЗаполнено(Объект.CRM_Проект.CRM_КартаМаршрута) Тогда
		Запрос.УстановитьПараметр("КартаМаршрута", Объект.CRM_Проект.CRM_КартаМаршрута);
	КонецЕсли;
	
	ТаблицаОбъектов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаб Из ТаблицаОбъектов Цикл
		Если СтрокаТаб.ВидСсылки = 0 Тогда
			ЭтотОбъект._ЛичнаяЗадача			= СтрокаТаб.Ссылка;
			ЭтотОбъект._ЛичнаяЗадачаСтрокой	= Строка(СтрокаТаб.Ссылка);
		КонецЕсли;
		
		Если СтрокаТаб.ВидСсылки = 1 Тогда
			ЭтотОбъект._БизнесПроцесс			= СтрокаТаб.Ссылка;
			ЭтотОбъект._БизнесПроцессСтрокой	= CRM_БизнесПроцессыСервер.СформироватьПредставлениеБизнесПроцесса(СтрокаТаб.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	// Отрисуем гиперссылки
	// Гирепссылка на бизнес-процесс.
	Если НЕ Элементы.Найти("_БизнесПроцессСтрокой") = Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект._БизнесПроцесс) Тогда
			Элементы.Удалить(Элементы["_БизнесПроцессЗаголовок"]);
			Элементы.Удалить(Элементы["_БизнесПроцессСтрокой"]);
		Иначе
			Элементы["_БизнесПроцессСтрокой"].Заголовок	= СокрЛП(ЭтотОбъект._БизнесПроцессСтрокой);
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(ЭтотОбъект._БизнесПроцесс) Тогда
			
			НовыйЭлемент = Элементы.Добавить("_БизнесПроцессЗаголовок", Тип("ДекорацияФормы"), Элементы.ГиперссылкаЗаголовок);
			НовыйЭлемент.Вид		= ВидДекорацииФормы.Надпись;
			НовыйЭлемент.Заголовок	= "Бизнес-процесс: ";
			
			НовыйЭлемент = Элементы.Добавить("_БизнесПроцессСтрокой", Тип("ДекорацияФормы"), Элементы.ГиперссылкаЗначение);
			НовыйЭлемент.Заголовок	= СокрЛП(ЭтотОбъект._БизнесПроцессСтрокой);
			НовыйЭлемент.Вид		= ВидДекорацииФормы.Надпись;
			НовыйЭлемент.Гиперссылка= Истина;
			НовыйЭлемент.УстановитьДействие("Нажатие",	"Подключаемый_ГиперссылкаНажатие");
			
		КонецЕсли;
	КонецЕсли;
	
	// Гирепссылка на Задачу
	Если НЕ Элементы.Найти("_ЛичнаяЗадачаСтрокой") = Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект._ЛичнаяЗадача) Тогда
			Элементы.Удалить(Элементы["_ЛичнаяЗадачаЗаголовок"]);
			Элементы.Удалить(Элементы["_ЛичнаяЗадачаСтрокой"]);
			Элементы.Удалить(Элементы["Кнопка_ВыполнитьЗадачу"]);
		КонецЕсли;
	Иначе
		
		Если ЗначениеЗаполнено(ЭтотОбъект._ЛичнаяЗадача) Тогда
			
			ЭлементПеред = Элементы.Найти("_БизнесПроцессЗаголовок");
			Если НЕ ЭлементПеред = Неопределено Тогда
				НовыйЭлемент = Элементы.Вставить("_ЛичнаяЗадачаЗаголовок", Тип("ДекорацияФормы"), Элементы.ГиперссылкаЗаголовок, ЭлементПеред);
			Иначе
				НовыйЭлемент = Элементы.Добавить("_ЛичнаяЗадачаЗаголовок", Тип("ДекорацияФормы"), Элементы.ГиперссылкаЗаголовок);
			КонецЕсли;
			НовыйЭлемент.Вид		= ВидДекорацииФормы.Надпись;
			НовыйЭлемент.Заголовок	= "Задача: ";
			
			НовыйЭлемент = Элементы.Добавить("_ЛичнаяЗадачаСтрокой", Тип("ДекорацияФормы"), Элементы.ЗначениеГиперСсылкиЗадача);
			НовыйЭлемент.Заголовок	= СокрЛП(ЭтотОбъект._ЛичнаяЗадача);
			НовыйЭлемент.Вид		= ВидДекорацииФормы.Надпись;
			НовыйЭлемент.Гиперссылка= Истина;
			НовыйЭлемент.УстановитьДействие("Нажатие",	"Подключаемый_ГиперссылкаНажатие");
			
			НовыйЭлемент = Элементы.Добавить("Кнопка_ВыполнитьЗадачу",Тип("КнопкаФормы"), Элементы.ЗначениеГиперСсылкиЗадача);
			НовыйЭлемент.ИмяКоманды			= "_ВыполнитьЗадачу";
			НовыйЭлемент.Заголовок			= "Выполнить";
			НовыйЭлемент.Картинка			= БиблиотекаКартинок.ВыполнитьЗадачу;
			НовыйЭлемент.Отображение		= ОтображениеКнопки.КартинкаИТекст;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьДубликатБизнесПроцесса(Предмет)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	CRM_БизнесПроцесс.Ссылка КАК Ссылка
	|ИЗ
	|	БизнесПроцесс.CRM_БизнесПроцесс КАК CRM_БизнесПроцесс
	|ГДЕ
	|	НЕ CRM_БизнесПроцесс.ПометкаУдаления
	|	И НЕ CRM_БизнесПроцесс.Завершен
	|	И CRM_БизнесПроцесс.Предмет = &Предмет");
	Запрос.УстановитьПараметр("Предмет", Предмет);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

&НаСервере
Процедура ДобавитьУдалитьКомандуСозданияБизнесПроцесса()
	
	Если ИспользоватьБизнесПроцессы И ЗначениеЗаполнено(Объект.CRM_Проект) И ЗначениеЗаполнено(Объект.CRM_Проект.CRM_КартаМаршрута) Тогда
		CRM_БизнесПроцессыСервер.ДобавитьУдалитьКомандуСозданияБизнесПроцессаНаКоманднуюПанель(ЭтотОбъект, Элементы.ГруппаКнопокСоздать, Объект.CRM_Проект.CRM_КартаМаршрута, Ложь);
	Иначе
		CRM_БизнесПроцессыСервер.ДобавитьУдалитьКомандуСозданияБизнесПроцессаНаКоманднуюПанель(ЭтотОбъект,,, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПериодДатыАктуальности()
	
	Если ЗначениеЗаполнено(Объект.CRM_ПериодАктуальности) Тогда
		Объект.CRM_ДатаАктуальности = Объект.ДатаНачала + (Объект.CRM_ПериодАктуальности*86400);
	Иначе
		Объект.CRM_ДатаАктуальности = Объект.ДатаОкончания;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтображениеДатыАктуальности()
	
	Если ЗначениеЗаполнено(Объект.CRM_ДатаАктуальности) И (Объект.CRM_ДатаАктуальности>Объект.ДатаОкончания) Тогда
	
		пЗаголовок = НСтр("ru = 'дней '") + НСтр("ru = '( до '") + Формат(Объект.CRM_ДатаАктуальности,"ДЛФ=DD")+")";
		Элементы.ДатаАктуальности.Заголовок = пЗаголовок;
		Элементы.ДатаАктуальности.Видимость = Истина;
		
	Иначе
		
		Элементы.ДатаАктуальности.Видимость = Истина;
		Элементы.ДатаАктуальности.Заголовок = НСтр("ru = 'дней '");
		
	КонецЕсли; 
	
КонецПроцедуры
 
&НаСервере
Функция ВернутьЗаголовокКоманды(ИмяКоманды)
	
	Возврат Команды[ИмяКоманды].Заголовок;
	
КонецФункции

&НаКлиенте
Процедура ПодборУчастников()
	МассивУчастников = Новый Массив();
	Для Каждого СтрокаТаблицы Из Объект.CRM_СвоиУчастники Цикл
		Если	ЗначениеЗаполнено(СтрокаТаблицы.Участник)
			И	ТипЗнч(СтрокаТаблицы.Участник) = Тип("СправочникСсылка.Пользователи")
			И	ЗначениеЗаполнено(СтрокаТаблицы.ДатаНачала)
			И	ЗначениеЗаполнено(СтрокаТаблицы.ДатаОкончания) Тогда
			//
			МассивУчастников.Добавить(Новый Структура("Пользователь,НачалоПериода,ОкончаниеПериода", СтрокаТаблицы.Участник, СтрокаТаблицы.ДатаНачала, СтрокаТаблицы.ДатаОкончания));
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыСтруктура = Новый Структура();
	ПараметрыСтруктура.Вставить("Пользователи",		МассивУчастников);
	ПараметрыСтруктура.Вставить("ПериодНачало",		Объект.ДатаНачала);
	ПараметрыСтруктура.Вставить("ПериодОкончание",	Объект.ДатаОкончания);
	ПараметрыСтруктура.Вставить("ВыбиратьПериоды");
	ПараметрыСтруктура.Вставить("ПоказыватьТаблицуПериодов");
	ПараметрыСтруктура.Вставить("ИнтервалШкалыВремени", 60);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодборУчастниковЗавершение", ЭтотОбъект, МассивУчастников);
	ОткрытьФорму("ОбщаяФорма.CRM_ПодборПользователейПоКалендарю", ПараметрыСтруктура, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура ПодборУчастниковЗавершение(РезультатОткрытия, МассивУчастников) Экспорт
	Если ТипЗнч(РезультатОткрытия) = Тип("Массив") Тогда
		МинимальнаяВыбраннаяДата = Неопределено;
		МаксимальнаяВыбраннаяДата = Неопределено;
		МассивВыбранныеПользователи = Новый Массив();
		Для Каждого ДобавляемыйПользователь Из РезультатОткрытия Цикл
			МассивВыбранныеПользователи.Добавить(ДобавляемыйПользователь.Пользователь);
			
			СтруктураПоиска = Новый Структура("Участник,ДатаНачала,ДатаОкончания", ДобавляемыйПользователь.Пользователь, ДобавляемыйПользователь.НачалоПериода, ДобавляемыйПользователь.ОкончаниеПериода);
			Если Объект.CRM_СвоиУчастники.НайтиСтроки(СтруктураПоиска).Количество() = 0 Тогда
				НоваяСтрока = Объект.CRM_СвоиУчастники.Добавить();
				НоваяСтрока.Участник		= ДобавляемыйПользователь.Пользователь;
				НоваяСтрока.ДатаНачала		= ДобавляемыйПользователь.НачалоПериода;
				НоваяСтрока.ДатаОкончания	= ДобавляемыйПользователь.ОкончаниеПериода;
			КонецЕсли;
			Если МинимальнаяВыбраннаяДата = Неопределено Или МинимальнаяВыбраннаяДата > ДобавляемыйПользователь.НачалоПериода Тогда
				МинимальнаяВыбраннаяДата = ДобавляемыйПользователь.НачалоПериода;
			КонецЕсли;
			Если МаксимальнаяВыбраннаяДата = Неопределено Или МаксимальнаяВыбраннаяДата < ДобавляемыйПользователь.ОкончаниеПериода Тогда
				МаксимальнаяВыбраннаяДата = ДобавляемыйПользователь.ОкончаниеПериода;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого УдаляемыйПользователь Из МассивУчастников Цикл
			Если МассивВыбранныеПользователи.Найти(УдаляемыйПользователь.Пользователь) = Неопределено Тогда
				НайденныеСтроки = Объект.CRM_СвоиУчастники.НайтиСтроки(Новый Структура("Участник", УдаляемыйПользователь.Пользователь));
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					Объект.CRM_СвоиУчастники.Удалить(НайденнаяСтрока);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(МинимальнаяВыбраннаяДата) И ЗначениеЗаполнено(МаксимальнаяВыбраннаяДата) Тогда
			Объект.ДатаНачала = МинимальнаяВыбраннаяДата;
			Объект.ДатаОкончания = МаксимальнаяВыбраннаяДата;
			
			ДатаНачалаПриИзменении(Неопределено);
			ДатаОкончанияПриИзменении(Неопределено);
		КонецЕсли;
		
		Модифицированность = Истина;
		ВычислитьОбщееЧислоУчастников();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьПоложениеТумблераСтатусДокумента()
	
	Если Объект.Завершено Тогда
		СтатусДокумента = "Завершено";
	Иначе		
		СтатусДокумента = "ВРаботе";
	КонецЕсли;		
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьКЛПартнера(ТекПартнер)
	
	Возврат ТекПартнер.CRM_ОсновноеКонтактноеЛицо;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруОснованияБизнесПроцесса(Знач ИмяКоманды = Неопределено)
	СтруктураРезультат = Новый Структура("Основание,КартаМаршрута,ИспользоватьВИнтересах", Объект.Ссылка, Объект.CRM_Проект.CRM_КартаМаршрута, Объект.CRM_Проект.CRM_КартаМаршрута.ИспользоватьВИнтересах);
	
	Если ИмяКоманды <> Неопределено Тогда
		Если Найти(ИмяКоманды, "КомандаТочкаСтартаБизнесПроцесса_") > 0 Тогда
			ИдентификаторСсылки = Новый УникальныйИдентификатор(СтрЗаменить(СтрЗаменить(ИмяКоманды, "КомандаТочкаСтартаБизнесПроцесса_", ""), "_", "-"));
			ТочкаМаршрутаСсылка = Справочники.CRM_ТочкиМаршрутов.ПолучитьСсылку(ИдентификаторСсылки);
			Если ЗначениеЗаполнено(ТочкаМаршрутаСсылка) Тогда
				СтруктураРезультат.Вставить("ТочкаСтарта", ТочкаМаршрутаСсылка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураРезультат;
КонецФункции

&НаСервере
Функция ОбработатьСтартСделки(Сделка)
	
	Если Сделка.Основание = Объект.Ссылка Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура Подключаемый_ГиперссылкаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Элемент.Имя = "_ЛичнаяЗадачаСтрокой" Тогда
		ПоказатьЗначение(, ЭтотОбъект._ЛичнаяЗадача);
	ИначеЕсли Элемент.Имя = "_ПоручениеСтрокой" Тогда
		ПоказатьЗначение(, ЭтотОбъект._Поручение);
	ИначеЕсли Элемент.Имя = "_БизнесПроцессСтрокой" Тогда
		ПоказатьЗначение(, ЭтотОбъект._БизнесПроцесс);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаписатьПисьмоВыполнить()

	СоздатьВзаимодействие("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта");

КонецПроцедуры

&НаСервере
Процедура ВычислитьОбщееЧислоУчастников()
	КоличествоУчастников = Объект.ПартнерыИКонтактныеЛица.Количество()+Объект.CRM_СвоиУчастники.Количество();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

	ПриИзмененииВалютыДокумента();
	ЗаполнитьГруппуГиперссылок();
	//ИспользоватьБизнесПроцессы = Константы.ИспользоватьБизнесПроцессыИЗадачи.Получить();
	ИспользоватьБизнесПроцессы = Константы.CRM_ИспользоватьБизнесПроцессы.Получить();
	ДобавитьУдалитьКомандуСозданияБизнесПроцесса();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.Свойства") Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
		МодульУправлениеСвойствами = ОбщегоНазначения.ОбщийМодуль("УправлениеСвойствами");
		МодульУправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	КонецЕсли;
	
	НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
	
	Если Объект.Ссылка.Пустая() Тогда
		Элементы.Ответственный.ТолькоПросмотр = Ложь;
		Элементы.Ответственный.КнопкаВыбора = Истина;
	Иначе
		Элементы.Ответственный.ТолькоПросмотр = Истина;
		Элементы.Ответственный.КнопкаВыбора = Ложь;
	КонецЕсли;
	
	УстановитьПоложениеТумблераСтатусДокумента();	
	ВычислитьОбщееЧислоУчастников();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ОбновленыДанныеСобытия", Новый Структура("СсылкаНаОбъект, ОбновлятьКалендарь", Объект.Ссылка, Параметры.ОбновлятьКалендарь), ЭтотОбъект);
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект._БизнесПроцесс) Тогда
		
		НовыйБизнесПроцесс = CRM_БизнесПроцессыСервер.ПроверитьНаличиеПроектаСтартоватьБизнесПроцесс(Объект.Ссылка, Объект.CRM_Проект);
		
		Если НЕ НовыйБизнесПроцесс = Неопределено Тогда
			ЗаполнитьГруппуГиперссылок();
			Объект.Завершено			= Истина;
			УстановитьПоложениеТумблераСтатусДокумента();				
			Записать();
			НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
		КонецЕсли;
		
	КонецЕсли;
	Элементы.Ответственный.ТолькоПросмотр = Истина;
	Элементы.Ответственный.КнопкаВыбора = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		НастроитьОтображениеДатыАктуальности();
		
	Иначе
		
		Элементы.ДатаАктуальности.Заголовок = НСтр("ru = 'дней '");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	Если ТипЗнч(НовыйОбъект) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") ИЛИ ТипЗнч(НовыйОбъект) = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс") Тогда
		
		ЗаполнитьГруппуГиперссылок();
		Если ТипЗнч(НовыйОбъект) = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс") И НЕ Объект.Завершено Тогда
			УстановитьПоложениеТумблераСтатусДокумента();	
			Объект.Завершено			= Истина;
			Модифицированность	= Истина;
		КонецЕсли;
		НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
	КонецЕсли;
	Если ИмяСобытия = "СтартованаСделка" Тогда
		Если ОбработатьСтартСделки(Параметр) Тогда
			ЗаполнитьГруппуГиперссылок();
			
			Если НЕ Объект.Завершено Тогда
				Объект.Завершено			= Истина;
				УстановитьПоложениеТумблераСтатусДокумента();	
				Модифицированность	= Истина;
			КонецЕсли;
			НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	УстановитьПериодДатыАктуальности();
	Если Объект.CRM_ДатаАктуальности < Объект.ДатаОкончания Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Дата окончания должна быть меньше чем Дата начала + Период актуальности.'");
		Сообщение.Сообщить(); 
		Отказ = Истина;
	
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Объект.ДатаОкончания) И (Объект.ДатаОкончания < Объект.ДатаНачала) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Дата окончания не может быть меньше чем Дата начала.'");
		Сообщение.Сообщить(); 
		Отказ = Истина;
	
	КонецЕсли;
	
	СтрОшибки = НСтр("ru = 'Ошибки заполнения таблицы ""Участники"":'");
	бОшибки = Ложь;
	МассивОбработанныеСтроки = Новый Массив();
	Для Каждого СтрокаТаблицы Из Объект.CRM_СвоиУчастники Цикл
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Участник) Тогда Продолжить; КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.ДатаНачала) И Не ЗначениеЗаполнено(СтрокаТаблицы.ДатаОкончания) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрНомерСтроки = Формат(Объект.CRM_СвоиУчастники.Индекс(СтрокаТаблицы) + 1, "ЧН=0; ЧГ=");
		Если	(ЗначениеЗаполнено(СтрокаТаблицы.ДатаНачала) И Не ЗначениеЗаполнено(СтрокаТаблицы.ДатаОкончания))
			Или	(ЗначениеЗаполнено(СтрокаТаблицы.ДатаОкончания) И Не ЗначениеЗаполнено(СтрокаТаблицы.ДатаНачала)) Тогда
			//
			СтрОшибки = СтрОшибки + Символы.ПС
				+ НСтр("ru = 'Строка'") + " " + СтрНомерСтроки + ": "
				+ НСтр("ru = 'Дата начала и дата окончания должны быть обе заполнены, или обе не заполнены!'");
			//
			бОшибки = Истина;
			Продолжить;
		КонецЕсли;
		
		Если	(ЗначениеЗаполнено(Объект.ДатаНачала) И СтрокаТаблицы.ДатаНачала < НачалоДня(Объект.ДатаНачала))
			Или	(ЗначениеЗаполнено(Объект.ДатаОкончания) И СтрокаТаблицы.ДатаОкончания > КонецДня(Объект.ДатаОкончания)) Тогда
			//
			СтрОшибки = СтрОшибки + Символы.ПС
				+ НСтр("ru = 'Строка'") + " " + СтрНомерСтроки + ": "
				+ НСтр("ru = 'Выбранный период выходит за границы периода документа!'");
			//
			бОшибки = Истина;
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ДатаНачала) И ЗначениеЗаполнено(СтрокаТаблицы.ДатаОкончания) И СтрокаТаблицы.ДатаНачала > СтрокаТаблицы.ДатаОкончания Тогда
			СтрОшибки = СтрОшибки + Символы.ПС
				+ НСтр("ru = 'Строка'") + " " + СтрНомерСтроки + ": "
				+ НСтр("ru = 'Дата окончания должна быть больше даты начала!'");
			бОшибки = Истина;
			Продолжить;
		КонецЕсли;
		
		Если МассивОбработанныеСтроки.Найти(СтрокаТаблицы) = Неопределено Тогда
			НайденныеСтроки = Объект.CRM_СвоиУчастники.НайтиСтроки(Новый Структура("Участник,ДатаНачала,ДатаОкончания",
				СтрокаТаблицы.Участник, СтрокаТаблицы.ДатаНачала, СтрокаТаблицы.ДатаОкончания));
			//
			Если НайденныеСтроки.Количество() > 1 Тогда
				бОшибки = Истина;
				СтрНомераСтрок = "";
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					МассивОбработанныеСтроки.Добавить(НайденнаяСтрока);
					СтрНомераСтрок = СтрНомераСтрок + ?(ПустаяСтрока(СтрНомераСтрок), "", ",")
						+ Формат(Объект.CRM_СвоиУчастники.Индекс(НайденнаяСтрока) + 1, "ЧН=0; ЧГ=");
					//
				КонецЦикла;
				СтрОшибки = СтрОшибки + Символы.ПС
					+ НСтр("ru = 'Строки'") + СтрНомераСтрок + ": "
					+ НСтр("ru = 'Для одного и того же участника периоды не должны повторяться!'")
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если бОшибки Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрОшибки,, "Объект.CRM_СвоиУчастники");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_КомандаНачатьБизнесПроцесс(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда 
		
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
			|Выполнение действия ""Начать "+ВернутьЗаголовокКоманды(Команда.Имя)+""" возможно только после записи данных.
			|Данные будут записаны.'");
		ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_КомандаНачатьБизнесПроцессПродолжение", ЭтотОбъект, Команда.Имя);	
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	Иначе
		Подключаемый_КомандаНачатьБизнесПроцессПродолжение(Неопределено, Команда.Имя)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомандаНачатьБизнесПроцессПродолжение(Ответ, КомандаИмя) Экспорт
	
	Если Объект.Ссылка.Пустая() Тогда 
		
		Если Ответ <> КодВозвратаДиалога.ОК Тогда 
			Возврат;
		КонецЕсли;	
		
		Если Не Записать() Тогда 
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	Если ПроверитьДубликатБизнесПроцесса(Объект.Ссылка) Тогда
		ТекстВопроса = НСтр("ru = 'Уже создан бизнес-процесс.
			|Создать новый?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_КомандаНачатьБизнесПроцессЗавершение", ЭтотОбъект, КомандаИмя);	
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	Подключаемый_КомандаНачатьБизнесПроцессЗавершение(Неопределено, КомандаИмя);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомандаНачатьБизнесПроцессЗавершение(Ответ, КомандаИмя) Экспорт

	Если Ответ = КодВозвратаДиалога.Нет Тогда 
		Возврат;
	КонецЕсли;
	СтруктураОснования = ПолучитьСтруктуруОснованияБизнесПроцесса(КомандаИмя);
	Если (Элементы.Страницы.ТекущаяСтраница = Элементы.СторонниеЛица) И (Элементы.ПартнерыИКонтактныеЛица.ТекущиеДанные <> Неопределено) Тогда
		Если ЗначениеЗаполнено(Элементы.ПартнерыИКонтактныеЛица.ТекущиеДанные.Партнер) Тогда
			СтруктураОснования.Вставить("Партнер", Элементы.ПартнерыИКонтактныеЛица.ТекущиеДанные.Партнер);
		КонецЕсли;
		Если ЗначениеЗаполнено(Элементы.ПартнерыИКонтактныеЛица.ТекущиеДанные.КонтактноеЛицо) Тогда
			СтруктураОснования.Вставить("КонтактноеЛицо", Элементы.ПартнерыИКонтактныеЛица.ТекущиеДанные.КонтактноеЛицо);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Основание", СтруктураОснования);
	ОткрытьФорму("БизнесПроцесс.CRM_БизнесПроцесс.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьЗадачу(Команда)
// +CRM
	CRM_БизнесПроцессыИЗадачиВызовСервера.Выполнить_Задачу(ЭтотОбъект._ЛичнаяЗадача, Истина);
	//БизнесПроцессыИЗадачиВызовСервера.ВыполнитьЗадачу(ЭтотОбъект._ЛичнаяЗадача, Истина);
// -CRM
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Задача выполнена'"),
		ПолучитьНавигационнуюСсылку(ЭтотОбъект._ЛичнаяЗадача),
		Строка(ЭтотОбъект._ЛичнаяЗадача));
		
	Объект.Завершено	= Истина;
	УстановитьПоложениеТумблераСтатусДокумента();		
	Модифицированность	= Истина;
	
	ЗаполнитьГруппуГиперссылок();
	НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
	
	Оповестить("ЗадачаВыполнена", Новый Структура("ОбновлятьКалендарь", Параметры.ОбновлятьКалендарь));
		
КонецПроцедуры

&НаКлиенте
Процедура Перенаправить(Команда)
	
	Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	МассивЗадач = Новый Массив;
	МассивЗадач.Добавить(Объект.Ссылка);
	CRM_БизнесПроцессыИЗадачиКлиент.ОбработкаКомандыПеренаправить(МассивЗадач, Новый Структура("Источник",ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодборСвоихУчастников(Команда)
	ПодборУчастников();
КонецПроцедуры

&НаКлиенте
Процедура КомандаСортироватьУчастниковПоВозростанию(Команда)
	Объект.CRM_СвоиУчастники.Сортировать("Участник ВОЗР");
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСортироватьУчастниковПоУбыванию(Команда)
	Объект.CRM_СвоиУчастники.Сортировать("Участник УБЫВ");
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодборКлиентов(Команда)
		
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", 		  Истина);
	ПараметрыФормы.Вставить("ПрограммноеОткрытие",Истина);		
	
	ОткрытьФорму("Справочник.Партнеры.ФормаВыбора", ПараметрыФормы, Элементы.ПартнерыИКонтактныеЛица);

КонецПроцедуры

&НаКлиенте
// Процедура - обработчик команды "ОтборПериод".
//
Процедура ОткрытьСписокИнтересов(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("МаркетинговаяКампания", Объект.Ссылка);
	ОткрытьФорму("Справочник.МаркетинговыеМероприятия.Форма.CRM_ФормаСпискаИнтересов", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры // ОткрытьСписокИнтересов()

#КонецОбласти

#Область ПроцедурыОбработчикиСобытийЭлементовУправленияФормы

&НаКлиенте
Процедура КонтактноеЛицоПриИзменении(Элемент)

	ТекущиеДанные = Элементы.ПартнерыИКонтактныеЛица.ТекущиеДанные;
	Если НЕ ЗначениеЗаполнено(ТекущиеДанные.Партнер) Тогда
		ТекущиеДанные.Партнер = ПолучитьПартнера(ТекущиеДанные.КонтактноеЛицо);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура CRM_ПроектПриИзменении(Элемент)
	ЗаполнитьГруппуГиперссылок();
	ДобавитьУдалитьКомандуСозданияБизнесПроцесса();
КонецПроцедуры

&НаКлиенте
Процедура СтатусДокументаПриИзменении(Элемент)
			
	Если СтатусДокумента = "Завершено" Тогда
		Объект.Завершено = Истина
	Иначе		
		Объект.Завершено = Ложь;
	КонецЕсли;	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура КомментарииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаПриИзменении(Элемент)
	
	СтруктураВалюты = ПолучитьКурсИКратностьВалюты(Объект.CRM_Валюта, Объект.ДатаНачала);
	Объект.CRM_Кратность	= СтруктураВалюты.Кратность;
	Объект.CRM_Курс			= СтруктураВалюты.Курс;
	
	ПриИзмененииВалютыДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	ТекДанные = Элементы.ПартнерыИКонтактныеЛица.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Партнер) Тогда
		ТекДанные.КонтактноеЛицо = ВернутьКЛПартнера(ТекДанные.Партнер);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПартнерыИКонтактныеЛицаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда	
		Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл			
			ТекДанные = Объект.ПартнерыИКонтактныеЛица.Добавить();
			ТекДанные.Партнер = ЭлементМассива;
			ТекДанные.КонтактноеЛицо = ВернутьКЛПартнера(ТекДанные.Партнер);	
		КонецЦикла;		
		ВычислитьОбщееЧислоУчастников();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура CRM_ПериодАктуальностиПриИзменении(Элемент)
	
	УстановитьПериодДатыАктуальности();
	НастроитьОтображениеДатыАктуальности();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	Если Объект.ДатаНачала > Объект.ДатаОкончания Тогда
		Объект.ДатаОкончания = Объект.ДатаНачала;
	КонецЕсли;
	
	УстановитьПериодДатыАктуальности();
	НастроитьОтображениеДатыАктуальности();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	Если Объект.ДатаОкончания < Объект.ДатаНачала Тогда
		Объект.ДатаНачала = Объект.ДатаОкончания;
	КонецЕсли;
	
	УстановитьПериодДатыАктуальности();
	НастроитьОтображениеДатыАктуальности();
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьСтороннихУчастниковПоРезультатамОтчета(Команда)
	Если Объект.ПартнерыИКонтактныеЛица.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОчисткаСтороннихУчастниковПослеВопроса", ЭтотОбъект, Команда);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Список будет очищен. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
		Возврат
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаЗаполнитьСтороннихУчастниковПоРезультатамОтчетаЗавершение", ЭтотОбъект);
	CRM_ОбщегоНазначенияКлиент.ОткрытьФормуЗаполненияПоРезультатамОтчета(ЭтотОбъект, ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьСтороннихУчастниковПоРезультатамОтчетаЗавершение(НаименованиеСохраненногоСписка, ДополнительныеПараметры) Экспорт
	
	Если НаименованиеСохраненногоСписка <> Неопределено Тогда
		СохраненныйСписок = CRM_ОбщегоНазначенияСервер.ПолучитьСохраненныйРезультатОтчетаПоНаименованию(НаименованиеСохраненногоСписка);
		Если СохраненныйСписок <> Неопределено Тогда
			ДопустимыеТипы = Новый ОписаниеТипов("СправочникСсылка.Партнеры");
			Для Каждого СтрокаСписка Из СохраненныйСписок Цикл
				Если ДопустимыеТипы.СодержитТип(ТипЗнч(СтрокаСписка.Значение)) Тогда
					НоваяСтрока = Объект.ПартнерыИКонтактныеЛица.Добавить();
					НоваяСтрока.Партнер = СтрокаСписка.Значение;
				КонецЕсли;
			КонецЦикла;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	ВычислитьОбщееЧислоУчастников();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчисткаСтороннихУчастниковПослеВопроса(Ответ, Команда) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ПартнерыИКонтактныеЛица.Очистить();
		КомандаЗаполнитьСтороннихУчастниковПоРезультатамОтчета(Команда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СвоиУчастникиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Не Копирование Тогда
		Отказ = Истина;
		НоваяСтрока = Объект.CRM_СвоиУчастники.Добавить();
		Если ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
			НоваяСтрока.ДатаНачала = НачалоДня(Объект.ДатаНачала);
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
			НоваяСтрока.ДатаОкончания = КонецДня(Объект.ДатаОкончания);
		КонецЕсли;
		
		// Уберем секунды
		Если ЗначениеЗаполнено(НоваяСтрока.ДатаОкончания) Тогда
			НоваяСтрока.ДатаОкончания = НоваяСтрока.ДатаОкончания - Секунда(НоваяСтрока.ДатаОкончания);
		КонецЕсли;
		
		Элементы.СвоиУчастники.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		
		Модифицированность = Истина;
	КонецЕсли;
	ВычислитьОбщееЧислоУчастников();
КонецПроцедуры

&НаКлиенте
Процедура СвоиУчастникиДатаНачалаПриИзменении(Элемент)
	ТекДанные = Элементы.СвоиУчастники.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекДанные.ДатаНачала) Тогда Возврат; КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала) Или ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Если ТекДанные.ДатаНачала < НачалоДня(Объект.ДатаНачала) Тогда
			ТекДанные.ДатаНачала = НачалоДня(Объект.ДатаНачала);
		ИначеЕсли ТекДанные.ДатаНачала > КонецДня(Объект.ДатаОкончания) Тогда
			ТекДанные.ДатаНачала = НачалоДня(Объект.ДатаОкончания);
		КонецЕсли;
	КонецЕсли;
	
	// Уберем секунды
	Если Секунда(ТекДанные.ДатаНачала) > 0 Тогда
		ТекДанные.ДатаНачала = ТекДанные.ДатаНачала - Секунда(ТекДанные.ДатаНачала);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.ДатаОкончания) И ТекДанные.ДатаНачала > ТекДанные.ДатаОкончания Тогда
		ТекДанные.ДатаОкончания = ТекДанные.ДатаНачала;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СвоиУчастникиДатаОкончанияПриИзменении(Элемент)
	ТекДанные = Элементы.СвоиУчастники.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекДанные.ДатаОкончания) Тогда Возврат; КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала) Или ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Если ТекДанные.ДатаОкончания > КонецДня(Объект.ДатаОкончания) Тогда
			ТекДанные.ДатаОкончания = КонецДня(Объект.ДатаОкончания);
		ИначеЕсли ТекДанные.ДатаОкончания < НачалоДня(Объект.ДатаНачала) Тогда
			ТекДанные.ДатаОкончания = КонецДня(Объект.ДатаНачала);
		КонецЕсли;
	КонецЕсли;
	
	// Уберем секунды
	Если Секунда(ТекДанные.ДатаОкончания) > 0 Тогда
		ТекДанные.ДатаОкончания = ТекДанные.ДатаОкончания - Секунда(ТекДанные.ДатаОкончания);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.ДатаНачала) И ТекДанные.ДатаОкончания < ТекДанные.ДатаНачала Тогда
		ТекДанные.ДатаОкончания = ТекДанные.ДатаНачала;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПартнерыИКонтактныеЛицаПриИзменении(Элемент)
	ВычислитьОбщееЧислоУчастников();
КонецПроцедуры

&НаКлиенте
Процедура СвоиУчастникиПриИзменении(Элемент)
	ВычислитьОбщееЧислоУчастников();
КонецПроцедуры

#КонецОбласти

