
&НаКлиенте
Перем КэшСвойстваДинамическогоСписка;

&НаКлиенте
Перем КэшОграничениеТипов;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ПолучитьСписокИнтересовПоИсточнику(ИсточникСсылка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ 
	               |	ИсточникиПервичногоИнтересаСрезПоследних.Сделка.Ссылка КАК Ссылка,
	               |	ИсточникиПервичногоИнтересаСрезПоследних.Сделка.КонтактноеЛицо КАК КонтактноеЛицо,
	               |	ИсточникиПервичногоИнтересаСрезПоследних.Сделка.Партнер КАК Партнер
				   |ИЗ
	               |	РегистрСведений.ИсточникиПервичногоИнтереса.СрезПоследних КАК ИсточникиПервичногоИнтересаСрезПоследних
	               |ГДЕ
	               |	ИсточникиПервичногоИнтересаСрезПоследних.ИсточникПервичногоИнтереса = &ИсточникПервичногоИнтереса
					|	И НЕ ВЫРАЗИТЬ(ИсточникиПервичногоИнтересаСрезПоследних.Сделка КАК Документ.CRM_Интерес) ЕСТЬ NULL ";
	Запрос.УстановитьПараметр("ИсточникПервичногоИнтереса", ИсточникСсылка);
	Возврат Запрос.Выполнить(); 
 КонецФункции // ПолучитьСписокИнтересовПоИсточнику()

&НаСервере
Функция ПолучитьУникальные(спсЗнч)
	  выхСписок = Новый СписокЗначений;
	  мДобавленные = Новый Массив;
	  Для каждого элСп Из спсЗнч Цикл
		элСп = элСп.Значение;
		уникИд = "" + элСп.Партнер + элСп.КонтактноеЛицо;
		Найдено = мДобавленные.Найти(уникИд);
	    Если Найдено = Неопределено Тогда
			выхСписок.Добавить(элСп);
			мДобавленные.Добавить(уникИд);
		КонецЕсли; 
	КонецЦикла; 
	Возврат выхСписок;
КонецФункции 

&НаСервере
Функция ПолучитьСписокВсехПартнеров(ИсточникСсылка)
	РезультатЗапроса = ПолучитьСписокИнтересовПоИсточнику(ИсточникСсылка);
	РезультатЗапроса = РезультатЗапроса.Выбрать();
	спПартнеров = Новый СписокЗначений;
	тзПартнеры = Новый ТаблицаЗначений;
	Пока РезультатЗапроса.Следующий() Цикл
		Если ЗначениеЗаполнено(РезультатЗапроса.Партнер) Тогда
			стрМаркетинг = Новый Структура("Партнер,КонтактноеЛицо,Событие",
				РезультатЗапроса.Партнер,РезультатЗапроса.КонтактноеЛицо,РезультатЗапроса.Ссылка);
				спПартнеров.Добавить(стрМаркетинг);
		КонецЕсли; 
	КонецЦикла;
	Партнеры = ПолучитьУникальные(спПартнеров);
	Возврат Партнеры;
КонецФункции

&НаКлиенте
// Процедура-обработчик события "Выбор" элемента формы "Список".
//
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТД = Элементы.Список.ТекущиеДанные;
	Если ТД = Неопределено Тогда Возврат; КонецЕсли;
	ОткрытьФорму("Документ.CRM_Интерес.ФормаОбъекта", Новый Структура("Ключ", ТД.Ссылка), ЭтотОбъект);
КонецПроцедуры // СписокВыбор()

&НаКлиенте
// Процедура-обработчик события "ПередНачаломДобавления" элемента формы "Список".
//
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры // СписокПередНачаломДобавления()

&НаКлиенте
// Процедура-обработчик события "ПередНачаломИзменения" элемента формы "Список".
//
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры // СписокПередНачаломИзменения()

&НаКлиенте
// Процедура-обработчик события "ПередУдалением" элемента формы "Список".
//
Процедура СписокПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры // СписокПередУдалением()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
// Процедура-обработчик команды формы "КомандаТелемаркетинг".
//
Процедура КомандаТелемаркетинг(Команда)
	спПартнеров = ПолучитьСписокВсехПартнеров(ИсточникПервичногоИнтереса);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения",
				Новый Структура("СписокПартнеров, МаркетинговаяКампания",спПартнеров, ИсточникПервичногоИнтереса));
	ОткрытьФорму("Документ.CRM_Телемаркетинг.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,);
КонецПроцедуры // КомандаТелемаркетинг()

&НаКлиенте
Процедура КомандаРассылкаЭлектронныхПисем(Команда)
	спПартнеров = ПолучитьСписокВсехПартнеров(ИсточникПервичногоИнтереса);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения",
		Новый Структура("СписокПартнеров, МаркетинговаяКампания",спПартнеров, ИсточникПервичногоИнтереса));
	ОткрытьФорму("Документ.CRM_РассылкаЭлектронныхПисем.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,);
КонецПроцедуры

&НаКлиенте
// Процедура-обработчик команды формы "КомандаРассылкаSMS".
//
Процедура КомандаРассылкаSMS(Команда)
	Если CRM_ОбщегоНазначенияКлиент.смсПроверитьДоступностьSMS4B() Тогда
		спПартнеров = ПолучитьСписокВсехПартнеров(ИсточникПервичногоИнтереса);
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения",
					Новый Структура("СписокПартнеров",спПартнеров));
		ОткрытьФорму("Документ.СообщениеSMS.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,);
	КонецЕсли;	
КонецПроцедуры // КомандаРассылкаSMS()

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура-обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("МаркетинговаяКампания") И ЗначениеЗаполнено(Параметры.МаркетинговаяКампания) Тогда
		ИсточникПервичногоИнтереса = Параметры.МаркетинговаяКампания;
		Список.Параметры.УстановитьЗначениеПараметра("ИсточникПервичногоИнтереса", ИсточникПервичногоИнтереса);
	Иначе	
		Отказ = Истина;
	КонецЕсли; 
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

