#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Проверка на корректность заданных пользователем периодов
	НастройкаПериодОтчета 				= КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПериодОтчета");
	НастройкаПериодСравнения 			= КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПериодСравнения");
	НастройкаШагПериодовСравненияОтчета = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ШагПериодовСравнения");
	
	Если ЗначениеЗаполнено(НастройкаПериодОтчета.Значение)
		И ЗначениеЗаполнено(НастройкаПериодСравнения.Значение)
		И ЗначениеЗаполнено(НастройкаШагПериодовСравненияОтчета.Значение) Тогда
		
		РазностьДатСравнения 	= вогОбщегоНазначенияКлиентСервер.РазностьДат(
			НастройкаПериодСравнения.Значение.ДатаНачала,
			НастройкаПериодСравнения.Значение.ДатаОкончания,
			Перечисления.Периодичность.Месяц);
			
		РазностьБазовыхДат 		= вогОбщегоНазначенияКлиентСервер.РазностьДат(
			НастройкаПериодОтчета.Значение.ДатаНачала,
			НастройкаПериодОтчета.Значение.ДатаОкончания,
			Перечисления.Периодичность.Месяц);
		
		Если РазностьДатСравнения <> РазностьБазовыхДат Тогда 
			
			ТекстСообщения = НСтр("ru = 'Неверно заданы периоды.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка 					= Ложь;
	ПользовательскиеНастройкиМодифицированы = Ложь;
	
	УстановитьОбязательныеНастройки(ПользовательскиеНастройкиМодифицированы);
	
	// Создание внешнего источника данных
	НастройкаПериодОтчета 					= КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПериодОтчета");
	НастройкаПериодСравнения 				= КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПериодСравнения");
	НастройкаШагПериодовСравненияОтчета 	= КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(
		КомпоновщикНастроек, "ШагПериодовСравнения");
	
	ТаблицаПериодов = СформироватьТаблицуПериодов(
		НастройкаПериодСравнения.Значение,
		НастройкаПериодОтчета.Значение,
		НастройкаШагПериодовСравненияОтчета.Значение);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаПериодов", ТаблицаПериодов);
	
	НастройкиОсновнойСхемы = КомпоновщикНастроек.ПолучитьНастройки();
	
	// Формирование отчета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОсновнойСхемы, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВыводаВТабличныйДокумент = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаВТабличныйДокумент.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаВТабличныйДокумент.Вывести(ПроцессорКомпоновкиДанных);
	
	Если ПользовательскиеНастройкиМодифицированы Тогда
		КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить(
			"ПользовательскиеНастройкиМодифицированы", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РаботаСПериодамиИДатами

Функция СформироватьТаблицуПериодов(Знач ПериодСравнения, Знач БазовыйПериод, Знач Периодичность)
	
	НачалоПериодаСравнения 	= ПериодСравнения.ДатаНачала;
	КонецПериодаСравнения 	= ПериодСравнения.ДатаОкончания;
	
	НачалоБазовогоПериода 	= БазовыйПериод.ДатаНачала;
	КонецБазовогоПериода 	= БазовыйПериод.ДатаОкончания;
	
	ТаблицаПериодов 		= Новый ТаблицаЗначений;
	
	ТаблицаПериодов.Колонки.Добавить("ДатаНачалаБаза");
	ТаблицаПериодов.Колонки.Добавить("ДатаОкончанияБаза");
	ТаблицаПериодов.Колонки.Добавить("ДатаНачалаСравнение");
	ТаблицаПериодов.Колонки.Добавить("ДатаОкончанияСравнение");
	ТаблицаПериодов.Колонки.Добавить("НомерСопоставления");
	
	Счетчик = 1;
	
	НоваяСтрока = ТаблицаПериодов.Добавить();
	ПериодСравнения 					= ДатаСоСмещением(НачалоПериодаСравнения, КонецПериодаСравнения, Периодичность);
	НоваяСтрока.ДатаНачалаСравнение 	= ПериодСравнения.ДатаНачала;
	НоваяСтрока.ДатаОкончанияСравнение 	= ПериодСравнения.ДатаОкончания;
	НоваяСтрока.НомерСопоставления 		= Счетчик;
	
	БазовыйПериод 						= ДатаСоСмещением(НачалоБазовогоПериода, КонецБазовогоПериода, Периодичность);
	НоваяСтрока.ДатаНачалаБаза 			= БазовыйПериод.ДатаНачала;
	НоваяСтрока.ДатаОкончанияБаза 		= БазовыйПериод.ДатаОкончания;
	НоваяСтрока.НомерСопоставления 		= Счетчик;
	
	РазностьДат 		= вогОбщегоНазначенияКлиентСервер.РазностьДат(НачалоПериодаСравнения, КонецПериодаСравнения, Периодичность);
	РазностьБазовыхДат 	= вогОбщегоНазначенияКлиентСервер.РазностьДат(НачалоБазовогоПериода, КонецБазовогоПериода, Периодичность);
	
	Пока Счетчик <= РазностьДат Цикл 
		
		Если Счетчик > РазностьБазовыхДат Тогда
			ТекстИсключения = НСтр("ru = 'Неверно заданы периоды.'");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаПериодов.Добавить();
		ПериодСравнения 					= ДатаСоСмещением(НачалоПериодаСравнения, КонецПериодаСравнения, Периодичность, Счетчик);
		НоваяСтрока.ДатаНачалаСравнение 	= ПериодСравнения.ДатаНачала;
		НоваяСтрока.ДатаОкончанияСравнение 	= ПериодСравнения.ДатаОкончания;
		НоваяСтрока.НомерСопоставления 		= Счетчик + 1;
		
		БазовыйПериод 						= ДатаСоСмещением(НачалоБазовогоПериода, КонецБазовогоПериода, Периодичность, Счетчик);
		НоваяСтрока.ДатаНачалаБаза 			= БазовыйПериод.ДатаНачала;
		НоваяСтрока.ДатаОкончанияБаза 		= БазовыйПериод.ДатаОкончания;
		НоваяСтрока.НомерСопоставления 		= Счетчик + 1;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	Возврат ТаблицаПериодов;
	
КонецФункции

Функция ДатаСоСмещением(НачалоПериода, КонецПериода, Периодичность, ЧислоПериодов = 0)
	
	Период = Новый СтандартныйПериод;
	
	Если Периодичность = Перечисления.Периодичность.Год Тогда
		
		Период.ДатаНачала 			= ДобавитьМесяц(НачалоПериода, 12 * ЧислоПериодов);
		ДатаОкончания 				= КонецГода(Период.ДатаНачала);
		
		Если ДатаОкончания > КонецПериода Тогда
			Период.ДатаОкончания 	= КонецПериода;
		Иначе
			Период.ДатаОкончания 	= ДатаОкончания;
		КонецЕсли;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Полугодие Тогда
		
		ДатаНачала 					= ДобавитьМесяц(НачалоПериода, 6 * ЧислоПериодов);
		ДатаОкончания 				= КонецМесяца(ДобавитьМесяц(НачалоГода(ДатаНачала), ?(Месяц(ДатаНачала) <= 6, 1, 2) * 6 - 1));
		
		Период.ДатаНачала 			= ДатаНачала;
		
		Если ДатаОкончания > КонецПериода Тогда
			Период.ДатаОкончания 	= КонецПериода;
		Иначе
			Период.ДатаОкончания 	= ДатаОкончания;
		КонецЕсли;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		
		Период.ДатаНачала 			= ДобавитьМесяц(НачалоПериода, 3 * ЧислоПериодов);
		ДатаОкончания 				= КонецКвартала(Период.ДатаНачала);
		
		Если ДатаОкончания > КонецПериода Тогда
			Период.ДатаОкончания 	= КонецПериода;
		Иначе
			Период.ДатаОкончания 	= ДатаОкончания;
		КонецЕсли;
		
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		
		Период.ДатаНачала 			= ДобавитьМесяц(НачалоПериода, ЧислоПериодов);
		ДатаОкончания 				= КонецМесяца(Период.ДатаНачала);
		
		Если ДатаОкончания > КонецПериода Тогда
			Период.ДатаОкончания 	= КонецПериода;
		Иначе
			Период.ДатаОкончания 	= ДатаОкончания;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Период;
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура УстановитьОбязательныеНастройки(ПользовательскиеНастройкиМодифицированы)
	
	НастройкаПериодОтчета = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПериодОтчета");
	Если Не ЗначениеЗаполнено(НастройкаПериодОтчета.Значение) Тогда
		
		СтандартныйПериодМесяц = Новый СтандартныйПериод(ВариантСтандартногоПериода.ЭтотМесяц);
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ПериодОтчета", СтандартныйПериодМесяц);
		
		ПользовательскиеНастройкиМодифицированы = Истина;
		
	КонецЕсли;
	
	НастройкаПериодСравнения = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПериодСравнения");
	Если Не ЗначениеЗаполнено(НастройкаПериодСравнения.Значение) Тогда
		
		СтандартныйПериодМесяц = Новый СтандартныйПериод(ВариантСтандартногоПериода.ПрошлыйМесяц);
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ПериодСравнения", СтандартныйПериодМесяц);
		
		ПользовательскиеНастройкиМодифицированы = Истина;
		
	КонецЕсли;
	
	НастройкаШагПериодовСравненияОтчета = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(
		КомпоновщикНастроек, "ШагПериодовСравнения");
	Если Не ЗначениеЗаполнено(НастройкаШагПериодовСравненияОтчета.Значение) Тогда
		
		КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
			КомпоновщикНастроек,
			"ШагПериодовСравнения",
			Перечисления.Периодичность.Месяц);
		
		ПользовательскиеНастройкиМодифицированы = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли