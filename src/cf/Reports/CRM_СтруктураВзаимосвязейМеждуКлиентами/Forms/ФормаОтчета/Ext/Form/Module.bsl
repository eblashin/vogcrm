
&НаСервере
Функция ПолучитьПредставлениеВидаСвязи(ВидСвязи, Прямое)
	Если Прямое Тогда
		Если ЗначениеЗаполнено(ВидСвязи.Наименование) Тогда
			Возврат ВидСвязи.Наименование;
		Иначе
			Возврат ВидСвязи.РольПартнера1;
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(ВидСвязи.ОбратноеНаименование) Тогда
			Возврат ВидСвязи.ОбратноеНаименование;
		ИначеЕсли ЗначениеЗаполнено(ВидСвязи.Наименование) Тогда
			Возврат ВидСвязи.Наименование;
		Иначе
			Возврат ВидСвязи.РольПартнера2;
		КонецЕсли;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ВернутьПроектыПоКлиенту(Клиент)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Партнер",Клиент);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	CRM_БизнесПроцесс.Проект
	|ПОМЕСТИТЬ ВсеПроекты
	|ИЗ
	|	БизнесПроцесс.CRM_БизнесПроцесс КАК CRM_БизнесПроцесс
	|ГДЕ
	|	CRM_БизнесПроцесс.Партнер = &Партнер
	|	И НЕ CRM_БизнесПроцесс.Проект = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
	|	И CRM_БизнесПроцесс.Стартован
	|	И НЕ CRM_БизнесПроцесс.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Проекты.Ссылка
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	НЕ Проекты.ПометкаУдаления
	|	И Проекты.CRM_Партнер = &Партнер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВсеПроекты.Проект КАК Проект
	|ИЗ
	|	ВсеПроекты КАК ВсеПроекты";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Проект");
	
КонецФункции

&НаСервере
Процедура СформироватьРекурсивно(ПартнерСсылка, ТаблицаСвязейПартнеров, СтрокиДерева, ТаблицаВыведенныхСвязей, Дерево)
	НайденныеСтроки1 = ТаблицаСвязейПартнеров.НайтиСтроки(Новый Структура("ПервыйПартнер", ПартнерСсылка));
	
	Для Каждого НайденнаяСтрока Из НайденныеСтроки1 Цикл
		Партнер1 = НайденнаяСтрока.ПервыйПартнер;
		Партнер2 = НайденнаяСтрока.ВторойПартнер;
		НайденныеСтрокиВыведенные = ТаблицаВыведенныхСвязей.НайтиСтроки(Новый Структура("ПервыйПартнер,ВторойПартнер,ВидСвязи", Партнер1, Партнер2, НайденнаяСтрока.ВидСвязи));
		Если НайденныеСтрокиВыведенные.Количество() > 0 Тогда Продолжить; КонецЕсли;
		НайденныеСтрокиВыведенные = ТаблицаВыведенныхСвязей.НайтиСтроки(Новый Структура("ПервыйПартнер,ВторойПартнер,ВидСвязи", Партнер2, Партнер1, НайденнаяСтрока.ВидСвязи));
		Если НайденныеСтрокиВыведенные.Количество() > 0 Тогда Продолжить; КонецЕсли;
		
		ВывестиПроекты = (Дерево.Строки.Найти(Партнер1,"Партнер1",Истина)=Неопределено);
		
		НоваяСтрока = СтрокиДерева.Добавить();
		НоваяСтрока.Партнер1 = Партнер1;
		НоваяСтрока.Партнер2 = Партнер2;
		НоваяСтрока.ВидСвязиСсылка = НайденнаяСтрока.ВидСвязи;
		ПредставлениеВидСвязи = ПолучитьПредставлениеВидаСвязи(НайденнаяСтрока.ВидСвязи, Истина);
		НоваяСтрока.ВидСвязиПредставление = ПредставлениеВидСвязи;
		Если НоваяСтрока.Партнер1 = Партнер Тогда
			НоваяСтрока.Оформление = 7;
		ИначеЕсли НоваяСтрока.Партнер2 = Партнер Тогда
			НоваяСтрока.Оформление = 6;
		КонецЕсли;
		
		НоваяСтрокаВыведенные = ТаблицаВыведенныхСвязей.Добавить();
		НоваяСтрокаВыведенные.ПервыйПартнер = Партнер1;
		НоваяСтрокаВыведенные.ВторойПартнер = Партнер2;
		НоваяСтрокаВыведенные.ВидСвязи = НайденнаяСтрока.ВидСвязи;
		
		СформироватьРекурсивно(НоваяСтрока.Партнер2, ТаблицаСвязейПартнеров, НоваяСтрока.Строки, ТаблицаВыведенныхСвязей, Дерево);
		
		Если ВывестиПроекты Тогда
			МассивПроектов = ВернутьПроектыПоКлиенту(Партнер1);
			Для Каждого ПроектКлиента Из МассивПроектов Цикл
				НоваяСтрока = СтрокиДерева.Добавить();
				НоваяСтрока.Партнер1 = "-";
				НоваяСтрока.Партнер2 = ПроектКлиента;
				НоваяСтрока.ВидСвязиПредставление = "Проект";
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	НайденныеСтроки2 = ТаблицаСвязейПартнеров.НайтиСтроки(Новый Структура("ВторойПартнер", ПартнерСсылка));
	Для Каждого НайденнаяСтрока Из НайденныеСтроки2 Цикл
		Партнер1 = НайденнаяСтрока.ВторойПартнер;
		Партнер2 = НайденнаяСтрока.ПервыйПартнер;
		НайденныеСтрокиВыведенные = ТаблицаВыведенныхСвязей.НайтиСтроки(Новый Структура("ПервыйПартнер,ВторойПартнер,ВидСвязи", Партнер1, Партнер2, НайденнаяСтрока.ВидСвязи));
		Если НайденныеСтрокиВыведенные.Количество() > 0 Тогда Продолжить; КонецЕсли;
		НайденныеСтрокиВыведенные = ТаблицаВыведенныхСвязей.НайтиСтроки(Новый Структура("ПервыйПартнер,ВторойПартнер,ВидСвязи", Партнер2, Партнер1, НайденнаяСтрока.ВидСвязи));
		Если НайденныеСтрокиВыведенные.Количество() > 0 Тогда Продолжить; КонецЕсли;
		
		ВывестиПроекты = (Дерево.Строки.Найти(Партнер1,"Партнер1",Истина)=Неопределено);
		
		НоваяСтрока = СтрокиДерева.Добавить();
		НоваяСтрока.Партнер1 = Партнер1;
		НоваяСтрока.Партнер2 = Партнер2;
		НоваяСтрока.ВидСвязиСсылка = НайденнаяСтрока.ВидСвязи;
		ПредставлениеВидСвязи = ПолучитьПредставлениеВидаСвязи(НайденнаяСтрока.ВидСвязи, Ложь);
		НоваяСтрока.ВидСвязиПредставление = ПредставлениеВидСвязи;
		Если НоваяСтрока.Партнер1 = Партнер Тогда
			НоваяСтрока.Оформление = 7;
		ИначеЕсли НоваяСтрока.Партнер2 = Партнер Тогда
			НоваяСтрока.Оформление = 6;
		КонецЕсли;
		
		НоваяСтрокаВыведенные = ТаблицаВыведенныхСвязей.Добавить();
		НоваяСтрокаВыведенные.ПервыйПартнер = Партнер1;
		НоваяСтрокаВыведенные.ВторойПартнер = Партнер2;
		НоваяСтрокаВыведенные.ВидСвязи = НайденнаяСтрока.ВидСвязи;
		
		СформироватьРекурсивно(НоваяСтрока.Партнер2, ТаблицаСвязейПартнеров, НоваяСтрока.Строки, ТаблицаВыведенныхСвязей, Дерево);
		
		Если ВывестиПроекты Тогда
			МассивПроектов = ВернутьПроектыПоКлиенту(Партнер1);
			Для Каждого ПроектКлиента Из МассивПроектов Цикл
				НоваяСтрока = СтрокиДерева.Добавить();
				НоваяСтрока.Партнер1 = "-";
				НоваяСтрока.Партнер2 = ПроектКлиента;
				НоваяСтрока.ВидСвязиПредставление = "Проект";
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	Дерево = РеквизитФормыВЗначение("ДеревоРезультат");
	Дерево.Строки.Очистить();
	
	ТаблицаСвязейПартнеров = CRM_МетодыМодулейМенеджеровРегистров.ПолучитьТаблицуСвязейПартнера(Партнер);
	НайденныеСтроки = ТаблицаСвязейПартнеров.НайтиСтроки(Новый Структура("ВидСвязи", Справочники.ВидыСвязейМеждуПартнерами.CRM_Холдинг));
	Если НайденныеСтроки.Количество() = 0 Тогда
		Холдинг = Неопределено;
	Иначе
		Холдинг = НайденныеСтроки[0].ПервыйПартнер;
		Если НайденныеСтроки.Количество() = 0 Тогда
			ТаблицаСвязейПартнеров.Удалить(НайденныеСтроки[0]);
		КонецЕсли;
	КонецЕсли;
	ТаблицаСвязейПартнеров.Сортировать("ВидСвязи ВОЗР");
	
	ВывестиПроекты = Ложь;
	
	Если Холдинг <> Неопределено Тогда
		НоваяСтрока = Дерево.Строки.Добавить();
		НоваяСтрока.Партнер1 = Холдинг;
		Если НоваяСтрока.Партнер1 = Партнер Тогда
			НоваяСтрока.Оформление = 8;
		Иначе
			НоваяСтрока.Оформление = 9;
		КонецЕсли;
		ВывестиПроекты = Истина;
		СтрокиДерева = НоваяСтрока.Строки;
	Иначе
		СтрокиДерева = Дерево.Строки;
	КонецЕсли;
	
	ТаблицаСвязейПартнеров.Колонки.Добавить("СортировкаПоВидуСвязи");
	
	ТаблицаПартнеры = Новый ТаблицаЗначений();
	ТаблицаПартнеры.Колонки.Добавить("Партнер");
	Для Каждого СтрокаТаблицы Из ТаблицаСвязейПартнеров Цикл
		НоваяСтрока = ТаблицаПартнеры.Добавить();
		НоваяСтрока.Партнер = СтрокаТаблицы.ПервыйПартнер;
		НоваяСтрока = ТаблицаПартнеры.Добавить();
		НоваяСтрока.Партнер = СтрокаТаблицы.ВторойПартнер;
		
		Если СтрокаТаблицы.ВидСвязи = Справочники.ВидыСвязейМеждуПартнерами.CRM_Холдинг Тогда
			СтрокаТаблицы.СортировкаПоВидуСвязи = 0;
		ИначеЕсли СтрокаТаблицы.ВидСвязи = Справочники.ВидыСвязейМеждуПартнерами.CRM_СвязанноеЮрЛицо Тогда
			СтрокаТаблицы.СортировкаПоВидуСвязи = 1;
		Иначе
			СтрокаТаблицы.СортировкаПоВидуСвязи = 2;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаСвязейПартнеров.Сортировать("СортировкаПоВидуСвязи,ВидСвязи,ВторойПартнер");
	
	ТаблицаПартнеры.Свернуть("Партнер");
	ТаблицаПартнеры.Сортировать("Партнер ВОЗР");
	НоваяСтрока = ТаблицаПартнеры.Вставить(0);
	НоваяСтрока.Партнер = Партнер;
	Если ЗначениеЗаполнено(Холдинг) Тогда
		НоваяСтрока = ТаблицаПартнеры.Вставить(0);
		НоваяСтрока.Партнер = Холдинг;
	КонецЕсли;
	ТаблицаПартнеры.Свернуть("Партнер");
	
	ТаблицаВыведенныхСвязей = ТаблицаСвязейПартнеров.Скопировать(Новый Массив());
	
	Для Каждого СтрокаТаблицы Из ТаблицаПартнеры Цикл
		СформироватьРекурсивно(СтрокаТаблицы.Партнер, ТаблицаСвязейПартнеров, СтрокиДерева, ТаблицаВыведенныхСвязей, Дерево);
	КонецЦикла;
	
	Если ВывестиПроекты Тогда
		МассивПроектов = ВернутьПроектыПоКлиенту(Холдинг);
		Для Каждого ПроектКлиента Из МассивПроектов Цикл
			НоваяСтрока = Дерево.Строки.Добавить();
			НоваяСтрока.Партнер1 = "-";
			НоваяСтрока.Партнер2 = ПроектКлиента;
			НоваяСтрока.ВидСвязиПредставление = "Проект";
		КонецЦикла;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоРезультат");
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
	СтрокиДерева = ДеревоРезультат.ПолучитьЭлементы();
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Элементы.ДеревоРезультат.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("Партнер") Тогда
		ВызватьИсключение НСтр("ru = 'Отчет не предназначен для непосредственного использования.'");
	КонецЕсли;
	
	Если Параметры.Свойство("Партнер") Тогда
		Если	ТипЗнч(Параметры.Партнер) = Тип("СправочникСсылка.Партнеры")
			И	ЗначениеЗаполнено(Параметры.Партнер)
			И	Не Параметры.Партнер.ЭтоГруппа Тогда
			//
			Партнер = Параметры.Партнер;
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Партнер) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Заголовок = НСтр("ru = 'Структура взаимосвязей клиента'") + " """ + Строка(Партнер) + """";
	
	ОбновитьНаСервере();
КонецПроцедуры
