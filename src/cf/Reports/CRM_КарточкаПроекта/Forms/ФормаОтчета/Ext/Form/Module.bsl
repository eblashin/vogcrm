
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ  

&НаСервере
Процедура СформироватьОтчет()
	ТаблицаОтчета.Очистить();
	ОбъектОтчет =  РеквизитФормыВЗначение("Отчет");
	
	ОбъектОтчет.СформироватьОтчет(ТаблицаОтчета, Проекты.ВыгрузитьЗначения());
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	Перем Настройки;
	
	Настройки = Новый Структура;
	Настройки.Вставить("Этапы", Отчет.Этапы);
	Настройки.Вставить("КонтрольныеТочки", Отчет.КонтрольныеТочки);
	Настройки.Вставить("ТекущиеЗадачи",Отчет.КонтрольныеТочки);
	                                    
	CRM_ХранилищеНастроек.Сохранить("Отчет.CRM_КарточкаПроекта", "CRM_ФормаОтчета", Настройки);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	Перем ЗначениеНастроек;
	
	ЗначениеНастроек = CRM_ХранилищеНастроек.Загрузить("Отчет.CRM_КарточкаПроекта", "CRM_ФормаОтчета");
	Если ЗначениеНастроек = Неопределено Тогда
		Отчет.Этапы				= Истина;
		Отчет.КонтрольныеТочки	= Истина;
		Отчет.ТекущиеЗадачи		= Истина;
		
	ИначеЕсли ТипЗнч(ЗначениеНастроек) = Тип("Структура") Тогда
		ЗначениеНастроек.Свойство("Этапы", Отчет.Этапы);
		ЗначениеНастроек.Свойство("КонтрольныеТочки", Отчет.КонтрольныеТочки);
		ЗначениеНастроек.Свойство("ТекущиеЗадачи", Отчет.ТекущиеЗадачи);
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УправлениеВидимостью()
	Если Не ПравоДоступа("Чтение", Метаданные.Справочники.CRM_ЭтапыПроектов) Тогда
		Отчет.Этапы = Ложь;
		Элементы.Этапы.Видимость = Ложь;
	КонецЕсли;
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.CRM_КонтрольнаяТочкаПроекта) Тогда
		Отчет.КонтрольныеТочки = Ложь;
		Элементы.КонтрольныеТочки.Видимость = Ложь;
	КонецЕсли;
	Если Не ПравоДоступа("Чтение", Метаданные.Задачи.ЗадачаИсполнителя) Тогда
		Отчет.ТекущиеЗадачи = Ложь;
		Элементы.ТекущиеЗадачи.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("Проект") Тогда
		ВызватьИсключение НСтр("ru = 'Отчет не предназначен для непосредственного использования.'");
	КонецЕсли;
	
	Если Параметры.Свойство("Проект") Тогда
		Если ТипЗнч(Параметры.Проект) = Тип("СправочникСсылка.Проекты") Тогда
			Проекты.Добавить(Параметры.Проект);
		ИначеЕсли ТипЗнч(Параметры.Проект) = Тип("Массив") Тогда
			Проекты.ЗагрузитьЗначения(Параметры.Проект);
		КонецЕсли;
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ЗагрузитьНастройки();
		УправлениеВидимостью();
		СформироватьОтчет();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПриЗакрытии".
//
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	
	СохранитьНастройки();
	
КонецПроцедуры // ПриЗакрытии()

&НаКлиенте
Процедура ТаблицаОтчетаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Расшифровка) Тогда
		Если ТипЗнч(Расшифровка) = Тип("Строка") Тогда
			СтандартнаяОбработка = Ложь;
			
			Если Расшифровка = "ПлановыеЗатратыПоПроекту" Тогда
				Если Проекты.Количество() > 0 И ЗначениеЗаполнено(Проекты[0].Значение) Тогда
					ПараметрыФормы = Новый Структура("Отбор,КлючВарианта,СформироватьПриОткрытии", Новый Структура("Проект", Проекты[0].Значение), "Основной", Истина);
					ОткрытьФорму("Отчет.CRM_ПлановыеЗатратыПроектов.Форма", ПараметрыФормы, ЭтотОбъект, Новый УникальныйИдентификатор());
				КонецЕсли;
				
			КонецЕсли;
		ИначеЕсли ТипЗнч(Расшифровка) = Тип("СправочникСсылка.CRM_ЭтапыПроектов") Тогда
			СтандартнаяОбработка = Ложь;
			
			ПараметрыФормы = Новый Структура("Отбор,КлючВарианта,СформироватьПриОткрытии", Новый Структура("Этап", Расшифровка), "Основной", Истина);
			ОткрытьФорму("Отчет.CRM_ПлановыеЗатратыПроектов.Форма", ПараметрыФормы, ЭтотОбъект, Новый УникальныйИдентификатор());
		КонецЕсли;
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

#Область КомандыФормы

&НаКлиенте
Процедура Сформировать(Команда)
	ОчиститьСообщения();
	СформироватьОтчет();
КонецПроцедуры 

&НаКлиенте
Процедура ЭтапыПриИзменении(Элемент)
	Сформировать(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеТочкиПриИзменении(Элемент)
	Сформировать(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ТекущиеЗадачиПриИзменении(Элемент)
	Сформировать(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

#КонецОбласти

#КонецОбласти
