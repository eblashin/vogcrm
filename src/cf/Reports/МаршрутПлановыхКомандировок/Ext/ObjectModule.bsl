
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Задать настройки формы отчета.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения, Неопределено - 
//   КлючВарианта - Строка, Неопределено - 
//   Настройки - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриОпределенииПараметровВыбора = Истина;
	
КонецПроцедуры

// Вызывается в форме отчета перед выводом настройки.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения, Неопределено - форма отчета.
//   СвойстваНастройки - Структура - описание настройки отчета, которая будет выведена в форме отчета.
//       * ОписаниеТипов - ОписаниеТипов - тип настройки.
//       * ЗначенияДляВыбора - СписокЗначений - объекты, которые будут предложены пользователю в списке
//           выбора. Дополняет список объектов, уже выбранных пользователем ранее.
//       * ЗапросЗначенийВыбора - Запрос - возвращает объекты, которыми необходимо дополнить ЗначенияДляВыбора.
//           Первой колонкой (с 0м индексом) должен выбираться объект,
//           который следует добавить в ЗначенияДляВыбора.Значение.
//           Для отключения автозаполнения
//           в свойство ЗапросЗначенийВыбора.Текст следует записать пустую строку.
//       * ОграничиватьВыборУказаннымиЗначениями - Булево - когда Истина, то выбор пользователя будет
//           ограничен значениями, указанными в ЗначенияДляВыбора (его конечным состоянием).
//
// См. также:
//   ОтчетыПереопределяемый.ПриОпределенииПараметровВыбора().
//
Процедура ПриОпределенииПараметровВыбора(Форма, СвойстваНастройки) Экспорт
	
	Если ТипЗнч(СвойстваНастройки.ЭлементКД) = Тип("ЭлементОтбораКомпоновкиДанных")
		И СвойстваНастройки.ОписаниеТипов.СодержитТип(Тип("СправочникСсылка.CRM_ЗначенияКлассификаторов")) Тогда
		
		Если СвойстваНастройки.ЭлементКД.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтатусТТ") Тогда
			
			СтатусыТТ = Новый Массив;
			СтатусыТТ.Добавить(Справочники.CRM_ЗначенияКлассификаторов.ПолучитьСсылку(Новый УникальныйИдентификатор("f84779ae-9a73-11e8-89fa-005056bc3fe8")));
			СтатусыТТ.Добавить(Справочники.CRM_ЗначенияКлассификаторов.ПолучитьСсылку(Новый УникальныйИдентификатор("005e9af2-9a74-11e8-89fa-005056bc3fe8")));
			СтатусыТТ.Добавить(Справочники.CRM_ЗначенияКлассификаторов.ПолучитьСсылку(Новый УникальныйИдентификатор("047f780f-8b44-11e9-9b11-005056bcd3e3")));
			
			СвойстваНастройки.ЗначенияДляВыбора.ЗагрузитьЗначения(СтатусыТТ);
			
		Иначе
			
			ИмяЗначенияКлассификатора 	= "";
			ИмяСтрокой 					= Строка(СвойстваНастройки.ЭлементКД.ЛевоеЗначение);
			
			Если СтрНайти(ИмяСтрокой, "[") > 0 Тогда
			
				ЗаменяемаяЧасть = Лев(ИмяСтрокой, СтрНайти(ИмяСтрокой, "["));
				ИмяЗначенияКлассификатора 	= СтрЗаменить(ИмяСтрокой, ЗаменяемаяЧасть, "");
				ИмяЗначенияКлассификатора 	= СтрЗаменить(ИмяЗначенияКлассификатора, "]", "");
			
			ИначеЕсли СтрНайти(ИмяСтрокой, "(") > 0 Тогда
				
				ЗаменяемаяЧасть = Лев(ИмяСтрокой, СтрНайти(ИмяСтрокой, "("));
				ИмяЗначенияКлассификатора 	= СтрЗаменить(ИмяСтрокой, ЗаменяемаяЧасть, "");
				ИмяЗначенияКлассификатора 	= СтрЗаменить(ИмяЗначенияКлассификатора, ")", "");
				
			Иначе
				
				ИмяЗначенияКлассификатора = ИмяСтрокой;
				
			КонецЕсли;
			
			Если Не ПустаяСтрока(ИмяЗначенияКлассификатора) Тогда
				
				СвойстваНастройки.ЗапросЗначенийВыбора.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	CRM_ЗначенияКлассификаторов.Ссылка КАК Объект
				|ИЗ
				|	Справочник.CRM_ЗначенияКлассификаторов КАК CRM_ЗначенияКлассификаторов
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
				|			CRM_Классификаторы.Ссылка КАК Ссылка
				|		ИЗ
				|			ПланВидовХарактеристик.CRM_Классификаторы КАК CRM_Классификаторы
				|		ГДЕ
				|			CRM_Классификаторы.Наименование = &Наименование) КАК ВложенныйЗапрос
				|		ПО (CRM_ЗначенияКлассификаторов.Владелец = ВложенныйЗапрос.Ссылка)
				|ГДЕ
				|	CRM_ЗначенияКлассификаторов.ПометкаУдаления = ЛОЖЬ";
				
				СвойстваНастройки.ЗапросЗначенийВыбора.Параметры.Вставить("Наименование", ИмяЗначенияКлассификатора);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли