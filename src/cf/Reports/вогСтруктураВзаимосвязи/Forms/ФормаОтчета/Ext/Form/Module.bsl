
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отчет.ДанныеКлиента 			= Истина;
	Отчет.КонтактнаяИнформация 		= Истина;
	Отчет.КонтактныеЛица 			= Истина;
	Отчет.ЮридическиеЛица 			= Истина;
	Отчет.ТорговыеТочки 			= Истина;
	Отчет.РаспределительныйЦентр 	= Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаОтчетаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)

	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		СтандартнаяОбработка 	= Ложь;
		
		ДанныеРасшифровки		= ИнициализироватьРасшифровку(Расшифровка);
		ИсточникНастроек		= Новый ИсточникДоступныхНастроекКомпоновкиДанных(СформироватьПодменюРасшифровки());
		
		ОбработкаРасшифровки 	= Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки,ИсточникНастроек);
		ДоступныеДействия 		= Новый СписокЗначений;
		ДоступныеДействия.Добавить("ОткрытьСписокТТ",НСтр("ru = 'Отфильтровать по юр-лицу ТТ'"),,БиблиотекаКартинок.CRM_Задача);
		ДоступныеДействия.Добавить("ВыборТТ",НСтр("ru = 'Выбор ТТ из списка'"),,БиблиотекаКартинок.Подменю);
		
		ОсновныеДействия 		= Новый Массив;
		ОсновныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.Нет);
	
		ОписаниеОповещения 		= Новый ОписаниеОповещения("РасшифровкаОтчетаМеню",ЭтотОбъект,Расшифровка);
		ОбработкаРасшифровки.ПоказатьВыборДействия(ОписаниеОповещения,Новый ИдентификаторРасшифровкиКомпоновкиДанных(0),ОсновныеДействия,ДоступныеДействия);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	СформироватьОтчетСервер();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьОтчетСервер()

	ПараметрыФормированияОтчета = Новый Структура;
	ПараметрыФормированияОтчета.Вставить("ДанныеКлиента"			,Отчет.ДанныеКлиента);
	ПараметрыФормированияОтчета.Вставить("КонтактнаяИнформация"		,Отчет.КонтактнаяИнформация);
	ПараметрыФормированияОтчета.Вставить("КонтактныеЛица"			,Отчет.КонтактныеЛица);
	ПараметрыФормированияОтчета.Вставить("ЮридическиеЛица"			,Отчет.ЮридическиеЛица);
	ПараметрыФормированияОтчета.Вставить("ТорговыеТочки"			,Отчет.ТорговыеТочки);
	ПараметрыФормированияОтчета.Вставить("РаспределительныйЦентр"	,Отчет.РаспределительныйЦентр);
	
	Отчеты.вогСтруктураВзаимосвязи.СформироватьОтчет(ТаблицаОтчета,Отчет.Объект,ПараметрыФормированияОтчета);
	
КонецПроцедуры

&НаСервере
Функция ИнициализироватьРасшифровку(Расшифровка)
	
	СписокПолейРасшифровки = Новый ЗначенияПолейРасшифровкиКомпоновкиДанных;
	СтрокаРасшифровки			= СписокПолейРасшифровки.Добавить();
	СтрокаРасшифровки.Значение 	= Расшифровка;
	СтрокаРасшифровки.Поле 		= "";
	
	ТекущаяРасшифровка = Новый ДанныеРасшифровкиКомпоновкиДанных;
	ТекущаяРасшифровка.Элементы.Добавить(Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля"), ,СписокПолейРасшифровки);
	
	Возврат	 ПоместитьВоВременноеХранилище(ТекущаяРасшифровка,УникальныйИдентификатор);

КонецФункции

&НаСервере
Функция СформироватьПодменюРасшифровки()
	Возврат ПоместитьВоВременноеХранилище(Новый СхемаКомпоновкиДанных);
КонецФункции

&НаКлиенте
Процедура РасшифровкаОтчетаМеню(ВыбранноеДействие,ВыбранноеЗначение,ДополнительныйПараметры) Экспорт
	
	Если ВыбранноеДействие = "ВыборТТ" Тогда
		СписокТТ = РасшифровкаСервер(ДополнительныйПараметры.ИмяТаблицы,ДополнительныйПараметры.Значение);
		Если СписокТТ.Количество() <> 0 Тогда
			ОП = Новый ОписаниеОповещения("ЗавершениеОбработкаВыбораОтчет",ЭтотОбъект);
			СписокТТ.ПоказатьВыборЭлемента(ОП,"Выберите ТТ");
		КонецЕсли;
	ИначеЕсли ВыбранноеДействие = "ОткрытьСписокТТ" Тогда
		ЗавершениеОтборПоСписку(ДополнительныйПараметры);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция РасшифровкаСервер(ИмяТаблицы, ЗначениеРасшифровки)
	
	Если ИмяТаблицы = "ЮридическоеЛицо" Тогда
		Возврат Отчеты.вогСтруктураВзаимосвязи.ПолучитьТорговыеТочкиПоЮрЛицу(ЗначениеРасшифровки);
	ИначеЕсли ИмяТаблицы = "РЦ" Тогда
		Возврат Отчеты.вогСтруктураВзаимосвязи.ПолучитьТорговыеТочкиПоРЦ(ЗначениеРасшифровки);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗавершениеОтборПоСписку(ВыбранноеЗначение)
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		
		ПараметрыФормированияОтчета = Новый Структура;
		ПараметрыФормированияОтчета.Вставить("ДанныеКлиента"			,Отчет.ДанныеКлиента);
		ПараметрыФормированияОтчета.Вставить("КонтактнаяИнформация"		,Отчет.КонтактнаяИнформация);
		ПараметрыФормированияОтчета.Вставить("КонтактныеЛица"			,Отчет.КонтактныеЛица);
		ПараметрыФормированияОтчета.Вставить("ЮридическиеЛица"			,Отчет.ЮридическиеЛица);
		ПараметрыФормированияОтчета.Вставить("ТорговыеТочки"			,Отчет.ТорговыеТочки);
		ПараметрыФормированияОтчета.Вставить("РаспределительныйЦентр"	,Отчет.РаспределительныйЦентр);
		
		ЗавершениеОбработкаВыбораОтчетСервер(ПараметрыФормированияОтчета,ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеОбработкаВыбораОтчет(ВыбранноеЗначение,ДополнительныеПараметры) Экспорт

	Если ВыбранноеЗначение <> Неопределено Тогда
		
		ПараметрыФормированияОтчета = Новый Структура;
		ПараметрыФормированияОтчета.Вставить("ДанныеКлиента"			,Отчет.ДанныеКлиента);
		ПараметрыФормированияОтчета.Вставить("КонтактнаяИнформация"		,Отчет.КонтактнаяИнформация);
		ПараметрыФормированияОтчета.Вставить("КонтактныеЛица"			,Отчет.КонтактныеЛица);
		ПараметрыФормированияОтчета.Вставить("ЮридическиеЛица"			,Отчет.ЮридическиеЛица);
		ПараметрыФормированияОтчета.Вставить("ТорговыеТочки"			,Отчет.ТорговыеТочки);
		ПараметрыФормированияОтчета.Вставить("РаспределительныйЦентр"	,Отчет.РаспределительныйЦентр);
		
		НоваяОбласть = Неопределено;
		ЗавершениеОбработкаВыбораОтчетСервер(ПараметрыФормированияОтчета,ВыбранноеЗначение.Значение);
		
		НоваяОбласть = ТаблицаОтчета.НайтиЗначение(ВыбранноеЗначение.Значение);
		
		Если НоваяОбласть <> Неопределено Тогда
			Элементы.ТаблицаОтчета.ТекущаяОбласть = НоваяОбласть;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗавершениеОбработкаВыбораОтчетСервер(ПараметрыФормированияОтчета,ВыбранноеЗначение)
	Отчеты.вогСтруктураВзаимосвязи.СформироватьОтчетСОтбором(ТаблицаОтчета,Отчет.Объект,ПараметрыФормированияОтчета,ВыбранноеЗначение);
КонецПроцедуры

#КонецОбласти