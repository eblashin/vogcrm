
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	КатегорияТТКлассификатор = Справочники.CRM_ЗначенияКлассификаторов.ПолучитьСсылку(Новый УникальныйИдентификатор("ca87c1d0-75a5-11ea-87ff-005056bc3fe8")).Владелец;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КатегорияТТКлассификатор", КатегорияТТКлассификатор);
	НаправлениеП = Пользователи.ТекущийПользователь().CRM_НаправлениеДеятельности;
	Если ЗначениеЗаполнено(НаправлениеП) тогда
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("НаправлениеДеятельности",НаправлениеП );
	КонецЕсли;
	
	// +++ VOG Кулаков П.Л. 21.07.2021 DEV-718
	ПараметрНабор = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Набор"));
	СписокКоллекций = Новый СписокЗначений;
	Если ПараметрНабор.Использование И ЗначениеЗаполнено(ПараметрНабор.Значение) Тогда
		
		МассивКоллекций = ПараметрНабор.Значение.СоставНабора.ВыгрузитьКолонку("Коллекция");
		СписокКоллекций.ЗагрузитьЗначения(МассивКоллекций);
		
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ОтборПоНабору",Истина);
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("СписокКоллекцийИзНабора",СписокКоллекций);
		
	Иначе
		
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ОтборПоНабору",Ложь);
		Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("СписокКоллекцийИзНабора",СписокКоллекций);
		
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	
	// Создание внешнего источника данных
	ПараметрФиксацияСлева = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ФиксацияСлева");
	СтандартнаяОбработка = Ложь; // отключаем стандартный вывод отчета - будем выводить программно 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; // Создаем компоновщик макета 
	// Инициализируем макет компоновки используя схему компоновки данных 
	// и созданные ранее настройки и данные расшифровки
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры
