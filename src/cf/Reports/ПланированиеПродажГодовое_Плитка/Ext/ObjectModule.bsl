
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	ТекПользователь = Пользователи.ТекущийПользователь();
	ДТН = Справочники.РолиИсполнителей.НайтиПоКоду("000000003");
	ГенДир  = Справочники.РолиИсполнителей.НайтиПоКоду("000000004");  
	ФинДир = Справочники.РолиИсполнителей.НайтиПоКоду("000000009");   
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Разрешенные
	               |	ИсполнителиЗадач.РольИсполнителя КАК РольИсполнителя
	               |ИЗ
	               |	РегистрСведений.ИсполнителиЗадач КАК ИсполнителиЗадач
	               |ГДЕ
	               |	ИсполнителиЗадач.Исполнитель = &Исполнитель";
	Запрос.УстановитьПараметр("Исполнитель",Пользователи.ТекущийПользователь());
	Роли = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("РольИсполнителя");
	ЕстьДТН = Роли.Найти(ДТН);
	ЕстьГенДир = Роли.Найти(ГенДир);
	естьФинДир = роли.Найти(ФинДир);
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КлассификаторФорматТРТ",ПланыВидовХарактеристик.CRM_Классификаторы.ПолучитьСсылку(Новый УникальныйИдентификатор("47b0ee76-ada2-11e7-80ce-08606e7382bc"))); 
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КлассификаторСтатусТТ",ПланыВидовХарактеристик.CRM_Классификаторы.ПолучитьСсылку(Новый УникальныйИдентификатор("dcdbe20f-9a73-11e8-89fa-005056bc3fe8"))); 
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КлассификаторКлассификацияТТ",ПланыВидовХарактеристик.CRM_Классификаторы.ПолучитьСсылку(Новый УникальныйИдентификатор("b3d84c6b-7581-11ea-87ff-005056bc3fe8"))); 
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("КлассификаторПлощадьОтдела",ПланыВидовХарактеристик.CRM_Классификаторы.ПолучитьСсылку(Новый УникальныйИдентификатор("aa8de7b3-1aec-11e8-92c3-005056bcf152"))); 
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("РольДоступнаПолныеПрава",РольДоступна("ПолныеПрава") или ЕстьДТН<>Неопределено или ЕстьГенДир<>Неопределено или естьФинДир<>Неопределено);
	УстановитьПривилегированныйРежим(Истина);
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Подчиненные",Новый Массив(ПараметрыСеанса.вогПодчиненныеСотрудники));
	УстановитьПривилегированныйРежим(Ложь);
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Подразделение",Справочники.СтруктураПредприятия.ПолучитьОбособленноеПодразделение(ТекПользователь.Подразделение));
	
	СписокDIY = Новый СписокЗначений;
	СписокDIY.Добавить(Справочники.CRM_ЗначенияКлассификаторов.ПолучитьСсылку(Новый УникальныйИдентификатор("4fc40649-ada2-11e7-80ce-08606e7382bc")));
	СписокDIY.Добавить(Справочники.CRM_ЗначенияКлассификаторов.ПолучитьСсылку(Новый УникальныйИдентификатор("64a60c68-06d3-11eb-8f2a-005056bcd3e3")));
	СписокDIY.Добавить(Справочники.CRM_ЗначенияКлассификаторов.ПолучитьСсылку(Новый УникальныйИдентификатор("6cac4f07-06d3-11eb-8f2a-005056bcd3e3")));
	
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ФорматDIY",СписокDIY); 
	
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("СтатусТТЗакрыта",Справочники.CRM_ЗначенияКлассификаторов.ПолучитьСсылку(Новый УникальныйИдентификатор("005e9af3-9a74-11e8-89fa-005056bc3fe8"))); 
	
	// ++ VOG Солодов В.В. 14.10.2021 CRM-1252
	// Перенесено в схему компоновки, связь с РС НоменклатурныеГруппыСегмента
	// До изменения
	//СписокНоменклатурныхГрупп = Новый Массив;
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("3d9d7ea6-9214-11e3-ba76-005056ac259f")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("0724a7b8-9214-11e3-ba76-005056ac259f")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("fe9b747f-66b5-11e3-b895-005056ac8899")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("890358c7-9215-11e3-ba76-005056ac259f")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("6305ae54-66b2-11e3-b895-005056ac8899")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("beb8fcb7-9215-11e3-ba76-005056ac259f")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("4fb1c538-8af2-11e6-bdbb-005056acd97c")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("ac73bba4-d609-11e8-90d6-005056acd97c")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("12f8f600-6868-11e7-9071-005056acd97c")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("4f495708-9215-11e3-ba76-005056ac259f")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("7d97e0a1-ec17-11e5-b10e-005056acd97c")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("dbded927-9214-11e3-ba76-005056ac259f")));
	//СписокНоменклатурныхГрупп.Добавить(Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("d9c62157-8b47-11e9-b50e-005056acd97c")));
	//
	//НовОтбор = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//НовОтбор.Использование = Истина;
	//НовОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НоменклатурнаяГруппа");
	//НовОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	//НовОтбор.ПравоеЗначение = СписокНоменклатурныхГрупп;
	// -- VOG Солодов В.В. 14.10.2021 CRM-1252
	
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	
	
	// Создание внешнего источника данных
	СтандартнаяОбработка = Ложь; // отключаем стандартный вывод отчета - будем выводить программно 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; // Создаем компоновщик макета 
	// Инициализируем макет компоновки используя схему компоновки данных 
	// и созданные ранее настройки и данные расшифровки
	СхемаКомпоновкиДанных = ПолучитьМакет("СхемаПлитка");
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	ПараметрФиксацияСверху = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ФиксацияСверху");
	ПараметрФиксацияСлева = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ФиксацияСлева");
	ДокументРезультат.ФиксацияСверху = ПараметрФиксацияСверху.Значение;
	ДокументРезультат.ФиксацияСлева = ПараметрФиксацияСлева.Значение;
	
	
КонецПроцедуры
