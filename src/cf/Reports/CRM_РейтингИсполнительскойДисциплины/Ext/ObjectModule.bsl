Функция ПолучитьТаблицуСвоевременностиПоСотрудникам()

	УстановитьПривилегированныйРежим(Истина);
	
	Отчет		 	= ЭтотОбъект;
	
	Запрос			= Новый Запрос;
	Запрос.Текст	= 
	"ВЫБРАТЬ
	|	ЗадачаИсполнителя.Исполнитель,
	|	КОЛИЧЕСТВО(ЗадачаИсполнителя.Выполнена) КАК КоличествоВсего
	|ПОМЕСТИТЬ ВыполненоВсего
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ
	|	ЗадачаИсполнителя.Выполнена
	|	И ЗадачаИсполнителя.Дата МЕЖДУ &Дата1 И &Дата2 
	|СГРУППИРОВАТЬ ПО
	|	ЗадачаИсполнителя.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадачаИсполнителя.Исполнитель,
	|	КОЛИЧЕСТВО(ЗадачаИсполнителя.Выполнена) КАК КоличествоВСрок
	|ПОМЕСТИТЬ ВыполненоВСрок
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ
	|	ЗадачаИсполнителя.Выполнена
	|	И ЗадачаИсполнителя.ДатаИсполнения <= ЗадачаИсполнителя.СрокИсполнения
	|	И ЗадачаИсполнителя.Дата МЕЖДУ &Дата1 И &Дата2
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗадачаИсполнителя.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадачаИсполнителя.Исполнитель,
	|	КОЛИЧЕСТВО(ЗадачаИсполнителя.Выполнена) КАК КоличествоВсего
	|ПОМЕСТИТЬ АктивноВсего
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ
	|	НЕ ЗадачаИсполнителя.Выполнена
	|	И ЗадачаИсполнителя.Дата МЕЖДУ &Дата1 И &Дата2
	|СГРУППИРОВАТЬ ПО
	|	ЗадачаИсполнителя.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадачаИсполнителя.Исполнитель,
	|	КОЛИЧЕСТВО(ЗадачаИсполнителя.Выполнена) КАК КоличествоВСрок
	|ПОМЕСТИТЬ АктивноВСрок
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ
	|	НЕ ЗадачаИсполнителя.Выполнена
	|	И &ТекущаяДата <= ЗадачаИсполнителя.СрокИсполнения
	|	И ЗадачаИсполнителя.Дата МЕЖДУ &Дата1 И &Дата2
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗадачаИсполнителя.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыполненоВсего.Исполнитель,
	|	ВыполненоВсего.КоличествоВсего,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВыполненоВсего.КоличествоВсего, 0) = 0
	|			ТОГДА 100
	|		ИНАЧЕ ВЫРАЗИТЬ(100 * ЕСТЬNULL(ВыполненоВСрок.КоличествоВСрок, 0) / ЕСТЬNULL(ВыполненоВсего.КоличествоВсего, 0) КАК ЧИСЛО(10, 2))
	|	КОНЕЦ КАК ЗавЛ
	|ПОМЕСТИТЬ ПодитогЗавершены
	|ИЗ
	|	ВыполненоВсего КАК ВыполненоВсего
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыполненоВСрок КАК ВыполненоВСрок
	|		ПО ВыполненоВсего.Исполнитель = ВыполненоВСрок.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктивноВсего.Исполнитель,
	|	АктивноВсего.КоличествоВсего,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(АктивноВсего.КоличествоВсего, 0) = 0
	|			ТОГДА 100
	|		ИНАЧЕ ВЫРАЗИТЬ(100 * ЕСТЬNULL(АктивноВСрок.КоличествоВСрок, 0) / ЕСТЬNULL(АктивноВсего.КоличествоВсего, 0) КАК ЧИСЛО(10, 2))
	|	КОНЕЦ КАК АктЛ
	|ПОМЕСТИТЬ ПодитогАктивны
	|ИЗ
	|	АктивноВсего КАК АктивноВсего
	|		ЛЕВОЕ СОЕДИНЕНИЕ АктивноВСрок КАК АктивноВСрок
	|		ПО АктивноВсего.Исполнитель = АктивноВСрок.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодитогЗавершены.Исполнитель КАК Наименование,
	|	ПодитогЗавершены.ЗавЛ,
	|	ПодитогАктивны.АктЛ
	|ИЗ
	|	ПодитогЗавершены КАК ПодитогЗавершены
	|		ПОЛНОЕ СОЕДИНЕНИЕ ПодитогАктивны КАК ПодитогАктивны
	|		ПО ПодитогЗавершены.Исполнитель = ПодитогАктивны.Исполнитель";
	
	Запрос.УстановитьПараметр("Дата1"		,НачалоДня(Отчет.Дата1));
	Запрос.УстановитьПараметр("Дата2"		,КонецДня(Отчет.Дата2));
	Запрос.УстановитьПараметр("ТекущаяДата" ,ТекущаяДатаСеанса());
	
	ТзСотрудники	= Неопределено;
	ТзСотрудники	= Запрос.Выполнить().Выгрузить();
	ТзСотрудники.Свернуть("Наименование","ЗавЛ,АктЛ");
	//ТзСотрудники.Колонки.Добавить("ГдеРаботает");
	//ТзСотрудники.Колонки.Добавить("ЗавОЕ");
	//ТзСотрудники.Колонки.Добавить("АктОЕ");
	ТзСотрудники.Колонки.Добавить("Всего");
	//ТзСотрудники.ЗаполнитьЗначения(0,"ЗавОЕ,АктОЕ,Всего");
	//ТзСотрудники.ЗаполнитьЗначения("","ГдеРаботает");
	
	Возврат ТзСотрудники;

КонецФункции // ПолучитьТаблицуСвоевременностиПоСотрудникам()

Функция ЗаполнитьОтчет(Таб) Экспорт

	Таб		= Новый ТабличныйДокумент;
	Таб.Очистить();
	
	МсДокументыСМК	= Новый Массив;
	
	Макет	= ПолучитьМакет("Макет");

	ОблЗ	= Макет.ПолучитьОбласть("Заголовок");
	_ОблС	= Макет.ПолучитьОбласть("Строка");
	
	// выводим заголовок отчета
	Если Истина Тогда
		
		//ОблЗ.Параметры.Заголовок	= "Рейтинг исполнительской дисциплины";
		//ОблЗ.Параметры.СтрокаОтбора	= "Период: "+Формат(Дата1,"ДФ=dd.MM.yyyy")+" - "+Формат(Дата2,"ДФ=dd.MM.yyyy");
		
		//Если ЗначениеЗаполнено(ГруппаКомпаний) Тогда
		//
		//	ОблЗ.Параметры.СтрокаОтбора	= ОблЗ.Параметры.СтрокаОтбора + 
		//									?(ПустаяСтрока(ОблЗ.Параметры.СтрокаОтбора),"",". ") +
		//									"По группе компаний: "+ГруппаКомпаний;
		//
		//КонецЕсли; 
		//
		//Если ЗначениеЗаполнено(Компания) Тогда
		//
		//	ОблЗ.Параметры.СтрокаОтбора	= ОблЗ.Параметры.СтрокаОтбора + 
		//									?(ПустаяСтрока(ОблЗ.Параметры.СтрокаОтбора),"",". ") +
		//									"По компании: "+Компания;
		//
		//КонецЕсли; 
		//
		//Если ЗначениеЗаполнено(ОргЕдиница) Тогда
		//
		//	ОблЗ.Параметры.СтрокаОтбора	= ОблЗ.Параметры.СтрокаОтбора + 
		//									?(ПустаяСтрока(ОблЗ.Параметры.СтрокаОтбора),"",". ") +
		//									"По орг.единице: "+ОргЕдиница;
		//
		//КонецЕсли; 
		
		Таб.Вывести(ОблЗ);
	
	КонецЕсли; 
	
	//ТзОргЕдиницы1	= Неопределено;
	//ТзОргЕдиницы1	= ПолучитьТаблицуПоОргЕдиницамЗавершено();
	//
	//ТзОргЕдиницы2	= Неопределено;
	//ТзОргЕдиницы2	= ПолучитьТаблицуПоОргЕдиницамАктивно();
	//
	ТзСотрудники	= Неопределено;
	ТзСотрудники	= ПолучитьТаблицуСвоевременностиПоСотрудникам();
	
	// получаем итоговую таблицу
	Для каждого Стр Из ТзСотрудники Цикл
		
		//ОЕСсылка		= Неопределено;
		//ОЕСсылка		= уэкПраваДоступа.ПолучитьОргЕдиницуФизЛица(Стр.Наименование);
		
		//Поиск			= Новый Структура;
		//Поиск.Вставить("ОргЕдиница",ОЕСсылка);
		//
		// получаем своевременность по завершенным для орг.единицы сотрудника
		//НайденныеСтроки	= Неопределено;
		//НайденныеСтроки	= ТзОргЕдиницы1.НайтиСтроки(Поиск);
		//Если НайденныеСтроки.Количество()>0 Тогда
		//
		//	НайденнаяСтрока	= Неопределено;	
		//	НайденнаяСтрока	= НайденныеСтроки[0];	
		//	
		//	Стр.ЗавОЕ		= НайденнаяСтрока.ВСрокПроцент;
		//	
		//Иначе
		//	
		//	Стр.ЗавОЕ		= 100;
		//	
		//КонецЕсли; 
		
		// получаем своевременность по незавершенным для орг.единицы сотрудника
		//НайденныеСтроки	= Неопределено;
		//НайденныеСтроки	= ТзОргЕдиницы2.НайтиСтроки(Поиск);
		//Если НайденныеСтроки.Количество()>0 Тогда
		//
		//	НайденнаяСтрока	= Неопределено;	
		//	НайденнаяСтрока	= НайденныеСтроки[0];	
		//	
		//	Стр.АктОЕ		= НайденнаяСтрока.ВСрокПроцент;
		//	
		//Иначе
		//	
		//	Стр.АктОЕ		= 100;
		//	
		//КонецЕсли; 
		
		// рассчитываем интегральный коэффициент
		Результат		= 0;
		Результат		= Стр.АктЛ/100 * Стр.ЗавЛ/100;
						
		Результат		= Окр(100*Результат,2,РежимОкругления.Окр15как20);
		
		Стр.Всего		= Результат;
		
		// заполняем где работает сотрудник
		//Стр.ГдеРаботает	= "";
		//Стр.ГдеРаботает	= "" + ОЕСсылка + ", " + Стр.Наименование.Компания;
		
	КонецЦикла; 
	
	// сортируем для определения рейтинга
	ТзСотрудники.Сортировать("Всего Убыв, ЗавЛ Убыв, АктЛ Убыв, Наименование Возр");
	
	Место	= 0;
	
	// выводим отчет
	Для каждого Стр Из ТзСотрудники Цикл
		
		Если НЕ ЗначениеЗаполнено(Стр.Наименование) Тогда
			Продолжить;
		КонецЕсли;
		Место	= Место + 1;
		
		_ОблС.Параметры.Заполнить(Стр);
		_ОблС.Параметры.Место	= Место;
		Таб.Вывести(_ОблС);
	
	КонецЦикла; 
	
	Таб.ФиксацияСверху	= 4;
	Таб.ФиксацияСлева	= 4;
	
	Возврат Истина;
	
КонецФункции

