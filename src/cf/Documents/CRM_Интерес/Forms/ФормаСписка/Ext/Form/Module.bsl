
&НаКлиентеНаСервереБезКонтекста
Функция НастройкаПоляОтображенияСодержанияПолучитьОграничениеТиповСписка()
	Возврат Новый ОписаниеТипов("ДокументСсылка.CRM_Интерес");
КонецФункции

&НаКлиенте
Процедура ПолеСодержаниеПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	// Поле отображения содержания.
	CRM_ОбщегоНазначенияКлиент.НастройкиПолейОтображенияСодержанияПолеСодержаниеПриНажатии(ДанныеСобытия, СтандартнаяОбработка, НастройкаПоляОтображенияСодержанияПолучитьОграничениеТиповСписка());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПанельИнформацииПоДаннымИнтереса(Интерес)
	
	// Поле отображения содержания.
	Если Элементы.ГруппаПанельИнформации.Видимость Тогда
		Если ТипЗнч(Интерес) = Тип("ДокументСсылка.CRM_Интерес") Тогда
			Содержание = CRM_ОбщегоНазначенияСервер.НастройкиПолейОтображенияСодержанияПолучитьСодержание(Интерес, НастройкаПоляОтображенияСодержанияПолучитьОграничениеТиповСписка());
			Если Содержание <> ПолеОтображениеСодержания Тогда
				ПолеОтображениеСодержания = Содержание;
			КонецЕсли;
		Иначе
			Содержание = CRM_ОбщегоНазначенияКлиентСервер.НастройкиПолейОтображенияСодержанияПолучитьПустоеСодержание();
			Если Содержание <> ПолеОтображениеСодержания Тогда
				ПолеОтображениеСодержания = Содержание;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Интерес = Неопределено Тогда Возврат КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАктивизациюСтрокиСписка()
	
	//ЗаполнитьПанельИнформацииПоДаннымИнтереса(Элементы.Список.ТекущаяСтрока);
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		ЗаполнитьПанельИнформацииПоДаннымИнтереса(Элементы.Список.ТекущаяСтрока);
	ИначеЕсли Элементы.Список.ТекущиеДанные.Свойство("Ссылка") Тогда	
		ЗаполнитьПанельИнформацииПоДаннымИнтереса(Элементы.Список.ТекущиеДанные.Ссылка);
	Иначе
		ЗаполнитьПанельИнформацииПоДаннымИнтереса(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ОбработатьАктивизациюСтрокиСписка", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьПоИнтересам(Команда)
	
	Элементы.СписокСкрытьПоказатьПоИнтересам.Пометка	= НЕ Элементы.СписокСкрытьПоказатьПоИнтересам.Пометка;
	ПометкаПоказатьСкрытьДопИнформацию					= Элементы.СписокСкрытьПоказатьПоИнтересам.Пометка;
	Элементы.ГруппаПанельИнформации.Видимость			= ПометкаПоказатьСкрытьДопИнформацию;
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстанавливатьФормуПриОткрытии(Команда)
	Элементы.КнопкаВосстанавливатьФормуПриОткрытии.Пометка = НЕ Элементы.КнопкаВосстанавливатьФормуПриОткрытии.Пометка;
	CRM_ХранилищеНастроек.Сохранить(ЭтотОбъект.ИмяФормы, "ВосстанавливатьФормуПриОткрытии", Элементы.КнопкаВосстанавливатьФормуПриОткрытии.Пометка);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ОтборЗавершен = Настройки.Получить("ОтборЗавершен");
	Если ОтборЗавершен = "Завершенные" Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершен", Истина, Истина, ВидСравненияКомпоновкиДанных.Равно);
	ИначеЕсли ОтборЗавершен = "Незавершенные" Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершен", Ложь, Истина, ВидСравненияКомпоновкиДанных.Равно);
	Иначе	
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершен");
	КонецЕсли;
	
	ОтборКонтрагент = Настройки.Получить("ОтборКонтрагент");
	Если ЗначениеЗаполнено(ОтборКонтрагент) Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Партнер", ОтборКонтрагент, Истина);
	Иначе	
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Партнер");
	КонецЕсли;
	
	Если НЕ (Элементы.СписокСкрытьПоказатьПоИнтересам.Пометка = Элементы.ГруппаПанельИнформации.Видимость) Тогда
		Элементы.СписокСкрытьПоказатьПоИнтересам.Пометка = Элементы.ГруппаПанельИнформации.Видимость;
	КонецЕсли;		
	
	Если НЕ Настройки["ПометкаПоказатьСкрытьДопИнформацию"] = Неопределено Тогда
		ПометкаПоказатьСкрытьДопИнформацию	= Настройки["ПометкаПоказатьСкрытьДопИнформацию"];
	КонецЕсли;
	
	Элементы.СписокСкрытьПоказатьПоИнтересам.Пометка= ПометкаПоказатьСкрытьДопИнформацию;
	Элементы.ГруппаПанельИнформации.Видимость		= ПометкаПоказатьСкрытьДопИнформацию;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЭтоВыборИнтереса Тогда
		ОтборЗавершен = "Незавершенные";		
		ОтборЗавершенПриИзменении(Неопределено);
	КонецЕсли;		
		
	// Перейдем сразу на вкладку отборов "Быстрые отборы" и оставим ее в свернутом режиме.
	Элементы.ПанельЗначенийОтбора.Видимость			= Истина;
	Элементы.ПанельЗначенийОтбора.ТекущаяСтраница	= Элементы.ЗначенияОтбораБыстрыеОтборы;	
	БыстрыеОтборы(Элементы.БыстрыеОтборы);
	ОтборПоЗавершенности = ?(ОтборЗавершен = "Все", "", ОтборЗавершен);
	CRM_ТегиКлиент.БыстрыйОтборИзменение(ЭтотОбъект, ОтборПоЗавершенности, ОтборКонтрагент, ОтборПользователь);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// +Этот блок обязательно должен быть в самом начале процедуры, чтобы при отказе не выполнять избыточный код.
	Если НЕ CRM_РежимФормЗакладкиСервер.ВосстановлениеФормыПриЗапускеСеанса(ЭтотОбъект, Отказ, СтандартнаяОбработка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	// -Этот блок обязательно должен быть в самом начале процедуры, чтобы при отказе не выполнять избыточный код.
	
	CRM_ОбщегоНазначенияСервер.УдалитьЭлементОтбораСписка(Список, "Партнер");
	
	ОтборЗавершен = "Все";
	
	Если Параметры.Свойство("РежимВыбора") Тогда
		Элементы.Список.РежимВыбора			= Параметры.РежимВыбора;
	КонецЕсли;
	
	Если Параметры.Свойство("ЗакрыватьПриВыборе") И НЕ (Параметры.ЗакрыватьПриВыборе = Неопределено) Тогда
		ЗакрыватьПриВыборе			= Параметры.ЗакрыватьПриВыборе;
	КонецЕсли;
	
	Если Параметры.Свойство("МножественныйВыбор") И НЕ (Параметры.МножественныйВыбор = Неопределено) Тогда
		Элементы.Список.МножественныйВыбор	= Параметры.МножественныйВыбор;
	КонецЕсли;
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Партнер") Тогда
		Если ТипЗнч(Параметры.Отбор.Партнер) = Тип("СписокЗначений") Тогда
			ОтборКонтрагент = Параметры.Отбор.Партнер[0].Значение;
		Иначе
			ОтборКонтрагент = Параметры.Отбор.Партнер;
		КонецЕсли;			
				
		Если Параметры.Отбор.Свойство("КонтактноеЛицо") Тогда
			КонтактноеЛицоОтбор = Параметры.Отбор.КонтактноеЛицо;
		КонецЕсли;			
		
	КонецЕсли;
	
	CRM_Теги.ОбновитьЗначенияОтбораПериодов(ЭтотОбъект);
	
	Если НЕ ПолучитьФункциональнуюОпцию("CRM_ИспользоватьТеги") Тогда
		Элементы.ОтборТеги.Видимость = Ложь;
		Элементы.ЗначенияОтбораТеги.Видимость = Ложь;
	Иначе
		ОтборПодразделениеДляТегов = Пользователи.АвторизованныйПользователь().Подразделение;
		СписокВышестоящихПодразделений.ЗагрузитьЗначения(CRM_МетодыМодулейМенеджеровСправочников.ПолучитьВсеПодразделенияРодители(ОтборПодразделениеДляТегов, Истина));

		ОбновитьЗначенияОтбораТегов();
	КонецЕсли; 
	ОтбиратьОбъектыБезТегов = Ложь;
	
	Если Параметры.Свойство("ЭтоВыборИнтереса") И Параметры.ЭтоВыборИнтереса Тогда
		ЭтоВыборИнтереса = Истина;
	Иначе		
		ОтборПользователь = Пользователи.АвторизованныйПользователь();
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Ответственный", ОтборПользователь, Истина);
	КонецЕсли;		
	
	Если Не CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Документы", "ЗаказКлиента") Тогда
			Элементы.ФормаДокументCRM_СчетНаОплатуПокупателюСоздатьНаОсновании.Заголовок = "Заказ клиента";
		Иначе
			Элементы.ФормаДокументCRM_СчетНаОплатуПокупателюСоздатьНаОсновании.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	ПриЗакрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	CRM_РежимФормЗакладкиСервер.ПриЗакрытииНаСервере(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	Настройки.Вставить("ПометкаПоказатьСкрытьДопИнформацию", ПометкаПоказатьСкрытьДопИнформацию);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЗавершенПриИзменении(Элемент)
	Если ОтборЗавершен = "Завершенные" Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершен", Истина, Истина, ВидСравненияКомпоновкиДанных.Равно);
	ИначеЕсли ОтборЗавершен = "Незавершенные" Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершен", Ложь, Истина, ВидСравненияКомпоновкиДанных.Равно);
	Иначе
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершен");
	КонецЕсли;
	ОтборПоЗавершенности = ?(ОтборЗавершен = "Все", "", ОтборЗавершен);
	CRM_ТегиКлиент.БыстрыйОтборИзменение(ЭтотОбъект, ОтборПоЗавершенности, ОтборКонтрагент, ОтборПользователь);
КонецПроцедуры

&НаКлиенте
Процедура ОтборЗавершенОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОтборЗавершен = "Все";
	ОтборЗавершенПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ОтборКонтрагент) Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Партнер", ОтборКонтрагент, Истина);
	Иначе	
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Партнер");
	КонецЕсли;
	ОтборПоЗавершенности = ?(ОтборЗавершен = "Все", "", ОтборЗавершен);
	CRM_ТегиКлиент.БыстрыйОтборИзменение(ЭтотОбъект, ОтборПоЗавершенности, ОтборКонтрагент, ОтборПользователь);
КонецПроцедуры

&НаКлиенте
Процедура ОтборПользовательПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ОтборПользователь) Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Ответственный", ОтборПользователь, Истина);
	Иначе	
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Ответственный");			
	КонецЕсли;
	ОтборПоЗавершенности = ?(ОтборЗавершен = "Все", "", ОтборЗавершен);
	CRM_ТегиКлиент.БыстрыйОтборИзменение(ЭтотОбъект, ОтборПоЗавершенности, ОтборКонтрагент, ОтборПользователь);
КонецПроцедуры

&НаКлиенте
Процедура БыстрыеОтборы(Команда)
	CRM_ТегиКлиент.ВыборВариантаОтбора(ЭтотОбъект, Команда);
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПериод(Команда)
	CRM_ТегиКлиент.ВыборВариантаОтбора(ЭтотОбъект, Команда);
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость = Ложь;	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТеги(Команда)
	CRM_ТегиКлиент.ВыборВариантаОтбора(ЭтотОбъект, Команда);
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость = Ложь;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПослеЗаписиТега" Или ИмяСобытия = "ПослеЗаписиСегмента" Тогда
		ОбновитьЗначенияОтбораТегов();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ТегОтборНажатие(Элемент, СтандартнаяОбработка)
	
	ЭлементДляОчистки = Элементы.ЗначенияОтбораТеги.ПодчиненныеЭлементы.Найти("Тег_Очистить");	
	
	ЭлементДляОтбораБезТегов = Элементы.ЗначенияОтбораТеги.ПодчиненныеЭлементы.Найти("Тег_Нет");
	Если Элемент = ЭлементДляОтбораБезТегов Тогда
		ОтбиратьОбъектыБезТегов = НЕ ОтбиратьОбъектыБезТегов;	
	КонецЕсли; 	
	
	Пометка = CRM_ТегиКлиент.ТегОтборНажатие("Документ.CRM_Интерес", ЭтотОбъект, "Список", Элемент, СтандартнаяОбработка);	
	//Пометка = CRM_ТегиКлиент.ТегОтборНажатие("Документ.CRM_Интерес", ЭтотОбъект, "Список", Элемент, СтандартнаяОбработка,,,,ОтбиратьОбъектыБезТегов, СписокВышестоящихПодразделений);

	// Поведение при нажатии на кнопку очистки отборов по тегам.
	Если Элемент = ЭлементДляОчистки Тогда
		ОбновитьЗначенияОтбораТегов();
		Возврат;
	КонецЕсли; 
	
	// Поведение при нажатии на кнопку отбора [нет тегов].
	Если Элемент = ЭлементДляОтбораБезТегов Тогда
		ИзменитьЦветЭлементаСервер(ОтбиратьОбъектыБезТегов, ЭлементДляОтбораБезТегов.Имя);
		Если ОтбиратьОбъектыБезТегов Тогда			
			Если ЭлементДляОчистки <> Неопределено Тогда
				ЭлементДляОчистки.Видимость = Истина;
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли; 	
	
	Если НЕ Пометка = Неопределено И Элемент <> ЭлементДляОтбораБезТегов  Тогда
		ИзменитьЦветЭлементаСервер(Пометка, Элемент.Имя);
		Если Пометка Тогда			
			Если ЭлементДляОчистки <> Неопределено Тогда
				ЭлементДляОчистки.Видимость = Истина;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗначенияОтбораТегов()
	CRM_Теги.ОбновитьЗначенияОтбораТегов(ЭтотОбъект, ,ОтборПодразделениеДляТегов, СписокВышестоящихПодразделений.ВыгрузитьЗначения());
КонецПроцедуры

&НаСервере
Процедура ИзменитьЦветЭлементаСервер(Пометка, ИмяЭлемента)
	CRM_Теги.ИзменитьЦветЭлементаОтбора(ЭтотОбъект, Пометка, ИмяЭлемента);
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыСегодняНажатие(Элемент)
	CRM_ТегиКлиент.СозданыОтборНажатие(ЭтотОбъект, "Список", "Сегодня", Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыЗа3ДняНажатие(Элемент)
	CRM_ТегиКлиент.СозданыОтборНажатие(ЭтотОбъект, "Список", "3 дня", Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыЗаНеделюНажатие(Элемент)
	CRM_ТегиКлиент.СозданыОтборНажатие(ЭтотОбъект, "Список", "Неделя", Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыЗаМесяцНажатие(Элемент)
	CRM_ТегиКлиент.СозданыОтборНажатие(ЭтотОбъект, "Список", "Месяц", Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыПроизвольныйПериодПриИзменении(Элемент)
	CRM_ТегиКлиент.СозданыОтборНажатие(ЭтотОбъект, "Список", "ПроизвольныйПериод", Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеДляТеговПриИзменении(Элемент)
	ОтборПодразделениеДляТеговПриИзмененииНаСервере();
	ОбновитьЗначенияОтбораТегов();
КонецПроцедуры

&НаСервере
Процедура ОтборПодразделениеДляТеговПриИзмененииНаСервере()
	СписокВышестоящихПодразделений.ЗагрузитьЗначения(CRM_МетодыМодулейМенеджеровСправочников.ПолучитьВсеПодразделенияРодители(ОтборПодразделениеДляТегов, Истина));	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПериодОчиститьНажатие(Элемент)
	CRM_ТегиКлиент.ОчиститьОтборНажатие(ЭтотОбъект, "Список");
КонецПроцедуры


&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	//При добавлении Интереса запускаем мастер принятия обращения
	Отказ = Истина;
	Если НЕ Копирование Тогда
		ПараметрыФормы = Новый Структура("", );
		ОткрытьФорму("Обработка.CRM_МастерРегистрацииОбращения.Форма.Форма", ПараметрыФормы);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТегОтборОчистить(Команда)
	Элемент = Элементы.ЗначенияОтбораТеги.ПодчиненныеЭлементы.Найти("Тег_Очистить");
	Пометка = CRM_ТегиКлиент.ТегОтборНажатие("Документ.CRM_Интерес", ЭтотОбъект, "Список", Элемент, Истина);	
	ОбновитьЗначенияОтбораТегов();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьCRM_СчетНаОплатуПокупателю(Команда)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка = ТекДанные.Ссылка;
	
	Если CRM_ОбщегоНазначенияСервер.НайтиВМетаданныхПоИмени("Документы", "ЗаказКлиента") Тогда
		ИмяДокумента = "ЗаказКлиента";
	Иначе
		ИмяДокумента = "CRM_СчетНаОплатуПокупателю"
	КонецЕсли;
	
	СсылкаНаВзаимодействие = ПолучитьВзаимодействиеИнтереса(Ссылка);
	
	ПараметрыФормы = Новый Структура("Основание",Ссылка);
	ПараметрыФормы.Вставить("Взаимодействие", СсылкаНаВзаимодействие);
	ОткрытьФорму("Документ."+ИмяДокумента+".ФормаОбъекта", ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВзаимодействиеИнтереса(Ссылка)
	СсылкаНаВзаимодействие = ПредопределенноеЗначение("Документ.CRM_Взаимодействие.ПустаяСсылка");
	ВзаимодействияТЗ = CRM_ВзаимодействияСервер.ПолучитьВзаимодействия(Ссылка);
	Если ВзаимодействияТЗ.Количество() > 0 Тогда
		СсылкаНаВзаимодействие = ВзаимодействияТЗ[0].Ссылка;
	КонецЕсли;
	Возврат СсылкаНаВзаимодействие;
КонецФункции
