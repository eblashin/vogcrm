
Процедура ОбработкаПроведения(Отказ, Режим)
	
	//Если ВидОперации Тогда
	//	ТаблицаРабочихДней = CRM_УправлениеЦелевымиПоказателямиСервер.ПолучитьТаблицуРабочихДней(НачалоПериодаПланирования, "Месяц", Подразделение); 
	//Иначе
		ТаблицаРабочихДней = CRM_УправлениеЦелевымиПоказателямиСервер.ПолучитьТаблицуРабочихДней(НачалоПериодаПланирования, Строка(ВидПериода), Исполнитель.Подразделение); 
		Если ТаблицаРабочихДней.Количество() = 0 Тогда
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не заполнен производственный календарь для подразделения ""'")
				+ Строка(Исполнитель.Подразделение) + НСтр("ru = '"" на дату: '") + Формат(НачалоПериодаПланирования, "ДФ=dd.MM.yyyy"));		
			Возврат;
		КонецЕсли;	
	//КонецЕсли;	
	
	Движения.CRM_ИспользуемыеКлючевыеПоказатели.Записывать = Истина;
	
	Если Показатель.КратностьЗначений = "НеИзменять" Тогда
		КратностьЗначений = 1;
	ИначеЕсли Показатель.КратностьЗначений = "Тысячи" Тогда	
		КратностьЗначений = 1000; 
	ИначеЕсли Показатель.КратностьЗначений = "Миллионы" Тогда	
		КратностьЗначений = 1000000;	
	КонецЕсли;
	
	Если Показатель.ДробнаяЧасть = "Целое" Тогда
		ДробнаяЧасть = 0;
	ИначеЕсли Показатель.ДробнаяЧасть = "Десятые" Тогда	
		ДробнаяЧасть = 1; 
	ИначеЕсли Показатель.ДробнаяЧасть = "Сотые" Тогда	
		ДробнаяЧасть = 2;	
	ИначеЕсли Показатель.ДробнаяЧасть = "Тысячные" Тогда	
		ДробнаяЧасть = 3;	
	КонецЕсли;
	
	Если Показатель.ПериодАнализа = "Месяц" Тогда
		
		ЗначениеДень = ЗначениеПоказателя * КратностьЗначений / ТаблицаРабочихДней.Количество();
		ЗначениеМаксимумДень = ЗначениеПоказателяМаксимум * КратностьЗначений / ТаблицаРабочихДней.Количество();
		
		ОкругленноеДень = Окр(ЗначениеДень, ДробнаяЧасть, 1);
		ОкругленноеМаксимумДень = Окр(ЗначениеМаксимумДень, ДробнаяЧасть, 1);
		
		Разница = ЗначениеДень - ОкругленноеДень;
		РазницаМаксимум = ЗначениеМаксимумДень - ОкругленноеМаксимумДень;
		
		НакопленноеОтклонение = 0;
		НакопленноеМаксимумОтклонение = 0;
		
		СчДней = 0;
		Для Каждого СтрокаДней Из ТаблицаРабочихДней Цикл
			СчДней = СчДней + 1;
			Движение = Движения.CRM_ИспользуемыеКлючевыеПоказатели.Добавить();
			Движение.Период = НачалоДня(СтрокаДней.ДатаГрафика);
			Движение.Показатель = Показатель;
			//Если ВидОперации Тогда
			//	Движение.Подразделение = Подразделение;
			//Иначе	
				Движение.Менеджер = Исполнитель;
				Движение.СуммаБонуса = СуммаБонуса;
				Движение.ВесПоказателя = ВесПоказателя;
			//КонецЕсли;	
			НакопленноеОтклонение = НакопленноеОтклонение + Разница;
			НакопленноеМаксимумОтклонение = НакопленноеМаксимумОтклонение + РазницаМаксимум;
			
			Если СчДней = ТаблицаРабочихДней.Количество() Тогда
				Движение.ЗначениеПоказателя = ОкругленноеДень + НакопленноеОтклонение;
				Движение.ЗначениеПоказателяМаксимум = ОкругленноеМаксимумДень + НакопленноеМаксимумОтклонение;
			Иначе	
				Если НакопленноеОтклонение >= 1 Тогда
					Движение.ЗначениеПоказателя = ОкругленноеДень + 1;
					НакопленноеОтклонение = НакопленноеОтклонение - 1;
				ИначеЕсли НакопленноеОтклонение <= -1 Тогда
					Движение.ЗначениеПоказателя = ОкругленноеДень - 1;
					НакопленноеОтклонение = НакопленноеОтклонение + 1;
				Иначе
					Движение.ЗначениеПоказателя = ОкругленноеДень;
				КонецЕсли;	
				
				Если НакопленноеМаксимумОтклонение >= 1 Тогда
					Движение.ЗначениеПоказателяМаксимум = ОкругленноеМаксимумДень + 1;
					НакопленноеМаксимумОтклонение = НакопленноеМаксимумОтклонение - 1;
				ИначеЕсли НакопленноеМаксимумОтклонение <= -1 Тогда
					Движение.ЗначениеПоказателяМаксимум = ОкругленноеМаксимумДень - 1;
					НакопленноеМаксимумОтклонение = НакопленноеМаксимумОтклонение + 1;
				Иначе
					Движение.ЗначениеПоказателяМаксимум = ОкругленноеМаксимумДень;
				КонецЕсли;
			КонецЕсли;
			
			Движение.Согласовано = (СтатусДокумента = Перечисления.CRM_СтатусыУстановкиИспользуемыхПоказателей.Действует); 
		КонецЦикла;
	ИначеЕсли Показатель.ПериодАнализа = "День" Тогда
		
		Для Каждого СтрокаДней Из ТаблицаРабочихДней Цикл
			Движение = Движения.CRM_ИспользуемыеКлючевыеПоказатели.Добавить();
			Движение.Период = НачалоДня(СтрокаДней.ДатаГрафика);
			Движение.Показатель = Показатель;
			//Если ВидОперации Тогда
			//	Движение.Подразделение = Подразделение;
			//Иначе	
				Движение.Менеджер = Исполнитель;
				Движение.СуммаБонуса = СуммаБонуса;
				Движение.ВесПоказателя = ВесПоказателя;
			//КонецЕсли;	
			Движение.ЗначениеПоказателя = ЗначениеПоказателя * КратностьЗначений;
			Движение.ЗначениеПоказателяМаксимум = ЗначениеПоказателяМаксимум * КратностьЗначений;
			
			Движение.Согласовано = (СтатусДокумента = Перечисления.CRM_СтатусыУстановкиИспользуемыхПоказателей.Действует);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
