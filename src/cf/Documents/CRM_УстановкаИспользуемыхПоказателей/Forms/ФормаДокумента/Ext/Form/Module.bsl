#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Объект.СтатусДокумента = Перечисления.CRM_СтатусыУстановкиИспользуемыхПоказателей.Действует;
		Если Параметры.Свойство("ПериодПланирования") Тогда
			Объект.НачалоПериодаПланирования = Параметры.ПериодПланирования.ДатаНачала;
			Объект.КонецПериодаПланирования = Параметры.ПериодПланирования.ДатаОкончания;
			Если Месяц(Объект.НачалоПериодаПланирования) = Месяц(Объект.КонецПериодаПланирования) Тогда
				Объект.ВидПериода = Перечисления.Периодичность.Месяц;
			ИначеЕсли Месяц(Объект.НачалоПериодаПланирования) - Месяц(Объект.КонецПериодаПланирования) = 2 Тогда
				Объект.ВидПериода = Перечисления.Периодичность.Квартал;
			Иначе
				Объект.ВидПериода = Перечисления.Периодичность.Год;
			КонецЕсли;
		Иначе	
			Объект.НачалоПериодаПланирования = НачалоМесяца(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса());
			Объект.КонецПериодаПланирования = КонецМесяца(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса());
			Объект.ВидПериода = Перечисления.Периодичность.Месяц;
		КонецЕсли;
		Объект.Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;	
	Если Параметры.Свойство("Исполнитель") Тогда
		Объект.Исполнитель = Параметры.Исполнитель;
	КонецЕсли;
	Если Параметры.Свойство("Показатель") Тогда
		Объект.Показатель = Параметры.Показатель;
	КонецЕсли;
	Если Объект.Показатель.ЦелевойТренд = "Интервал" Тогда
		Элементы.ЗначениеПоказателяМаксимум.Видимость = Истина;
	КонецЕсли;
	Попытка
		Объект.ПредставлениеПериодаПланирования = ПредставлениеПериода(Объект.НачалоПериодаПланирования, КонецДня(Объект.КонецПериодаПланирования), "L = ru_RU");
	Исключение
	КонецПопытки;
	
	CRM_СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	Если Объект.СтатусДокумента = Перечисления.CRM_СтатусыУстановкиИспользуемыхПоказателей.Действует Тогда
		Элементы.ДатаНазад.Доступность = Ложь;
		Элементы.ДатаВперед.Доступность = Ложь;
		Элементы.ВыборПериода.Доступность = Ложь;
	КонецЕсли;	
	Если НЕ РольДоступна("ПолныеПрава") И Объект.Исполнитель = Пользователи.ТекущийПользователь() Тогда
		Элементы.ДатаНазад.Доступность = Ложь;
		Элементы.ДатаВперед.Доступность = Ложь;
		Элементы.ВыборПериода.Доступность = Ложь;
		Элементы.ЗначениеПоказателя.Доступность = Ложь;
		Элементы.Дата.Доступность = Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьЗаголовокФормы();
	ДоступностьПериодаДляУстановкиПоказателя();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеВидимостью(Менеджер = Неопределено)
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьЗаголовокФормы()
	Заголовок = НСтр("ru = 'Установка показателя'")+": " + Объект.Показатель + "/" + Объект.Исполнитель + "/" + Объект.СтатусДокумента;
	
	Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "ЦелевойТренд") = "Интервал" Тогда
		Элементы.ЗначениеПоказателяМаксимум.Видимость = Истина;
		Элементы.ЗначениеПоказателя.Заголовок = Элементы.ЗначениеПоказателя.Заголовок + НСтр("ru = ' от'");
		Элементы.ТрендПоказателя.Видимость = Ложь;
	КонецЕсли;
	Если CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "КратностьЗначений") = "НеИзменять" Тогда
		ЕдиницаИзмерения = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "ЕдиницаИзмерения");
	ИначеЕсли CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "КратностьЗначений") = "Тысячи" Тогда
		ЕдиницаИзмерения = "тыс. "+ CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "ЕдиницаИзмерения");
	ИначеЕсли CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "КратностьЗначений") = "Миллионы" Тогда
		ЕдиницаИзмерения = "млн. "+ CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.Показатель, "ЕдиницаИзмерения");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура ДатаВперед(Команда)
	
	Если Объект.ВидПериода = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		Месяцев = 12;
	ИначеЕсли Объект.ВидПериода = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		Месяцев = 3;
	Иначе
		Месяцев = 1;
	КонецЕсли;
	Объект.НачалоПериодаПланирования = ДобавитьМесяц(Объект.НачалоПериодаПланирования, Месяцев);
	Объект.КонецПериодаПланирования = КонецМесяца(ДобавитьМесяц(Объект.КонецПериодаПланирования, Месяцев));
	Объект.ПредставлениеПериодаПланирования = ПредставлениеПериода(Объект.НачалоПериодаПланирования, КонецДня(Объект.КонецПериодаПланирования), "L = ru_RU");
	ДоступностьПериодадляУстановкиПоказателя();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНазад(Команда)
	
	Если Объект.ВидПериода = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		Месяцев = 12;
	ИначеЕсли Объект.ВидПериода = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		Месяцев = 3;
	Иначе
		Месяцев = 1;
	КонецЕсли;
	Объект.НачалоПериодаПланирования = ДобавитьМесяц(Объект.НачалоПериодаПланирования, -Месяцев);
	Объект.КонецПериодаПланирования = КонецМесяца(ДобавитьМесяц(Объект.КонецПериодаПланирования, -Месяцев));
	Объект.ПредставлениеПериодаПланирования = ПредставлениеПериода(Объект.НачалоПериодаПланирования, КонецДня(Объект.КонецПериодаПланирования), "L = ru_RU");
	ДоступностьПериодадляУстановкиПоказателя();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериода(Команда)
	ПараметрВыбора = Новый Структура("НачалоПериода,КонецПериода", Объект.НачалоПериодаПланирования, Объект.КонецПериодаПланирования);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборПериодаЗавершение", ЭтотОбъект);
	ОткрытьФорму("ОбщаяФорма.CRM_ВыборСтандартногоПериода", ПараметрВыбора, Элементы.ВыборПериода, , , , ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериодаЗавершение(РезультатВыбора, ДопПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.НачалоПериодаПланирования = РезультатВыбора.НачалоПериода;
	Объект.КонецПериодаПланирования  = РезультатВыбора.КонецПериода;
	Объект.ВидПериода = РезультатВыбора.ПериодичностьКонтроля;
	Объект.ПредставлениеПериодаПланирования = РезультатВыбора.ПредставлениеПериода;
	ДоступностьПериодадляУстановкиПоказателя();
	
КонецПроцедуры

&НаСервере
Функция ДоступностьПериодаДляУстановкиПоказателя(Предупреждение = Неопределено)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_ИспользуемыеКлючевыеПоказатели.Регистратор
	                      |ИЗ
	                      |	РегистрСведений.CRM_ИспользуемыеКлючевыеПоказатели КАК CRM_ИспользуемыеКлючевыеПоказатели
	                      |ГДЕ
	                      |	CRM_ИспользуемыеКлючевыеПоказатели.Показатель = &Показатель
	                      |	И CRM_ИспользуемыеКлючевыеПоказатели.Менеджер = &Менеджер
	                      |	И CRM_ИспользуемыеКлючевыеПоказатели.Регистратор <> &Регистратор
	                      |	И CRM_ИспользуемыеКлючевыеПоказатели.Период >= &НачалоПериода И CRM_ИспользуемыеКлючевыеПоказатели.Период <= &КонецПериода");
						  
	Запрос.УстановитьПараметр("Менеджер", Объект.Исполнитель);
	Запрос.УстановитьПараметр("Показатель", Объект.Показатель);
	Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", Объект.НачалоПериодаПланирования);
	Запрос.УстановитьПараметр("КонецПериода", Объект.КонецПериодаПланирования);
	
	Если Запрос.Выполнить().Пустой() Тогда
		Элементы.ДекорацияНадписьДоступностьПоказателя.ЦветТекста = WebЦвета.ЦветМорскойВолны;
		Элементы.ДекорацияНадписьДоступностьПоказателя.Заголовок = ""; //НСтр("ru = 'В выбранном периоде показатель не назначен.'");
		Возврат Истина;
	Иначе
		Элементы.ДекорацияНадписьДоступностьПоказателя.ЦветТекста = WebЦвета.Кирпичный;
		Предупреждение = НСтр("ru = 'В выбранном периоде показатель уже назначен!'");
		Элементы.ДекорацияНадписьДоступностьПоказателя.Заголовок = Предупреждение;
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	УстановитьЗаголовокФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПоказательПриИзменении(Элемент)
	УстановитьЗаголовокФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Предупреждение = "";
	Если НЕ ДоступностьПериодадляУстановкиПоказателя(Предупреждение) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Предупреждение,, "ПредставлениеПериодаПланирования", "ПредставлениеПериодаПланирования");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	CRM_СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	CRM_СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	CRM_СобытияФорм.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	CRM_СобытияФорм.ПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти