&НаКлиенте
Перем КэшСвойстваДинамическогоСписка;

#Область ПроцедурыИФункцииОбщегоНазначения

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ПолучитьСвойстваДинамическогоСпискаСервер()
	Возврат CRM_ОбщегоНазначенияСервер.ПолучитьСвойстваДинамическогоСписка(	ЭтотОбъект,
																			"Список",
																			"Документ.CRM_РассылкаЭлектронныхПисем",
																			Неопределено,
																			Неопределено,
																			Неопределено,
																			"ПодменюВидСписка",
																			"ВидСпискаИдентификаторТекущейНастройки",
																			"Подключаемый_КомандаВидСписка");
	//
КонецФункции

&НаКлиенте
Функция ПолучитьСвойстваДинамическогоСпискаКлиент()
	Если ТипЗнч(КэшСвойстваДинамическогоСписка) <> Тип("Структура") Тогда
		КэшСвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаСервер();
	КонецЕсли;
	Возврат КэшСвойстваДинамическогоСписка;
КонецФункции

&НаСервереБезКонтекста
Функция РазрешеноГрупповоеИзменениеРассылок()

  Возврат Пользователи.РолиДоступны("CRM_ПроведениеЭлектронныхРассылок, CRM_УправлениеМаркетингом, ПолныеПрава");

КонецФункции // РазрешеноГрупповоеИзменениеРассылок()

&НаСервере
Процедура КомандаВидСпискаСервер(СвойстваДинамическогоСписка, ПризнакИзмененыНастройки)
	CRM_ОбщегоНазначенияКлиентСервер.ОбработкаКомандыПользовательскихНастроекДинамическогоСписка(ЭтотОбъект, СвойстваДинамическогоСписка, ПризнакИзмененыНастройки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийРеквизитовФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "ОтборСтатус".
//
Процедура ОтборСтатусПриИзменении(Элемент)
	Если ОтборСтатус = 1 Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершена", Истина, Истина);
	ИначеЕсли ОтборСтатус = 2 Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершена", Ложь, Истина);
	Иначе
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершена");
	КонецЕсли;
	CRM_ТегиКлиент.БыстрыйОтборИзменение(ЭтотОбъект, ОтборСтатус, ОтборПроект, ОтборОтветственный);
КонецПроцедуры // ОтборСтатусПриИзменении()

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "ОтборПроект".
//
Процедура ОтборПроектПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ОтборПроект) Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Проект", ОтборПроект, Истина);
	Иначе	
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Проект");
	КонецЕсли;
	CRM_ТегиКлиент.БыстрыйОтборИзменение(ЭтотОбъект, ОтборСтатус, ОтборПроект, ОтборОтветственный);
КонецПроцедуры // ОтборПроект()

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "ОтборОтветственный".
//
Процедура ОтборОтветственныйПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ОтборОтветственный) Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Ответственный", ОтборОтветственный, Истина);
	Иначе	
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Ответственный");			
	КонецЕсли;	
	CRM_ТегиКлиент.БыстрыйОтборИзменение(ЭтотОбъект, ОтборСтатус, ОтборПроект, ОтборОтветственный);
КонецПроцедуры // ОтборОтветственныйПриИзменении()

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "ОтборСозданыСегодня".
//
Процедура ОтборСозданыСегодняНажатие(Элемент)
	CRM_ТегиКлиент.СозданыОтборНажатие(ЭтотОбъект, "Список", "Сегодня", Элемент);
КонецПроцедуры // ОтборСозданыСегодняНажатие()

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "ОтборСозданыЗа3Дня".
//
Процедура ОтборСозданыЗа3ДняНажатие(Элемент)
	CRM_ТегиКлиент.СозданыОтборНажатие(ЭтотОбъект, "Список", "3 дня", Элемент);
КонецПроцедуры // ОтборСозданыЗа3ДняНажатие()

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "ОтборСозданыЗаНеделю".
//
Процедура ОтборСозданыЗаНеделюНажатие(Элемент)
	CRM_ТегиКлиент.СозданыОтборНажатие(ЭтотОбъект, "Список", "Неделя", Элемент);
КонецПроцедуры // ОтборСозданыЗаНеделюНажатие()

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "ОтборСозданыЗаМесяц".
//
Процедура ОтборСозданыЗаМесяцНажатие(Элемент)
	CRM_ТегиКлиент.СозданыОтборНажатие(ЭтотОбъект, "Список", "Месяц", Элемент);
КонецПроцедуры // ОтборСозданыЗаМесяцНажатие()

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "ОтборСозданыПроизвольныйПериод".
//
Процедура ОтборСозданыПроизвольныйПериодПриИзменении(Элемент)
	CRM_ТегиКлиент.СозданыОтборНажатие(ЭтотОбъект, "Список", "ПроизвольныйПериод", Элемент);
КонецПроцедуры // ОтборСозданыПроизвольныйПериодПриИзменении()

&НаКлиенте
// Процедура - обработчик события "Нажатие" элемента формы "ОтборПериодОчистить".
//
Процедура ОтборПериодОчиститьНажатие(Элемент)
	CRM_ТегиКлиент.ОчиститьОтборНажатие(ЭтотОбъект, "Список");
КонецПроцедуры // ОтборПериодОчиститьНажатие()

#КонецОбласти

#Область ОбработчикиКомандФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ КОМАНД ФОРМЫ ДОКУМЕНТА

&НаКлиенте
// Процедура - обработчик команды "БыстрыеОтборы".
//
Процедура БыстрыеОтборы(Команда)
	CRM_ТегиКлиент.ВыборВариантаОтбора(ЭтотОбъект, Команда);
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость = Истина;	
КонецПроцедуры // БыстрыеОтборы()

&НаКлиенте
// Процедура - обработчик команды "ОтборПериод".
//
Процедура ОтборПериод(Команда)
	CRM_ТегиКлиент.ВыборВариантаОтбора(ЭтотОбъект, Команда);
	Элементы.СписокКомпоновщикНастроекПользовательскиеНастройки.Видимость = Ложь;	
КонецПроцедуры // ОтборПериод()

&НаКлиенте
Процедура Подключаемый_КомандаВидСписка(Команда)
	СвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаКлиент();
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_КомандаВидСпискаЗавершение", ЭтотОбъект, СвойстваДинамическогоСписка);
	CRM_ОбщегоНазначенияКлиент.ПользовательскиеНастройкиСпискаОбработкаВыбораНастройки(ЭтотОбъект, СвойстваДинамическогоСписка, Команда, ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомандаВидСпискаЗавершение(ПризнакИзмененыНастройки, СвойстваДинамическогоСписка) Экспорт
	КомандаВидСпискаСервер(СвойстваДинамическогоСписка, ПризнакИзмененыНастройки);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	РазрешеноИзменениеРассылок = РазрешеноГрупповоеИзменениеРассылок();
	
	Если РазрешеноИзменениеРассылок Тогда
	
		ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);	
	
	Иначе
		
		ПоказатьПредупреждение(,НСтр("ru = 'Команда ""Изменить выделенное"" доступна только пользователям, у которых есть одна из следующих ролей: 
		|- ""Полные права"", 
		|- ""Проведение e-mail рассылок "", 
		|- ""Управление маркетингом"".'"))
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстанавливатьФормуПриОткрытии(Команда)
	Элементы.КнопкаВосстанавливатьФормуПриОткрытии.Пометка = НЕ Элементы.КнопкаВосстанавливатьФормуПриОткрытии.Пометка;
	CRM_ХранилищеНастроек.Сохранить(ЭтотОбъект.ИмяФормы, "ВосстанавливатьФормуПриОткрытии", Элементы.КнопкаВосстанавливатьФормуПриОткрытии.Пометка);	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// +Этот блок обязательно должен быть в самом начале процедуры, чтобы при отказе не выполнять избыточный код.
	Если НЕ CRM_РежимФормЗакладкиСервер.ВосстановлениеФормыПриЗапускеСеанса(ЭтотОбъект, Отказ, СтандартнаяОбработка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	// -Этот блок обязательно должен быть в самом начале процедуры, чтобы при отказе не выполнять избыточный код.
	
	Если НЕ CRM_ЛицензированиеСервер.ПодсистемаCRMИспользуется() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Невозможно открыть форму списка рассылок. Подсистема 1С:CRM не используется!'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПриСозданиеНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	CRM_Теги.ОбновитьЗначенияОтбораПериодов(ЭтотОбъект);
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
// Процедура - обработчик события формы "ПриОткрытии".
//
Процедура ПриОткрытии(Отказ)
	CRM_ШаблоныОбъектовКлиент.ПоместитьКомандыГруппыТолькоВоВсеДействия(ЭтотОбъект);
	// Перейдем сразу на вкладку отборов "Быстрые отборы" и оставим ее в свернутом режиме.
	Элементы.ПанельЗначенийОтбора.Видимость			= Истина;
	Элементы.ПанельЗначенийОтбора.ТекущаяСтраница	= Элементы.ЗначенияОтбораБыстрыеОтборы;	
	БыстрыеОтборы(Элементы.БыстрыеОтборы);
	CRM_ТегиКлиент.БыстрыйОтборИзменение(ЭтотОбъект, ОтборСтатус, ОтборПроект, ОтборОтветственный);
	// +Пользовательские настройки.
	ДобавитьПодменюПользовательскихНастроек();
	// -Пользовательские настройки.
КонецПроцедуры // ПриОткрытии()

&НаСервере
// Процедура - обработчик события формы "ПриЗагрузкеДанныхИзНастроекНаСервере".
//
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ОтборСтатус = Настройки.Получить("ОтборСтатус");
	Если ОтборСтатус = 1 Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершена", Истина, Истина);
	ИначеЕсли ОтборСтатус = 2 Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершена", Ложь, Истина);
	Иначе
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Завершена");
	КонецЕсли;
	ОтборПроект = Настройки.Получить("ОтборПроект");
	Если ЗначениеЗаполнено(ОтборПроект) Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Проект", ОтборПроект, Истина);
	Иначе	
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Проект");
	КонецЕсли;
	ОтборОтветственный = Настройки.Получить("ОтборОтветственный");
	Если ЗначениеЗаполнено(ОтборОтветственный) Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Ответственный", ОтборОтветственный, Истина);
	Иначе	
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Ответственный");
	КонецЕсли;	
КонецПроцедуры // ПриЗагрузкеДанныхИзНастроекНаСервере()

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	ПриЗакрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	CRM_РежимФормЗакладкиСервер.ПриЗакрытииНаСервере(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти      


#Область ПользовательскиеНастройки

&НаСервере
Процедура ДобавитьПодменюПользовательскихНастроек()
	CRM_ПользовательскиеНастройкиСервер.УстановитьПользовательскиеНастройки(Список, ИдентификаторПользовательскойНастройки, ИмяФормы+".Список");
	CRM_ПользовательскиеНастройкиСервер.ДобавитьПодменюПользовательскихНастроек(ЭтотОбъект, Список, ИмяФормы+".Список");
КонецПроцедуры

&НаСервере
Процедура ОбработатьВыборНастройкиНаСервере(НомерНастройки)
	CRM_ПользовательскиеНастройкиСервер.ОбработатьВыборНастройкиНаСервере(НомерНастройки, Список, ЭтотОбъект, ИмяФормы+".Список");	
КонецПроцедуры


&НаКлиенте
Процедура ОбработатьВыборНастройки(Команда)
	НомерНастройкиСтрока = СтрЗаменить(Команда.Имя, "ОбработатьВыборНастройки_", "");
	НомерНастройки = Число(НомерНастройкиСтрока);
	 ОбработатьВыборНастройкиНаСервере(НомерНастройки);	
КонецПроцедуры

&НаСервере
Процедура СохранитьТекущиеНастройкиНаСервере(ИмяНастройки, ДополнительныеПараметры) Экспорт
	Если НЕ ИмяНастройки = Неопределено Тогда
		CRM_ПользовательскиеНастройкиСервер.СохранитьТекущиеНастройкиНаСервере(ИмяНастройки, Список, ЭтотОбъект, ИмяФормы+".Список");
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьТекущиеНастройки(Команда)
	ПараметрыОповещения = Новый Структура;
	Оповещение = Новый ОписаниеОповещения("СохранитьТекущиеНастройкиНаСервере", ЭтотОбъект, ПараметрыОповещения);
	ПоказатьВводСтроки(Оповещение, "", "Введите название настройки");		
КонецПроцедуры

&НаСервере
Процедура УдалитьНастройкуНаСервере()
	ПредставлениеНастройки = CRM_ПользовательскиеНастройкиСервер.ПолучитьПредставлениеНастройки(ИдентификаторПользовательскойНастройки, ИмяФормы+".Список");	
	ХранилищеПользовательскихНастроекДинамическихСписков.Удалить(ИмяФормы+".Список", ИдентификаторПользовательскойНастройки, ИмяПользователя()); 
	ИдентификаторПользовательскойНастройки = "Стандартные_Настройки";
	CRM_ПользовательскиеНастройкиСервер.УстановитьПользовательскиеНастройки(Список, ИдентификаторПользовательскойНастройки, ИмяФормы+".Список");
	CRM_ПользовательскиеНастройкиСервер.ДобавитьПодменюПользовательскихНастроек(ЭтотОбъект, Список, ИмяФормы+".Список");
		
КонецПроцедуры	

&НаКлиенте
Процедура ОбработкаОтветаУдаление(ВариантОтвета, ДополнительныеПараметры) Экспорт
	Если ВариантОтвета = КодВозвратаДиалога.Да Тогда
		УдалитьНастройкуНаСервере();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьТекущуюНастройку(Команда)
	Если ИдентификаторПользовательскойНастройки = "Стандартные_Настройки" Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нельзя удалить стандартные настройки";
		Сообщение.Сообщить();
	Иначе
		ПараметрыОповещения = Новый Структура;
		Оповещение = Новый ОписаниеОповещения("ОбработкаОтветаУдаление", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьВопрос(Оповещение, "Вы действительно хотите удалить настройку """+CRM_ПользовательскиеНастройкиСервер.ПолучитьПредставлениеНастройки(ИдентификаторПользовательскойНастройки, ИмяФормы+".Список")+""" ?", РежимДиалогаВопрос.ДаНет);
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти


