////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьФормуНаСервере();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	СтрокаТаблицы = Элементы.СписокВидовОпераций.ТекущиеДанные;
	
	Если НЕ СтрокаТаблицы = Неопределено Тогда
		
		ОткрытьДокументВида(СтрокаТаблицы.Значение);
		
	КонецЕсли; 
		
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	Если Параметры.Свойство("ЗначениеКопирования") Тогда
		ЗначениеКопирования = Параметры.ЗначениеКопирования;
	КонецЕсли;
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		ЗначенияЗаполнения  = Параметры.ЗначенияЗаполнения;
	КонецЕсли;
	Если Параметры.Свойство("Основание") Тогда
		Основание           = Параметры.Основание;
	КонецЕсли;
	Если Параметры.Свойство("Ключ") Тогда
		Ключ 				= Параметры.Ключ;
	КонецЕсли;
	Если Параметры.Свойство("ИзменитьВидОперации") Тогда
		ИзменитьВидОперации = Истина;
	КонецЕсли;
	
	//ФормыДокумента   = Новый ФиксированноеСоответствие(
	//	Документы.РеализацияТоваровУслуг.ПолучитьСоответствиеВидовОперацийФормам());
		
	ВидыОпераций = ПолучитьСписокВидовОпераций();
	Для Каждого ВидОперации Из ВидыОпераций Цикл
		НоваяОперация = СписокВидовОпераций.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяОперация, ВидОперации);
	КонецЦикла;
	
	Если Параметры.Свойство("ВидОперации") Тогда
		ВидОперацииПриОткрытии = Параметры.ВидОперации;
		ВыделенныйЭлементСписка = СписокВидовОпераций.НайтиПоЗначению(ВидОперацииПриОткрытии);
		Если ВыделенныйЭлементСписка <> Неопределено Тогда
			Элементы.СписокВидовОпераций.ТекущаяСтрока = ВыделенныйЭлементСписка.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокВидовОпераций()

	СписокВидовОпераций = Новый СписокЗначений;
	
	ВсеВидыОпераций = Перечисления.CRM_ВидДокументаРасчетов;
	
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.РеализацияТоваровИУслуг, НСтр("ru = 'Реализация товаров и услуг'"));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ВозвратТоваровОтПокупателя, НСтр("ru = 'Возврат товаров от покупателя'"));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.КорректировкаРеализацииТоваров, НСтр("ru = 'Корректировка реализации товаров'"));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ПБДСРасчетыСКонтрагентами, НСтр("ru = 'Поступление безналичных денежных средств: расчеты с контрагентами'"));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.ПКОРасчетыСКонтрагентами, НСтр("ru = 'Приходный кассовый ордер: расчеты с контрагентами'"));
	СписокВидовОпераций.Добавить(ВсеВидыОпераций.КорректировкаДолга, НСтр("ru = 'Корректировка долга: списание'"));
	
	Возврат СписокВидовОпераций;

КонецФункции

&НаКлиенте
Процедура СписокВидовОперацийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаТаблицы = СписокВидовОпераций.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ОткрытьДокументВида(СтрокаТаблицы.Значение);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокументВида(ВыбранныйВидОперации)
	
	Модифицированность = Ложь;
	Закрыть();
	
	Если ВыбранныйВидОперации = ПредопределенноеЗначение("Перечисление.CRM_ВидДокументаРасчетов.РеализацияТоваровИУслуг") Тогда
		ВыбраннаяФорма = "Документ.CRM_ДокументРасчетовСКонтрагентом.Форма.РеализацияТоваровУслуг";
	ИначеЕсли ВыбранныйВидОперации = ПредопределенноеЗначение("Перечисление.CRM_ВидДокументаРасчетов.ПБДСРасчетыСКонтрагентами") Тогда
		ВыбраннаяФорма = "Документ.CRM_ДокументРасчетовСКонтрагентом.Форма.ПБДСРасчетыСКонтрагентами";
	ИначеЕсли ВыбранныйВидОперации = ПредопределенноеЗначение("Перечисление.CRM_ВидДокументаРасчетов.ПКОРасчетыСКонтрагентами") Тогда
		ВыбраннаяФорма = "Документ.CRM_ДокументРасчетовСКонтрагентом.Форма.ПКОРасчетыСКонтрагентами";
	ИначеЕсли ВыбранныйВидОперации = ПредопределенноеЗначение("Перечисление.CRM_ВидДокументаРасчетов.ВозвратТоваровОтПокупателя") Тогда
		ВыбраннаяФорма = "Документ.CRM_ДокументРасчетовСКонтрагентом.Форма.ВозвратТоваровОтПокупателя";
	ИначеЕсли ВыбранныйВидОперации = ПредопределенноеЗначение("Перечисление.CRM_ВидДокументаРасчетов.КорректировкаРеализацииТоваров") Тогда
		ВыбраннаяФорма = "Документ.CRM_ДокументРасчетовСКонтрагентом.Форма.КорректировкаРеализацииТоваров";
	ИначеЕсли ВыбранныйВидОперации = ПредопределенноеЗначение("Перечисление.CRM_ВидДокументаРасчетов.КорректировкаДолга") Тогда
		ВыбраннаяФорма = "Документ.CRM_ДокументРасчетовСКонтрагентом.Форма.КорректировкаДолга";
	КонецЕсли;
	
	ОткрытьФорму(ВыбраннаяФорма,, ВладелецФормы);
	
	//Если ТипЗнч(ЗначенияЗаполнения) <> Тип("Структура") Тогда
	//	ЗначенияЗаполнения = Новый Структура();
	//КонецЕсли;

	//ЗначенияЗаполнения.Вставить("ВидОперации",			ВыбранныйВидОперации);
	//Если ЗначениеЗаполнено(Основание) Тогда
	//	ЗначенияЗаполнения.Вставить("Основание",		Основание);
	//КонецЕсли;
	//
	//СтруктураПараметров = Новый Структура;
	//СтруктураПараметров.Вставить("Ключ",                Ключ);
	//СтруктураПараметров.Вставить("ЗначенияЗаполнения",  ЗначенияЗаполнения);
	//Если ЗначениеЗаполнено(ЗначениеКопирования) Тогда
	//	СтруктураПараметров.Вставить("ЗначениеКопирования", ЗначениеКопирования);
	//КонецЕсли;
	//Если ИзменитьВидОперации И ВыбранныйВидОперации <> ВидОперацииПриОткрытии Тогда
	//	СтруктураПараметров.Вставить("ИзменитьВидОперации", ИзменитьВидОперации);
	//КонецЕсли;
	//
	//Модифицированность = Ложь;
	//Закрыть();
	//
	//Если ВыбранныйВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРеализацияТоваров.Товары") Тогда
	//	КлючеваяОперация = "СозданиеФормыРеализацияТоваровУслугТовары";
	//ИначеЕсли ВыбранныйВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРеализацияТоваров.Услуги") Тогда
	//	КлючеваяОперация = "СозданиеФормыРеализацияТоваровУслугУслуги";
	//Иначе
	//	КлючеваяОперация = "СозданиеФормыРеализацияТоваровУслугОбщая";
	//КонецЕсли;
	//ОценкаПроизводительностиКлиент.НачатьЗамерВремени(Истина, КлючеваяОперация);
	//
	//ОткрытьФорму("Документ.РеализацияТоваровУслуг.Форма." + ФормыДокумента[ВыбранныйВидОперации], СтруктураПараметров, ВладелецФормы);
	
КонецПроцедуры
