
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Строка из ДанныеПланирования цикл
		Если Строка.УИД="" тогда
			Строка.УИД = Новый УникальныйИдентификатор();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Плитка) КАК Направление,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка.Автор КАК Автор,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Город КАК Город,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.ВидТТ КАК ВидТТ,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.УИД КАК ТорговаяТочка,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка.СценарийПланирования КАК Сценарий,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка.ВерсияСценария КАК Версия,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка.ПериодПланирования КАК ПериодПланирования,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Комментарий КАК Комментарий,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка.Дата КАК Период,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.ВидТТ КАК ВидПотенциальнойТорговойТочки,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Клиент КАК Клиент
	|ИЗ
	|	Документ.ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка.ДанныеПланирования КАК ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка КАК ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка
	|		ПО ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Ссылка = ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка.Ссылка
	|ГДЕ
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	// ++ VOG Солодов В.В. 05.03.2021 DEV-218
	Если СценарийПланирования = Справочники.вогСценарииПланирования.ПланНаКвартал Тогда
		
		ТаблицаДвижений = Запрос.Выполнить().Выгрузить();
		ТаблицаДвижений.Колонки.Добавить("СценарийПланирования");
		ТаблицаДвижений.Колонки.Добавить("Подразделение");
		
		УстановитьПривилегированныйРежим(Истина);
		ОбособленноеПодразделение = Справочники.СтруктураПредприятия.ПолучитьОбособленноеПодразделение(Автор.Подразделение);
		
		Для Каждого СтрокаДвижений Из ТаблицаДвижений Цикл
			СтрокаДвижений.Подразделение 		= ОбособленноеПодразделение;
			СтрокаДвижений.СценарийПланирования = СтрокаДвижений.Сценарий;
		КонецЦикла;
		
		Движения.ДанныеПланированияПродажПлиткаКвартал.Загрузить(ТаблицаДвижений);
		Движения.ДанныеПланированияПродажПлиткаКвартал.Записывать = Истина;
		
	Иначе // -- VOG Солодов В.В. 05.03.2021 DEV-218
		Движения.ДанныеПланированияПродажПлитка.Загрузить(Запрос.Выполнить().Выгрузить());
		Движения.ДанныеПланированияПродажПлитка.Записывать = Истина;
		УстановитьПривилегированныйРежим(Истина);
		Для каждого Запись из Движения.ДанныеПланированияПродажПлитка цикл
			
			Запись.Подразделение = Справочники.СтруктураПредприятия.ПолучитьОбособленноеПодразделение(Запись.Автор.Подразделение);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// ++ VOG Солодов В.В. 18.03.2021 DEV-218
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Плитка) КАК НаправлениеДеятельности,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Ссылка.СценарийПланирования КАК СценарийПланирования,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Город КАК Регион,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.УИД КАК ТорговаяТочка,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.ВидТТ КАК ВидПотенциальнойТТ,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Комментарий КАК Комментарий,
	// +++ VOG Кулаков П.Л. 09.06.2021 DEV-605
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Ссылка.ВерсияСценария КАК ВерсияСценария,
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Ссылка.ПериодПланирования КАК ПериодПланирования
	// --- VOG Кулаков П.Л.
	|ИЗ
	|	Документ.ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка.ДанныеПланирования КАК ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования
	|ГДЕ
	|	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Ссылка = &Ссылка";
	// До изменения
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//               |	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Город КАК Регион,
	//               |	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.УИД КАК ТорговаяТочка,
	//               |	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Комментарий КАК Комментарий,
	//               |	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Ссылка.Дата КАК Период
	//               |ИЗ
	//               |	Документ.ПланированиеПродажПоПотенциальнымТорговымТочкамПлитка.ДанныеПланирования КАК ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования
	//               |ГДЕ
	//               |	ПланированиеПродажПоПотенциальнымТорговымТочкамПлиткаДанныеПланирования.Ссылка = &Ссылка";
	// -- VOG Солодов В.В. 18.03.2021 DEV-218
	
	Движения.КомментарииКПланированиюПродажПлитка.Загрузить(Запрос.Выполнить().Выгрузить());
	// +++ VOG Кулаков П.Л. 09.06.2021 DEV-605
	Для каждого Запись из Движения.КомментарииКПланированиюПродажПлитка цикл
			Запись.Подразделение = Справочники.СтруктураПредприятия.ПолучитьОбособленноеПодразделение(Автор.Подразделение);
	КонецЦикла;
	// --- VOG Кулаков П.Л.
	Движения.КомментарииКПланированиюПродажПлитка.Записывать = Истина;
	
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Для каждого Строка из ДанныеПланирования цикл
		Строка.УИД = "";	
	КонецЦикла;
	
КонецПроцедуры
