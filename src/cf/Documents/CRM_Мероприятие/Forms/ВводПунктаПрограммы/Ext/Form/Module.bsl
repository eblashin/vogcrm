#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = 
		"НомерПункта,
		|Исполнитель, 
		|Содержание,
		|ВремяПлан,
		|ВремяФакт,
		|Начало,
		|ОтКлиента,
		|Окончание,
		|ТребуетПринятияРешения,
		|Комментарий";
		
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, Реквизиты);
	
	Элементы.ОтКлиента.Видимость = Параметры.ОтКлиентаВидимость;
	
	Если Не ЗначениеЗаполнено(ВремяПлан) Тогда 
		ВремяПланСтр = "  :  ";
	Иначе	
		ВремяПланСтр = вогУчетВремениКлиентСервер.ЧислоВСтроку(ВремяПлан);
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ВремяФакт) Тогда 
		ВремяФактСтр = "  :  ";
	Иначе	
		ВремяФактСтр = вогУчетВремениКлиентСервер.ЧислоВСтроку(ВремяФакт);
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Начало) Тогда 
		Элементы.Начало.ТолькоПросмотр = Истина;
		Если Не ЗначениеЗаполнено(Окончание) Тогда
			Окончание = Начало;
		КонецЕсли;
	Иначе
		Элементы.Начало.Видимость = Ложь;
		Элементы.Окончание.Видимость = Ложь;
	КонецЕсли;	
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Пункт программы №%1'"),
		НомерПункта);
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда 
		Возврат;
	КонецЕсли;
	
	Если ВремяПлан = 0 Тогда 
		Начало = '00010101';
		Окончание = '00010101';
	КонецЕсли;	
	
	Результат = Новый Структура( 
		"НомерПункта,
		|Исполнитель, 
		|Содержание,
		|ТребуетПринятияРешения,
		|Начало,
		|ОтКлиента,
		|Окончание,
		|ВремяПлан,
		|ВремяФакт,
		|Комментарий");
		
	ЗаполнитьЗначенияСвойств(Результат, ЭтаФорма);
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбораУчастника = СформироватьДанныеВыбораУчастника();
	
	Если ДанныеВыбораУчастника.Количество() > 10 Тогда 
		ОписаниеОповещения = Новый ОписаниеОповещения("ИсполнительНачалоВыбораЗавершение", ЭтотОбъект);
		ДанныеВыбораУчастника.ПоказатьВыборЭлемента(ОписаниеОповещения, "Укажите ответственного", Исполнитель);
	Иначе
		ДанныеВыбора = ДанныеВыбораУчастника;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Исполнитель = Результат.Значение;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = СформироватьДанныеВыбораУчастника(Текст);
	Иначе
		ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Текст) Тогда 
		ДанныеВыбораУчастника = СформироватьДанныеВыбораУчастника(Текст);
		Если ДанныеВыбораУчастника.Количество() = 1 Тогда 
			Исполнитель = ДанныеВыбораУчастника[0].Значение;
		Иначе
			СтандартнаяОбработка = Ложь;
			ДанныеВыбора = ДанныеВыбораУчастника;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяПланСтрПриИзменении(Элемент)
	
	Если Не вогУчетВремениКлиентСервер.ПроверитьФормат(ВремяПланСтр) Тогда
		ВремяПланСтр = "  :  ";
	КонецЕсли;
	ВремяПлан = вогУчетВремениКлиентСервер.ЧислоИзСтроки(ВремяПланСтр);
	
	Если ЗначениеЗаполнено(Начало) Тогда 
		Окончание = Начало + ВремяПлан;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяПланСтрНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Элемент.СписокВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяФактСтрПриИзменении(Элемент)
	
	Если Не вогУчетВремениКлиентСервер.ПроверитьФормат(ВремяФактСтр) Тогда
		ВремяФактСтр = "  :  ";
	КонецЕсли;
	ВремяФакт = вогУчетВремениКлиентСервер.ЧислоИзСтроки(ВремяФактСтр);
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяФактСтрНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Элемент.СписокВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПриИзменении(Элемент)
	
	Окончание = Начало + ВремяПлан;
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеПриИзменении(Элемент)
	
	Если Окончание < Начало Тогда 
		Окончание = Начало;
	КонецЕсли;	
	
	ВремяПлан = (Окончание - Начало);
	ВремяПланСтр = вогУчетВремениКлиентСервер.ЧислоВСтроку(ВремяПлан);
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция СформироватьДанныеВыбораУчастника(Текст = "")
	
	ДанныеВыбора = Новый СписокЗначений;
	Попытка
		Если ТипЗнч(ВладелецФормы.Объект.Ссылка) = Тип("СправочникСсылка.вогШаблоныМероприятий") Тогда //Павелко, Таск 000000794, 08.11.2019
			ДанныеВыбора.Добавить(ЭтаФорма.ВладелецФормы.Объект.ВладелецШаблона, Строка(ЭтаФорма.ВладелецФормы.Объект.ВладелецШаблона));
		ИначеЕсли ЭтаФорма.ВладелецФормы.Объект.ОтветственныйПосетитМероприятие тогда 
			ДанныеВыбора.Добавить(ЭтаФорма.ВладелецФормы.Объект.Ответственный, Строка(ЭтаФорма.ВладелецФормы.Объект.Ответственный));
		КонецЕсли;
		Участники = ЭтаФорма.ВладелецФормы.Объект.СвоиЛица;
		
		Для Каждого Строка Из Участники Цикл
			Если Не ЗначениеЗаполнено(Строка.Лицо) Тогда 
				Продолжить;
			КонецЕсли;
			Если Текст <> "" И НРег(Лев(Строка.Лицо, СтрДлина(Текст))) <> НРег(Текст) Тогда 
				Продолжить;
			КонецЕсли;
			ДанныеВыбора.Добавить(Строка.Лицо, Строка(Строка.Лицо));
		КонецЦикла;	
	Исключение
	КонецПопытки;
	Возврат ДанныеВыбора;
	
КонецФункции

#КонецОбласти