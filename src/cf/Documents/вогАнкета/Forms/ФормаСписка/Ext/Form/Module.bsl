////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

////////////////////////////////////////////////////////////////////////////////
#Область ЭКСПОРТНЫЕ_ПРОЦЕДУРЫ_И_ФУНКЦИИ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//+вог
	//+Рабочий стол
	скРабочийСтолСервер.ПриСозданииНаСервере(ЭтаФорма, Отказ);
	//-Рабочий стол
	//-вог
	
	Если Параметры.Свойство("скОбщиеПараметры") Тогда
		Элементы.Список.ИзменятьСоставСтрок = Ложь;
	КонецЕсли;
//START Кайдашов 20/01/20 CRM 193
	Если Параметры.Свойство("РЕспондент") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ Различные
		               |	вогАнкета.Ссылка КАК Ссылка
		               |ИЗ
		               |	Документ.вогАнкета КАК вогАнкета
		               |ГДЕ
		               |	вогАнкета.Респондент = &Респондент
		               |	ИЛИ вогАнкета.СоставОпроса.ОбъектОпроса = &Респондент";
		Запрос.УстановитьПараметр("Респондент",Параметры.Респондент);
		ТЗ = Запрос.Выполнить().Выгрузить();
		НовОтбор = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		НовОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		НовОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		НовОтбор.ПравоеЗначение = ТЗ.ВыгрузитьКолонку("Ссылка");
		НовОтбор.Использование = Истина;
		
	КонецЕсли;
//END Кайдашов 20/01/20 CRM 193
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ЭЛЕМЕНТОВ_ФОРМЫ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ОБРАБОТЧИКИ_КОМАНД_ФОРМЫ

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ОПИСАНИЯ_ОПОВЕЩЕНИЙ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ОБЩЕГО_НАЗНАЧЕНИЯ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ_И_ФУНКЦИИ_ДЛЯ_УПРАВЛЕНИЯ_ВНЕШНИМ_ВИДОМ_ФОРМЫ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ__ДЕЙСТВИЯ_КОМАНДНЫХ_ПАНЕЛЕЙ_ФОРМЫ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ_ОБРАБОТКИ_СВОЙСТВ_И_КАТЕГОРИЙ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ__ОБРАБОТЧИКИ_СОБЫТИЙ_ЭЛЕМЕНТОВ_ФОРМЫ
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ПРОЦЕДУРЫ_ОБРАБОТЧИКИ_СОБЫТИЙ_ТАБЛИЧНОГО_ПОЛЯ__
#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
#Область ОПЕРАТОРЫ_ОСНОВНОЙ_ПРОГРАММЫ
#КонецОбласти

//+Рабочий стол
#Область Подключаемый_РабочийСтол
	
&НаКлиенте
Процедура Подключаемый_скТумблерРабочегоСтолаПриИзменении(Элемент)
	скРабочийСтолКлиент.ТумблерРабочегоСтолаПриИзменении(ЭтаФорма, Элемент);
КонецПроцедуры // Подключаемый_скТумблерРабочегоСтолаПриИзменении()

&НаКлиенте
Процедура Подключаемый_ОбработкаГипперссылкиДействийНажатие(Элемент)
	скРабочийСтолКлиент.ОбработкаГипперссылкиДействийНажатие(ЭтаФорма, Элемент);	
КонецПроцедуры // Подключаемый_ИндикаторНапоминанийНажатие()

&НаКлиенте
Процедура Подключаемый_ОбновитьТаблицуНапоминаний(МассивНапоминаний = Неопределено) Экспорт
	скРабочийСтолКлиент.ОбновитьТаблицуНапоминаний(ЭтаФорма, МассивНапоминаний);
КонецПроцедуры // Подключаемый_ОбновитьТаблицуНапоминаний()

&НаКлиенте
Процедура Подключаемый_НапоминанияСкрытьНажатие(Элемент)
	скРабочийСтолКлиент.СкрытьНапоминания(ЭтаФорма);	
КонецПроцедуры // Подключаемый_НапоминанияСкрытьНажатие()

&НаКлиенте
Процедура Подключаемый_ПолеHTMLНапоминанийПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	скРабочийСтолКлиент.ПолеHTMLНапоминанийПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры // Подключаемый_ПолеHTMLНапоминанийПриНажатии()

&НаКлиенте
Процедура Подключаемый_КомандаНапоминанийПрекратитьВсе(Команда)
	скРабочийСтолКлиент.КомандаНапоминанийПрекратитьВсе(ЭтаФорма, Команда);
КонецПроцедуры // Подключаемый_КомандаНапоминанийПрекратитьВсе()

&НаКлиенте
Процедура Подключаемый_КомандаНапоминанийПеренестиВсе(Команда)
	скРабочийСтолКлиент.КомандаНапоминанийПеренестиВсе(ЭтаФорма, Команда);
КонецПроцедуры // Подключаемый_КомандаНапоминанийПрекратитьВсе()

&НаКлиенте
Процедура Подключаемый_ЗаметкиСкрытьНажатие(Элемент)
	скРабочийСтолКлиент.СкрытьЗаметки(ЭтаФорма);	
КонецПроцедуры // Подключаемый_ЗаметкиСкрытьНажатие()

&НаКлиенте
Процедура Подключаемый_ПолеHTMLЗаметокПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	скРабочийСтолКлиент.ПолеHTMLЗаметокПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры // Подключаемый_ПолеHTMLЗаметокПриНажатии()

&НаКлиенте
Процедура Подключаемый_КомандаЗаметкиВсе(Команда)
	скРабочийСтолКлиент.КомандаЗаметкиВсе(ЭтаФорма, Команда);
КонецПроцедуры // Подключаемый_КомандаЗаметкиВсе()

&НаКлиенте
Процедура Подключаемый_КомандаЗаметкиДобавить(Команда)
	скРабочийСтолКлиент.КомандаЗаметкиДобавить(ЭтаФорма, Команда);
КонецПроцедуры // Подключаемый_КомандаЗаметкиДобавить()

&НаКлиенте
Процедура Подключаемый_ИсторияРаботыСкрытьНажатие(Элемент)
	скРабочийСтолКлиент.СкрытьИсториюРаботы(ЭтаФорма);	
КонецПроцедуры // Подключаемый_ИсторияРаботыСкрытьНажатие()

&НаКлиенте
Процедура Подключаемый_ПолеHTMLИсторииРаботыПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	скРабочийСтолКлиент.ПолеHTMLИсторииРаботыПриНажатии(ЭтаФорма, Элемент, ДанныеСобытия, СтандартнаяОбработка);
КонецПроцедуры // Подключаемый_ПолеHTMLИсторииРаботыПриНажатии()

#КонецОбласти
//-Рабочий стол
