
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// ++ VOG Солодов В.В. 08.08.2019 task 521
Процедура ЗаписатьВыполнениеОбработчика(АнкетаОбъект, ВидОбработчика, Знач Вопрос = Неопределено, Успешно) Экспорт
	
	Если АнкетаОбъект.ПометкаУдаления Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Вопрос = Неопределено Тогда
		Вопрос = Справочники.вогВопросы.ПустаяСсылка();
	КонецЕсли;
	
	МенеджерЗаписи 						= РегистрыСведений.вогЛогиАнкет.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период 				= ТекущаяДатаСеанса();
	МенеджерЗаписи.Анкета 				= АнкетаОбъект.Ссылка;
	МенеджерЗаписи.Статус 				= АнкетаОбъект.Статус;
	МенеджерЗаписи.ВидОбработчика 		= ВидОбработчика;
	МенеджерЗаписи.Вопрос 				= Вопрос;
	МенеджерЗаписи.Пользователь 		= Пользователи.ТекущийПользователь();
	МенеджерЗаписи.Успешно 				= Успешно;
	МенеджерЗаписи.КоличествоДвижений 	= АнкетаОбъект.Движения.вогРезультатыОпросов.Количество();
	МенеджерЗаписи.Проведен 			= АнкетаОбъект.Проведен;
	
	МенеджерЗаписи.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // -- VOG Солодов В.В. 08.08.2019

#КонецОбласти

#КонецЕсли

// ++ VOG Солодов В.В. 24.01.2020 CRM-106
#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
// 	КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	

КонецПроцедуры
// -- VOG Солодов В.В. 24.01.2020

Функция Печать(КоличествоСтрокВКолонке, КоличествоКолонок, Таблица) Экспорт
	//Таблица = ЭтотОбъект.ТаблицаВопроса.Выгрузить();
	
	
	
	Таб = Новый ТабличныйДокумент;
	Таб.Очистить();
	
	Макет = ПолучитьМакет("МакетСписокАртикулов");
	
	
	
	СтрокиТаблицыМассив = Новый Массив(КоличествоСтрокВКолонке, КоличествоКолонок);
	
	ПеренеслиВНовуюКолонку = 0;
	Перенесли              = 0;
	//Для Каждого Стр из Таблица Цикл
	//Для к = 1 по КоличествоКолонок Цикл
	//	Переносим = Ложь;
	//	ПеренеслиВНовуюКолонку = ПеренеслиВНовуюКолонку + Перенесли;
	//	Перенесли = 0;
	//	Для н = 1 по КоличествоСтрокВКолонке  Цикл
	//		    НомерСтроки = (к-1)*КоличествоСтрокВКолонке + н - 1 - ПеренеслиВНовуюКолонку;
	//			Если НомерСтроки>=Таблица.Количество() или Переносим Тогда
	//				СтрокиТаблицыМассив[н-1][к-1] = Неопределено;
	//				Перенесли = Перенесли+1;
	//			Иначе
	//				СтрокаТаблицы = Таблица.Получить(НомерСтроки);
	//				
	//				Если СтрокаТаблицы.Дизайн Тогда
	//					Если (н-1)+СтрокаТаблицы.Количество>КоличествоСтрокВКолонке Тогда
	//						 СтрокиТаблицыМассив[н-1][к-1] = Неопределено;
	//                         Переносим = Истина;
	//						 Перенесли = Перенесли+1;
	//					 Иначе
	//						СтрокиТаблицыМассив[н-1][к-1] = СтрокаТаблицы; 
	//					КонецЕслИ;
	//				Иначе
	//					
	//					СтрокиТаблицыМассив[н-1][к-1] = СтрокаТаблицы;
	//				КонецЕсли;
	//			КонецЕсли;
	//			
	//		КонецЦикла;
	//КонецЦикла;
	
	
	//КонецЦикла;
	
	
	
	ОбластьШапка   = Макет.ПолучитьОбласть("ОбластьШапка");
	ОбластьПробелМеждуКолонками = Макет.ПолучитьОбласть("ПробелМуждуКолонок");
	ОбластьСтрок   = Макет.ПолучитьОбласть("Строка");
	ОбластьАртикул = Макет.ПолучитьОбласть("ОбластьАртикул");
	ОбластьДизайн  = Макет.ПолучитьОбласть("ОбластьДизайн");
	ОбластьБренд   = Макет.ПолучитьОбласть("ОбластьБренд");
	
	ОбщееКоличествоСтрок = Таблица.Количество();
	КоличествоНаСтранице = КоличествоКолонок * КоличествоСтрокВКолонке;
	КолНаСтранице = 0;
	СтрокВКолонке = КоличествоСтрокВКолонке;
	УжеВывели = 0;
	КолСтраниц = ОбщееКоличествоСтрок / КоличествоНаСтранице;
	Таб.Вывести(ОбластьШапка);
	Если Цел(КолСтраниц) < КолСтраниц Тогда
		КолСтраниц = Цел(КолСтраниц) + 1;
	КонецЕсли;	
	
	Для Страница = 1 По КолСтраниц Цикл
		
		Для Строка = 1 По СтрокВКолонке Цикл
			
			// Выводим основную часть
			ПолучСтрока = Таблица[КолНаСтранице + Строка - 1];
			
			
			
			
			
			
			Если ПолучСтрока.Бренд Тогда
				ОбластьСтрок = ОбластьБренд;
			ИначеЕсли ПолучСтрока.Дизайн Тогда
				ОбластьСтрок = ОбластьДизайн;
			Иначе
				ОбластьСтрок = ОбластьАртикул;
			КонецЕсли;
			
			
			
			//			ОбластьСтрок.Параметры.НомерСтроки = 1;
			ОбластьСтрок.Параметры.Данные = ПолучСтрока.Артикул;
			
			Таб.Вывести(ОбластьСтрок);
			
			// Добавяем колонки
			Если КоличествоКолонок > 1 Тогда
				
				СуммаКолонки = 0;
				
				Для Кол = 1 По (КоличествоКолонок - 1) Цикл
					//Таб.Присоединить(ОбластьПробелМеждуКолонками);
					
					Попытка
						// Добавляем остальные части
						Если Таблица.Количество()< СуммаКолонки+ КолНаСтранице + СтрокВКолонке + Строка - 1 Тогда
							Прервать;
						КонецЕсли;
						ПолучСтрока = Таблица[СуммаКолонки+ КолНаСтранице + СтрокВКолонке + Строка - 1];
						Если ПолучСтрока.Бренд Тогда
							ОбластьСтрок = ОбластьБренд;
						ИначеЕсли ПолучСтрока.Дизайн Тогда
							ОбластьСтрок = ОбластьДизайн;
						Иначе
							ОбластьСтрок = ОбластьАртикул;
						КонецЕсли;
						
						
						//	ОбластьСтрок.Параметры.НомерСтроки = 1;
						ОбластьСтрок.Параметры.Данные = ПолучСтрока.Артикул;
						
						Таб.Присоединить(ОбластьСтрок);
						
						СуммаКолонки = СуммаКолонки + СтрокВКолонке;
					Исключение
						
					КонецПопытки;
					
				КонецЦикла;
			КонецЕслИ;
		КонецЦикла;
		
		КолНаСтранице = КолНаСтранице + КоличествоНаСтранице;
		Таб.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
	
	Возврат Таб;
КонецФункции

#КонецОбласти

#Область СозданиеОбъектов

Функция ВыполнитьСозданиеОбъектов(АнкетаСсылка, Отказ, ВходныеДанные) Экспорт
	
КонецФункции

Функция ПодготовитьСтруктурыСоздаваемыхОбъектов(АнкетаСсылка, Отказ, ВходныеДанные) Экспорт
	
КонецФункции

Функция ПодготовитьСтруктуруОбъекта(АнкетаСсылка, Отказ, ВходныеДанные) Экспорт
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеАнкеты

&НаСервере
Процедура ВыполнитьЗаполнениеТаблицОтветов(Объект, ДанныеДляЗаполнения, ТаблицаЭлементарныеВопросы) Экспорт
	
	Если ДанныеДляЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрСтравочника из ДанныеДляЗаполнения Цикл 
		
		ИмяСправочника = СтрСтравочника.Ключ; 
		
		Если НРег(ИмяСправочника) = НРег("Клиент") Тогда
			ИмяСправочника = "Партнеры";
		ИначеЕсли НРег(ИмяСправочника) = НРег("КонтактноеЛицо") Тогда
			ИмяСправочника = "КонтактныеЛицаПартнеров";
		ИначеЕсли НРег(ИмяСправочника) = НРег("ТорговаяТочка") Тогда
			ИмяСправочника = "вогТорговыеТочки";
		ИначеЕсли НРег(ИмяСправочника) = НРег("ЮрЛицо") Тогда
			ИмяСправочника = "вогЮридическиеЛица";
			
		ИначеЕсли НРег(ИмяСправочника) = НРег("ВыбранныеКлассификаторы") Тогда
			
			Если СтрСтравочника.Значение = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ЗначениеКлассификатора Из СтрСтравочника.Значение Цикл 
				
				ПоискКлассификатор = Объект.СоставКлассификаторов.НайтиСтроки(Новый Структура("ЗначениеКлассификатора", ЗначениеКлассификатора));
				
				Если НЕ ПоискКлассификатор.Количество() Тогда
					НоваяСтрока = Объект.СоставКлассификаторов.Добавить();
					НоваяСтрока.ЗначениеКлассификатора = ЗначениеКлассификатора;
				КонецЕсли;
				
			КонецЦикла;
			
			Продолжить;
		Иначе 
			
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрКлючТипаПоля Из СтрСтравочника.Значение Цикл 
			
			Если НЕ СтрКлючТипаПоля.Ключ = "НайденныеДубли" Тогда
				
				ЗаполнитьДанныеАнкетыЕдиничнымиОтветами(Объект, СтрКлючТипаПоля.Значение, СтрКлючТипаПоля.Ключ, ИмяСправочника, ТаблицаЭлементарныеВопросы);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеАнкетыЕдиничнымиОтветами(Объект, ДанныеДляЗаполнения, ИмяПоля, ИмяСправочника, ТаблицаЭлементарныеВопросы)
	
	Для Каждого СтрИмяПоля Из ДанныеДляЗаполнения Цикл 
		
		ИтоговоеЗначение = СтрИмяПоля.Значение;
		
		Если ИтоговоеЗначение = Неопределено ИЛИ СокрЛП(ИтоговоеЗначение) = "" Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоискаЭлементарногоВопроса = Новый Структура;
		СтруктураПоискаЭлементарногоВопроса.Вставить("CRM_ИмяСправочника", ИмяСправочника);
		
		Если ИмяПоля = "КонтактнаяИнформация" Тогда
			СтруктураПоискаЭлементарногоВопроса.Вставить("CRM_ВидКонтактнойИнформации", СтрИмяПоля.Ключ);
		Иначе 
			СтруктураПоискаЭлементарногоВопроса.Вставить("CRM_ИмяРеквизита", СтрИмяПоля.Ключ);
		КонецЕсли;
		
		ПоискСтрокВопроса = ТаблицаЭлементарныеВопросы.НайтиСтроки(СтруктураПоискаЭлементарногоВопроса);
		
		Если ПоискСтрокВопроса.Количество() Тогда
			СтрокаВопроса = ПоискСтрокВопроса.Получить(0);
			
			ПоискСтрокиВопроса = Объект.Состав.НайтиСтроки(Новый Структура("ЭлементарныйВопрос", СтрокаВопроса.ЭлементарныйВопрос));
			Если ПоискСтрокиВопроса.Количество() Тогда
				ПоискСтрокиВопроса = ПоискСтрокиВопроса.Получить(0);
			Иначе 
				ПоискСтрокиВопроса = Объект.Состав.Добавить();
				ПоискСтрокиВопроса.ЭлементарныйВопрос = СтрокаВопроса.ЭлементарныйВопрос;
			КонецЕсли;
			
			ПоискСтрокиВопроса.Ответ = ИтоговоеЗначение;
			Продолжить; // Найдено  в элементарных вопросах, дальше не смотрим
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// ++ Тищенко В.В. 28.02.2019
	// Добавлен в пердставление реквизит статус	
	Представление = ПолучитьПредставлениеОбъекта(Данные.ВариантОпроса, Данные.Номер, Данные.Дата,данные.Статус, Данные.Респондент);
	// -- Тищенко В.В. 
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	Поля.Добавить("ВариантОпроса");
	// ++ Тищенко В.В. 28.02.2019
	// Добавлен в пердставление реквизит статус
	Поля.Добавить("Статус");
	// -- Тищенко В.В. 
	Поля.Добавить("Респондент");//+ VOG Иванов С.А. 04.12.2019 ID заявки: 000000961
	
КонецПроцедуры

Функция ПолучитьПредставлениеОбъекта(ВариантОпроса, Номер, Дата, Статус, Респондент = "") Экспорт
	                                                  
	Возврат СтрШаблон("%1 %2 № %3 от %4  статус: %5 ", Респондент, ВариантОпроса, Номер, Дата, Статус); //+ VOG Иванов С.А. 03.12.2019 ID заявки: 000000961
	
КонецФункции
