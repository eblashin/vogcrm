#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Респондент") Тогда
			Респондент = ДанныеЗаполнения.Респондент;
			
		КонецЕсли;
		
		//++ Бей №438 02072019
		Если ДанныеЗаполнения.Свойство("ВариантОпроса") Тогда
			ВариантОпроса = ДанныеЗаполнения.ВариантОпроса;			
		КонецЕсли;
		//--
		
		// ++ VOG Солодов В.В. 09.07.2020 CRM-572
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ДокументОснование = ДанныеЗаполнения.ДокументОснование;
		КонецЕсли;
		// -- VOG Солодов В.В. 09.07.2020 CRM-572
		
	КонецЕсли;
	
		//++ Бей №438 02072019 обработка заполнения для варианта опроса
	Если ЗначениеЗаполнено(ВариантОпроса.ОбработчикЗаполнения) тогда
		//Выполнение
		Попытка
			Выполнить(ВариантОпроса.ОбработчикЗаполнения);
		Исключение
			ТексСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не удалось выполнить алгоритм обработки заполнения варианта опроса по причине: ""%1"".'"), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТексСообщения);
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при заполнении документа вогАнкета'"),УровеньЖурналаРегистрации.Ошибка,ЭтотОбъект.Метаданные(),,ТексСообщения);
			Отказ = Истина;
		КонецПопытки;
	КонецЕсли;
	//--

	
	ИнициализироватьДокумент();
	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ (ВариантОпроса.РегистрироватьНовогоРеспондента 
		ИЛИ ВариантОпроса.НеТребоватьЗаполнениеРеспондента) Тогда
		ПроверяемыеРеквизиты.Добавить("Респондент");		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ИмяПроцедурыВыполнения = "ПередЗаписью";
	
	//Формирование данных 
	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("ИспользоватьВопросы");
	СтруктураРеквизитов.Вставить("ИспользоватьКлассификаторы");
	СтруктураРеквизитов.Вставить("ИспользоватьДополнительныеРеквизиты");
	СтруктураРеквизитов.Вставить("РегистрироватьНовогоРеспондента");
	СтруктураРеквизитов.Вставить("ТипЗначения");
	
	РеквизитыВариантаОпроса = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВариантОпроса, СтруктураРеквизитов);
	ДополнительныеСвойства.Вставить("РеквизитыВариантаОпроса", РеквизитыВариантаОпроса);
	
	// { VOG RMV 2019-02-11
	Если НЕ ЗначениеЗаполнено(Статус) Тогда
		Статус = Справочники.вогШаблоныСтатусов.Зарегистрирован;
	КонецЕсли;	
	// } VOG RMV 2019-02-11
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не РеквизитыВариантаОпроса.ИспользоватьВопросы Тогда
		Состав.Очистить();
		СоставОпроса.Очистить();
	КонецЕсли;
	
	Если Не РеквизитыВариантаОпроса.ИспользоватьКлассификаторы Тогда
		СоставКлассификаторов.Очистить();
	КонецЕсли;
	
	Если Не РеквизитыВариантаОпроса.ИспользоватьДополнительныеРеквизиты Тогда
		ДополнительныеРеквизиты.Очистить();
	КонецЕсли;
	
	//Блашин можно писать доп. проверки главное указать ИмяПроцедурыВыполнения = "ПередЗаписью" и взводить Отказ  
	Если ДополнительныеСвойства.Свойство("ТаблицаВопросовОбработки") Тогда
		Для каждого СтрокаВопросаОбработки Из ДополнительныеСвойства.ТаблицаВопросовОбработки Цикл
			Если Не ЗначениеЗаполнено(СтрокаВопросаОбработки.АлгоритмОбработкиОтветов) Тогда
				Продолжить;
			КонецЕсли;
			
			//Переменные алгоритма
			Вопрос 		  		   = СтрокаВопросаОбработки.Вопрос;
			ТаблицаВопроса 		   = СтрокаВопросаОбработки.ТаблицаВопроса;
			ДанныеВариантовОтветов = СтрокаВопросаОбработки.ДанныеВариантовОтветов;
			
			//Выполнение
			Попытка
				Выполнить(СтрокаВопросаОбработки.АлгоритмОбработкиОтветов);
			Исключение
				ТексСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не удалось выполнить алгоритм обработки ответов вопроса ""%1"" по причине: ""%2"".'"), Вопрос, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТексСообщения);
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при записи документа вогАнкета'"),УровеньЖурналаРегистрации.Ошибка,ЭтотОбъект.Метаданные(),,ТексСообщения);
				Отказ = Истина;
				Прервать;
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	//Регистрация респондента
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение
		И РеквизитыВариантаОпроса.РегистрироватьНовогоРеспондента = Истина
		И Не ЗначениеЗаполнено(Респондент) Тогда
		
		Типы = РеквизитыВариантаОпроса.ТипЗначения.Типы();
		Для Инд = 1 По Типы.Количество() Цикл
			ИмяТаблицы = ОбщегоНазначения.ИмяТаблицыПоСсылке(Новый(Типы[Инд - 1]));
		КонецЦикла;	
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ИмяТаблицы);	
		
		РеспондентОбъект = МенеджерОбъекта.СоздатьЭлемент();
		РеспондентОбъект.Наименование = НСтр("ru = 'Сформирован автоматически при анкетировании.'");
		
		РеспондентОбъект.ОбменДанными.Загрузка = Истина;
		РеспондентОбъект.Записать();
		
		Респондент = РеспондентОбъект.Ссылка;
		
	КонецЕсли;	
	
	// ++ VOG Солодов В.В. 11.03.2020 CRM-280
	// До изменения
	//// ++ VOG Солодов В.В. 09.08.2019 task 526
	//Если Не Отказ
	//	И Статус = Справочники.вогШаблоныСтатусов.Согласован
	//	И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	//	
	//	НастройкаОбмена = Справочники.вогНастройкиОбменаУС.КредитныеУсловия;
	//	СхемаИНастройки = Справочники.вогНастройкиОбменаУС.ОписаниеИСхемаКомпоновкиДанныхНастройкиПоИмениМакета(НастройкаОбмена, "");
	//	СКД 			= СхемаИНастройки.СхемаКомпоновкиДанных;
	//	
	//	Если ТипЗнч(СКД) = Тип("СхемаКомпоновкиДанных")
	//		И Не СКД.Параметры.Найти("ВариантОпроса") = Неопределено
	//		И ВариантОпроса = СКД.Параметры.ВариантОпроса.Значение Тогда
	//		
	//		ОбменДаннымиСобытия.МеханизмРегистрацииОбъектовПередЗаписьюДокумента(
	//			"вогОбменСУчетнойСистемой",
	//			ЭтотОбъект,
	//			Отказ,
	//			РежимЗаписи,
	//			РежимПроведения);
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//// -- VOG Солодов В.В. 09.08.2019
	// -- VOG Солодов В.В. 11.03.2020
	
КонецПроцедуры

// ++ Тищенко В.В.
Процедура ПриЗаписи(Отказ)
	
	ИмяПроцедурыВыполнения = "ПриЗаписи";
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// ++ VOG Солодов В.В. 08.08.2019 task 521
	ВидОбработчика = Перечисления.вогВидыОбработчиковАнкет.ОбработчикЗаписи;
	// -- VOG Солодов В.В. 08.08.2019
	
	// ++ Тищенко В.В. 14.02.2019
	// При новой схеме проведения не отрабатывают обработчики ответов
	// Перенес при записью
	Если ДополнительныеСвойства.Свойство("ТаблицаВопросовОбработки") Тогда
		Для каждого СтрокаВопросаОбработки Из ДополнительныеСвойства.ТаблицаВопросовОбработки Цикл
			Если Не ЗначениеЗаполнено(СтрокаВопросаОбработки.АлгоритмОбработкиОтветов) Тогда
				Продолжить;
			КонецЕсли;
			
			//Переменные алгоритма
			Вопрос 		  		   = СтрокаВопросаОбработки.Вопрос;
			ТаблицаВопроса 		   = СтрокаВопросаОбработки.ТаблицаВопроса;
			ДанныеВариантовОтветов = СтрокаВопросаОбработки.ДанныеВариантовОтветов;
			
			//Выполнение
			Попытка
				Выполнить(СтрокаВопросаОбработки.АлгоритмОбработкиОтветов);
				// ++ VOG Солодов В.В. 08.08.2019 task 521
				Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика, Вопрос, Истина);
				// -- VOG Солодов В.В. 08.08.2019
			Исключение
				ТексСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не удалось выполнить алгоритм обработки ответов вопроса ""%1"" по причине: ""%2"".'"), Вопрос, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТексСообщения);
				ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при записи документа вогАнкета'"),УровеньЖурналаРегистрации.Ошибка,ЭтотОбъект.Метаданные(),,ТексСообщения);
				Отказ = Истина;
				// ++ VOG Солодов В.В. 08.08.2019 task 521
				Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика, Вопрос, Ложь);
				// -- VOG Солодов В.В. 08.08.2019
				Прервать;
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	// -- Тищенко В.В. 
	
	//START Кайдашов 24/06/19 - добавил обработчик "При записи" для варианта опроса
	Если ЗначениеЗаполнено(ВариантОпроса.ОбработчикЗаписи) тогда
		//Выполнение
		Попытка
			Выполнить(ВариантОпроса.ОбработчикЗаписи);
			// ++ VOG Солодов В.В. 08.08.2019 task 521
			Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика,, Истина);
			// -- VOG Солодов В.В. 08.08.2019
		Исключение
			ТексСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не удалось выполнить алгоритм обработки при записи варианта опроса по причине: ""%1"".'"), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТексСообщения);
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при записи документа вогАнкета'"),УровеньЖурналаРегистрации.Ошибка,ЭтотОбъект.Метаданные(),,ТексСообщения);
			Отказ = Истина;
			// ++ VOG Солодов В.В. 08.08.2019 task 521
			Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика,, Ложь);
			// -- VOG Солодов В.В. 08.08.2019
		КонецПопытки;
	КонецЕсли;
	//END Кайдашов  24/06/19
	
	// ++ Тищенко В.В. 15.02.2019
	// Изменен механизм записи документа
	Если Не Отказ Тогда
		ПроверитьОбязательностьВопросов(Отказ);
	КонецЕсли;
	// -- Тищенко В.В.
	
КонецПроцедуры // -- Тищенко В.В.

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ИмяПроцедурыВыполнения = "ОбработкаПроведения";
	// ++ VOG Солодов В.В. 08.08.2019 task 521
	ВидОбработчика = Перечисления.вогВидыОбработчиковАнкет.ОбработчикПроведения;
	// -- VOG Солодов В.В. 08.08.2019
	
	// { VOG RMV 2019-02-05
	// Анкета должна проводиться в строго определенный момент, 
	// например, отклоненная не проводится совсем, а согласованная – проводится ровно в момент согласования 1 раз и не должна больше перепроводиться
	// но и «лазейку» для разработчиков нужно оставить – «если очень надо», то анкету всё таки можно перепровести
	// поэтому вводится доп. свойство "Проводить"
	// для обеспечения совместимости с ранее реализованным функционалом свойство "Проводить" принудительно взводится в истину в случае, если есть свойство "ЗаписатьКлассификаторы"
	//Если ДополнительныеСвойства.Свойство("ЗаписатьКлассификаторы") Тогда
	//	ДополнительныеСвойства.Вставить("Проводить", Истина);
	//КонецЕсли;
	//РежимЗаписи = РежимЗаписиДокумента[?(ДополнительныеСвойства.Свойство("Проводить") И ДополнительныеСвойства.Проводить = Истина, "Проведение", "Запись")];
	Если ДополнительныеСвойства.Свойство("ЗаписатьКлассификаторы") ИЛИ ДополнительныеСвойства.Свойство("Проводить") И ДополнительныеСвойства.Проводить = Истина Тогда
	Иначе 
		Возврат
	КонецЕсли;
	// } VOG RMV 2019-02-05
	
	РеквизитыВариантаОпроса = ДополнительныеСвойства.РеквизитыВариантаОпроса;
	
	//Движения
	УстановитьПривилегированныйРежим(Истина);
	//Если РеквизитыВариантаОпроса.ИспользоватьВопросы Тогда
	Движения.вогРезультатыОпросов.Записывать 				    = Истина;
	Движения.вогИзображенияСторонПанелейРеспондентов.Записывать = Истина;
	
	//Результат опроса
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	// ++ Тищенко В.В. 09.04.2019
	// Задача 270. Дублирующийся строки в составе опроса
		
	// Оригинальный запрос
	//Запрос.Текст = 
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	СоставОпроса.Ссылка.ВариантОпроса КАК ВариантОпроса,
	//|	СоставОпроса.Вопрос КАК Вопрос,
	//|	СоставОпроса.Ответ КАК Ответ,
	//|	"""" КАК ИдентификаторСтроки,
	//|	СоставОпроса.Ссылка КАК Регистратор,
	//|	СоставОпроса.НомерСтроки КАК НомерСтроки,
	//|	"""" КАК ОткрытыйОтвет,
	//|	NULL КАК ЗначениеРеквизита,
	//|	NULL КАК ЗначениеКлассификатора,
	//|	СоставОпроса.Ссылка.Респондент КАК Респондент,
	//|	СоставОпроса.ОбъектОпроса КАК ОбъектОпроса,
	//|	СоставОпроса.Ссылка КАК Анкета
	//|ИЗ
	//|	Документ.вогАнкета.СоставОпроса КАК СоставОпроса
	//|ГДЕ
	//|	СоставОпроса.Ссылка = &Ссылка
	//|	И (НЕ СоставОпроса.ОбъектОпроса = НЕОПРЕДЕЛЕНО
	//|			ИЛИ НЕ СоставОпроса.Ответ = НЕОПРЕДЕЛЕНО)
	//|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	вогАнкетаСостав.Ссылка.ВариантОпроса,
	//|	вогАнкетаСостав.ЭлементарныйВопрос,
	//|	вогАнкетаСостав.Ответ,
	//|	вогАнкетаСостав.НомерСтроки,
	//|	вогАнкетаСостав.Ссылка,
	//|	вогАнкетаСостав.НомерСтроки,
	//|	ВЫРАЗИТЬ(вогАнкетаСостав.ОткрытыйОтвет КАК СТРОКА(150)),
	//|	NULL,
	//|	NULL,
	//|	вогАнкетаСостав.Ссылка.Респондент,
	//|	NULL,
	//|	вогАнкетаСостав.Ссылка
	//|ИЗ
	//|	Документ.вогАнкета.Состав КАК вогАнкетаСостав
	//|ГДЕ
	//|	вогАнкетаСостав.Ссылка = &Ссылка
	//|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка.ВариантОпроса,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Свойство,
	//|	NULL,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.НомерСтроки,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.НомерСтроки,
	//|	NULL,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Значение,
	//|	NULL,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка.Респондент,
	//|	NULL,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка
	//|ИЗ
	//|	Документ.вогАнкета.ДополнительныеРеквизитыРеспондента КАК вогАнкетаДополнительныеРеквизитыРеспондента
	//|ГДЕ
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка = &Ссылка
	//|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка.ВариантОпроса,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.ЗначениеКлассификатора.Владелец,
	//|	NULL,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.НомерСтроки,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.НомерСтроки,
	//|	NULL,
	//|	NULL,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.ЗначениеКлассификатора,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка.Респондент,
	//|	NULL,
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка
	//|ИЗ
	//|	Документ.вогАнкета.СоставКлассификаторов КАК вогАнкетаДополнительныеРеквизитыРеспондента
	//|ГДЕ
	//|	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка = &Ссылка";
	
	
	// Новый запрос
	// Убрал номер строки из состава опроса	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СоставОпроса.Ссылка.ВариантОпроса КАК ВариантОпроса,
	               |	СоставОпроса.Вопрос КАК Вопрос,
	               |	СоставОпроса.Ответ КАК Ответ,
	               |	"""" КАК ИдентификаторСтроки,
	               |	СоставОпроса.Ссылка КАК Регистратор,
	               |	"""" КАК НомерСтроки,
	               |	"""" КАК ОткрытыйОтвет,
	               |	NULL КАК ЗначениеРеквизита,
	               |	NULL КАК ЗначениеКлассификатора,
	               |	СоставОпроса.Ссылка.Респондент КАК Респондент,
	               |	СоставОпроса.ОбъектОпроса КАК ОбъектОпроса,
	               |	СоставОпроса.Ссылка КАК Анкета,
//START Кайдашов 25/06/19				   
				   |	СоставОпроса.ВариантОтвета КАК ВариантОтвета
//END Кайдашов				   
				   |ИЗ
	               |	Документ.вогАнкета.СоставОпроса КАК СоставОпроса
	               |ГДЕ
	               |	СоставОпроса.Ссылка = &Ссылка
	               |	И (НЕ СоставОпроса.ОбъектОпроса = НЕОПРЕДЕЛЕНО
	               |			ИЛИ НЕ СоставОпроса.Ответ = НЕОПРЕДЕЛЕНО)
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	вогАнкетаСостав.Ссылка.ВариантОпроса,
	               |	вогАнкетаСостав.ЭлементарныйВопрос,
	               |	вогАнкетаСостав.Ответ,
	               |	вогАнкетаСостав.НомерСтроки,
	               |	вогАнкетаСостав.Ссылка,
	               |	вогАнкетаСостав.НомерСтроки,
	               |	ВЫРАЗИТЬ(вогАнкетаСостав.ОткрытыйОтвет КАК СТРОКА(150)),
	               |	NULL,
	               |	NULL,
	               |	вогАнкетаСостав.Ссылка.Респондент,
	               |	NULL,
	               |	вогАнкетаСостав.Ссылка,
	               |	NULL
	               |ИЗ
	               |	Документ.вогАнкета.Состав КАК вогАнкетаСостав
	               |ГДЕ
	               |	вогАнкетаСостав.Ссылка = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка.ВариантОпроса,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Свойство,
	               |	NULL,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.НомерСтроки,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.НомерСтроки,
	               |	NULL,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Значение,
	               |	NULL,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка.Респондент,
	               |	NULL,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка,
	               |	NULL
	               |ИЗ
	               |	Документ.вогАнкета.ДополнительныеРеквизитыРеспондента КАК вогАнкетаДополнительныеРеквизитыРеспондента
	               |ГДЕ
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка = &Ссылка
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка.ВариантОпроса,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.ЗначениеКлассификатора.Владелец,
	               |	NULL,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.НомерСтроки,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.НомерСтроки,
	               |	NULL,
	               |	NULL,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.ЗначениеКлассификатора,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка.Респондент,
	               |	NULL,
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка,
	               |	NULL
	               |ИЗ
	               |	Документ.вогАнкета.СоставКлассификаторов КАК вогАнкетаДополнительныеРеквизитыРеспондента
	               |ГДЕ
	               |	вогАнкетаДополнительныеРеквизитыРеспондента.Ссылка = &Ссылка";
	
	// -- Тищенко В.В. 
	
	// +++ VOG Кулаков П.Л. 09.03.2021 CRM-194
	ТаблицаРезультатыОпросов = Запрос.Выполнить().Выгрузить();
	ТаблицаРезультатыОпросов.Свернуть("ВариантОпроса,Вопрос,Ответ,Регистратор,ОткрытыйОтвет,ЗначениеРеквизита,ЗначениеКлассификатора,Респондент,ОбъектОпроса,Анкета,ВариантОтвета");
	Движения.вогРезультатыОпросов.Загрузить(ТаблицаРезультатыОпросов);
	// --- VOG Кулаков П.Л.
	
	//Обработка алгоритмов ответов
	Если ДополнительныеСвойства.Свойство("ТаблицаВопросовОбработки") Тогда
		Для каждого СтрокаВопросаОбработки Из ДополнительныеСвойства.ТаблицаВопросовОбработки Цикл
			Если Не ЗначениеЗаполнено(СтрокаВопросаОбработки.АлгоритмОбработкиОтветов) Тогда
				Продолжить;
			КонецЕсли;
			
			//Переменные алгоритма
			Вопрос 		  		   = СтрокаВопросаОбработки.Вопрос;
			ТаблицаВопроса 		   = СтрокаВопросаОбработки.ТаблицаВопроса;
			ДанныеВариантовОтветов = СтрокаВопросаОбработки.ДанныеВариантовОтветов;
			
			//Выполнение
			Попытка
				Выполнить(СтрокаВопросаОбработки.АлгоритмОбработкиОтветов);	
				// ++ VOG Солодов В.В. 08.08.2019 task 521
				Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика, Вопрос, Истина);
				// -- VOG Солодов В.В. 08.08.2019
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не удалось выполнить алгоритм обработки ответов вопроса ""%1"" по причине: ""%2"".'"), Вопрос, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())),,,,Отказ);
				
				// ++ VOG Солодов В.В. 08.08.2019 task 521
				Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика, Вопрос, Ложь);
				// -- VOG Солодов В.В. 08.08.2019
				Продолжить;
			КонецПопытки;
			
			#Область Отладка
			Если Ложь Тогда
				Для каждого СтрокаВопроса Из ТаблицаВопроса Цикл
					СтрокиФайлов = СоставОпросаПрисоединенныеФайлы.НайтиСтроки(Новый Структура("Вопрос, ИдентификаторСтроки", Вопрос, СтрокаВопроса.ИдентификаторСтроки));
					Если СтрокиФайлов.Количество() > 0 Тогда
						СтрокаДвижений 	= Движения.вогИзображенияСторонПанелейРеспондентов.Добавить();
						
						СтрокаДвижений.Активность   = Истина;
						СтрокаДвижений.Период       = Дата;
						СтрокаДвижений.Респондент   = Респондент;
						СтрокаДвижений.Стенд 		= СтрокаВопроса.Стенд;
						СтрокаДвижений.Панель 		= СтрокаВопроса.ОбъектОпроса.ВладелецФайла;
						СтрокаДвижений.Сторона      = СтрокаВопроса.Сторона;
						СтрокаДвижений.ФайлКартинки = СтрокиФайлов[0].ПрисоединенныйФайл;
						
						СтрокаДвижений.ИдентификаторСтроки = СтрокаВопроса.ИдентификаторСтроки;
						
					КонецЕсли;
					
				КонецЦикла;	
				
			КонецЕсли;
			#КонецОбласти
			
		КонецЦикла;
		
	КонецЕсли;
	
	//КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	
	//START Кайдашов 24/06/19 - добавил обработчик "При проведении" для варианта опроса
	Если ЗначениеЗаполнено(ВариантОпроса.ОбработчикПроведения) тогда
		//Выполнение
		Попытка
			Выполнить(ВариантОпроса.ОбработчикПроведения);
			// ++ VOG Солодов В.В. 08.08.2019 task 521
			Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика,, Истина);
			// -- VOG Солодов В.В. 08.08.2019
		Исключение
			ТексСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не удалось выполнить алгоритм обработки проведения варианта опроса по причине: ""%1"".'"), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТексСообщения);
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Ошибка при проведении документа вогАнкета'"),УровеньЖурналаРегистрации.Ошибка,ЭтотОбъект.Метаданные(),,ТексСообщения);
			Отказ = Истина;
			// ++ VOG Солодов В.В. 08.08.2019 task 521
			Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика,, Ложь);
			// -- VOG Солодов В.В. 08.08.2019
		КонецПопытки;
	КонецЕсли;
	//END Кайдашов  24/06/19
	
	// ++ VOG Солодов В.В. 09.10.2020 CRM-932
	Если ВариантОпроса.ИспользоватьДляПоручения
		И ЗначениеЗаполнено(ДокументОснование)
		И ТипЗнч(ДокументОснование) = Тип("БизнесПроцессСсылка.CRM_БизнесПроцесс")
		И Не ПустаяСтрока(ВариантОпроса.ОбработчикПроведенияДляПоручения) Тогда
		
		ВыполнениеУспешно = Истина;
		
		Попытка
			Выполнить(ВариантОпроса.ОбработчикПроведенияДляПоручения);
		Исключение
			
			ШаблонСообщения = НСтр("ru = 'Не удалось выполнить алгоритм обработки проведения варианта опроса по причине: ""%1"".'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'Ошибка при проведении документа вогАнкета'"),
				УровеньЖурналаРегистрации.Ошибка,
				ЭтотОбъект.Метаданные(),
				,
				ТекстСообщения);
			
			ВыполнениеУспешно = Ложь;
			
		КонецПопытки;
		
		Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика,, ВыполнениеУспешно);
		
	КонецЕсли;
	// -- VOG Солодов В.В. 09.10.2020 CRM-932
	
	//ЭлементарныеВопросы
	Если ЗначениеЗаполнено(Респондент) Тогда
		// TODO: Переделать нормально
		#Если ТолстыйКлиентОбычноеПриложение Тогда
			Сообщить("Внимание. Не корректное проведение анкеты.");
		#Иначе
			CRM_АнкетированиеПривилегированный.ЗаписатьРеквизитыОбъектаАнкетирования(ЭтотОбъект);
		#КонецЕсли
	КонецЕсли;
	
	#Область ЗаписьКлассификаторов
	
	// ++ Тищенко В.В. 21.01.2019
	// Временное решиение. Если Вариант опроса стоит ЗаписыватьВОбъектыЗначенияКлассификаторы тогда
	// записываем классификаторы
	Если ЗначениеЗаполнено(ВариантОпроса) И ВариантОпроса.ЗаписыватьВОбъектыЗначенияКлассификаторы Тогда
		ДополнительныеСвойства.Вставить("ЗаписатьКлассификаторы"	,Истина);
		ДополнительныеСвойства.Вставить("CRM_ТаблицаКлассификаторов",ЗначениеИзСтрокиВнутр(ТаблицаКлассификаторов));
	КонецЕсли;
	// -- Тищенко В.В.
	
	Если ДополнительныеСвойства.Свойство("ЗаписатьКлассификаторы") Тогда
		//Классификаторы
		Если РеквизитыВариантаОпроса.ИспользоватьКлассификаторы 
			И ДополнительныеСвойства.Свойство("CRM_ТаблицаКлассификаторов") 
			И ЗначениеЗаполнено(Респондент) Тогда
			
			// ++ VOG Солодов В.В. 24.09.2020 CRM-935
			CRM_ТаблицаКлассификаторов = вогУправлениеОпросамиСервер.ИсключитьКлассификаторыДляНеиспользуемойВерсииОпроса(
				ДополнительныеСвойства.CRM_ТаблицаКлассификаторов, ВариантОпроса, НомерВерсииОпроса);
			
			Для каждого СтрокаКлассификатора Из CRM_ТаблицаКлассификаторов Цикл
			// До изменения
			//ТаблицаКлассификаторов = ДополнительныеСвойства.CRM_ТаблицаКлассификаторов;
			//Для каждого СтрокаКлассификатора Из ДополнительныеСвойства.CRM_ТаблицаКлассификаторов Цикл
			// -- VOG Солодов В.В. 24.09.2020 CRM-935
				НаборЗаписей = РегистрыСведений.CRM_ОбъектыЗначенийКлассификаторов.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Объект.Установить(Респондент);
				СтрокаКлассификатора.Аналитика = НаправлениеДеятельности;
				// ++ VOG Солодов В.В. 12.08.2019
				КлассификаторВладелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаКлассификатора.Значение, "Владелец");
				ИспользуемаяАналитика = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КлассификаторВладелец, "ИспользуемаяАналитика");
				
				Если ЗначениеЗаполнено(ИспользуемаяАналитика) Тогда
					НаборЗаписей.Отбор.Аналитика.Установить(СтрокаКлассификатора.Аналитика);
				КонецЕсли;
				// -- VOG Солодов В.В. 12.08.2019
				НаборЗаписей.Отбор.ЗначениеКлассификатора.Установить(СтрокаКлассификатора.Значение);
				
				НаборЗаписей.Прочитать();
				НаборЗаписей.Очистить();
				
				Если СтрокаКлассификатора.Включен Тогда
					CRM_КлассификаторыВызовСервера.ИзменитьКлассификатор(НаборЗаписей,
					Респондент, СтрокаКлассификатора,Ссылка);	
					
				КонецЕсли;
				
				// ++ VOG Солодов В.В. 12.08.2019 task 521
				Попытка
					НаборЗаписей.Записать();
					Если СтрокаКлассификатора.Включен Тогда
						Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика, СтрокаКлассификатора.Значение, Истина);
					КонецЕсли;
				Исключение
					Если СтрокаКлассификатора.Включен Тогда
						Документы.вогАнкета.ЗаписатьВыполнениеОбработчика(ЭтотОбъект, ВидОбработчика, СтрокаКлассификатора.Значение, Ложь);
					КонецЕсли;
				КонецПопытки;
				// До изменения
				//НаборЗаписей.Записать();
				// -- VOG Солодов В.В. 12.08.2019
				
			КонецЦикла;  
			
		КонецЕсли;
		
		//Доп. реквизиты
		Если РеквизитыВариантаОпроса.ИспользоватьКлассификаторы 
			И ЗначениеЗаполнено(Респондент) Тогда
			РеспондентОбъект = Респондент.ПолучитьОбъект();
			РеспондентОбъект.Заблокировать();
			
			Для каждого СтрокаРеквизита Из ДополнительныеРеквизитыРеспондента Цикл
				СтрокиРеквизитовРеспондента = РеспондентОбъект.ДополнительныеРеквизиты.НайтиСтроки(
				Новый Структура("Свойство", СтрокаРеквизита.Свойство)
				);	
				Если СтрокиРеквизитовРеспондента.Количество() = 0 Тогда
					СтрокиРеквизитовРеспондента = Новый Массив;
					СтрокиРеквизитовРеспондента.Добавить(РеспондентОбъект.ДополнительныеРеквизиты.Добавить());
					
				КонецЕсли;	
				
				Для каждого СтрокаРеквизитаРеспондента Из СтрокиРеквизитовРеспондента Цикл
					ЗаполнитьЗначенияСвойств(СтрокаРеквизитаРеспондента, СтрокаРеквизита);
				КонецЦикла;
				
			КонецЦикла;
			
			РеспондентОбъект.Записать();
			
		КонецЕсли;
		
		ДополнительныеСвойства.Удалить("ЗаписатьКлассификаторы");
		
	КонецЕсли;
	
	#КонецОбласти
	// ++ Тищенко В.В. 15.02.2019
	// Изменен механизм проведения
	//ПроверитьОбязательностьВопросов(Отказ);
	// -- Тищенко В.В. 
	
КонецПроцедуры

// ++ VOG Солодов В.В. 06.02.2020 CRM-269
Процедура ОбработкаУдаленияПроведения(Отказ)
	
	CRM_ОбщегоНазначенияСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	CRM_ОбщегоНазначенияСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	CRM_ОбщегоНазначенияСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц.Закрыть();
	
КонецПроцедуры // -- VOG Солодов В.В. 06.02.2020

#КонецОбласти

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент(ЗаполнятьВсеРеквизиты = Истина)
	
	Автор = Пользователи.ТекущийПользователь();	
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкиЗаполненяни

Процедура ПроверитьОбязательностьВопросов(Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	// ++ VOG Солодов В.В. 13.08.2019 
	"ВЫБРАТЬ
	|	вогВариантыОпросовСтруктураРазделов.Значение КАК Значение,
	|	ТИПЗНАЧЕНИЯ(вогВариантыОпросовСтруктураРазделов.Значение) КАК Тип,
	|	вогВариантыОпросовСтруктураРазделов.Раздел КАК Раздел,
	|	вогВариантыОпросовСтруктураРазделов.ПолныйКод КАК ПолныйКод,
	|	ВЫБОР
	|		КОГДА вогВариантыОпросовСтруктураРазделов.Значение ССЫЛКА ПланВидовХарактеристик.ВопросыДляАнкетирования
	|			ТОГДА ВЫРАЗИТЬ(вогВариантыОпросовСтруктураРазделов.Значение КАК ПланВидовХарактеристик.ВопросыДляАнкетирования).УстановленаЗависимость
	|		КОГДА вогВариантыОпросовСтруктураРазделов.Значение ССЫЛКА Справочник.вогВопросы
	|			ТОГДА ВЫРАЗИТЬ(вогВариантыОпросовСтруктураРазделов.Значение КАК Справочник.вогВопросы).УстановленаЗависимость
	|		КОГДА вогВариантыОпросовСтруктураРазделов.Значение ССЫЛКА ПланВидовХарактеристик.CRM_Классификаторы
	|			ТОГДА ВЫРАЗИТЬ(вогВариантыОпросовСтруктураРазделов.Значение КАК ПланВидовХарактеристик.CRM_Классификаторы).УстановленаЗависимость
	|	КОНЕЦ КАК УстановленаЗависимость
	|ПОМЕСТИТЬ ВТ_ВсеВопросы
	|ИЗ
	|	ПланВидовХарактеристик.вогВариантыОпросов.СтруктураРазделов КАК вогВариантыОпросовСтруктураРазделов
	|ГДЕ
	|	вогВариантыОпросовСтруктураРазделов.Ссылка = &ВариантОпроса
	|	И ВЫБОР
	|			КОГДА вогВариантыОпросовСтруктураРазделов.Значение ССЫЛКА ПланВидовХарактеристик.ВопросыДляАнкетирования
	|				ТОГДА ВЫРАЗИТЬ(вогВариантыОпросовСтруктураРазделов.Значение КАК ПланВидовХарактеристик.ВопросыДляАнкетирования).Обязательный
	|			КОГДА вогВариантыОпросовСтруктураРазделов.Значение ССЫЛКА Справочник.вогВопросы
	|				ТОГДА ВЫРАЗИТЬ(вогВариантыОпросовСтруктураРазделов.Значение КАК Справочник.вогВопросы).Обязательный
	|			КОГДА вогВариантыОпросовСтруктураРазделов.Значение ССЫЛКА ПланВидовХарактеристик.CRM_Классификаторы
	|				ТОГДА ВЫРАЗИТЬ(вогВариантыОпросовСтруктураРазделов.Значение КАК ПланВидовХарактеристик.CRM_Классификаторы).Обязательный
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вогВариантыОпросовСтруктураРазделов.Значение КАК ЗначениеВопроса
	|ПОМЕСТИТЬ ВТ_НеОбязательныеВопросы
	|ИЗ
	|	ПланВидовХарактеристик.вогВариантыОпросов.СтруктураРазделов КАК вогВариантыОпросовСтруктураРазделов
	|ГДЕ
	|	вогВариантыОпросовСтруктураРазделов.Ссылка = &ВариантОпроса
	|	И вогВариантыОпросовСтруктураРазделов.Значение В(&МассивНеОбязательныхВопросов)
	|	И ВЫБОР
	|			КОГДА вогВариантыОпросовСтруктураРазделов.Значение ССЫЛКА ПланВидовХарактеристик.ВопросыДляАнкетирования
	|				ТОГДА ВЫРАЗИТЬ(вогВариантыОпросовСтруктураРазделов.Значение КАК ПланВидовХарактеристик.ВопросыДляАнкетирования).Обязательный
	|			КОГДА вогВариантыОпросовСтруктураРазделов.Значение ССЫЛКА Справочник.вогВопросы
	|				ТОГДА ВЫРАЗИТЬ(вогВариантыОпросовСтруктураРазделов.Значение КАК Справочник.вогВопросы).Обязательный
	|			КОГДА вогВариантыОпросовСтруктураРазделов.Значение ССЫЛКА ПланВидовХарактеристик.CRM_Классификаторы
	|				ТОГДА ВЫРАЗИТЬ(вогВариантыОпросовСтруктураРазделов.Значение КАК ПланВидовХарактеристик.CRM_Классификаторы).Обязательный
	|		КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеВопросы.Значение КАК ЗначениеВопроса,
	|	ВТ_ВсеВопросы.Тип КАК Тип,
	|	ВТ_ВсеВопросы.Раздел КАК Раздел,
	|	ВТ_ВсеВопросы.ПолныйКод КАК ПолныйКод,
	|	ЕСТЬNULL(ВТ_ВсеВопросы.УстановленаЗависимость, ЛОЖЬ) КАК УстановленаЗависимость
	|ИЗ
	|	ВТ_ВсеВопросы КАК ВТ_ВсеВопросы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.вогАнкета.Состав КАК Элементарные
	|		ПО ВТ_ВсеВопросы.Значение = Элементарные.ЭлементарныйВопрос
	|			И (&Ссылка = Элементарные.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.вогАнкета.СоставКлассификаторов КАК ЗначенияКлассификаторов
	|		ПО ВТ_ВсеВопросы.Значение = ЗначенияКлассификаторов.ЗначениеКлассификатора.Владелец
	|			И (&Ссылка = ЗначенияКлассификаторов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.вогАнкета.СоставОпроса КАК ЗначенияВопросов
	|		ПО ВТ_ВсеВопросы.Значение = ЗначенияВопросов.Вопрос
	|			И (&Ссылка = ЗначенияВопросов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НеОбязательныеВопросы КАК ВТ_НеОбязательныеВопросы
	|		ПО ВТ_ВсеВопросы.Значение = ВТ_НеОбязательныеВопросы.ЗначениеВопроса
	|ГДЕ
	|	ВТ_НеОбязательныеВопросы.ЗначениеВопроса ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВсеВопросы.Тип,
	|	ВТ_ВсеВопросы.Раздел,
	|	ВТ_ВсеВопросы.ПолныйКод,
	|	ВТ_ВсеВопросы.Значение,
	|	ЕСТЬNULL(ВТ_ВсеВопросы.УстановленаЗависимость, ЛОЖЬ)
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_ВсеВопросы.Тип = ТИП(ПланВидовХарактеристик.ВопросыДляАнкетирования)
	|				ТОГДА ЕСТЬNULL(Элементарные.Ответ, НЕОПРЕДЕЛЕНО)
	|			КОГДА ВТ_ВсеВопросы.Тип = ТИП(Справочник.вогВопросы)
	|				ТОГДА ЕСТЬNULL(ЗначенияВопросов.ОбъектОпроса, НЕОПРЕДЕЛЕНО)
	|			КОГДА ВТ_ВсеВопросы.Тип = ТИП(ПланВидовХарактеристик.CRM_Классификаторы)
	|				ТОГДА ЕСТЬNULL(ЗначенияКлассификаторов.ЗначениеКлассификатора, НЕОПРЕДЕЛЕНО)
	|		КОНЕЦ) = НЕОПРЕДЕЛЕНО";
	// До изменения
	//"ВЫБРАТЬ
	//|	вогВариантыОпросовСтруктураРазделов.Значение КАК ЗначениеВопроса,
	//|	ТИПЗНАЧЕНИЯ(вогВариантыОпросовСтруктураРазделов.Значение) КАК Тип,
	//|	вогВариантыОпросовСтруктураРазделов.Раздел КАК Раздел,
	//|	вогВариантыОпросовСтруктураРазделов.ПолныйКод КАК ПолныйКод,
	//|	ЕСТЬNULL(вогВариантыОпросовСтруктураРазделов.Значение.УстановленаЗависимость, ЛОЖЬ) КАК УстановленаЗависимость
	//|ИЗ
	//|	ПланВидовХарактеристик.вогВариантыОпросов.СтруктураРазделов КАК вогВариантыОпросовСтруктураРазделов
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.вогАнкета.Состав КАК Элементарные
	//|		ПО вогВариантыОпросовСтруктураРазделов.Значение = Элементарные.ЭлементарныйВопрос
	//|			И (&Ссылка = Элементарные.Ссылка)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.вогАнкета.СоставКлассификаторов КАК ЗначенияКлассификаторов
	//|		ПО вогВариантыОпросовСтруктураРазделов.Значение = ЗначенияКлассификаторов.ЗначениеКлассификатора.Владелец
	//|			И (&Ссылка = ЗначенияКлассификаторов.Ссылка)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.вогАнкета.СоставОпроса КАК ЗначенияВопросов
	//|		ПО вогВариантыОпросовСтруктураРазделов.Значение = ЗначенияВопросов.Вопрос
	//|			И (&Ссылка = ЗначенияВопросов.Ссылка)
	//|ГДЕ
	//|	вогВариантыОпросовСтруктураРазделов.Значение.Обязательный
	//|	И вогВариантыОпросовСтруктураРазделов.Ссылка = &ВариантОпроса
	//|	И НЕ вогВариантыОпросовСтруктураРазделов.Значение В (&МассивНеОбязательныхВопросов)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ТИПЗНАЧЕНИЯ(вогВариантыОпросовСтруктураРазделов.Значение),
	//|	вогВариантыОпросовСтруктураРазделов.Раздел,
	//|	вогВариантыОпросовСтруктураРазделов.ПолныйКод,
	//|	вогВариантыОпросовСтруктураРазделов.Значение,
	//|	ЕСТЬNULL(вогВариантыОпросовСтруктураРазделов.Значение.УстановленаЗависимость, ЛОЖЬ)
	//|
	//|ИМЕЮЩИЕ
	//|	МАКСИМУМ(ВЫБОР
	//|			КОГДА ТИПЗНАЧЕНИЯ(вогВариантыОпросовСтруктураРазделов.Значение) = ТИП(ПланВидовХарактеристик.ВопросыДляАнкетирования)
	//|				ТОГДА ЕСТЬNULL(Элементарные.Ответ, НЕОПРЕДЕЛЕНО)
	//|			КОГДА ТИПЗНАЧЕНИЯ(вогВариантыОпросовСтруктураРазделов.Значение) = ТИП(Справочник.ВогВопросы)
	//|				ТОГДА ЕСТЬNULL(ЗначенияВопросов.ОбъектОпроса, НЕОПРЕДЕЛЕНО)
	//|			КОГДА ТИПЗНАЧЕНИЯ(вогВариантыОпросовСтруктураРазделов.Значение) = ТИП(ПланВидовХарактеристик.CRM_Классификаторы)
	//|				ТОГДА ЕСТЬNULL(ЗначенияКлассификаторов.ЗначениеКлассификатора, НЕОПРЕДЕЛЕНО)
	//|		КОНЕЦ) = НЕОПРЕДЕЛЕНО";
	// -- VOG Солодов В.В. 13.08.2019
	
	Запрос.УстановитьПараметр("ВариантОпроса", ВариантОпроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Если ДополнительныеСвойства.Свойство("МассивНеОбязательныхВопросов") Тогда
		Запрос.УстановитьПараметр("МассивНеОбязательныхВопросов", ДополнительныеСвойства.МассивНеОбязательныхВопросов);
	Иначе
		Запрос.УстановитьПараметр("МассивНеОбязательныхВопросов", Новый Массив);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаВопрос = РезультатЗапроса.Выбрать();
	
	СтруктураСТаблицами = вогУправлениеОпросамиСервер.ПолучитьСтруктуруДанныхПолученныхОтветовДляОбработкиУсловий(ЭтотОбъект);
	
	Пока ВыборкаВопрос.Следующий() Цикл
		
		Если ВыборкаВопрос.УстановленаЗависимость Тогда
			
			Результат = вогУправлениеОпросамиСервер.ПоложительноеЗначениеОтображенияПоУсловиям(ВыборкаВопрос.ЗначениеВопроса, СтруктураСТаблицами);
			
			Если НЕ Результат Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		ТекстСообщения = СтрШаблон("Не заполнен ответ на вопрос ""%1"" в разделе ""%3, %2""", ВыборкаВопрос.ЗначениеВопроса, ВыборкаВопрос.Раздел, ВыборкаВопрос.ПолныйКод);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка,,, Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Согласование

Процедура ОбработкаУтверждения(Отказ, Задача=Неопределено, ТочкаМаршрута=Неопределено) Экспорт 
	
	Если ВыполненоУтверждение Тогда
		Сообщить("Утверждение уже выполнено");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если ВариантОпроса.ИспользоватьОбработкуУтверждения И ЗначениеЗаполнено(ВариантОпроса.ОбработкаУтверждения) Тогда
		
		КоличествоПараметров = ВариантОпроса.ПараметрыОбработчиков.Количество();
		
		Параметр1 = ?(КоличествоПараметров >= 1, ВариантОпроса.ПараметрыОбработчиков.Получить(0).ЗначениеПараметры, Неопределено);
		Параметр2 = ?(КоличествоПараметров >= 2, ВариантОпроса.ПараметрыОбработчиков.Получить(1).ЗначениеПараметры, Неопределено);
		Параметр3 = ?(КоличествоПараметров >= 3, ВариантОпроса.ПараметрыОбработчиков.Получить(2).ЗначениеПараметры, Неопределено);
		Параметр4 = ?(КоличествоПараметров >= 4, ВариантОпроса.ПараметрыОбработчиков.Получить(3).ЗначениеПараметры, Неопределено);
		Параметр5 = ?(КоличествоПараметров >= 5, ВариантОпроса.ПараметрыОбработчиков.Получить(4).ЗначениеПараметры, Неопределено);
		
		НачатьТранзакцию();
		
		Попытка
			Выполнить(ВариантОпроса.ОбработкаУтверждения);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось выполнить обрабоку утверждения по причине:"
			+ Символы.ПС + ОписаниеОшибки(), ,,, Отказ);
			ОтменитьТранзакцию();
			Возврат;
		КонецПопытки;
		
		ЗафиксироватьТранзакцию();
		
	КонецЕсли;
	
	ВыполненоУтверждение = Истина;
	
КонецПроцедуры

#КонецОбласти