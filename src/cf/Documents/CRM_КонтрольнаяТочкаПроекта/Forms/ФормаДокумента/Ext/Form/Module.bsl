////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДОПОЛНИТЕЛЬНЫХ МЕТОДОВ ОБЪЕКТА

&НаСервереБезКонтекста
// Функция возвращает текущего пользователя.
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	СправочникСсылка	- Текущий пользователь.
//
Функция ТекущийПользователь()
	Возврат Пользователи.ТекущийПользователь();
КонецФункции // ТекущийПользователь()

&НаСервере
// Добавляет строки участников, ответственных по проекту.
Процедура УчастникиДобавитьОтветственных()
	
	Если НЕ Объект.Проект.Пустая() И Не Объект.Проект.ЭтоГруппа Тогда
		Строки = Объект.ПользователиКТ.НайтиСтроки(Новый Структура("Пользователь", Объект.Проект.Ответственный));
		Если Строки.Количество() = 0 Тогда
			СтрокаПользователь = Объект.ПользователиКТ.Добавить();
			СтрокаПользователь.Пользователь = Объект.Проект.Ответственный;
			СтрокаПользователь.Ответственный = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Объект.Этап.Пустая() И Не Объект.Этап.ЭтоГруппа И НЕ Объект.Этап.Ответственный.Пустая() Тогда
		Строки = Объект.ПользователиКТ.НайтиСтроки(Новый Структура("Пользователь", Объект.Этап.Ответственный));
		Если Строки.Количество() = 0 Тогда
			СтрокаПользователь = Объект.ПользователиКТ.Добавить();
			СтрокаПользователь.Пользователь = Объект.Этап.Ответственный;
			
			СтрокаПользователь.Ответственный = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьДатуВремя(ПриоритетДатыНачала)
	Если ДатаНачало > ДатаОкончание Тогда
		Если ПриоритетДатыНачала Тогда
			ДатаОкончание = ДатаНачало;
		Иначе
			ДатаНачало = ДатаОкончание;
		КонецЕсли;
	КонецЕсли;
	Если ВремяНачало > ВремяОкончание Тогда
		Если ПриоритетДатыНачала Тогда
			ВремяОкончание = ВремяНачало;
		Иначе
			ВремяНачало = ВремяОкончание;
		КонецЕсли;
	КонецЕсли;
	Объект.Дата = CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаНачало, ВремяНачало);
	Объект.ДатаЗакрытия = CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаОкончание, ВремяОкончание);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьВидимостьИДоступностьФормы(Форма)
	Форма.Элементы.ГруппаВремя.Видимость = НЕ Форма.Объект.НаВесьДень;
	Если Форма.ТолькоПросмотр Тогда
		Форма.Элементы.ДатаФакт.ТолькоПросмотр	= Истина;
		Форма.Элементы.ВремяФакт.ТолькоПросмотр	= Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатуВремяНачало(ЭтоНовый)
	ДатаИзКалендаря =Дата('00010101');
	бПарам = Параметры.ЗначенияЗаполнения.Свойство("Дата",ДатаИзКалендаря);
	Если бПарам = Истина Тогда	
		Дата = ?(ЭтоНовый=Истина,ДатаИзКалендаря,Объект.Дата);
	Иначе
		Дата = ?(ЭтоНовый=Истина,ТекущаяДатаСеанса(),Объект.Дата);
	КонецЕсли;
	ДатаВремя = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(Дата);
	ДатаНачало	= ДатаВремя.Дата;
	ВремяНачало	= ДатаВремя.Время;
КонецПроцедуры

Процедура ЗаполнитьДатуВремяФакт(ЭтоНовый)
	Если ЭтоНовый Тогда
		//ДатаФакт = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
		//ВремяФакт = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	Иначе
		ДатаВремя = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(Объект.ДатаФакт);
		ДатаФакт = ДатаВремя.Дата;
		ВремяФакт = ДатаВремя.Время;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатуВремяОкончание(ЭтоНовый)
	Если ЭтоНовый = Истина И Не ЗначениеЗаполнено(Объект.ДатаЗакрытия) Тогда
		ДатаОкончание = ДатаНачало;
		ВремяОкончание = ВремяНачало +60*30;
	Иначе
		ДатаОкончание = Объект.ДатаЗакрытия;
		ДатаВремя = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(Объект.ДатаЗакрытия);
		ВремяОкончание = ДатаВремя.Время;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеФормыСервер(ЭтоНовый)
	
		ЗаполнитьДатуВремяНачало(ЭтоНовый);
		ЗаполнитьДатуВремяОкончание(ЭтоНовый);
		ЗаполнитьДатуВремяФакт(ЭтоНовый);
		
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьДатуВремяФакт()
	Если Объект.Статус <> ПредопределенноеЗначение("Перечисление.CRM_СтатусыКонтрольныхТочек.Запланирована") Тогда
		Если НачалоДня(ДатаФакт)<=НачалоДня(ДатаНачало) Тогда
			ДатаФакт=ДатаНачало;
			Если ВремяФакт<ВремяНачало Тогда
				ВремяФакт=ВремяНачало;
			КонецЕсли;
		КонецЕсли	
	Иначе
		ДатаФакт = Дата('00010101');
		ВремяФакт = ДатаФакт;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодразделениеПроекта(ПроектСсылка)
	Возврат Объект.Проект.CRM_Подразделение;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПользователейПодразделения(Подразделение)

	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Пользователи.Ссылка
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	НЕ Пользователи.ПометкаУдаления
	               |	И Пользователи.Подразделение = &Подразделение";

	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

КонецФункции // ПолучитьПользователейПодразделения()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура КомандаПользователиЗаполнитьОтветственными(Команда)
	УчастникиДобавитьОтветственных();
КонецПроцедуры

&НаКлиенте
Процедура КомандаПользователиОчистить(Команда)
	
	Если Объект.ПользователиКТ.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("КомандаПользователиОчиститьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Список пользователей будет очищен. Продолжить?'"), РежимДиалогаВопрос.ОКОтмена, 60);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПользователиОчиститьЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Объект.ПользователиКТ.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПользователиПодбор(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ОткрытьФорму("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, Элементы.Пользователи);

КонецПроцедуры

&НаКлиенте
Процедура КомандаПользователиЗаполнитьПоПодразделению(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("РазрешитьВыборКорня", Истина);
	
	ОткрытьФорму("Справочник.СтруктураПредприятия.ФормаВыбора", ПараметрыФормы, Элементы.Пользователи);
	
КонецПроцедуры

&НаКлиенте
Процедура ТемаПриИзменении(Элемент)
	// Заполним описание, если оно пустое.
	Если Не ЗначениеЗаполнено(Объект.Описание) Тогда
		Объект.Описание = Объект.Тема;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПодробноеОписаниеНажатие(Элемент)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаОписание;
	ЭтотОбъект.ТекущийЭлемент = Элементы.Описание;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПеренестиДатуКТ(Команда)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаСтарая",?(Объект.НаВесьДень,НачалоДня(Объект.Дата),Объект.Дата));
	СтруктураПараметров.Вставить("НаВесьДень",Объект.НаВесьДень);
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаПеренестиДатуКТЗавершение", ЭтотОбъект);
	ОткрытьФорму("Документ.CRM_КонтрольнаяТочкаПроекта.Форма.ФормаПереносаСроков", СтруктураПараметров, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПеренестиДатуКТЗавершение(ВведенныеДанные, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ВведенныеДанные)  Тогда
		
		// Получены данные для смещения срока КТ.
		ДатаВремяНачала = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(ВведенныеДанные.ДатаНачала);
		ДатаВремяОкончания = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(ВведенныеДанные.ДатаОкончания);
		Строка = Объект.Смещения.Добавить();
		Если Объект.НаВесьДень Тогда
			Строка.СмещениеДатаНачало =НачалоДня(ДатаНачало);
			Строка.СмещениеДатаОкончание = КонецДня(ДатаОкончание);
		Иначе
			Строка.СмещениеДатаНачало = ДатаНачало + CRM_ОбщегоНазначенияКлиентСервер.ПолучитьВремяВСекундах(ВремяНачало);
			Строка.СмещениеДатаОкончание = ДатаОкончание + CRM_ОбщегоНазначенияКлиентСервер.ПолучитьВремяВСекундах(ВремяОкончание);
		КонецЕсли;
		Строка.Комментарий 	 = ВведенныеДанные.Комментарий;
		Строка.Автор		 = ТекущийПользователь();
		// изменим дату КТ
		//разнДат = Объект.ДатаЗакрытия - Объект.Дата;
 		//Объект.Дата = НачалоДня(ВведенныеДанные.) + ПолучитьВремяВСекундах(ВведенныеДанные.ВремяНовое);
		Объект.Дата = ВведенныеДанные.ДатаНачала;
		Объект.ДатаЗакрытия = ВведенныеДанные.ДатаОкончания;
		//Объект.ДатаЗакрытия = Объект.Дата+разнДат;
		Объект.НаВесьДень = ВведенныеДанные.НаВесьДень;
		ОбновитьДанныеФормы(ЭтотОбъект);
		НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
		//Элементы.Дата = Объект
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеФормы(Форма)
	Если Объект.НаВесьДень Тогда
    	ДатаНачало = Объект.Дата;
		ДатаОкончание = Объект.ДатаЗакрытия;
		ДатаФакт = Объект.ДатаФакт;
	Иначе
		ДатаНачало = Объект.Дата;
		ДатаОкончание= Объект.ДатаЗакрытия;
		ДатаФакт = Объект.ДатаФакт;
		ДатаВремя = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(Объект.Дата);
		ВремяНачало = ДатаВремя.Время;
		ДатаВремя = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(Объект.ДатаЗакрытия);
		ВремяОкончание = ДатаВремя.Время;
		ДатаВремя = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(Объект.ДатаФакт);
		ВремяФакт = ДатаВремя.Время;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.CRM_СтатусыКонтрольныхТочек.Завершена") ИЛИ 
		 Объект.Статус = ПредопределенноеЗначение("Перечисление.CRM_СтатусыКонтрольныхТочек.Отменена") Тогда
		//Объект.ДатаФакт = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	КонецЕсли;
	
	Если Объект.Статус <> ПредопределенноеЗначение("Перечисление.CRM_СтатусыКонтрольныхТочек.Запланирована") Тогда
		Если Не ЗначениеЗаполнено(ДатаФакт) Тогда
			Объект.ДатаФакт = ТекущаяДата();
			ДатаФакт  = ТекущаяДата();
			ВремяФакт = ТекущаяДата();
		КонецЕсли;
		
	Иначе
		Объект.ДатаФакт = Дата('00010101');
		ДатаФакт  = Объект.ДатаФакт;
		ВремяФакт = Объект.ДатаФакт;
	КонецЕсли;
	
	НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СмещенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "СмещенияКомментарий" Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Комментарий);
	КонецЕсли;
	
КонецПроцедуры
 
&НаКлиенте
Процедура ПользователиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	// Если не массив, то превратим в массив.
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("Массив") Тогда
		МассивВрем = Новый Массив;
		МассивВрем.Добавить(ВыбранноеЗначение);
		ВыбранноеЗначение =  МассивВрем;
	КонецЕсли;
	
	Для каждого ЭлементМассива Из ВыбранноеЗначение Цикл
		Если ТипЗнч(ЭлементМассива) = Тип("СправочникСсылка.Пользователи") Тогда
			
			Строки = Объект.ПользователиКТ.НайтиСтроки(Новый Структура("Пользователь", ЭлементМассива));
			Если Строки.Количество() = 0 Тогда
				НоваяСтрока = Объект.ПользователиКТ.Добавить();
				НоваяСтрока.Пользователь = ЭлементМассива;
			КонецЕсли;
		
		ИначеЕсли ТипЗнч(ЭлементМассива) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
			МассивПользователей = ПолучитьПользователейПодразделения(ЭлементМассива);
			Для каждого Элемент Из МассивПользователей Цикл
				
				Строки = Объект.ПользователиКТ.НайтиСтроки(Новый Структура("Пользователь", Элемент));
				Если Строки.Количество() = 0 Тогда
					НоваяСтрока = Объект.ПользователиКТ.Добавить();
					НоваяСтрока.Пользователь = Элемент;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Модифицированность = Истина;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Выполнение команд подключаемых отчетов и обработок.
// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
 
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ CRM_ЛицензированиеСервер.ПодсистемаCRMИспользуется() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Невозможно открыть форму контрольной точки. Подсистема 1С:CRM не используется!'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().Документ_CRM_КонтрольнаяТочкаПроекта_ФормаДокумента_ПриСозданииНаСервере();
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ЗаполнитьДанныеФормыСервер(Ложь);
		НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
		
		// После записи дату КТ менять можно только при помощи переноса даты КТ.
		Элементы.Дата.ТолькоПросмотр = Истина;
		Элементы.ВремяНачало.ТолькоПросмотр = Истина;
		Элементы.ДатаЗакрытия.ТолькоПросмотр = Истина;
		Элементы.ВремяОкончания.ТолькоПросмотр = Истина;
		Элементы.НаВесьДень.Видимость = Ложь;
		Элементы.ДекорацияНаВесьДень.Видимость = Элементы.НаВесьДень.Видимость;
		
		Если НЕ ТолькоПросмотр И НЕ Пользователи.ЭтоПолноправныйПользователь() Тогда
			// Проверим кто открыл и если не ответственный, то форма только на чтение.
			РежимТолькоПросмотр = Ложь;
			Строки = Объект.ПользователиКТ.НайтиСтроки(Новый Структура("Пользователь", ТекущийПользователь()));
			Если Строки.Количество() = 0 ИЛИ НЕ Строки[0].Ответственный Тогда
				РежимТолькоПросмотр = Истина;
			КонецЕсли;
			ТолькоПросмотр = РежимТолькоПросмотр;
		КонецЕсли;		
		ЭтоНовый = Ложь;
	Иначе
		Если	(ЗначениеЗаполнено(Объект.Этап) И Объект.Этап.ЭтоГруппа)
			Или	(ЗначениеЗаполнено(Объект.Проект) И Объект.Проект.ЭтоГруппа) Тогда
			//
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Выберите элемент, а не группу!'"));
			
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если Параметры.Свойство("Начало") Тогда
			Объект.Дата = Параметры.Начало;
		КонецЕсли;
		Если Параметры.Свойство("Окончание") Тогда
			Объект.ДатаЗакрытия = Параметры.Окончание;
		КонецЕсли;
		Если Параметры.Свойство("Наименование") Тогда
			Объект.Тема = Параметры.Наименование;
		КонецЕсли;
		
		ЗаполнитьДанныеФормыСервер(Истина);
		НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
		// Заполним ответственных по КТ.
		УчастникиДобавитьОтветственных();
		ЭтоНовый = Истина;
		
	КонецЕсли;
	
	CRM_СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	// Описание
	пДатаНачало = CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаНачало, ВремяНачало);
	Объект.Дата = пДатаНачало; 
	пДатаОкончание = CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаОкончание, ВремяОкончание);
	Объект.ДатаЗакрытия = пДатаОкончание;
	пДатаФакт = CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаФакт, ВремяФакт);
	Объект.ДатаФакт = пДатаФакт;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ТекущийОбъект.Ссылка.Пустая() И НЕ ТекущийОбъект.Ссылка.Статус = Перечисления.CRM_СтатусыКонтрольныхТочек.Завершена
	И НЕ ТекущийОбъект.Ссылка.Статус = Перечисления.CRM_СтатусыКонтрольныхТочек.Отменена
	И (ТекущийОбъект.Статус = Перечисления.CRM_СтатусыКонтрольныхТочек.Завершена ИЛИ ТекущийОбъект.Статус = Перечисления.CRM_СтатусыКонтрольныхТочек.Отменена ) Тогда
		CRM_ОповещенияСервер.УдалитьОповещения(ТекущийОбъект.Ссылка);
	Иначе
		Если ЭтотОбъект.Модифицированность Тогда
			CRM_ОповещенияСервер.УдалитьОповещения(ТекущийОбъект.Ссылка);
			НачалоПериода = CRM_ОповещенияСервер.ПолучитьНачалоПериодаПоПериодичностиОповещений();
			Если ТекущийОбъект.ДатаЗакрытия < ТекущаяДатаСеанса() И ТекущийОбъект.ДатаЗакрытия > НачалоПериода Тогда
				Для Каждого СтрокаТЧ Из ТекущийОбъект.ПользователиКТ Цикл
					Если СтрокаТЧ.Ответственный Тогда
						ПараметрыОповещения = CRM_ОповещенияСервер.ПолучитьПараметрыОповещения(СтрокаТЧ.Пользователь, Справочники.CRM_ВидыОповещений.ПросроченныеКонтрольныеТочки, ТекущийОбъект.Ссылка);
						Если ПараметрыОповещения <> Неопределено Тогда
							CRM_ОповещенияСервер.ДобавитьОповещение(ПараметрыОповещения);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	CRM_СобытияФорм.ПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// Проверим что есть хотя бы один ответственный за КТ.
	Строки = Объект.ПользователиКТ.НайтиСтроки(Новый Структура("Ответственный", Истина));
	Если Строки.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						НСтр("ru = 'Необходимо указать хотя бы одного ответственного за контрольную точку!'"), , "Пользователи" 
						, "Объект",
						Отказ);
	КонецЕсли;
	
	Если (Объект.Статус = ПредопределенноеЗначение("Перечисление.CRM_СтатусыКонтрольныхТочек.Завершена") ИЛИ 
		  Объект.Статус = ПредопределенноеЗначение("Перечисление.CRM_СтатусыКонтрольныхТочек.Отменена")) И
		  НЕ ЗначениеЗаполнено(Объект.ДатаЗакрытия) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						НСтр("ru = 'Для текущего статуса необходимо указать дату закрытия!'"), , "ДатаЗакрытия" 
						, "Объект",
						Отказ);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновитьПланыПроектов",, ЭтотОбъект);

	// Оповещение календарю о записи документа.
	Оповестить("ОбновленыДанныеСобытия", Новый Структура("СсылкаНаОбъект, ОбновлятьКалендарь", Объект.Ссылка, Параметры.ОбновлятьКалендарь), ЭтотОбъект);
	
	Оповестить("ОбновитьНапоминания", Новый Структура("ОткрыватьАктивизироватьФормуНапоминаний", Ложь), ЭтотОбъект);
	
	Оповестить("ОбновитьПланировщик");
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	СкорректироватьДатуВремя(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДатаЗакрытияПриИзменении(Элемент)
	
	СкорректироватьДатуВремя(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалоПриИзменении(Элемент)
	СкорректироватьДатуВремя(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияПриИзменении(Элемент)
	СкорректироватьДатуВремя(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура НаВесьДеньПриИзменении(Элемент)
	НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияНачалоВыбораИзСписка(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Элемент", Элемент);
	Дополнительно.Вставить("Данные", "ВремяОкончание");
	Дополнительно.Вставить("ПриоритетДатыНачала", Ложь);
	Дополнительно.Вставить("Обработчик", "ВремяНачалоПриИзменении");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОповещенияВыбранногоВремени", ЭтотОбъект, Дополнительно);
	Если ДатаНачало = ДатаОкончание Тогда
		CRM_ОбщегоНазначенияКлиентСервер.ВыбратьВремяИзСписка(ЭтотОбъект, ВремяОкончание, Элемент, ВремяНачало, Истина, ОписаниеОповещения);
	Иначе
		CRM_ОбщегоНазначенияКлиентСервер.ВыбратьВремяИзСписка(ЭтотОбъект, ВремяОкончание, Элемент,,, ОписаниеОповещения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалоНачалоВыбораИзСписка(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Элемент", Элемент);
	Дополнительно.Вставить("Данные", "ВремяНачало");
	Дополнительно.Вставить("ПриоритетДатыНачала", Истина);
	Дополнительно.Вставить("Обработчик", "ВремяНачалоПриИзменении");
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОповещенияВыбранногоВремени", ЭтотОбъект, Дополнительно);
	CRM_ОбщегоНазначенияКлиентСервер.ВыбратьВремяИзСписка(ЭтотОбъект, ВремяНачало, Элемент,,, ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ВремяФактНачалоВыбораИзСписка(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Дополнительно = Новый Структура;
	Дополнительно.Вставить("Элемент", Элемент);
	Дополнительно.Вставить("Данные", "ВремяФакт");
	Дополнительно.Вставить("ПриоритетДатыНачала", Неопределено);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаОповещенияВыбранногоВремени", ЭтотОбъект, Дополнительно);
	CRM_ОбщегоНазначенияКлиентСервер.ВыбратьВремяИзСписка(ЭтотОбъект, ВремяФакт, Элемент,,, ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
// Процедура обработки выбора времени из списка.
//
Процедура ОбработкаОповещенияВыбранногоВремени(ВыбранноеВремя, Дополнительно) Экспорт
	Если ВыбранноеВремя <> Неопределено Тогда
		ЭтотОбъект[Дополнительно.Данные] = ВыбранноеВремя.Значение;
		Если Дополнительно.Обработчик = "ВремяНачалоПриИзменении" Тогда
			ВремяНачалоПриИзменении(Дополнительно.Элемент);
		КонецЕсли;
		СкорректироватьДатуВремя(Дополнительно.ПриоритетДатыНачала);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВремяФактПриИзменении(Элемент)
	СкорректироватьДатуВремяФакт();
КонецПроцедуры

&НаКлиенте
Процедура ДатаФактПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	СкорректироватьДатуВремяФакт();
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)	  
	// Заполняем подразделение только, если оно пустое.
	Если НЕ ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ПодразделениеСсылка = ПодразделениеПроекта(Объект.Проект);		
		Объект.Подразделение = ПодразделениеСсылка;
	КонецЕсли;		
КонецПроцедуры

&НаСервере
// Процедура - обработчик события ПриЧтенииНаСервере.
//
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
		
КонецПроцедуры // ПриЧтенииНаСервере()

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	CRM_СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	CRM_СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	CRM_СобытияФорм.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти
