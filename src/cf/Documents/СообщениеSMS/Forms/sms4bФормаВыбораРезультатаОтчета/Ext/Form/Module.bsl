///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
// Функция возвращает массив доступных результатов отчетов
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	Массив	- Массив доступных результатов отчетов
//
Функция ПолучитьМассивДоступныхРезультатов()
	МассивРезультатов = Новый Массив;
	СписокСуществующихРезультатов = CRM_ОбщегоНазначенияСервер.ПолучитьСписокВыбораНаименованийСохраненныхРезультатовОтчетов();
	Если СписокСуществующихРезультатов.Количество() > 0 Тогда
		Для Каждого ЭлементСписка ИЗ СписокСуществующихРезультатов Цикл
			СохраненныйСписок = CRM_ОбщегоНазначенияСервер.ПолучитьСохраненныйРезультатОтчетаПоНаименованию(ЭлементСписка.Значение);
			Если (СохраненныйСписок.Количество() > 0)
			И (ТипЗнч(СохраненныйСписок[0].Значение) = Тип("СправочникСсылка.Партнеры")
			ИЛИ (ТипЗнч(СохраненныйСписок[0].Значение) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")))Тогда
				МассивРезультатов.Добавить(ЭлементСписка.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат МассивРезультатов;
КонецФункции // ПолучитьМассивДоступныхРезультатов()

&НаСервере
// Процедура заполняет список ссылок
//
// Параметры:
//	Нет.
//
Процедура ЗаполнитьСписокСсылок()
	СписокСсылок.Очистить();
	Если ЗначениеЗаполнено(Наименование) Тогда
		СписокСсылок = CRM_ОбщегоНазначенияСервер.ПолучитьСохраненныйРезультатОтчетаПоНаименованию(Наименование);
		Для Каждого ЭлементСписка Из СписокСсылок Цикл
			ЭлементСписка.Пометка = Истина;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры // ЗаполнитьСписокСсылок()

&НаКлиенте
// Процедура - обработчик ответа на вопрос
//
// Параметры:
//	РезультатВопроса		- Произвольный	- Результат ответа на вопрос
// ДополнительныеПараметры	- Структура		- Структура дополнительных параметров
//
Процедура ОбработкаОтвета(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ДополнительныеПараметры.ОчищатьТЧ = Истина;
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		ДополнительныеПараметры.ОчищатьТЧ = Ложь;
	Иначе
		Возврат;
	КонецЕсли;
	Закрыть(ДополнительныеПараметры);
КонецПроцедуры // ОбработкаОтвета()

//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" элемента формы "Наименование"
//
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элемент.СписокВыбора.Очистить();
	МассивРезультатов = ПолучитьМассивДоступныхРезультатов();
	Для Каждого ЭлементМассива ИЗ МассивРезультатов Цикл
		Элемент.СписокВыбора.Добавить(ЭлементМассива);
	КонецЦикла;
КонецПроцедуры // НаименованиеНачалоВыбора()

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "Наименование"
//
Процедура НаименованиеПриИзменении(Элемент)
	ЗаполнитьСписокСсылок();
КонецПроцедуры // НаименованиеПриИзменении()

//////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

&НаКлиенте
// Процедура - обработчик команды формы "Отмена"
//
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры // Отмена()

&НаКлиенте
// Процедура - обработчик команды формы "ОК"
//
Процедура ОК(Команда)
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("СписокСсылок" ,					СписокСсылок);
	СтруктураВозврата.Вставить("ВидКонтактнойИнформации",		ВидКонтактнойИнформации);
	СтруктураВозврата.Вставить("НеЗаполнятьСПустымиТелефонами",	НеЗаполнятьСПустымиТелефонами);
	СтруктураВозврата.Вставить("ОчищатьТЧ",						Ложь);
	Если ЕстьЗаписи Тогда
		ОписаниеОтвета = Новый ОписаниеОповещения("ОбработкаОтвета", ЭтотОбъект, СтруктураВозврата);
		ПоказатьВопрос(ОписаниеОтвета, НСтр("ru = 'Табличная часть уже содержит записи." + Символы.ПС + "Очистить табличную часть?'"), РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
	КонецЕсли;
	Закрыть(СтруктураВозврата);
КонецПроцедуры // ОК()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обраотчик события формы "ПриСозданииНаСервере"
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЕстьЗаписи	= Параметры.ЕстьЗаписи;
	ВидКонтактнойИнформации = Справочники.ВидыКонтактнойИнформации.CRM_МобильныйТелефонЧастногоЛица;
КонецПроцедуры // ПриСозданииНаСервере()
