
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицыПланированиеМаршрутов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицыТочкиМаршрутов(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИнициализироватьТаблицыДляДвижений(
		Запрос,
		ТекстыЗапроса,
		ДополнительныеСвойства.ТаблицыДляДвижений,
		Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицыПланированиеМаршрутов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПланированиеМаршрутов";
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонструкторМаршрутовПланирование.Ссылка КАК Ссылка,
	|	КонструкторМаршрутовПланирование.Ссылка.Дата КАК Дата,
	|	КонструкторМаршрутовПланирование.ТРТ КАК ТРТ,
	|	КонструкторМаршрутовПланирование.Период КАК Период,
	|	КонструкторМаршрутовПланирование.Ссылка.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	КонструкторМаршрутовПланирование.КоличествоДней КАК КоличествоДней,
	|	КонструкторМаршрутовПланирование.Авиа КАК Авиа,
	|	КонструкторМаршрутовПланирование.Аренда КАК Аренда,
	|	КонструкторМаршрутовПланирование.ЖД КАК ЖД,
	|	КонструкторМаршрутовПланирование.ЛичныйТранспорт КАК ЛичныйТранспорт,
	|	КонструкторМаршрутовПланирование.Автобус КАК Автобус,
	|	КонструкторМаршрутовПланирование.СлужебныйТранспорт КАК СлужебныйТранспорт,
	|	КонструкторМаршрутовПланирование.Такси КАК Такси,
	|	КонструкторМаршрутовПланирование.Проживание КАК Проживание,
	|	КонструкторМаршрутовПланирование.Километраж КАК Километраж,
	|	КонструкторМаршрутовПланирование.Идентификатор КАК Идентификатор,
	|	КонструкторМаршрутовПланирование.ИдентификаторРодителя КАК ИдентификаторРодителя,
	|	КонструкторМаршрутовПланирование.Уровень КАК Уровень,
	|	КонструкторМаршрутовПланирование.ИдентификаторМаршрута КАК ИдентификаторМаршрута,
	// +++ VOG Кулаков П.Л. 18.06.2021 DEV-665
	|	КонструкторМаршрутовПланирование.Клиент КАК Клиент,
	// --- VOG Кулаков П.Л.
	// ++ VOG Солодов В.В. 16.06.2021 DEV-655
	|	КонструкторМаршрутовПланирование.Ссылка.Подразделение КАК Подразделение,
	|	КонструкторМаршрутовПланирование.Ссылка.Ответственный КАК Ответственный,
	|	КонструкторМаршрутовПланирование.РРО_РТН КАК РРО_РТН,
	|	КонструкторМаршрутовПланирование.ГД КАК ГД,
	|	КонструкторМаршрутовПланирование.Прочие КАК Прочие,
	|	КонструкторМаршрутовПланирование.Ссылка.ПериодПланирования КАК ПериодПланирования
	// -- VOG Солодов В.В. 16.06.2021 DEV-655
	|ПОМЕСТИТЬ ВТ_ВсеСтроки
	|ИЗ
	|	Документ.КонструкторМаршрутов.Планирование КАК КонструкторМаршрутовПланирование
	|ГДЕ
	|	КонструкторМаршрутовПланирование.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтрокиМаршрут.Ссылка КАК Регистратор,
	|	СтрокиМаршрут.Дата КАК Период,
	// ++ VOG Солодов В.В. 16.06.2021 DEV-655
	|	СтрокиМаршрут.ПериодПланирования КАК ПериодПланирования,
	|	СтрокиМаршрут.Период КАК ПериодМаршрута,
	// До изменения
	//|	СтрокиМаршрут.Период КАК ПериодПланирования,
	// -- VOG Солодов В.В. 16.06.2021 DEV-655
	|	МаршрутыКомандировок.Ссылка КАК Маршрут,
	|	СтрокиМаршрут.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СтрокиМаршрут.КоличествоДней КАК КоличествоДней,
	|	СтрокиМаршрут.Авиа КАК Авиа,
	|	СтрокиМаршрут.Аренда КАК Аренда,
	|	СтрокиМаршрут.ЖД КАК ЖД,
	|	СтрокиМаршрут.ЛичныйТранспорт КАК ЛичныйТранспорт,
	|	СтрокиМаршрут.Автобус КАК Автобус,
	|	СтрокиМаршрут.СлужебныйТранспорт КАК СлужебныйТранспорт,
	|	СтрокиМаршрут.Такси КАК Такси,
	|	СтрокиМаршрут.Проживание КАК Проживание,
	|	СтрокиМаршрут.Километраж КАК Километраж,
	|	СтрокиМаршрут.Идентификатор КАК Идентификатор,
	// ++ VOG Солодов В.В. 16.06.2021 DEV-655
	|	СтрокиМаршрут.Подразделение КАК Подразделение,
	|	СтрокиМаршрут.Ответственный КАК Ответственный,
	|	СтрокиМаршрут.РРО_РТН КАК РРО_РТН,
	|	СтрокиМаршрут.ГД КАК ГД,
	|	СтрокиМаршрут.Прочие КАК Прочие
	// -- VOG Солодов В.В. 16.06.2021 DEV-655
	|ИЗ
	|	ВТ_ВсеСтроки КАК СтрокиМаршрут
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МаршрутыКомандировок КАК МаршрутыКомандировок
	|		ПО СтрокиМаршрут.ИдентификаторМаршрута = МаршрутыКомандировок.Идентификатор
	|			И (НЕ МаршрутыКомандировок.ПометкаУдаления)
	|ГДЕ
	|	СтрокиМаршрут.Уровень = 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицыТочкиМаршрутов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТочкиМаршрутов";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтрокиМаршрут.Ссылка КАК Регистратор,
	|	СтрокиМаршрут.Дата КАК Период,
	// ++ VOG Солодов В.В. 16.06.2021 DEV-655
	|	СтрокиМаршрут.ПериодПланирования КАК ПериодПланирования,
	|	СтрокиМаршрут.Период КАК ПериодМаршрута,
	// До изменения
	//|	СтрокиМаршрут.Период КАК ПериодПланирования,
	|	МаршрутыКомандировок.Ссылка КАК Маршрут,
	|	ВТ_ВсеСтроки.ТРТ КАК Точка,
	// +++ VOG Кулаков П.Л. 18.06.2021 DEV-665
	|	ВТ_ВсеСтроки.Клиент КАК Клиент,
	// --- VOG Кулаков П.Л.
	|	СтрокиМаршрут.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СтрокиМаршрут.Идентификатор КАК Идентификатор
	|ИЗ
	|	ВТ_ВсеСтроки КАК ВТ_ВсеСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеСтроки КАК СтрокиГород
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеСтроки КАК СтрокиРегион
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ВсеСтроки КАК СтрокиМаршрут
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МаршрутыКомандировок КАК МаршрутыКомандировок
	|					ПО СтрокиМаршрут.ИдентификаторМаршрута = МаршрутыКомандировок.Идентификатор
	|						И (НЕ МаршрутыКомандировок.ПометкаУдаления)
	|				ПО СтрокиРегион.ИдентификаторРодителя = СтрокиМаршрут.Идентификатор
	|			ПО СтрокиГород.ИдентификаторРодителя = СтрокиРегион.Идентификатор
	|		ПО ВТ_ВсеСтроки.ИдентификаторРодителя = СтрокиГород.Идентификатор
	|ГДЕ
	|	ВТ_ВсеСтроки.Уровень = 3";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Заполняет движения документа по регистру "ПланированиеМаршрутов"
//
Процедура ОтразитьДанныеПланированияМаршрутов(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаПланированиеМаршрутов;
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ПланированиеМаршрутов.Записывать = Истина;
	Движения.ПланированиеМаршрутов.Загрузить(Таблица);

КонецПроцедуры

// Заполняет движения документа по регистру "ТочкиМаршрутов"
//
Процедура ОтразитьДанныеТочкиМаршрутов(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТочкиМаршрутов;
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТочкиМаршрутов.Записывать = Истина;
	Движения.ТочкиМаршрутов.Загрузить(Таблица);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли