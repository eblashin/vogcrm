
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура ЗаполнитьСопуствующиеРеквизитыСеврер()
	Объект.Баллы = Объект.ВидВзаимодействия.Баллы;
	Объект.СостояниеИнтереса = Объект.ВидВзаимодействия.СостояниеИнтереса;
КонецПроцедуры

&НаСервере
Процедура УстановитьВремяНачалоВремяОкончание()
	ВремяНачалаРабочегоДня		= CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Объект.Ответственный,	"ВремяНачалаРабочегоДня");
	Если НЕ ЗначениеЗаполнено(ВремяНачалаРабочегоДня) Тогда
		ВремяНачалаРабочегоДня = Константы.CRM_НачалоРабочегоДня.Получить();
	КонецЕсли;
	ВремяНачала		= ВремяНачалаРабочегоДня;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьВидимостьИДоступностьФормы(Форма)
	Форма.Элементы.ГруппаВремя.Видимость = (Не Форма.Объект.НаВесьДень);
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьДатуНачалаОбъекта()
	Объект.ПлановаяДата = CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаНачала, ВремяНачала);
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Элементы.СоздатьНовыйИнтерес.Видимость = Ложь;
	КонецЕсли; 
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Автор			= Пользователи.АвторизованныйПользователь();
		Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
			Объект.Ответственный	= Объект.Автор;
		КонецЕсли;	
	Иначе	
		ДатаИВремя = CRM_ОбщегоНазначенияКлиентСервер.РазделитьДатаНаДатуИВремя(Объект.ПлановаяДата);
		ДатаНачала = ДатаИВремя.Дата;
		ВремяНачала = ДатаИВремя.Время;
	КонецЕсли;
	
	ОткрытоИзФормыНапоминаний = Ложь;
	Параметры.Свойство("ОткрытоИзФормыНапоминаний", ОткрытоИзФормыНапоминаний);	
	
	CRM_СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
// Процедура - обработчик события ПриЧтенииНаСервере.
//
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
		
КонецПроцедуры // ПриЧтенииНаСервере()

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Объект.ПлановаяДата	= CRM_ОбщегоНазначенияКлиентСервер.СформироватьДатуИзДатыИВремени(ДатаНачала, ВремяНачала);
КонецПроцедуры

&НаКлиенте
Процедура ВидВзаимодействияПриИзменении(Элемент)
	ЗаполнитьСопуствующиеРеквизитыСеврер();
КонецПроцедуры

&НаКлиенте
Процедура НаВесьДеньПриИзменении(Элемент)
	НастроитьВидимостьИДоступностьФормы(ЭтотОбъект);
	
	Если Объект.НаВесьДень Тогда
		УстановитьВремяНачалоВремяОкончание();
		
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаПриИзменении(Элемент)
	
	СкорректироватьДатуНачалаОбъекта();

КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВремяНачалаНачалоВыбораЗавершение", ЭтотОбъект);
	CRM_ОбщегоНазначенияКлиентСервер.ВыбратьВремяИзСписка(ЭтотОбъект, ВремяНачала, Элемент,,, ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаНачалоВыбораЗавершение(ВыбранноеВремя, СтандартнаяОбработка) Экспорт
	
	Если ВыбранноеВремя <> Неопределено Тогда
		ВремяНачала = ВыбранноеВремя.Значение;
		ВремяНачалаПриИзменении(Элементы.ВремяНачала)
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	СкорректироватьДатуНачалаОбъекта();
КонецПроцедуры

&НаСервере
Функция СоздатьНовыйИнтересНаСервере()
	
	НужноЗаписыватьПередСозданиемИнтереса	 = Ложь;
	СостояниеИнтереса						 = Справочники.CRM_СостоянияИнтересов.ПервичныйИнтерес;
		
	// Будем закрывать старые взаимодействия, где автор = ответственному.
	Если Объект.ПлановаяДата <= CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса() И Объект.Автор = Объект.Ответственный Тогда
		Объект.СтатусВзаимодействия = Справочники.CRM_СостоянияСобытий.Завершено;	
		НужноЗаписыватьПередСозданиемИнтереса = Истина;
	КонецЕсли; 
	
	// Если не заполнено состояние интереса, то заполним его до создания интереса.
	Если Не ЗначениеЗаполнено(Объект.СостояниеИнтереса) Тогда
		Объект.СостояниеИнтереса = СостояниеИнтереса;
		НужноЗаписыватьПередСозданиемИнтереса = Истина;
	КонецЕсли; 
	
	Если НужноЗаписыватьПередСозданиемИнтереса Тогда
		Записать();
	КонецЕсли; 
	
	ОбъектИнтерес							 = Документы.CRM_Интерес.СоздатьДокумент();
	ОбъектИнтерес.Дата						 = Объект.Дата;
	ОбъектИнтерес.Автор						 = Объект.Автор;
	ОбъектИнтерес.СостояниеИнтереса			 = ?(ЗначениеЗаполнено(Объект.СостояниеИнтереса), Объект.СостояниеИнтереса, СостояниеИнтереса);
	ОбъектИнтерес.Партнер					 = Объект.Партнер;
	ОбъектИнтерес.КонтактноеЛицо			 = Объект.КонтактноеЛицо;
	ОбъектИнтерес.Описание					 = Объект.Содержание;
	ОбъектИнтерес.Ответственный				 = Объект.Ответственный;
	ОбъектИнтерес.Подразделение				 = Объект.Подразделение;
	
	ОбъектИнтерес.Офис						 = ОбъектИнтерес.Подразделение.CRM_Офис;
	ОбъектИнтерес.Тема						 = Объект.Содержание;
	ОбъектИнтерес.Завершен					 = Ложь;
	ОбъектИнтерес.ТипУслуги					 = Справочники.CRM_ТипУслуги.НайтиПоНаименованию("Поставка. ПО");
	            
	МожноЗаписатьИнтерес = Истина;
	Если ЗначениеЗаполнено(ОбъектИнтерес.Партнер) И ЗначениеЗаполнено(ОбъектИнтерес.ТипУслуги) Тогда		
		// Проверяем аккаунт-менеджера.
		ТекПользователь		= ПользователиКлиентСервер.АвторизованныйПользователь();
		ОсновнойМенеджер	= CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ОбъектИнтерес.Партнер, "ОсновнойМенеджер");
		ЭтоАккаунтМенеджер = (ТекПользователь = ОсновнойМенеджер);
		// Сразу определяем, руководитель ли аккаунт-менеджера.
		МассивРуководителей = CRM_УправлениеДоступомПовтИсп.ПолучитьРуководителейПользователя(ОсновнойМенеджер);
		ЭтоРукводительАккаунтМенеджера = Не (МассивРуководителей.Найти(ТекПользователь) = Неопределено);
		
		// Если это аккаунт-менеджер или его руководитель разрешаем записать интерес, не смотря на наличие / отсутсвие
		// активных.
		Если ЭтоАккаунтМенеджер ИЛИ ЭтоРукводительАккаунтМенеджера Тогда
			МожноЗаписатьИнтерес = Истина;
		Иначе
			// Если нет, то проверяем активные по данному клиенту / типу услуги.
			МассивИнтересовКлиента = CRM_ОбщегоНазначенияСервер.ПолучитьМассивИнтересовКлиента(ОбъектИнтерес.Ссылка, ОбъектИнтерес.Партнер, ОбъектИнтерес.ТипУслуги);
			Для Каждого ЭлементМассива Из МассивИнтересовКлиента Цикл
				ОтветственныйМенеджер = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(ЭлементМассива, "Ответственный");
				Если ОтветственныйМенеджер = ОбъектИнтерес.Ответственный Тогда
					// Если уже есть интерес с данным ответственным.
					МожноЗаписатьИнтерес = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
	
	Если МожноЗаписатьИнтерес Тогда
		ОбъектИнтерес.Записать();	
		Возврат ОбъектИнтерес.Ссылка;
	Иначе
		Возврат Документы.CRM_Интерес.ПустаяСсылка();	
	КонецЕсли; 
		
КонецФункции

&НаКлиенте
Процедура СоздатьНовыйИнтерес(Команда)
	НовыйИнтерес  = СоздатьНовыйИнтересНаСервере();
	
	Если НЕ ЗначениеЗаполнено(НовыйИнтерес) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Обнаружен активный интерес клиента  типу услуги Поставка. ПО, запись документа отменена!'"));
	Иначе		
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", НовыйИнтерес);
		
		ОткрытьФорму("Документ.CRM_Интерес.ФормаОбъекта", ПараметрыФормы);
		
		Элементы.СоздатьНовыйИнтерес.Видимость = Ложь; 
		
		Если ОткрытоИзФормыНапоминаний И ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
			Оповестить("ПисьмоУспешноОткрытоИзНапоминания",Новый Структура("Ссылка, Пользователь", Объект.Ссылка, ПользователиКлиентСервер.ТекущийПользователь()));
		КонецЕсли; 	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ОткрытоИзФормыНапоминаний И ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Оповестить("ПисьмоУспешноОткрытоИзНапоминания",Новый Структура("Ссылка, Пользователь", Объект.Ссылка, ПользователиКлиентСервер.ТекущийПользователь()));
	КонецЕсли; 	
	Если Не ЗначениеЗаполнено(Объект.СостояниеИнтереса) И ЗначениеЗаполнено(Объект.ДокументОснование) И ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.CRM_Интерес") Тогда
		Объект.СостояниеИнтереса = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Объект.ДокументОснование, "СостояниеИнтереса");	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПриИзменении(Элемент)
	РезультатПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РезультатПриИзмененииНаСервере()
	Объект.ДатаЗавершенияВзаимодействия = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	Объект.ЗавершившийПользователь = Пользователи.ТекущийПользователь();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	CRM_СобытияФормКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	CRM_СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	CRM_СобытияФорм.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	CRM_СобытияФорм.ПередЗаписьюНаСервере(ЭтотОбъект, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти
