&НаКлиенте
Перем ФлагЗакрытия;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ДоступныеТипы = РеквизитФормыВЗначение("Объект").Метаданные().Реквизиты.ТипРеспондентов.Тип.Типы();
	
	Для каждого ДоступныйТип Из ДоступныеТипы Цикл
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ДоступныйТип);
		Элементы.ТипРеспондентов.СписокВыбора.Добавить(Новый ОписаниеТипов(МассивТипов),Строка(ДоступныйТип));
		
	КонецЦикла;
	
	Если Объект.ТипРеспондентов = Неопределено Тогда
		Если ДоступныеТипы.Количество() > 0 Тогда
			 Объект.ТипРеспондентов = Новый(ДоступныеТипы[0]);
			 ТипРеспондентов = Элементы.ТипРеспондентов.СписокВыбора[0].Значение;
		 КонецЕсли;
	 Иначе
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ТипЗнч(Объект.ТипРеспондентов));
		ТипРеспондентов = Новый ОписаниеТипов(МассивТипов);
	КонецЕсли;
	
	// +CRM
	ИспользоватьГруппыПользователей = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыПользователей");
	Если Параметры.Свойство("МассивРеспондентов") Тогда
		Если Параметры.МассивРеспондентов.Количество() > 0  Тогда
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(ТипЗнч(Параметры.МассивРеспондентов[0]));
			ТипРеспондентов = Новый ОписаниеТипов(МассивТипов);
			Для Каждого Респондент Из Параметры.МассивРеспондентов Цикл
				СтрокаРеспонденты = Объект.Респонденты.Добавить();
				СтрокаРеспонденты.Респондент = Респондент;			
			КонецЦикла;				
		Иначе
			МассивТипов = Новый Массив;
			МассивТипов.Добавить(Тип("СправочникСсылка.Партнеры"));
			ТипРеспондентов = Новый ОписаниеТипов(МассивТипов);
		КонецЕсли;
	КонецЕсли;
	Если Параметры.Свойство("Наименование") Тогда
		Объект.Наименование = Параметры.Наименование;
	КонецЕсли;
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ВозможностьПредварительногоСохранения = Истина;
	КонецЕсли;
	// -CRM
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
		МодульПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбработатьИзменениеТипаРеспондента();
	УправлениеДоступностью();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если (Объект.ДатаНачала > Объект.ДатаОкончания) И (Объект.ДатаОкончания <> Дата(1,1,1)) Тогда
	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Нстр("ru = 'Дата начала не может быть больше чем дата окончания.'"),,"Объект.ДатаНачала");
		Отказ = Истина;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВыборРеспондентов" Тогда
		
		Для каждого ЭлементМассива Из Параметр.ОтобранныеРеспонденты Цикл
			
			Если Объект.Респонденты.НайтиСтроки(Новый Структура("Респондент",ЭлементМассива)).Количество() = 0 Тогда
				
				НоваяСтрока = Объект.Респонденты.Добавить();
				НоваяСтрока.Респондент = ЭлементМассива;
				// +CRM
				Модифицированность = Истина;
				// -CRM
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	Если НЕ (ФлагЗакрытия = Истина) Тогда
		ФлагЗакрытия	= Истина;
		Отказ			= Истина;
		Закрыть(Объект.Ссылка);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипРеспондентовПриИзменении(Элемент)
	
	ОбработатьИзменениеТипаРеспондента();
	УправлениеДоступностью();
	
	// +CRM
	Модифицированность = Истина;
	// -CRM
	
КонецПроцедуры

&НаКлиенте
Процедура СвободныйОпросПриИзменении(Элемент)
	
	УправлениеДоступностью();
	Если Объект.Респонденты.Количество() > 0 Тогда
		Объект.Респонденты.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(Элемент.ТекстРедактирования, 
		ЭтотОбъект, "Объект.Комментарий");
	
КонецПроцедуры

#Область ОбработчикиСобытийТаблицыФормыРеспонденты

&НаКлиенте
Процедура РеспондентыРеспондентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Респонденты.ТекущиеДанные;
	
	Значение                 = ТекущиеДанные.Респондент;
	ТекущиеДанные.Респондент = ТипРеспондентов.ПривестиЗначение(Значение);
	Элемент.ВыбиратьТип      = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура РеспондентыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Респонденты.ТекущиеДанные;
	
	Значение                  = ТекущиеДанные.Респондент;
	ТекущиеДанные.Респондент  = ТипРеспондентов.ПривестиЗначение(Значение);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиКомандФормы

// Открывает форму подбора респондентов.
&НаКлиенте
Процедура ПодборРеспондентов(Команда)
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ТипРеспондента",Объект.ТипРеспондентов);
	СтруктураОтбора.Вставить("Респонденты",Объект.Респонденты);
	
	ОткрытьФорму("Документ.НазначениеОпросов.Форма.ФормаПодбораРеспондентов",СтруктураОтбора,ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

// +CRM

#Область ОбработчикиПодключаемыхОтчетовИОбработок

////////////////////////////////////////////////////////////////////////////////
// Выполнение команд подключаемых отчетов и обработок.


// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
	МодульПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	МодульПодключаемыеКоманды = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКоманды");
	МодульПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
	МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

// -CRM

#Область СлужебныеПроцедурыИФункции

// Обрабатывает изменение типа респондента.
&НаКлиенте
Процедура ОбработатьИзменениеТипаРеспондента()
	
	Элементы.РеспондентыРеспондент.ОграничениеТипа  = ТипРеспондентов;
	Элементы.РеспондентыРеспондент.ДоступныеТипы	= ТипРеспондентов;
	
	Если Объект.ТипРеспондентов <> Неопределено Тогда
		Объект.ТипРеспондентов = Новый(ТипРеспондентов.Типы()[0]);
	КонецЕсли;
	
	Для каждого СтрокаРеспонденты Из Объект.Респонденты Цикл
		
		Если Не ТипРеспондентов.СодержитТип(ТипЗнч(СтрокаРеспонденты.Респондент)) Тогда
			Объект.Респонденты.Очистить();
			Элементы.Респонденты.Обновить();
		КонецЕсли;
		
		Прервать;
		
	КонецЦикла;
	
КонецПроцедуры

// Управляет доступностью элементов формы.
&НаКлиенте
Процедура УправлениеДоступностью()

	Элементы.Респонденты.ТолькоПросмотр           = Объект.СвободныйОпрос;
	Элементы.КнопкаПодборРеспондентов.Доступность = НЕ Объект.СвободныйОпрос;
	// +CRM
	Элементы.ГруппаЗаполнить.Доступность     	  = НЕ Объект.СвободныйОпрос;
	// -CRM

КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()

	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Комментарий);

КонецПроцедуры

// +CRM

&НаСервере
Процедура ЗаполнитьТЧПоРезультатуОтчета(СписокСсылок)
	
	Для Каждого ЭлементСписка Из СписокСсылок Цикл
		Если НЕ ЭлементСписка.Пометка Тогда Продолжить; КонецЕсли;
		Если ТипЗнч(ЭлементСписка.Значение) = ТипЗнч(Объект.ТипРеспондентов) Тогда
			// Дубли не добавляем				
			МассивСтрок = Объект.Респонденты.НайтиСтроки(Новый Структура("Респондент", ЭлементСписка.Значение));
			Если МассивСтрок.Количество() = 0 Тогда					
				СтрокаРеспонденты = Объект.Респонденты.Добавить();
				СтрокаРеспонденты.Респондент = ЭлементСписка.Значение;		
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРезультатамОтчета(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЕстьЗаписи", (Объект.Респонденты.Количество() > 0));
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоРезультатамОтчетаЗавершение", ЭтотОбъект);
	ОткрытьФорму("Документ.НазначениеОпросов.Форма.CRM_ФормаВыбораРезультатаОтчета", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРезультатамОтчетаЗавершение(Результат, ДополнительныеПарметры) Экспорт
	
	Если НЕ (Результат = Неопределено) Тогда
		ВидКонтактнойИнформации			= Результат.ВидКонтактнойИнформации;
		НеЗаполнятьСПустымиТелефонами	= Результат.НеЗаполнятьСПустымиТелефонами;
		Если Результат.ОчищатьТЧ Тогда
			Объект.Респонденты.Очистить();
		КонецЕсли;		
		ЗаполнитьТЧПоРезультатуОтчета(Результат.СписокСсылок);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппе(Команда)
	
	Если ТипЗнч(Объект.ТипРеспондентов) = Тип("СправочникСсылка.Пользователи") Тогда
		Если НЕ ИспользоватьГруппыПользователей Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Отключена настройка ""Использовать группы пользователей""!'"), 10);
			Возврат;
		КонецЕсли;
		ПараметрыФормы = Новый Структура("РежимВыбора,ЗакрыватьПриВыборе,ВыборГруппПользователей", Истина, Истина, Истина);
		ОткрытьФорму("Справочник.Пользователи.ФормаСписка", ПараметрыФормы, ЭтотОбъект, ,);
	Иначе
		ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Истина);
		ОткрытьФорму("Справочник.Партнеры.ФормаВыбораГруппы", ПараметрыФормы, ЭтотОбъект, ,);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧПоСегменту()
	
	Запрос = Новый Запрос;
	Если Сегмент.СпособФормирования = Перечисления.СпособыФормированияСегментов.ФормироватьДинамически Тогда
		РеквизитыСКДСегмента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Сегмент,
			"СхемаКомпоновкиДанных,ХранилищеНастроекКомпоновкиДанных,ИмяШаблонаСКД");
		НастройкиСегмента = РеквизитыСКДСегмента.ХранилищеНастроекКомпоновкиДанных.Получить();
		Если ПустаяСтрока(РеквизитыСКДСегмента.ИмяШаблонаСКД) Тогда
			СКД = РеквизитыСКДСегмента.СхемаКомпоновкиДанных.Получить();
		Иначе
			СКД_Макета = СегментыСервер.ПолучитьОписаниеИСхемуКомпоновкиДанныхПоИмениМакета(Сегмент, РеквизитыСКДСегмента.ИмяШаблонаСКД);
			СКД = СКД_Макета.СхемаКомпоновкиДанных;
		КонецЕсли;
		Если СКД.НаборыДанных.Найти("СписокСегмента") <> Неопределено Тогда
			Поля = СКД.НаборыДанных.СписокСегмента.Поля;
			Для Каждого Поле Из Поля Цикл
				Поле.ОграничениеИспользования.Поле = Ложь;
			КонецЦикла;
			// Подключить поля запроса списка.
			НастройкиСписка = СКД.ВариантыНастроек.Список.Настройки;
			Настройки = СКД.НастройкиПоУмолчанию;
			CRM_СегментыСервер.СкопироватьЭлементы(НастройкиСписка.ПараметрыДанных, Настройки.ПараметрыДанных);
			CRM_СегментыСервер.СкопироватьЭлементы(НастройкиСписка.Отбор, Настройки.Отбор);
		ИначеЕсли СКД.НаборыДанных.Найти("ФормированиеСегмента") = Неопределено Тогда
			НастройкиСписка = Неопределено;
		ИначеЕсли НастройкиСегмента = Неопределено Тогда
			НастройкиСписка = СКД.ВариантыНастроек.ФормированиеСегмента.Настройки;
		Иначе
			НастройкиСписка = НастройкиСегмента;
		КонецЕсли;
		Если НастройкиСписка = Неопределено Тогда
			МассивПартнеров = Новый Массив();
		Иначе
			КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
			МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, НастройкиСписка, , ,
				Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
			ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
			ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
			ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
			ТаблицаЗначений = Новый ТаблицаЗначений;
			ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
			ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
			МассивПартнеров = ТаблицаЗначений.ВыгрузитьКолонку("Партнер");
		КонецЕсли;
		Если ТолькоОсновныеКонтактныеЛица Тогда
			ТекстЗапроса = "ВЫБРАТЬ
               |	Партнеры.Ссылка КАК Партнер,
               |	Партнеры.CRM_ОсновноеКонтактноеЛицо КАК КонтактноеЛицо
               |ИЗ
               |	Справочник.Партнеры КАК Партнеры
               |ГДЕ
               |	НЕ Партнеры.ПометкаУдаления
			   |	И Партнеры.Ссылка В (&МассивПартнеров)";
		Иначе
			ТекстЗапроса = "ВЫБРАТЬ
               |	Партнеры.Ссылка КАК Партнер,
               |	ЕСТЬNULL(КонтактныеЛицаПартнеров.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)) КАК КонтактноеЛицо
               |ИЗ
               |	Справочник.Партнеры КАК Партнеры
               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
               |		ПО Партнеры.Ссылка = КонтактныеЛицаПартнеров.Владелец
               |			И (НЕ КонтактныеЛицаПартнеров.ПометкаУдаления)
               |ГДЕ
               |	НЕ Партнеры.ПометкаУдаления
			   |	И Партнеры.Ссылка В (&МассивПартнеров)";
		КонецЕсли;
		Запрос.УстановитьПараметр("МассивПартнеров", МассивПартнеров);
	Иначе	
		Запрос.УстановитьПараметр("Сегмент", Сегмент);
		Если ТолькоОсновныеКонтактныеЛица Тогда
			ТекстЗапроса = "ВЫБРАТЬ
			   |	ПартнерыСегмента.Партнер КАК Партнер,
			   |	ПартнерыСегмента.Сегмент,
			   |	ПартнерыСегмента.Партнер.CRM_ОсновноеКонтактноеЛицо КАК КонтактноеЛицо
			   |ИЗ
			   |	РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
			   |ГДЕ
			   |	ПартнерыСегмента.Сегмент = &Сегмент
			   |	И НЕ ПартнерыСегмента.Партнер.ПометкаУдаления";
		Иначе
			ТекстЗапроса = "ВЫБРАТЬ
			   |	ПартнерыСегмента.Партнер КАК Партнер,
			   |	ПартнерыСегмента.Сегмент,
			   |	ЕСТЬNULL(КонтактныеЛицаПартнеров.Ссылка, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка)) КАК КонтактноеЛицо
			   |ИЗ
			   |	РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
			   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
			   |		ПО ПартнерыСегмента.Партнер = КонтактныеЛицаПартнеров.Владелец
			   |			И (НЕ КонтактныеЛицаПартнеров.ПометкаУдаления)
			   |ГДЕ
			   |	ПартнерыСегмента.Сегмент = &Сегмент
			   |	И НЕ ПартнерыСегмента.Партнер.ПометкаУдаления";
		КонецЕсли;
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	ТабПартнеров = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаТаб Из ТабПартнеров Цикл
		Если ТипЗнч(Объект.ТипРеспондентов) = Тип("СправочникСсылка.Партнеры") Тогда
			НовыйРеспондент = СтрокаТаб.Партнер;
		ИначеЕсли ТипЗнч(Объект.ТипРеспондентов) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
			НовыйРеспондент = СтрокаТаб.КонтактноеЛицо;
		КонецЕсли;
		// Дубли не добавляем				
		МассивСтрок = Объект.Респонденты.НайтиСтроки(Новый Структура("Респондент", НовыйРеспондент));
		Если МассивСтрок.Количество() = 0 Тогда					
			НоваяСтрока = Объект.Респонденты.Добавить();
			НоваяСтрока.Респондент = НовыйРеспондент;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСегменту(Команда)
	
	Если ТипЗнч(Объект.ТипРеспондентов) = Тип("СправочникСсылка.Пользователи") Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Для пользователей заполнение по сегменту не используется!'"), 10);
		Возврат
	КонецЕсли;
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЕстьЗаписи", (Объект.Респонденты.Количество() > 0));
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоСегментуЗавершение", ЭтотОбъект);
	ОткрытьФорму("Документ.НазначениеОпросов.Форма.CRM_ФормаВыборСегмента", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСегментуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ (Результат = Неопределено) Тогда
		Сегмент							= Результат.Сегмент;
		ТолькоОсновныеКонтактныеЛица	= Результат.ТолькоОсновныеКонтактныеЛица;
		Если Результат.ОчищатьТЧ Тогда
			Объект.Респонденты.Очистить();
		КонецЕсли;
		ЗаполнитьТЧПоСегменту();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТЧ(Команда)
		
	Если Объект.Респонденты.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Табличная часть содержит записи.  Продолжить?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ОчиститьТЧЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТЧЗавершение(Ответ, ДополнительныеПараметры) Экспорт
		
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.Респонденты.Очистить();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПартнеровГруппы(ПартнерГруппа)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", ПартнерГруппа);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	Партнеры.Ссылка КАК Ссылка
	                |ИЗ
	                |	Справочник.Партнеры КАК Партнеры
	                |ГДЕ
	                |	НЕ Партнеры.ПометкаУдаления
	                |	И &УсловиеЭтоГруппа";
	Если ПартнерГруппа.ЭтоГруппа Тогда
		Запрос.Текст =  Запрос.Текст + "
    |	И Партнеры.Родитель В ИЕРАРХИИ(&Родитель)";
	Иначе	
		Запрос.Текст =  Запрос.Текст + "
	|	И Партнеры.Родитель = &Родитель";
	КонецЕсли;					
	Запрос.Текст =  Запрос.Текст + "
    |
    |УПОРЯДОЧИТЬ ПО
    |	Партнеры.Наименование";
	
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &УсловиеЭтоГруппа", "И НЕ Партнеры.ЭтоГруппа");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И &УсловиеЭтоГруппа", "");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции // ()

&НаСервере
Функция ПолучитьКонтактныеЛицаПартнеровГруппы(ПартнерГруппа)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", ПартнерГруппа);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	Партнеры.Ссылка КАК Ссылка,
	                |	Партнеры.CRM_ОсновноеКонтактноеЛицо КАК КонтактноеЛицо
	                |ИЗ
	                |	Справочник.Партнеры КАК Партнеры
	                |ГДЕ
	                |	НЕ Партнеры.ПометкаУдаления
	                |	И НЕ Партнеры.ЭтоГруппа";
	Если ПартнерГруппа.ЭтоГруппа Тогда
		Запрос.Текст =  Запрос.Текст + "
    |	И Партнеры.Родитель В ИЕРАРХИИ(&Родитель)";
	Иначе	
		Запрос.Текст =  Запрос.Текст + "
	|	И Партнеры.Родитель = &Родитель";
	КонецЕсли;					
	Запрос.Текст =  Запрос.Текст + "
    |
    |УПОРЯДОЧИТЬ ПО
    |	Партнеры.Наименование";
	ПартнерыВыборка = Запрос.Выполнить().Выбрать();
	МассивКонтактныхЛиц = Новый Массив;
	МассивПартнерыБезОсновногоКонтактногоЛица = Новый Массив;
	Пока ПартнерыВыборка.Следующий() Цикл
		Если ЗначениеЗаполнено(ПартнерыВыборка.КонтактноеЛицо) Тогда
			МассивКонтактныхЛиц.Добавить(ПартнерыВыборка.КонтактноеЛицо);
		Иначе
			МассивПартнерыБезОсновногоКонтактногоЛица.Добавить(ПартнерыВыборка.Ссылка);
		КонецЕсли;		
	КонецЦикла;
	Возврат МассивКонтактныхЛиц;
	
КонецФункции // ()

&НаСервере
Процедура ДобавитьРеспондентовПоГруппеПользователей(ГруппаПользователей)
	
	Если НЕ ЗначениеЗаполнено(ГруппаПользователей) ИЛИ НЕ (ТипЗнч(ГруппаПользователей) = Тип("СправочникСсылка.ГруппыПользователей")) Тогда
		Возврат;
	КонецЕсли;
	МассивПользователиГруппы = CRM_ОбщегоНазначенияСервер.ПолучитьПользователейГруппы(ГруппаПользователей, Истина);
	Для Каждого ПользовательСсылка Из МассивПользователиГруппы Цикл
		// Дубли не добавляем				
		МассивСтрок = Объект.Респонденты.НайтиСтроки(Новый Структура("Респондент", ПользовательСсылка));
		Если МассивСтрок.Количество() = 0 Тогда					
			СтрокаРеспондент = Объект.Респонденты.Добавить();
			СтрокаРеспондент.Респондент = ПользовательСсылка;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)

	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Партнеры") Тогда		
		Если ВыбранноеЗначение.ЭтоГруппа 
			ИЛИ (ВыбранноеЗначение = Справочники.Партнеры.ПустаяСсылка()) Тогда
			Если ТипЗнч(Объект.ТипРеспондентов) = Тип("СправочникСсылка.Партнеры") Тогда
				мРеспонденты = ПолучитьПартнеровГруппы(ВыбранноеЗначение);
			ИначеЕсли ТипЗнч(Объект.ТипРеспондентов) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				мРеспонденты = ПолучитьКонтактныеЛицаПартнеровГруппы(ВыбранноеЗначение);
			КонецЕсли;			
			Для Каждого эРеспондент Из мРеспонденты Цикл
				// Дубли не добавляем				
				МассивСтрок = Объект.Респонденты.НайтиСтроки(Новый Структура("Респондент", эРеспондент));
				Если МассивСтрок.Количество() = 0 Тогда
					СтрокаПолучатель			= Объект.Респонденты.Добавить();
					СтрокаПолучатель.Респондент = эРеспондент;
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;
		Модифицированность = Истина;
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи")
		ИЛИ	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ГруппыПользователей")
		ИЛИ	ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
			МассивПользователейГрупп = ВыбранноеЗначение;
		Иначе
			МассивПользователейГрупп = Новый Массив();
			МассивПользователейГрупп.Добавить(ВыбранноеЗначение);
		КонецЕсли;
		Для Каждого ВыбранныйПользовательГруппа Из МассивПользователейГрупп Цикл
			Если ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.Пользователи") Тогда
				// Дубли не добавляем				
				МассивСтрок = Объект.Респонденты.НайтиСтроки(Новый Структура("Респондент", ВыбранныйПользовательГруппа));
				Если МассивСтрок.Количество() = 0 Тогда
					СтрокаРеспондент = Объект.Респонденты.Добавить();
					СтрокаРеспондент.Респондент = ВыбранныйПользовательГруппа;
				КонецЕсли;	
			ИначеЕсли ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
				ДобавитьРеспондентовПоГруппеПользователей(ВыбранныйПользовательГруппа);
			КонецЕсли;
		КонецЦикла;
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
		
	ТекстВопроса = НСтр("ru = 'Очистить список респондентов?'");
	Если Объект.Респонденты.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораЗавершение", ЭтотОбъект, ВыбранноеЗначение);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Да);
		Возврат;
	КонецЕсли;
	ОбработкаВыбораЗавершение(Неопределено, ВыбранноеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораЗавершение(Ответ, ВыбранноеЗначение) Экспорт
		
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
		Объект.Респонденты.Очистить();
	КонецЕсли;	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Партнеры") Тогда
		ОбработкаВыбораНаСервере(ВыбранноеЗначение);
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи")
		ИЛИ	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ГруппыПользователей")
		ИЛИ	ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
			МассивПользователейГрупп = ВыбранноеЗначение;
		Иначе
			МассивПользователейГрупп = Новый Массив();
			МассивПользователейГрупп.Добавить(ВыбранноеЗначение);
		КонецЕсли;
		ОбработкаВыбораНаСервере(МассивПользователейГрупп);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоВведенныхРассылок(НазначениеСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	CRM_РассылкаЭлектронныхПисем.Ссылка
	               |ИЗ
	               |	Документ.CRM_РассылкаЭлектронныхПисем КАК CRM_РассылкаЭлектронныхПисем
	               |ГДЕ
	               |	CRM_РассылкаЭлектронныхПисем.Основание = &Основание";
	Запрос.УстановитьПараметр("Основание", НазначениеСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка.Количество();
	
КонецФункции// КоличествоВведенныхРассылок()

&НаКлиенте
Процедура СоздатьРассылку(Команда)
	
	Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда 
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
			|Выполнение действия ""Пригласить респондентов к анкетированию"" возможно только после записи данных.
			|Данные будут записаны.'");
		ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьРассылкуПродолжение", ЭтотОбъект);	
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		Возврат;
	КонецЕсли;
	СоздатьРассылкуПродолжение(Неопределено, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРассылкуПродолжение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Если НЕ Записать() Тогда 
			Возврат;
		КонецЕсли;
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	РассылкиКоличество = КоличествоВведенныхРассылок(Объект.Ссылка);
	РассылкаТолькоДляНовыхРеспонденов = Истина;
	Если РассылкиКоличество > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Существуют рассылки для этого опроса.
			|Создать новую рассылку только для новых респондентов?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("СоздатьРассылкуЗавершение", ЭтотОбъект, РассылкаТолькоДляНовыхРеспонденов);	
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
	КонецЕсли;	
	СоздатьРассылкуЗавершение(Неопределено, РассылкаТолькоДляНовыхРеспонденов);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРассылкуЗавершение(Ответ, РассылкаТолькоДляНовыхРеспонденов) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда 
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		РассылкаТолькоДляНовыхРеспонденов = Ложь;		
	КонецЕсли;		
	СтруктураПараметров = Новый Структура("Основание", Объект.Ссылка);
	СтруктураПараметров.Вставить("РассылкаТолькоДляНовых", РассылкаТолькоДляНовыхРеспонденов);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", СтруктураПараметров);
	ОткрытьФорму("Документ.CRM_РассылкаЭлектронныхПисем.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект,,);
	
КонецПроцедуры

// -CRM

#КонецОбласти
