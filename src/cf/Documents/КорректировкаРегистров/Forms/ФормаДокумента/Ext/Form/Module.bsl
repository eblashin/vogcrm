
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
// Функция создает страницу на форме.
//
Функция СоздатьСтраницу(ИмяСтраницы, Заголовок, Родитель, ВидГруппыФормы)

	НовыйЭлемент = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Родитель);
	НовыйЭлемент.Вид                      = ВидГруппыФормы;
	НовыйЭлемент.Заголовок                = Заголовок;
	НовыйЭлемент.РастягиватьПоВертикали   = Истина;
	НовыйЭлемент.РастягиватьПоГоризонтали = Истина;

	Возврат НовыйЭлемент;

КонецФункции // СоздатьСтраницу()

&НаСервере
// Функция создает имя страницы регистра.
//
Функция ПолучитьИмяСтраницыРегистра(ИмяРегистра)

	Возврат "Страница" + ИмяРегистра;

КонецФункции // ПолучитьИмяСтраницыРегистра()

&НаСервере
// Процедура удаляет страницу на форме, соответствующую регистру.
//
Процедура УдалитьСтраницуРегистра(ИмяРегистра)

	Элементы.Удалить(Элементы.Найти(ПолучитьИмяСтраницыРегистра(ИмяРегистра)));

КонецПроцедуры // УдалитьСтраницуРегистра()

&НаСервере
// Процедура создает на форме таблицу для регистра.
//
Процедура СоздатьТаблицуРегистра(ИмяРегистра, Колонки, Родитель)

	ТаблицаФормы = Элементы.Добавить("ТаблицаДвижений" + ИмяРегистра, Тип("ТаблицаФормы"), Родитель);
	ТаблицаФормы.ПутьКДанным      = "Объект.Движения." + ИмяРегистра;
	Родитель.ПутьКДаннымЗаголовка = ТаблицаФормы.ПутьКДанным + ".КоличествоСтрок";

	Для Каждого Колонка Из Колонки Цикл

		Если Колонка.Значение <> Неопределено Тогда
			
			ПолеФормы = Элементы.Добавить(ТаблицаФормы.Имя + Колонка.Ключ, Тип("ПолеФормы"), ТаблицаФормы);
			ПолеФормы.ПутьКДанным = ТаблицаФормы.ПутьКДанным + "." + Колонка.Ключ;
			ПолеФормы.Заголовок   = Колонка.Значение;
			ПолеФормы.Вид         = ВидПоляФормы.ПолеВвода;
			
		КонецЕсли;	

	КонецЦикла;

КонецПроцедуры // СоздатьТаблицуРегистра()

&НаСервере
// Процедура отрисовывает таблицу регистра на странице формы.
//
Процедура ПоказатьТаблицуРегистраНаСтранице(Знач СтрокаТЧ)

	Если Метаданные.РегистрыНакопления.Найти(СтрокаТЧ.Имя) <> Неопределено Тогда
		
		СтраницаРегистра = Элементы.НастройкаРегистровНакопления;
		ПредставлениеРегистра = Метаданные.РегистрыНакопления[СтрокаТЧ.Имя].Синоним;
		
		Регистр = Метаданные.РегистрыНакопления[СтрокаТЧ.Имя];
		
	ИначеЕсли Метаданные.РегистрыСведений.Найти(СтрокаТЧ.Имя) <> Неопределено Тогда
		
		СтраницаРегистра = Элементы.НастройкаРегистровСведений;
		ПредставлениеРегистра = Метаданные.РегистрыСведений[СтрокаТЧ.Имя].Синоним;
		
		Регистр = Метаданные.РегистрыСведений[СтрокаТЧ.Имя];
		
	Иначе
		
		Возврат;	
		
	КонецЕсли;	
	
	СтруктураРегистра = Новый Структура;
	СтруктураРегистра.Вставить("Период");
	СтруктураРегистра.Вставить("НомерСтроки");
	СтруктураРегистра.Вставить("Активность");
	СтруктураРегистра.Вставить("ВидДвижения");
	
	Для каждого СтандартныйРеквизит Из Регистр.СтандартныеРеквизиты Цикл
		Если СтруктураРегистра.Свойство(СтандартныйРеквизит.Имя) Тогда
			СтруктураРегистра[СтандартныйРеквизит.Имя] = СтандартныйРеквизит.Синоним;
		КонецЕсли;		
	КонецЦикла;	
	
	Для каждого Измерение Из Регистр.Измерения Цикл
		СтруктураРегистра.Вставить(Измерение.Имя, Измерение.Синоним);
	КонецЦикла;
	
	Для каждого Ресурс Из Регистр.Ресурсы Цикл
		СтруктураРегистра.Вставить(Ресурс.Имя, Ресурс.Синоним);
	КонецЦикла;
	
	Для каждого Реквизит Из Регистр.Реквизиты Цикл
		СтруктураРегистра.Вставить(Реквизит.Имя, Реквизит.Синоним);
	КонецЦикла;
		
	СтраницаДляРегистра = СоздатьСтраницу(ПолучитьИмяСтраницыРегистра(СтрокаТЧ.Имя), ПредставлениеРегистра, СтраницаРегистра, 
										  ВидГруппыФормы.Страница);

	СоздатьТаблицуРегистра(СтрокаТЧ.Имя, СтруктураРегистра, СтраницаДляРегистра);

КонецПроцедуры // ПоказатьТаблицуРегистраНаСтранице()

&НаСервере
// Процедура отрисовывает регистры на форме.
//
Процедура ПоказатьРегистры(ТаблицаРегистров)

	Для Каждого Строка Из ТаблицаРегистров Цикл

		ПоказатьТаблицуРегистраНаСтранице(Строка);

	КонецЦикла;

КонецПроцедуры // ПоказатьРегистры()

&НаСервере
// Процедура служит для включения/исключение регистров из списка редактируемых.
//
Процедура ОбработатьИзменениеРегистров(СписокРегистров)

	Для Каждого Элемент Из СписокРегистров Цикл

		// Нужно добавить новый регистр.
		Если Элемент.Пометка Тогда

			СтрокаТЧ = Объект.ТаблицаРегистров.Добавить();
			СтрокаТЧ.Имя           = Элемент.Значение;

			ПоказатьТаблицуРегистраНаСтранице(СтрокаТЧ);

		Иначе

			Для Каждого Строка Из Объект.ТаблицаРегистров.НайтиСтроки(Новый Структура("Имя", Элемент.Значение)) Цикл
				Объект.ТаблицаРегистров.Удалить(Строка);
			КонецЦикла;

			Объект.Движения[Элемент.Значение].Очистить();
			УдалитьСтраницуРегистра(Элемент.Значение);

		КонецЕсли;

	КонецЦикла;

	Модифицированность = Истина;

КонецПроцедуры // ОбработатьИзменениеРегистров()

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события ПриСозданииНаСервере.
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	CRM_ОбщегоНазначенияСервер.ЗаполнитьСостояниеДокумента(Объект,
		СостояниеДокумента,
		КартинкаСостоянияДокумента,
		РазрешеноПроведение);
	
	ПоказатьРегистры(Объект.ТаблицаРегистров);

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры // ПриСозданииНаСервере()

#Область ПроцедурыДействияКомандныхПанелейФормы

&НаКлиенте
// Процедура вызывается при нажатии кнопки "Настройка состава регистров" 
// командной панели формы.
//
Процедура НастройкаСоставаРегистров(Команда)
	
	СписокИспользуемыхРегистров = Новый СписокЗначений;

	Для Каждого Строка Из Объект.ТаблицаРегистров Цикл
		СписокИспользуемыхРегистров.Добавить(Строка.Имя);
	КонецЦикла;

	ОписаниеОповещения = Новый ОписаниеОповещения("НастройкаСоставаРегистровЗавершение", ЭтотОбъект);
	Результат = ОткрытьФорму("Документ.КорректировкаРегистров.Форма.ФормаВыбораРегистра",
				Новый Структура("СписокИспользуемыхРегистров", СписокИспользуемыхРегистров),,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // НастройкаСоставаРегистров()

&НаКлиенте
Процедура НастройкаСоставаРегистровЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("СписокЗначений") Тогда

		ОбработатьИзменениеРегистров(Результат);

	КонецЕсли;
	
КонецПроцедуры // НастройкаСоставаРегистров()

// +CRM

#КонецОбласти

#Область ВыполнениеКомандПодключаемыхОтчетовИОбработок

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры
 
&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат)
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры
 
&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

// -CRM

#КонецОбласти

#КонецОбласти
