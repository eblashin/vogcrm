
///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьЗаголовокФормы(Форма)
	Если ЗначениеЗаполнено(Форма.Объект.ВидСобытия) Тогда
		СтрокаЗаголовок = Строка(Форма.Объект.ВидСобытия);
		Если ЗначениеЗаполнено(Форма.Объект.Проект) Тогда
			СтрокаЗаголовок = СтрокаЗаголовок + ", " + Строка(Форма.Объект.Проект);
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(Форма.Объект.Проект) Тогда
		СтрокаЗаголовок = Строка(Форма.Объект.Проект);
	КонецЕсли;	
	Возврат СтрокаЗаголовок;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьВидимостьИДоступностьФормы(Форма)
	СтрокаЗначениеНеВыбрано = НСтр("ru = '[Не выбрано]'");
	Форма.Элементы.ПодменюВидСобытия.Заголовок = ?(ЗначениеЗаполнено(Форма.Объект.ВидСобытия), Строка(Форма.Объект.ВидСобытия), СтрокаЗначениеНеВыбрано);
	Форма.Элементы.ПодменюВидСобытия.Картинка = CRM_ОбщегоНазначенияКлиентСервер.ПолучитьКартинкуВидаСобытия(Форма.Объект.ВидСобытия, Форма.Объект.ВходящееИсходящее);
	
	Форма.Заголовок = ПолучитьЗаголовокФормы(Форма);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСсылкуПоИмениЭлемента(Форма, ИмяЭлемента)
	НайденныеСтроки = Форма.ТаблицаСоответствияЭлементовУправленияСсылкам.НайтиСтроки(Новый Структура("Имя", ИмяЭлемента));
	Если НайденныеСтроки.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат НайденныеСтроки[0].Ссылка;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ЗаполнитьКоманднуюПанельАтрибутыСобытия()
	// ПодменюВидСобытия
	Для нИндекс = 0 По Перечисления.CRM_ВидыСобытий.Количество() - 1 Цикл
		ИмяЭлемента = "КнопкаПодменюВидСобытия" + Формат(нИндекс + 1, "ЧДЦ=0; ЧН=0; ЧГ=");
		
		Кнопка = Элементы.Добавить(ИмяЭлемента, Тип("КнопкаФормы"), Элементы.ПодменюВидСобытия);
		Кнопка.Заголовок	= Строка(Перечисления.CRM_ВидыСобытий[нИндекс]);
		
		Команда = ЭтаФорма.Команды.Добавить(ИмяЭлемента);
		Команда.Действие	= "Подключаемый_КомандаОбработкаАтрибутаСобытияОбщая";
		Команда.Заголовок	= Кнопка.Заголовок;
		Команда.Картинка	= CRM_ОбщегоНазначенияКлиентСервер.ПолучитьКартинкуВидаСобытия(Перечисления.CRM_ВидыСобытий[нИндекс], Объект.ВходящееИсходящее);
		Команда.Отображение	= ОтображениеКнопки.КартинкаИТекст;
		
		Кнопка.ИмяКоманды	= Команда.Имя;
		
		НоваяСтрока = ТаблицаСоответствияЭлементовУправленияСсылкам.Добавить();
		НоваяСтрока.Имя		= Кнопка.Имя;
		НоваяСтрока.Ссылка	= Перечисления.CRM_ВидыСобытий[нИндекс];
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РасчетТрудозатрат()
	ДатаВремяНачалоСобытия		= Объект.Дата;
	ДатаВремяОкончаниеСобытия	= Объект.ОкончаниеСобытия;
	
	Если ЗначениеЗаполнено(Объект.Ответственный) Тогда
		ДанныеТрудозатрат = CRM_ОбщегоНазначенияСервер.ПолучитьТрудозатратыЗаПериод(ДатаВремяНачалоСобытия, ДатаВремяОкончаниеСобытия, Объект.Ответственный);
	Иначе
		ДанныеТрудозатрат = CRM_ОбщегоНазначенияСервер.ПолучитьТрудозатратыЗаПериод(ДатаВремяНачалоСобытия, ДатаВремяОкончаниеСобытия);
	КонецЕсли;
	
	Попытка
		ЧасыТрудозатрат = ДанныеТрудозатрат.ВМинутах / 60;
	Исключение
		ЧасыТрудозатрат = 0;
	КонецПопытки;
	
	ЧасыТрудозатрат = Окр(ЧасыТрудозатрат, 2);
	
	Если Объект.Трудозатраты = ЧасыТрудозатрат Тогда
		Возврат;
	КонецЕсли;
	Объект.Трудозатраты = ЧасыТрудозатрат;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОповещений()
	
	_ТаблицаОповещений = Новый ТаблицаЗначений();
	
	ОписаниеТиповКанал  = Новый ОписаниеТипов("ПеречислениеСсылка.CRM_КаналыОповещений");
	ОписаниеТиповСрок   = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0, ДопустимыйЗнак.Неотрицательный));
	ОписаниеТиповПериод = Новый ОписаниеТипов("ПеречислениеСсылка.CRM_ПериодичностьОповещений");
	ОписаниеТиповДата   = Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя));

	_ТаблицаОповещений.Колонки.Добавить("Канал", ОписаниеТиповКанал);
	_ТаблицаОповещений.Колонки.Добавить("СрокОповещения", ОписаниеТиповСрок);
	_ТаблицаОповещений.Колонки.Добавить("Периодичность", ОписаниеТиповПериод);
	_ТаблицаОповещений.Колонки.Добавить("ДатаОповещения", ОписаниеТиповДата);
	
	ИспользоватьНапоминания					= Константы.CRM_ИспользоватьНапоминания.Получить();
	ИспользоватьОповещенияСМС				= Константы.CRM_ИспользоватьОповещенияСМС.Получить();
	ИспользоватьОповещенияЭлектроннаяПочта	= Константы.CRM_ИспользоватьОповещенияЭлектроннаяПочта.Получить();
	
	Запрос = Новый Запрос;
	Если НЕ Объект.Ссылка.Пустая() Тогда
		Запрос.УстановитьПараметр("Пользователь"	, Пользователи.ТекущийПользователь());
		Запрос.УстановитьПараметр("Предмет"			, Объект.Ссылка);
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 5
		|	ЗНАЧЕНИЕ(Перечисление.CRM_КаналыОповещений.Напоминание) КАК Канал,
		|	CRM_Напоминания.СрокОповещения,
		|	CRM_Напоминания.Периодичность,
		|	0 КАК ПолеСортировки
		|ИЗ
		|	РегистрСведений.CRM_Напоминания КАК CRM_Напоминания
		|ГДЕ
		|	CRM_Напоминания.Пользователь = &Пользователь
		|	И CRM_Напоминания.Предмет = &Предмет
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	CRM_Оповещения.Канал,
		|	CRM_Оповещения.СрокОповещения,
		|	CRM_Оповещения.Периодичность,
		|	1
		|ИЗ
		|	РегистрСведений.CRM_Оповещения КАК CRM_Оповещения
		|ГДЕ
		|	CRM_Оповещения.Получатель = &Пользователь
		|	И CRM_Оповещения.Предмет = &Предмет
		|	И CRM_Оповещения.ВидОповещения = ЗНАЧЕНИЕ(Справочник.CRM_ВидыОповещений.ЗапланированныеСобытия)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПолеСортировки";
		
	Иначе
		Запрос.УстановитьПараметр("Пользователь"	, Пользователи.ТекущийПользователь());
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 5
		|	CRM_ОповещенияПользовательскиеНастройки.СрокОповещения,
		|	CRM_ОповещенияПользовательскиеНастройки.Периодичность,
		|	ВЫБОР
		|		КОГДА CRM_ОповещенияПользовательскиеНастройки.Напоминание
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.CRM_КаналыОповещений.Напоминание)
		|		КОГДА CRM_ОповещенияПользовательскиеНастройки.ЭлектроннаяПочта
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.CRM_КаналыОповещений.ЭлектроннаяПочта)
		|		КОГДА CRM_ОповещенияПользовательскиеНастройки.СМС
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.CRM_КаналыОповещений.СМС)
		|	КОНЕЦ КАК Канал,
		|	CRM_ОповещенияПользовательскиеНастройки.ВидОповещения КАК ВидОповещения
		|ИЗ
		|	РегистрСведений.CRM_ОповещенияПользовательскиеНастройки КАК CRM_ОповещенияПользовательскиеНастройки
		|ГДЕ
		|	CRM_ОповещенияПользовательскиеНастройки.Пользователь = &Пользователь
		|	И CRM_ОповещенияПользовательскиеНастройки.ВидОповещения.Родитель = ЗНАЧЕНИЕ(Справочник.CRM_ВидыОповещений.ЗапланированныеСобытия)
		|	И (CRM_ОповещенияПользовательскиеНастройки.ЭлектроннаяПочта
		|			ИЛИ CRM_ОповещенияПользовательскиеНастройки.СМС
		|			ИЛИ CRM_ОповещенияПользовательскиеНастройки.Напоминание)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидОповещения";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если (Выборка.Канал = Перечисления.CRM_КаналыОповещений.Напоминание И НЕ ИспользоватьНапоминания)
		ИЛИ (Выборка.Канал = Перечисления.CRM_КаналыОповещений.СМС И НЕ ИспользоватьОповещенияСМС)
		ИЛИ (Выборка.Канал = Перечисления.CRM_КаналыОповещений.ЭлектроннаяПочта И НЕ ИспользоватьОповещенияЭлектроннаяПочта) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрокаТаб = _ТаблицаОповещений.Добавить();
		НоваяСтрокаТаб.Канал			= Выборка.Канал;
		НоваяСтрокаТаб.СрокОповещения	= Выборка.СрокОповещения;
		НоваяСтрокаТаб.Периодичность	= Выборка.Периодичность;
		
		СтруктураОповещения = Новый Структура;
		СтруктураОповещения.Вставить("Предмет"			,Новый Структура("Организация,Дата",Объект.Организация,Объект.Дата));
		СтруктураОповещения.Вставить("ВидОповещения"	,Справочники.CRM_ВидыОповещений.ЗапланированныеСобытия);
		СтруктураОповещения.Вставить("СрокОповещения"	,НоваяСтрокаТаб.СрокОповещения);
		СтруктураОповещения.Вставить("Периодичность"	,НоваяСтрокаТаб.Периодичность);
		СтруктураОповещения.Вставить("Получатель"		,Пользователи.ТекущийПользователь());
		
		НоваяСтрокаТаб.ДатаОповещения = CRM_ОповещенияСервер.ПолучитьДатуОповещения(СтруктураОповещения);
		
	КонецЦикла;
	
	ЭтаФорма.ТаблицаОповещения.Загрузить(_ТаблицаОповещений);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ

&НаКлиенте
Процедура Подключаемый_КомандаОбработкаАтрибутаСобытияОбщая(Команда)
	ИмяКоманды = Команда.Имя;
	ЭтаФорма.Модифицированность = Истина;
	ЗначениеСсылки = ПолучитьСсылкуПоИмениЭлемента(ЭтаФорма, ИмяКоманды);
	
	Если Найти(ИмяКоманды, "КнопкаПодменюВидСобытия") > 0  Тогда
		Объект.ВидСобытия = ЗначениеСсылки;
	КонецЕсли;
	
	НастроитьВидимостьИДоступностьФормы(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуОповещений();
	ЭтаФорма.Записать();
	ЭтаФорма.Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаРедактировать(Команда)
	ДанныеЗаполнения = Новый Структура("Дата,ОкончаниеСобытия,Тема,ВидСобытия,ВходящееИсходящее,Важность,НаВесьДень,Место,Проект");
	ЗаполнитьЗначенияСвойств(ДанныеЗаполнения, Объект);
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ДанныеЗаполнения);
	
	ПолнаяФорма = ПолучитьФорму("Документ.УдалитьCRM_Событие.ФормаОбъекта", ПараметрыФормы, ЭтаФорма.ВладелецФормы);
	
	ЗаполнитьЗначенияСвойств(ПолнаяФорма.Объект, Объект,
		"Дата,ОкончаниеСобытия,Тема,ВидСобытия,ВходящееИсходящее,Важность,НаВесьДень,Место,Проект");
	//
	
	ПолнаяФорма.Объект.СвоиЛица.Очистить();
	Для Каждого СтрокаТаблицы Из Объект.СвоиЛица Цикл
		НоваяСтрока = ПолнаяФорма.Объект.СвоиЛица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	ПолнаяФорма.НастроитьВидимостьИДоступностьФормыЭкспорт();
	ПолнаяФорма.Открыть();
	
	ЭтаФорма.Модифицированность = Ложь;
	ЭтаФорма.Закрыть();
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ВидСобытия = Перечисления.CRM_ВидыСобытий.ЛичнаяВстреча;
	Объект.ВходящееИсходящее = Перечисления.CRM_ВходящееИсходящееСобытие.Исходящее;
	
	РасчетТрудозатрат();
	
	ЗаполнитьКоманднуюПанельАтрибутыСобытия();
	
	НастроитьВидимостьИДоступностьФормы(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ОбновленыДанныеСобытия", Новый Структура("СсылкаНаОбъект, ОбновлятьКалендарь", Объект.Ссылка, Параметры.ОбновлятьКалендарь), ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Отказ = Истина;
	Возврат;
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ОбъектЗаписанПользователем");	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьТаблицуОповещений();
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ТаблицаНастроекОповещений"				,ЭтаФорма.ТаблицаОповещения);
	СтруктураДанных.Вставить("ЭтоНовоеСобытие"							,Истина);
	СтруктураДанных.Вставить("ИзмененСоставУчастников"					,Истина);
	СтруктураДанных.Вставить("ПризнакПериодическоеСобытиеИнициализация"	,Ложь);
	СтруктураДанных.Вставить("Пользователь"								,Пользователи.ТекущийПользователь());

	ЭтаФорма.АдресНастроек = ПоместитьВоВременноеХранилище(СтруктураДанных, ЭтаФорма.УникальныйИдентификатор);
	
	CRM_ОповещенияСервер.СформироватьОповещенияПоСобытию(ТекущийОбъект.Ссылка,ЭтаФорма.АдресНастроек);
	
КонецПроцедуры

#КонецОбласти
