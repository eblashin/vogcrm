
&НаКлиенте
Перем КэшСвойстваДинамическогоСписка;

&НаКлиенте
Перем КэшОграничениеТипов;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Функция ПолучитьСвойстваДинамическогоСпискаСервер()
	Возврат CRM_ОбщегоНазначенияСервер.ПолучитьСвойстваДинамическогоСписка(	ЭтаФорма,
																			"Список",
																			"Документ.УдалитьCRM_Событие",
																			Неопределено,
																			Неопределено,
																			Неопределено,
																			"ПодменюВидСписка",
																			"ВидСпискаИдентификаторТекущейНастройки",
																			"Подключаемый_КомандаВидСписка");
	//
КонецФункции

&НаКлиенте
Функция ПолучитьСвойстваДинамическогоСпискаКлиент()
	Если ТипЗнч(КэшСвойстваДинамическогоСписка) <> Тип("Структура") Тогда
		КэшСвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаСервер();
	КонецЕсли;
	Возврат КэшСвойстваДинамическогоСписка;
КонецФункции

&НаСервере
Процедура УстановитьФильтрСобытия(Список,сслМаркКомп)

	Список.ПроизвольныйЗапрос = Истина;
	
	ТекстЗапроса = Список.ТекстЗапроса;
    ТекстГде =" ГДЕ
	           |	ИсточникиПервичногоИнтересаСрезПоследних.ИсточникПервичногоИнтереса = &ИсточникПервичногоИнтереса ";
	ТекстСоединение =" 	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсточникиПервичногоИнтереса.СрезПоследних КАК ИсточникиПервичногоИнтересаСрезПоследних
						|		ПО ИсточникиПервичногоИнтересаСрезПоследних.Сделка = ДокументCRM_Событие.Ссылка";
			   
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//МАРКЕТИНГОВЫЕМЕРОПРИЯТИЯ_ГДЕ",ТекстГде);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//МАРКЕТИНГОВЫЕМЕРОПРИЯТИЯ_СОЕДИНЕНИЕ",ТекстСоединение);
	Список.ТекстЗапроса = ТекстЗапроса;
	Список.Параметры.УстановитьЗначениеПараметра("ИсточникПервичногоИнтереса", сслМаркКомп);

КонецПроцедуры

&НаСервере
Процедура НастройкаВидимостиИДоступностиФормы()
	
	бМаркКомп = ЭтаФорма.Параметры.Свойство("МаркетинговаяКампания");
	Если бМаркКомп Тогда
	
		ЭтаФорма.Элементы.ПолеБыстрогоОтбора_СостояниеСобытия.Видимость = Ложь;
		ЭтаФорма.Элементы.ПодменюВидСписка.Видимость = Ложь;
	
	КонецЕсли; 

КонецПроцедуры
////////////////////////////////////////////////////////////////////////////////
// Быстрые отборы

&НаКлиенте
Процедура ПолеБыстрогоОтбораПриИзмененииОбщий(Элемент)
	
	CRM_ОбщегоНазначенияКлиентСервер.БыстрыйОтборПрименитьОтборКСписку(Список, Элемент, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПериода(ВыбранныйПериод = Неопределено)
	Если ВыбранныйПериод <> Неопределено Тогда
		ЗначениеСтандартногоПериода = Неопределено;
		Для Каждого ЗначениеСписка Из Элементы.ПолеБыстрогоОтбора_Период.СписокВыбора Цикл
			Попытка
				Если ВариантСтандартногоПериода[ЗначениеСписка.Значение] = ВыбранныйПериод.Вариант Тогда
					ЗначениеСтандартногоПериода = ЗначениеСписка.Значение;
					Прервать;
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЦикла;
		Если ЗначениеСтандартногоПериода = Неопределено Тогда
			ПолеБыстрогоОтбора_Период = "НеВыбран";
		Иначе
			ПолеБыстрогоОтбора_Период = ЗначениеСтандартногоПериода;
		КонецЕсли;
	КонецЕсли;
	
	Если ПолеБыстрогоОтбора_Период = "НеВыбран" ИЛИ ПолеБыстрогоОтбора_Период = "" Тогда
		
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Дата");
		ПолеБыстрогоОтбора_Период = "НеВыбран";
		
		Период = Новый СтандартныйПериод;
		
	ИначеЕсли ПолеБыстрогоОтбора_Период = "ПериодСтрокой" Тогда
		
		Период = Новый СтандартныйПериод;
		Период.ДатаНачала 	 = ПериодСтрокойДатаНачала;
		Период.ДатаОкончания = ПериодСтрокойДатаОкончания;
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Дата", Период, Истина);
		
	ИначеЕсли ПолеБыстрогоОтбора_Период = "ПроизвольныйПериод" Тогда
		
		Если ВыбранныйПериод = Неопределено Тогда
			ФормаРедактирования = ПолучитьФорму("ОбщаяФорма.CRM_ФормаРедактированияПроизвольногоПериода");
			
			ФормаРедактирования.Период = Период;
			
			НовыйПериод = ФормаРедактирования.ОткрытьМодально();
			
			Если НовыйПериод = Неопределено ИЛИ НовыйПериод = КодВозвратаДиалога.Отмена Тогда
				Возврат
			КонецЕсли;	
		Иначе
			НовыйПериод = ВыбранныйПериод;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НовыйПериод.ДатаНачала) ИЛИ  ЗначениеЗаполнено(НовыйПериод.ДатаОкончания) Тогда
			
			ЭлементСпискаПериодСтрокой = Элементы.ПолеБыстрогоОтбора_Период.СписокВыбора.НайтиПоЗначению("ПериодСтрокой");
			Если  ЭлементСпискаПериодСтрокой = Неопределено Тогда					
				ЭлементСпискаПериодСтрокой = Элементы.ПолеБыстрогоОтбора_Период.СписокВыбора.Вставить(1,"ПериодСтрокой");
			КонецЕсли;
			
			ЭлементСпискаПериодСтрокой.Представление = ПредставлениеПериода(НовыйПериод.ДатаНачала, НовыйПериод.ДатаОкончания);
			
			ПериодСтрокойДатаНачала	   = НовыйПериод.ДатаНачала;
			ПериодСтрокойДатаОкончания = НовыйПериод.ДатаОкончания;			
			
			ПолеБыстрогоОтбора_Период = "ПериодСтрокой";	
			
		Иначе
			
			ЭлементСпискаПериодСтрокой = Элементы.ПолеБыстрогоОтбора_Период.СписокВыбора.НайтиПоЗначению("ПериодСтрокой");
			Если  ЭлементСпискаПериодСтрокой <> Неопределено Тогда					
				Элементы.ПолеБыстрогоОтбора_Период.СписокВыбора.Удалить(ЭлементСпискаПериодСтрокой);
			КонецЕсли;

			ПолеБыстрогоОтбора_Период = "НеВыбран";
			
		КонецЕсли;
		
		Период = НовыйПериод;
		
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Дата", Период, Истина);

	Иначе	
		
		Период = Новый СтандартныйПериод;		
		Период.Вариант = ВариантСтандартногоПериода[ПолеБыстрогоОтбора_Период];
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Дата", Период, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеБыстрогоОтбора_ПериодПриИзменении(Элемент)
	ПриИзмененииПериода();
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбратьПериод(Команда)
	//ДиалогВыбораПериода = Новый ДиалогРедактированияСтандартногоПериода();
	//ДиалогВыбораПериода.Период.ДатаНачала = Период.ДатаНачала;
	//ДиалогВыбораПериода.Период.ДатаОкончания = Период.ДатаОкончания;
	//ДиалогВыбораПериода.Период.Вариант = Период.Вариант;
	//
	//Если ДиалогВыбораПериода.Редактировать() Тогда
	//	Период.ДатаНачала = ДиалогВыбораПериода.Период.ДатаНачала;
	//	Период.ДатаОкончания = ДиалогВыбораПериода.Период.ДатаОкончания;
	//	Период.Вариант = ДиалогВыбораПериода.Период.Вариант;
	//	
	//	ПриИзмененииПериода(Период);
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолеБыстрогоОтбора_ПериодОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Дата");
	
	ПолеБыстрогоОтбора_Период = "НеВыбран";
	
	Период = Новый СтандартныйПериод();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// Поле отображения содержания.

&НаСервере
Функция НастройкаПоляОтображенияСодержанияПолучитьОграничениеТиповСпискаСервер()
	Возврат CRM_ОбщегоНазначенияСервер.НастройкиПолейОтображенияСодержанияПолучитьОписаниеТиповДляСписка(Список.ОсновнаяТаблица);
КонецФункции

&НаКлиенте
Процедура ПолеСодержаниеПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	// Поле отображения содержания.
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		тОбъект = Элементы.Список.ТекущиеДанные.Ссылка;
	Иначе
		тОбъект = Неопределено;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КалендарьДетальноеОписаниеПриНажатииЗавершение", ЭтотОбъект);
	CRM_ОбщегоНазначенияКлиент.НастройкиПолейОтображенияСодержанияПолеСодержаниеПриНажатии(ДанныеСобытия, СтандартнаяОбработка, НастройкаПоляОтображенияСодержанияПолучитьОграничениеТиповСписка(), тОбъект, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура КалендарьДетальноеОписаниеПриНажатииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Подключаемый_ОбработчикОжиданияСписокПриАктивизацииСтроки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НастройкаПоляОтображенияСодержанияПолучитьОграничениеТиповСписка()
	Если ТипЗнч(КэшОграничениеТипов) <> Тип("ОписаниеТипов") Тогда
		КэшОграничениеТипов = НастройкаПоляОтображенияСодержанияПолучитьОграничениеТиповСпискаСервер();
	КонецЕсли;
	Возврат КэшОграничениеТипов;
КонецФункции

&НаКлиенте
Процедура Подключаемый_ОбработчикОжиданияСписокПриАктивизацииСтроки()
	
	Если Элементы.ГруппаПолеОтображенияСодержания.Видимость Тогда
		// Поле отображения содержания.
		CRM_ОбщегоНазначенияКлиент.НастройкиПолейОтображенияСодержанияПриАктивизацииСтроки(ЭтаФорма, Элементы.Список.ТекущаяСтрока, НастройкаПоляОтображенияСодержанияПолучитьОграничениеТиповСписка());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// Поле отображения содержания.
	ПодключитьОбработчикОжидания("Подключаемый_ОбработчикОжиданияСписокПриАктивизацииСтроки", 0.5, Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ

// +GOOGLE
&НаСервере 
Процедура СинхронизироватьСобытияНаСервере()
	
	СтруктураПараметровФоновогоЗадания = Новый Структура();
	СтруктураПараметровФоновогоЗадания.Вставить("Автор", Пользователи.АвторизованныйПользователь());

	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить(СтруктураПараметровФоновогоЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьСобытия(Команда)
	
	СинхронизироватьСобытияНаСервере();
	
КонецПроцедуры
// -GOOGLE

////////////////////////////////////////////////////////////////////////////////
// Поле отображения содержания.

&НаКлиенте
Процедура КомандаПоказатьСкрытьПолеОтображенияСодержания(Команда)
	CRM_ОбщегоНазначенияКлиент.НастройкиПолейОтображенияСодержанияПоказатьСкрытьПолеОтображенияСодержания(ЭтаФорма);
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	сслМаркетинговаяКампания = Справочники.МаркетинговыеМероприятия.ПустаяСсылка();
	бМаркКомп = ЭтаФорма.Параметры.Свойство("МаркетинговаяКампания",сслМаркетинговаяКампания);
	Если бМаркКомп Тогда
	
		УстановитьФильтрСобытия(ЭтаФорма.Список,сслМаркетинговаяКампания);
	
	КонецЕсли;
	НастройкаВидимостиИДоступностиФормы();
	// Поле отображения содержания.
	CRM_ОбщегоНазначенияСервер.НастройкиПолейОтображенияСодержанияПриСозданииФормыСпискаНаСервере(ЭтаФорма);
	
	// Оформление списка
	СвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаСервер();
	CRM_ОбщегоНазначенияСервер.ПользовательскиеНастройкиСпискаПриСозданииНаСервере(ЭтаФорма, СвойстваДинамическогоСписка);
	CRM_МероприятияСервер.СоздатьГруппуСозданияСобытия(ЭтаФорма, Элементы.ГруппаКомандФормыСоздать, ,Истина, "СоздатьСобытиеОбщее");
	
	// Заполним список выбора периода.
	ПериодСписокВыбора = CRM_ОбщегоНазначенияПовтИсп.ПериодПолучитьСписокВыбора();
	
	Для каждого ЭлементСписка Из  ПериодСписокВыбора Цикл
		Элементы.ПолеБыстрогоОтбора_Период.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;	
		
	ЭтаФорма.ПолеБыстрогоОтбора_Период = "НеВыбран";
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	CRM_ОбщегоНазначенияСервер.УстановитьКнопкиПечати(ЭтаФорма.Список.ОсновнаяТаблица, ЭтаФорма);
	
КонецПроцедуры

// Процедура вызывается из обработчика <ПриЗакрытии> один раз, чтобы не было множественных переключений клиент/сервер
// при сохранении настроек.
//
&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	// Поле отображения содержания.
	CRM_ОбщегоНазначенияСервер.НастройкиПолейОтображенияСодержанияПриЗакрытииФормыСписка(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПриЗакрытии".
//
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СохраненаЛичнаяЗадача"  Тогда
		
		Элементы.Список.Обновить();
		
	КонецЕсли;

КонецПроцедуры

#Область ПроцедурыДействияКомандныхПанелейФормы

&НаСервере
Процедура КомандаВидСпискаСервер(СвойстваДинамическогоСписка, ПризнакИзмененыНастройки)
	CRM_ОбщегоНазначенияКлиентСервер.ОбработкаКомандыПользовательскихНастроекДинамическогоСписка(ЭтаФорма, СвойстваДинамическогоСписка, ПризнакИзмененыНастройки);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомандаВидСписка(Команда)
	СвойстваДинамическогоСписка = ПолучитьСвойстваДинамическогоСпискаКлиент();
	ОписаниеОповещения = Новый ОписаниеОповещения("Подключаемый_КомандаВидСпискаЗавершение", ЭтотОбъект, СвойстваДинамическогоСписка);
	CRM_ОбщегоНазначенияКлиент.ПользовательскиеНастройкиСпискаОбработкаВыбораНастройки(ЭтаФорма, СвойстваДинамическогоСписка, Команда, ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомандаВидСпискаЗавершение(ПризнакИзмененыНастройки, СвойстваДинамическогоСписка) Экспорт
	КомандаВидСпискаСервер(СвойстваДинамическогоСписка, ПризнакИзмененыНастройки);
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	СостояниеСобытия = Настройки.Получить("ПолеБыстрогоОтбора_СостояниеСобытия");
	
	Если ЗначениеЗаполнено(СостояниеСобытия) Тогда
		
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "СостояниеСобытия", СостояниеСобытия, Истина);
		
	КонецЕсли;
	
	Партнер = Настройки.Получить("ПолеБыстрогоОтбора_Партнер");
	
	Если ЗначениеЗаполнено(Партнер) Тогда
		
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Партнер", Партнер, Истина);
		
	КонецЕсли;
	
	Ответственный = Настройки.Получить("ПолеБыстрогоОтбора_Ответственный");
	
	Если ЗначениеЗаполнено(Ответственный) Тогда
		
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Ответственный", Ответственный, Истина);
		
	КонецЕсли;
	
	НастройкаПериод = Настройки.Получить("Период");
	НастройкаОтборПериод =  Настройки.Получить("ПолеБыстрогоОтбора_Период");
		
	Если НастройкаПериод <> Неопределено И НастройкаОтборПериод <> "НеВыбран" Тогда  
		
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Дата", НастройкаПериод, Истина);
		
		Если НастройкаПериод.Вариант =  ВариантСтандартногоПериода.ПроизвольныйПериод Тогда
			
			ПериодСтрокойДатаНачала	   = НастройкаПериод.ДатаНачала;
			ПериодСтрокойДатаОкончания = НастройкаПериод.ДатаОкончания;			
			
			ЭлементСпискаПериодСтрокой = Элементы.ПолеБыстрогоОтбора_Период.СписокВыбора.Вставить(1,"ПериодСтрокой");		
			ЭлементСпискаПериодСтрокой.Представление = ПредставлениеПериода(НастройкаПериод.ДатаНачала, НастройкаПериод.ДатаОкончания);
			
		КонецЕсли;	
		
	КонецЕсли;
	
	Если Список.Отбор.Элементы.Количество() = 0 Тогда
		
		ПолеБыстрогоОтбора_Ответственный = Пользователи.ТекущийПользователь();
		CRM_ОбщегоНазначенияКлиентСервер.ИзменитьЭлементОтбораСписка(Список, "Ответственный", ПолеБыстрогоОтбора_Ответственный, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	CRM_ШаблоныОбъектовКлиент.ПоместитьКомандыГруппыТолькоВоВсеДействия(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПечатьВнешнегоМакета(Команда)
	
	ИмяМакета = СтрЗаменить(Команда.Имя, "Печать_", "");
	
	ОбъектыНазначения = Новый СписокЗначений;
	ОбъектыНазначения.ЗагрузитьЗначения(Элементы.Список.ВыделенныеСтроки);
	
	CRM_УправлениеПечатьюКлиент.ПечатьВнешнегоМакета(ИмяМакета, ОбъектыНазначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
