#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

/////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МЕХАНИЗМА ПЕЧАТИ

// Сформировать печатные формы объектов.
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую.
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать.
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати.
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы.
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, 
	КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "CRM_Событие") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
						КоллекцияПечатныхФорм, "CRM_Событие", "Событие", ПечатьДокументаСобытие(МассивОбъектов, ОбъектыПечати),ОбъектыПечати , "Документ.УдалитьCRM_Событие.CRM_Событие");

	КонецЕсли;
	
КонецПроцедуры

// Процедура печати документа.
//
Функция ПечатьДокументаСобытие(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	УдалитьCRM_Событие.Ссылка,
	|	УдалитьCRM_Событие.ВерсияДанных,
	|	УдалитьCRM_Событие.ПометкаУдаления,
	|	УдалитьCRM_Событие.Номер,
	|	УдалитьCRM_Событие.Дата,
	|	УдалитьCRM_Событие.Проведен,
	|	УдалитьCRM_Событие.Автор,
	|	УдалитьCRM_Событие.Важность,
	|	УдалитьCRM_Событие.ВидСобытия,
	|	УдалитьCRM_Событие.ВходящееИсходящее,
	|	УдалитьCRM_Событие.ДокументОснование,
	|	УдалитьCRM_Событие.ИзмененоВРяде,
	|	УдалитьCRM_Событие.КонтактноеЛицо,
	|	УдалитьCRM_Событие.Место,
	|	УдалитьCRM_Событие.НаВесьДень,
	|	УдалитьCRM_Событие.ОкончаниеСобытия,
	|	УдалитьCRM_Событие.Описание,
	|	УдалитьCRM_Событие.ОсновнаяКатегория,
	|	УдалитьCRM_Событие.Ответственный,
	|	УдалитьCRM_Событие.Партнер,
	|	УдалитьCRM_Событие.Периодическое,
	|	УдалитьCRM_Событие.Подразделение,
	|	УдалитьCRM_Событие.Помещение,
	|	УдалитьCRM_Событие.Проект,
	|	УдалитьCRM_Событие.Результат,
	|	УдалитьCRM_Событие.РядСобытий,
	|	УдалитьCRM_Событие.СостояниеСобытия,
	|	УдалитьCRM_Событие.Тема,
	|	УдалитьCRM_Событие.Трудозатраты,
	|	УдалитьCRM_Событие.МаркетинговаяКампания,
	|	УдалитьCRM_Событие.ПричинаОтказа,
	|	УдалитьCRM_Событие.СуммаДокумента,
	|	УдалитьCRM_Событие.ВалютаДокумента,
	|	УдалитьCRM_Событие.ВидЦен,
	|	УдалитьCRM_Событие.Кратность,
	|	УдалитьCRM_Событие.Курс,
	|	УдалитьCRM_Событие.СуммаВключаетНДС,
	|	УдалитьCRM_Событие.Организация,
	|	УдалитьCRM_Событие.ВидСкидкиНаценки,
	|	УдалитьCRM_Событие.Договор,
	|	УдалитьCRM_Событие.СторонниеЛица.(
	|		Ссылка,
	|		НомерСтроки,
	|		Партнер,
	|		КонтактноеЛицо
	|	),
	|	УдалитьCRM_Событие.СвоиЛица.(
	|		Ссылка,
	|		НомерСтроки,
	|		Лицо
	|	),
	|	УдалитьCRM_Событие.Категории.(
	|		Ссылка,
	|		НомерСтроки,
	|		Категория
	|	),
	|	УдалитьCRM_Событие.Запасы.(
	|		Ссылка,
	|		НомерСтроки,
	|		Всего,
	|		ЕдиницаИзмерения,
	|		Количество,
	|		Номенклатура,
	|		ПроцентСкидкиНаценки,
	|		Содержание,
	|		СтавкаНДС,
	|		Сумма,
	|		СуммаНДС,
	|		Характеристика,
	|		Цена
	|	)
	|ИЗ
	|	Документ.УдалитьCRM_Событие КАК УдалитьCRM_Событие
	|ГДЕ
	|	УдалитьCRM_Событие.Ссылка В(&МассивОбъектов)
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Событие";
	
	Макет = ПолучитьМакет("CRM_Событие");
	
	ДокСобытие = Запрос.Выполнить().Выбрать();
	
	ПервыйДокумент = Истина;
	
	
	
	Пока ДокСобытие.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// шапка
		Секция = Макет.ПолучитьОбласть("Шапка");
		
		Если ДокСобытие.ВходящееИсходящее = Перечисления.CRM_ВходящееИсходящееСобытие.Входящее Тогда
			СтрокаТипаСобытия = " (входящ";
		Иначе
			СтрокаТипаСобытия = " (исходящ";
		КонецЕсли;
		
		Если ДокСобытие.ВидСобытия = Перечисления.CRM_ВидыСобытий.ЛичнаяВстреча Тогда
			СтрокаТипаСобытия = СтрокаТипаСобытия + "ая)";
		ИначеЕсли ДокСобытие.ВидСобытия = Перечисления.CRM_ВидыСобытий.ТелефонныйЗвонок Тогда
			СтрокаТипаСобытия = СтрокаТипаСобытия + "ий)";
		Иначе
			СтрокаТипаСобытия = СтрокаТипаСобытия + "ее)";
		КонецЕсли;
		
		ФлагУдалитьПрефикс = Ложь;
		НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДокСобытие.Номер, ФлагУдалитьПрефикс, ФлагУдалитьПрефикс);
		
		Секция.Параметры.Заголовок = СтрЗаменить(Строка(ДокСобытие.Ссылка), ДокСобытие.Номер, НомерДокумента);
		Секция.Параметры.НачалоСобытия = ДокСобытие.Дата;
		Секция.Параметры.ОкончаниеСобытия = ДокСобытие.ОкончаниеСобытия;
		Секция.Параметры.ВидТипСобытия = Строка(ДокСобытие.ВидСобытия) + СтрокаТипаСобытия;
		Секция.Параметры.СостояниеСобытия = ДокСобытие.СостояниеСобытия;
		Секция.Параметры.Важность = ДокСобытие.Важность;
		Секция.Параметры.Проект = ДокСобытие.Проект;
		Секция.Параметры.Автор = ДокСобытие.Автор;
		Секция.Параметры.Ответственный = ДокСобытие.Ответственный;
		
		НаборРегистра = РегистрыСведений.ИсточникиПервичногоИнтереса.СоздатьНаборЗаписей();
		НаборРегистра.Отбор.Сделка.Установить(ДокСобытие.Ссылка);
		НаборРегистра.Прочитать();
		
		Для Каждого ЗаписьРегистра Из НаборРегистра Цикл
			Если ЗначениеЗаполнено(ЗаписьРегистра.КаналПервичногоИнтереса) ИЛИ ЗначениеЗаполнено(ЗаписьРегистра.ИсточникПервичногоИнтереса) Тогда
				Секция.Параметры.ПервичныйИнтерес = СокрЛП(ЗаписьРегистра.КаналПервичногоИнтереса) + ?(ЗначениеЗаполнено(ЗаписьРегистра.ИсточникПервичногоИнтереса)," ("+СокрЛП(ЗаписьРегистра.ИсточникПервичногоИнтереса)+")","");
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ТабДокумент.Вывести(Секция);
		
		
		// основная часть
		
		СекцияТема  = Макет.ПолучитьОбласть("ОсновнаяЧастьТема");
		СекцияМесто = Макет.ПолучитьОбласть("ОсновнаяЧастьМесто");
		СекцияОстальное = Макет.ПолучитьОбласть("ОсновнаяЧастьОстальное");		
		
		СекцияТема.Параметры.Тема 		  = ДокСобытие.Тема;
		ТабДокумент.Вывести(СекцияТема);

		Если ((ДокСобытие.ВидСобытия = Перечисления.CRM_ВидыСобытий.ЛичнаяВстреча) 
			ИЛИ (ДокСобытие.ВидСобытия = Перечисления.CRM_ВидыСобытий.Прочее))
			И ЗначениеЗаполнено(ДокСобытие.Место) Тогда
			СекцияМесто.Параметры.Надпись 	  = "Место встречи:"; 
			СекцияМесто.Параметры.МестоВстречи = ДокСобытие.Место;
			ТабДокумент.Вывести(СекцияМесто);
		КонецЕсли;
		СекцияОстальное.Параметры.Описание 	   = ДокСобытие.Описание;
		СекцияОстальное.Параметры.Комментарий  = ДокСобытие.Результат;
		ТабДокумент.Вывести(СекцияОстальное);
				
		// категории
		Секция = Макет.ПолучитьОбласть("Категории");
		СтрокаКатегорий = "";
		
		Категории = ДокСобытие.Категории.Выбрать();
		Первый = Истина;
		Пока Категории.Следующий() Цикл
			Если Первый Тогда
				СтрокаКатегорий = СтрокаКатегорий + Строка(Категории.Категория);
				Первый = Ложь;
			Иначе
				СтрокаКатегорий = СтрокаКатегорий + ", " + Символы.ПС + Строка(Категории.Категория);
			КонецЕсли; 
		КонецЦикла; 
		Секция.Параметры.Категории = СокрЛП(СтрокаКатегорий);
		
		Если НЕ ПустаяСтрока(СокрЛП(СтрокаКатегорий)) Тогда
			ТабДокумент.Вывести(Секция);
		КонецЕсли;
		
		
		// участники
		Участники = ДокСобытие.СторонниеЛица.Выбрать();
		Если (ЗначениеЗаполнено(ДокСобытие.Партнер) ИЛИ ЗначениеЗаполнено(ДокСобытие.КонтактноеЛицо))
			Или Участники.Количество() > 0 Тогда
			Секция = Макет.ПолучитьОбласть("ШапкаУчастники");
			ТабДокумент.Вывести(Секция);
		КонецЕсли;
		
		НомерСтроки = 1 ;
		
		Если ЗначениеЗаполнено(ДокСобытие.Партнер) ИЛИ ЗначениеЗаполнено(ДокСобытие.КонтактноеЛицо)  Тогда
			Секция = Макет.ПолучитьОбласть("СтрокаУчастники");
			
			// Получение телефона партнера из контактной информации.
			ПартнерТелефон = "Тел.: ";
			ТелефоныПартнера = Новый Массив;
			ТаблицаПартнерТелефон = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюОбъекта(ДокСобытие.Партнер,,Перечисления.ТипыКонтактнойИнформации.Телефон);
			Для каждого Строка Из ТаблицаПартнерТелефон Цикл
				Если Строка.CRM_ОсновнойДляСвязи  Тогда
					ТелефоныПартнера.Добавить(Строка.Представление);
				ИначеЕсли Строка.Вид.CRM_Основной ИЛИ Строка.Вид.CRM_ИспользоватьДляОповещений Тогда
					ТелефоныПартнера.Добавить(Строка.Представление);
				КонецЕсли;
			КонецЦикла;
			
			
			ИндексЭлементаМассива = 0;
			Пока ИндексЭлементаМассива <= ТелефоныПартнера.Количество()-1 Цикл
				Если ИндексЭлементаМассива = 0 Тогда
					ПартнерТелефон = ПартнерТелефон + ТелефоныПартнера.Получить(ИндексЭлементаМассива);
				Иначе
					ПартнерТелефон = ПартнерТелефон + ", "+ ТелефоныПартнера.Получить(ИндексЭлементаМассива);
				КонецЕсли;
				ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
			КонецЦикла;
			
			
			ПартнерЭлПочта = "E-mail: ";
			ЭлАдресаПартнера = Новый Массив;
			ТаблицаПартнерЭлПочта = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюОбъекта(ДокСобытие.Партнер,,Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
			Для каждого Строка Из ТаблицаПартнерЭлПочта Цикл
				Если Строка.CRM_ОсновнойДляСвязи  Тогда
					ЭлАдресаПартнера.Добавить(Строка.Представление);
				ИначеЕсли Строка.Вид.CRM_Основной ИЛИ Строка.Вид.CRM_ИспользоватьДляОповещений Тогда
					ЭлАдресаПартнера.Добавить(Строка.Представление);
				КонецЕсли;
			КонецЦикла;
			
			ИндексЭлементаМассива = 0;
			Пока ИндексЭлементаМассива <= ЭлАдресаПартнера.Количество()-1 Цикл
				Если ИндексЭлементаМассива = 0 Тогда
					ПартнерЭлПочта = ПартнерЭлПочта + ЭлАдресаПартнера.Получить(ИндексЭлементаМассива);
				Иначе
					ПартнерЭлПочта = ПартнерЭлПочта + ", "+ ЭлАдресаПартнера.Получить(ИндексЭлементаМассива);
				КонецЕсли;
				ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
			КонецЦикла;
			
			Секция.Параметры.Контрагент 		= ДокСобытие.Партнер;
			Если ТелефоныПартнера.Количество() = 0 Тогда
				Секция.Параметры.КонтрагентТелефон = "";
			Иначе
				Секция.Параметры.КонтрагентТелефон  = Символы.ПС + ПартнерТелефон;
			КонецЕсли;
			Если ЭлАдресаПартнера.Количество() = 0 Тогда
				Секция.Параметры.КонтрагентЭлПочта = "";
			Иначе
				Секция.Параметры.КонтрагентЭлПочта  = Символы.ПС + ПартнерЭлПочта; 
			КонецЕсли;
			
			// Получение телефона контактного лица из контактной информации.
			Если ЗначениеЗаполнено(ДокСобытие.КонтактноеЛицо) Тогда
				ТелефонКонтактноеЛицо = "Тел.: ";
				ТелефоныКонтактноеЛицо = Новый Массив;
				ТаблицаТелефонКонтактноеЛицо = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюОбъекта(,ДокСобытие.КонтактноеЛицо,Перечисления.ТипыКонтактнойИнформации.Телефон);
				Для каждого Строка Из ТаблицаТелефонКонтактноеЛицо Цикл
					Если Строка.CRM_ОсновнойДляСвязи  Тогда
						ТелефоныКонтактноеЛицо.Добавить(Строка.Представление);
					ИначеЕсли Строка.Вид.CRM_Основной ИЛИ Строка.Вид.CRM_ИспользоватьДляОповещений Тогда
						ТелефоныКонтактноеЛицо.Добавить(Строка.Представление);
					КонецЕсли;
				КонецЦикла;
				
				ИндексЭлементаМассива = 0;
				Пока ИндексЭлементаМассива <= ТелефоныКонтактноеЛицо.Количество()-1 Цикл
					Если ИндексЭлементаМассива = 0 Тогда
						ТелефонКонтактноеЛицо = ТелефонКонтактноеЛицо + ТелефоныКонтактноеЛицо.Получить(ИндексЭлементаМассива);
					Иначе
						ТелефонКонтактноеЛицо = ТелефонКонтактноеЛицо + ", "+ ТелефоныКонтактноеЛицо.Получить(ИндексЭлементаМассива);
					КонецЕсли;
					ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
				КонецЦикла;
				
				КонтактноеЛицоЭлПочта = "E-mail: ";
				ЭлАдресаКонтактноеЛицо = Новый Массив;
				ТаблицаКонтактноеЛицоЭлПочта = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюОбъекта(,ДокСобытие.КонтактноеЛицо,Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
				Для каждого Строка Из ТаблицаКонтактноеЛицоЭлПочта Цикл
					Если Строка.CRM_ОсновнойДляСвязи  Тогда
						ЭлАдресаКонтактноеЛицо.Добавить(Строка.Представление);
					ИначеЕсли Строка.Вид.CRM_Основной ИЛИ Строка.Вид.CRM_ИспользоватьДляОповещений Тогда
						ЭлАдресаКонтактноеЛицо.Добавить(Строка.Представление);
					КонецЕсли;
				КонецЦикла;
				
				ИндексЭлементаМассива = 0;
				Пока ИндексЭлементаМассива <= ЭлАдресаКонтактноеЛицо.Количество()-1 Цикл
					Если ИндексЭлементаМассива = 0 Тогда
						КонтактноеЛицоЭлПочта = КонтактноеЛицоЭлПочта + ЭлАдресаКонтактноеЛицо.Получить(ИндексЭлементаМассива);
					Иначе
						КонтактноеЛицоЭлПочта = КонтактноеЛицоЭлПочта + ", "+ ЭлАдресаКонтактноеЛицо.Получить(ИндексЭлементаМассива);
					КонецЕсли;
					ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
				КонецЦикла;
				
				
				Секция.Параметры.КонтактноеЛицо 	   = CRM_СформироватьПредставление(ДокСобытие.КонтактноеЛицо);
				Если ТелефоныКонтактноеЛицо.Количество() = 0 Тогда
					Секция.Параметры.ТелефонКонтактноеЛицо = "";
				Иначе
					Секция.Параметры.ТелефонКонтактноеЛицо = Символы.ПС + ТелефонКонтактноеЛицо;
				КонецЕсли;
				Если ЭлАдресаКонтактноеЛицо.Количество() = 0 Тогда
					Секция.Параметры.ЭлПочтаКонтактноеЛицо = "";
				Иначе
					Секция.Параметры.ЭлПочтаКонтактноеЛицо = Символы.ПС + КонтактноеЛицоЭлПочта; 
				КонецЕсли;
			КонецЕсли;
			Секция.Параметры.НомерСтроки = НомерСтроки;
			ТабДокумент.Вывести(Секция);
			НомерСтроки = НомерСтроки + 1;
		КонецЕсли;
		
		Пока Участники.Следующий() Цикл
			Секция = Макет.ПолучитьОбласть("СтрокаУчастники");
			
			// Получение телефона партнера участника из контактной информации.
			
			УчастникПартнерТелефон = "Тел.: ";
			ТелефоныУчастникПартнер = Новый Массив;
			ТаблицаУчастникПартнерТелефон = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюОбъекта(Участники.Партнер,,Перечисления.ТипыКонтактнойИнформации.Телефон);
			Для каждого Строка Из ТаблицаУчастникПартнерТелефон Цикл
				Если Строка.CRM_ОсновнойДляСвязи  Тогда
					ТелефоныУчастникПартнер.Добавить(Строка.Представление);
				ИначеЕсли Строка.Вид.CRM_Основной ИЛИ Строка.Вид.CRM_ИспользоватьДляОповещений Тогда
					ТелефоныУчастникПартнер.Добавить(Строка.Представление);
				КонецЕсли;
			КонецЦикла;
			
			
			ИндексЭлементаМассива = 0;
			Пока ИндексЭлементаМассива <= ТелефоныУчастникПартнер.Количество()-1 Цикл
				Если ИндексЭлементаМассива = 0 Тогда
					УчастникПартнерТелефон = УчастникПартнерТелефон + ТелефоныУчастникПартнер.Получить(ИндексЭлементаМассива);
				Иначе
					УчастникПартнерТелефон = УчастникПартнерТелефон + ", "+ ТелефоныУчастникПартнер.Получить(ИндексЭлементаМассива);
				КонецЕсли;
				ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
			КонецЦикла;
			
			УчастникПартнерЭлПочта = "E-mail: ";
			ЭлАдресаУчастникПартнер = Новый Массив;
			ТаблицаУчастникПартнерЭлПочта = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюОбъекта(Участники.Партнер,,Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
			Для каждого Строка Из ТаблицаУчастникПартнерЭлПочта Цикл
				Если Строка.CRM_ОсновнойДляСвязи  Тогда
					ЭлАдресаУчастникПартнер.Добавить(Строка.Представление);
				ИначеЕсли Строка.Вид.CRM_Основной ИЛИ Строка.Вид.CRM_ИспользоватьДляОповещений Тогда
					ЭлАдресаУчастникПартнер.Добавить(Строка.Представление);
				КонецЕсли;
			КонецЦикла;
			
			ИндексЭлементаМассива = 0;
			Пока ИндексЭлементаМассива <= ЭлАдресаУчастникПартнер.Количество()-1 Цикл
				Если ИндексЭлементаМассива = 0 Тогда
					УчастникПартнерЭлПочта = УчастникПартнерЭлПочта + ЭлАдресаУчастникПартнер.Получить(ИндексЭлементаМассива);
				Иначе
					УчастникПартнерЭлПочта = УчастникПартнерЭлПочта + ", "+ ЭлАдресаУчастникПартнер.Получить(ИндексЭлементаМассива);
				КонецЕсли;
				ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
			КонецЦикла;
			
			Секция.Параметры.Контрагент 		= Участники.Партнер;
			Если ТелефоныУчастникПартнер.Количество() = 0 Тогда
				Секция.Параметры.КонтрагентТелефон = "";
			Иначе
				Секция.Параметры.КонтрагентТелефон  = Символы.ПС + УчастникПартнерТелефон;
			КонецЕсли;
			Если ЭлАдресаУчастникПартнер.Количество() = 0 Тогда
				Секция.Параметры.КонтрагентЭлПочта = "";
			Иначе
				Секция.Параметры.КонтрагентЭлПочта  = Символы.ПС + УчастникПартнерЭлПочта;
			КонецЕсли;
			
			// Получение телефона контактного лица участника из контактной информации.
			Если ЗначениеЗаполнено(Участники.КонтактноеЛицо) Тогда
				
				УчастникТелефонКонтактноеЛицо = "Тел.: ";
				ТелефоныУчастникКонтактноеЛицо = Новый Массив;
				ТаблицаУчастникТелефонКонтактноеЛицо = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюОбъекта(,Участники.КонтактноеЛицо,Перечисления.ТипыКонтактнойИнформации.Телефон);
				Для каждого Строка Из ТаблицаУчастникТелефонКонтактноеЛицо Цикл
					Если Строка.CRM_ОсновнойДляСвязи  Тогда
						ТелефоныУчастникКонтактноеЛицо.Добавить(Строка.Представление);
					ИначеЕсли Строка.Вид.CRM_Основной ИЛИ Строка.Вид.CRM_ИспользоватьДляОповещений Тогда
						ТелефоныУчастникКонтактноеЛицо.Добавить(Строка.Представление);
					КонецЕсли;
				КонецЦикла;
				
				
				ИндексЭлементаМассива = 0;
				Пока ИндексЭлементаМассива <= ТелефоныУчастникКонтактноеЛицо.Количество()-1 Цикл
					Если ИндексЭлементаМассива = 0 Тогда
						УчастникТелефонКонтактноеЛицо = УчастникТелефонКонтактноеЛицо + ТелефоныУчастникКонтактноеЛицо.Получить(ИндексЭлементаМассива);
					Иначе
						УчастникТелефонКонтактноеЛицо = УчастникТелефонКонтактноеЛицо + ", "+ ТелефоныУчастникКонтактноеЛицо.Получить(ИндексЭлементаМассива);
					КонецЕсли;
					ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
				КонецЦикла;
				
				УчастникКонтактноеЛицоЭлПочта = "E-mail: ";
				ЭлАдресаУчастникКонтактноеЛицо = Новый Массив;
				ТаблицаУчастникКонтактноеЛицоЭлПочта = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюОбъекта(,Участники.КонтактноеЛицо,Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
				Для каждого Строка Из ТаблицаУчастникКонтактноеЛицоЭлПочта Цикл
					Если Строка.CRM_ОсновнойДляСвязи  Тогда
						ЭлАдресаУчастникКонтактноеЛицо.Добавить(Строка.Представление);
					ИначеЕсли Строка.Вид.CRM_Основной ИЛИ Строка.Вид.CRM_ИспользоватьДляОповещений Тогда
						ЭлАдресаУчастникКонтактноеЛицо.Добавить(Строка.Представление);
					КонецЕсли;
				КонецЦикла;
				
				ИндексЭлементаМассива = 0;
				Пока ИндексЭлементаМассива <= ЭлАдресаУчастникКонтактноеЛицо.Количество()-1 Цикл
					Если ИндексЭлементаМассива = 0 Тогда
						УчастникКонтактноеЛицоЭлПочта = УчастникКонтактноеЛицоЭлПочта + ЭлАдресаУчастникКонтактноеЛицо.Получить(ИндексЭлементаМассива);
					Иначе
						УчастникКонтактноеЛицоЭлПочта = УчастникКонтактноеЛицоЭлПочта + ", "+ ЭлАдресаУчастникКонтактноеЛицо.Получить(ИндексЭлементаМассива);
					КонецЕсли;
					ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
				КонецЦикла;
				
				Секция.Параметры.КонтактноеЛицо = CRM_СформироватьПредставление(Участники.КонтактноеЛицо);
				Если ТелефоныУчастникКонтактноеЛицо.Количество() = 0 Тогда
					Секция.Параметры.ТелефонКонтактноеЛицо = "";
				Иначе
					Секция.Параметры.ТелефонКонтактноеЛицо = Символы.ПС + УчастникТелефонКонтактноеЛицо;
				КонецЕсли;
				Если ЭлАдресаУчастникКонтактноеЛицо.Количество() = 0 Тогда
					Секция.Параметры.ЭлПочтаКонтактноеЛицо = "";
				Иначе
					Секция.Параметры.ЭлПочтаКонтактноеЛицо = Символы.ПС + УчастникКонтактноеЛицоЭлПочта;
				КонецЕсли;
				
			КонецЕсли;
			
			
			Секция.Параметры.НомерСтроки = НомерСтроки;
			ТабДокумент.Вывести(Секция);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		Если (ЗначениеЗаполнено(ДокСобытие.Партнер) ИЛИ ЗначениеЗаполнено(ДокСобытие.КонтактноеЛицо))
			Или Участники.Количество() > 0 Тогда
			Секция = Макет.ПолучитьОбласть("ПодвалУчастники");
			ТабДокумент.Вывести(Секция);
		КонецЕсли;
		
		
		
		// сотрудники
		СвоиЛица = ДокСобытие.СвоиЛица.Выбрать();
		
		Если НЕ СвоиЛица.Количество() = 0 Тогда
			
			Секция = Макет.ПолучитьОбласть("ШапкаСотрудники");
			ТабДокумент.Вывести(Секция);
			
			Пока СвоиЛица.Следующий() Цикл
				
				Секция = Макет.ПолучитьОбласть("СтрокаСотрудники");
				
				ТелефонПользователь = "";
				ТелефоныПользователя = Новый Массив;
				ТаблицаТелефоныПользователь = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюПользователей(СвоиЛица.Лицо,Перечисления.ТипыКонтактнойИнформации.Телефон);
				Для каждого Строка Из ТаблицаТелефоныПользователь Цикл
					Если Строка.CRM_ОсновнойДляСвязи  Тогда
						ТелефоныПользователя.Добавить(Строка.Представление);
					ИначеЕсли Строка.Вид.CRM_Основной ИЛИ Строка.Вид.CRM_ИспользоватьДляОповещений Тогда
						ТелефоныПользователя.Добавить(Строка.Представление);
					КонецЕсли;
				КонецЦикла;
				
				ИндексЭлементаМассива = 0;
				Пока ИндексЭлементаМассива <= ТелефоныПользователя.Количество() - 1 Цикл
					ТелефонПользователь = ТелефонПользователь + ", " + ТелефоныПользователя.Получить(ИндексЭлементаМассива);
					ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
				КонецЦикла;
				
				ЭлПочтаПользователь = "E-mail: ";
				ЭлАдресаПользователя = Новый Массив;
				ТаблицаЭлАдресаПользователь = CRM_ОбщегоНазначенияСервер.ПолучитьКонтактнуюИнформациюПользователей(СвоиЛица.Лицо,Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
				
				Для каждого Строка Из ТаблицаЭлАдресаПользователь Цикл
					Если Строка.CRM_ОсновнойДляСвязи  Тогда
						ЭлАдресаПользователя.Добавить(Строка.Представление);
					ИначеЕсли Строка.Вид.CRM_Основной ИЛИ Строка.Вид.CRM_ИспользоватьДляОповещений Тогда
						ЭлАдресаПользователя.Добавить(Строка.Представление);
					КонецЕсли;
				КонецЦикла;
				
				ИндексЭлементаМассива = 0;
				Пока ИндексЭлементаМассива <= ЭлАдресаПользователя.Количество() - 1 Цикл
					Если ИндексЭлементаМассива = 0 Тогда
						ЭлПочтаПользователь = ЭлПочтаПользователь + ЭлАдресаПользователя.Получить(ИндексЭлементаМассива);
					Иначе
						ЭлПочтаПользователь = ЭлПочтаПользователь + ", " + ЭлАдресаПользователя.Получить(ИндексЭлементаМассива);
					КонецЕсли;
					ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
				КонецЦикла;
				
				
				Секция.Параметры.Сотрудник 			= СвоиЛица.Лицо;
				Секция.Параметры.СотрудникТелефон   = ТелефонПользователь;
				Если ЭлАдресаПользователя.Количество() = 0 Тогда
					Секция.Параметры.СотрудникЭлПочта = "";
				Иначе
					Секция.Параметры.СотрудникЭлПочта   = Символы.ПС + ЭлПочтаПользователь;
				КонецЕсли;
				Секция.Параметры.НомерСтроки 		= СвоиЛица.НомерСтроки;
				ТабДокумент.Вывести(Секция);
				
			КонецЦикла;
			
			Секция = Макет.ПолучитьОбласть("ПодвалСотрудники");
			ТабДокумент.Вывести(Секция);
			
		КонецЕсли;
		
		
		// Запасы
		Запасы = ДокСобытие.Запасы.Выбрать();
		ИтогоСумма = 0;
		СуммаНДС = 0;
		Если Запасы.Количество() > 0 Тогда
			
			ЕстьСкидки = Ложь;
			Пока Запасы.Следующий() Цикл 
				Если ЗначениеЗаполнено(Запасы.ПроцентСкидкиНаценки) Тогда
					ЕстьСкидки = Истина;
					Прервать;
				КонецЕсли; 
			КонецЦикла;
			
			Запасы.Сбросить();
			ИмяКолонкиНоменклатура = "ТоварыНоменклатура";
			Если НЕ ЕстьСкидки Тогда
				ИмяКолонкиНоменклатура = "ТоварыНоменклатураБезСкидок";
			КонецЕсли;
			
			Секция = Макет.ПолучитьОбласть("ЗаголовокТовары");
			ТабДокумент.Вывести(Секция);
			
			Секция = Макет.ПолучитьОбласть("ШапкаТовары|ТоварыНомер");
			ТабДокумент.Вывести(Секция);
			
			Секция = Макет.ПолучитьОбласть("ШапкаТовары|" + ИмяКолонкиНоменклатура);
			ТабДокумент.Присоединить(Секция);
			
			Секция = Макет.ПолучитьОбласть("ШапкаТовары|ТоварыКоличествоЕдиницаЦена");
			ТабДокумент.Присоединить(Секция);
			
			Если ЕстьСкидки Тогда
				Секция = Макет.ПолучитьОбласть("ШапкаТовары|ТоварыКолонкаСкидки");
				ТабДокумент.Присоединить(Секция);
				ИтогоБезСкидки = 0;
				ИтогоСкидка = 0;
			КонецЕсли;
			
			Секция = Макет.ПолучитьОбласть("ШапкаТовары|ТоварыСумма");
			ТабДокумент.Присоединить(Секция);		
			
			Пока Запасы.Следующий() Цикл 
				
				Секция = Макет.ПолучитьОбласть("СтрокаТовары|ТоварыНомер");
				Секция.Параметры.НомерСтроки = Запасы.НомерСтроки;
				ТабДокумент.Вывести(Секция);
				
				Секция = Макет.ПолучитьОбласть("СтрокаТовары|" + ИмяКолонкиНоменклатура);
				
				Секция.Параметры.Товар = CRM_ОбщегоНазначенияСервер.ПолучитьПредставлениеНоменклатурыДляПечати(Запасы.Номенклатура, 
				Запасы.Характеристика, Запасы.Номенклатура.Артикул);;
				ТабДокумент.Присоединить(Секция);
				
				Секция = Макет.ПолучитьОбласть("СтрокаТовары|ТоварыКоличествоЕдиницаЦена");
				Секция.Параметры.Количество       = Запасы.Количество;
				Секция.Параметры.ЕдиницаИзмерения = Запасы.ЕдиницаИзмерения;
				Секция.Параметры.Цена             = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(Запасы.Цена);
				ТабДокумент.Присоединить(Секция);
				
				Если ЕстьСкидки Тогда
					Секция = Макет.ПолучитьОбласть("СтрокаТовары|ТоварыКолонкаСкидки");
					СуммаБезСкидки = Запасы.Количество * Запасы.Цена;
					Скидка = СуммаБезСкидки / 100 * Запасы.ПроцентСкидкиНаценки;
					Секция.Параметры.СуммаБезСкидки = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(СуммаБезСкидки);
					Секция.Параметры.Скидка = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(Скидка);
					ИтогоБезСкидки = ИтогоБезСкидки + СуммаБезСкидки;
					ИтогоСкидка = ИтогоСкидка  + Скидка;
					ТабДокумент.Присоединить(Секция);
				КонецЕсли;
				
				Секция = Макет.ПолучитьОбласть("СтрокаТовары|ТоварыСумма");
				Секция.Параметры.Сумма =  CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(Запасы.Сумма);
				ТабДокумент.Присоединить(Секция);
				ИтогоСумма = ИтогоСумма + Запасы.Сумма;
				СуммаНДС = СуммаНДС + Запасы.СуммаНДС;
			КонецЦикла;
			
			Секция = Макет.ПолучитьОбласть("ИтогоТовары|ТоварыНомер");
			ТабДокумент.Вывести(Секция);
			
			Секция = Макет.ПолучитьОбласть("ИтогоТовары|" + ИмяКолонкиНоменклатура);
			ТабДокумент.Присоединить(Секция);
			
			Секция = Макет.ПолучитьОбласть("ИтогоТовары|ТоварыКоличествоЕдиницаЦена");
			ТабДокумент.Присоединить(Секция);
			
			Если ЕстьСкидки Тогда
				Секция = Макет.ПолучитьОбласть("ИтогоТовары|ТоварыКолонкаСкидки");
				Секция.Параметры.ИтогоБезСкидки = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоБезСкидки);
				Секция.Параметры.ИтогоСкидка =  CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоСкидка);
				ТабДокумент.Присоединить(Секция);
			КонецЕсли;
			
			Секция = Макет.ПолучитьОбласть("ИтогоТовары|ТоварыСумма");
			Секция.Параметры.ИтогоСумма = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ИтогоСумма);
			ТабДокумент.Присоединить(Секция);
			ВсегоКОплате = ИтогоСумма;
			
			УчитыватьНДС = CRM_ОбщегоНазначенияСервер.ОрганизацияОблагаетсяНДС(ДокСобытие.Организация);
			Если УчитыватьНДС Тогда
				
				Секция = Макет.ПолучитьОбласть("ИтогоНДС|ТоварыНомер");
				ТабДокумент.Вывести(Секция);
				
				Секция = Макет.ПолучитьОбласть("ИтогоНДС|" + ИмяКолонкиНоменклатура);
				ТабДокумент.Присоединить(Секция);
				
				Секция = Макет.ПолучитьОбласть("ИтогоНДС|ТоварыКоличествоЕдиницаЦена");
				Секция.Параметры.НДС = ?(ДокСобытие.СуммаВключаетНДС, "В том числе НДС:", "Сумма НДС:");
				ТабДокумент.Присоединить(Секция);
				
				Если ЕстьСкидки Тогда
					Секция = Макет.ПолучитьОбласть("ИтогоНДС|ТоварыКолонкаСкидки");
					ТабДокумент.Присоединить(Секция);
				КонецЕсли;
				
				Секция = Макет.ПолучитьОбласть("ИтогоНДС|ТоварыСумма");
				Секция.Параметры.ИтогоНДС = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(СуммаНДС);
				ТабДокумент.Присоединить(Секция);
				
				Секция = Макет.ПолучитьОбласть("ВсегоКОплате|ТоварыНомер");
				ТабДокумент.Вывести(Секция);
				
				Секция = Макет.ПолучитьОбласть("ВсегоКОплате|" + ИмяКолонкиНоменклатура);
				ТабДокумент.Присоединить(Секция);
				
				Секция = Макет.ПолучитьОбласть("ВсегоКОплате|ТоварыКоличествоЕдиницаЦена");
				ТабДокумент.Присоединить(Секция);
				
				Если ЕстьСкидки Тогда
					Секция = Макет.ПолучитьОбласть("ВсегоКОплате|ТоварыКолонкаСкидки");
					ТабДокумент.Присоединить(Секция);
				КонецЕсли;
				
				Секция = Макет.ПолучитьОбласть("ВсегоКОплате|ТоварыСумма");
				ВсегоКОплате = ?(ДокСобытие.СуммаВключаетНДС, ИтогоСумма, ИтогоСумма + СуммаНДС);
				Секция.Параметры.ВсегоКОплате = CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ВсегоКОплате);
				ТабДокумент.Присоединить(Секция);
				
			КонецЕсли;
			
			Секция = Макет.ПолучитьОбласть("СуммаПрописью");
			Секция.Параметры.ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Всего наименований %1, на сумму %2'"),
			Запасы.Количество(),
			CRM_ОбщегоНазначенияКлиентСервер.ФорматСумм(ВсегоКОплате, ДокСобытие.ВалютаДокумента));
			
			
			Секция.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(ВсегоКОплате, ДокСобытие.ВалютаДокумента);
			
			
			ТабДокумент.Вывести(Секция);
			
			
		КонецЕсли;	
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати,ДокСобытие.Ссылка);
		
	КонецЦикла;
	
	ТабДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабДокумент;

КонецФункции

Функция CRM_СформироватьПредставление(Объект)
	
	//
	Представление = Объект;
	//
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Объект));
	Если ОбъектМетаданных = Неопределено Тогда
		Возврат (Представление);
	КонецЕсли;
	//
	Если НЕ ПравоДоступа("Чтение", ОбъектМетаданных) Тогда
		Возврат (Представление);
	КонецЕсли;
	//
	ПолноеИмя = ОбъектМетаданных.ПолноеИмя();
	//
	Если ПолноеИмя = "Справочник.Партнеры" Тогда
		
	ИначеЕсли ПолноеИмя = "Справочник.КонтактныеЛицаПартнеров" Тогда
		
		Представление = "";
		Если НЕ Объект.CRM_РольКонтактногоЛица.Пустая() И ЗначениеЗаполнено(Объект.CRM_Должность) Тогда
			Представление = "" + Объект.CRM_Должность.Наименование + ", " + Объект.CRM_РольКонтактногоЛица.Наименование;
		ИначеЕсли ЗначениеЗаполнено(Объект.CRM_Должность) Тогда
			Представление = "" + Объект.CRM_Должность.Наименование;
		ИначеЕсли НЕ Объект.CRM_РольКонтактногоЛица.Пустая() Тогда
			Представление = Объект.CRM_РольКонтактногоЛица.Наименование;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.CRM_Должность) ИЛИ НЕ Объект.CRM_РольКонтактногоЛица.Пустая() Тогда
			Представление = " (" + Представление + ")";
		КонецЕсли;
		
		Представление = Строка(Объект) + Представление;
		
	ИначеЕсли ПолноеИмя = "" Тогда
		//
	Иначе
	КонецЕсли;
	//
	Возврат Представление;
	
	
КонецФункции

#КонецЕсли