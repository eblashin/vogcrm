
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда 
		Возврат;
	КонецЕсли;
	
	Объекты.ЗагрузитьЗначения(Параметры.МассивОбъектов);
	
	ДокументДляПечати 				= Объекты[0].Значение;
	
	ТипОбъекта 						= ДокументДляПечати.Метаданные().ПолноеИмя();
	
	Запрос 							= Новый Запрос;
	Запрос.Текст 					= 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИСТИНА КАК Печатать,
	|	МИНИМУМ(вогКомандировкаКомандированныеСотрудники.НомерСтроки) КАК НомерСтроки,
	|	вогКомандировкаКомандированныеСотрудники.Сотрудник КАК Сотрудник,
	|	1 КАК Экземпляров
	|ИЗ
	|	Документ.вогКомандировка.КомандированныеСотрудники КАК вогКомандировкаКомандированныеСотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.вогЭтапыСогласованияКомандировок КАК вогЭтапыСогласованияКомандировок
	|		ПО вогКомандировкаКомандированныеСотрудники.Ссылка = вогЭтапыСогласованияКомандировок.Командировка
	|			И вогКомандировкаКомандированныеСотрудники.Сотрудник = вогЭтапыСогласованияКомандировок.Сотрудник
	|ГДЕ
	|	вогКомандировкаКомандированныеСотрудники.Ссылка = &Ссылка
	|	И (НЕ вогЭтапыСогласованияКомандировок.Этап В (&ЭтапыНЕВыводить)
	|			ИЛИ вогКомандировкаКомандированныеСотрудники.Сотрудник = &Водитель
	|				И вогЭтапыСогласованияКомандировок.Этап ЕСТЬ NULL)
	|
	|СГРУППИРОВАТЬ ПО
	|	вогКомандировкаКомандированныеСотрудники.Сотрудник
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ЭтапыСогласованияКомандировок 	= Перечисления.вогЭтапыСогласованияКомандировок;
	ЭтапыНЕВыводить 				= Новый Массив;
	ЭтапыНЕВыводить.Добавить(ЭтапыСогласованияКомандировок.НеСогласовано);
	ЭтапыНЕВыводить.Добавить(ЭтапыСогласованияКомандировок.УчастиеОтклонено);
	
	Запрос.УстановитьПараметр("Ссылка", 			ДокументДляПечати);
	Запрос.УстановитьПараметр("ЭтапыНЕВыводить", 	ЭтапыНЕВыводить);
	Запрос.УстановитьПараметр("Водитель", 			Справочники.Пользователи.Водитель);
	
	Результат 						= Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		КомандированныеСотрудники.Загрузить(Результат.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Печать(Команда)
	
	ПечатьДокумента(Ложь);
	
КонецПроцедуры // Печать()

&НаКлиенте
Процедура ПечатьНаПринтер(Команда)
	
	ПечатьДокумента(Истина);
	
КонецПроцедуры // ПечатьНаПринтер()

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого ТекСтрока Из КомандированныеСотрудники Цикл
		ТекСтрока.Печатать = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого ТекСтрока Из КомандированныеСотрудники Цикл
		ТекСтрока.Печатать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПечатьДокумента(НаПринтер)
	
	ПараметрыОтбора 					= Новый Структура("Печатать", Истина);
	
	КомандированныеСотрудникиДляПечати 	= КомандированныеСотрудники.НайтиСтроки(ПараметрыОтбора);
	
	Если КомандированныеСотрудникиДляПечати.Количество() > 0 Тогда
		
		ИмяМакета 						= "ЗаявлениеНаВыдачуДенежныхСредств";
		
		ПараметрыПечати 				= Новый Структура;
		МассивОбъектов 	= Объекты.ВыгрузитьЗначения();
		ПараметрыПечати.Вставить("ОбъектыПечати", 					Объекты);
		ПараметрыПечати.Вставить("МассивОбъектов", 					МассивОбъектов);
		
		Для каждого СотрудникСтрока Из КомандированныеСотрудникиДляПечати Цикл
			
			ПараметрыПечати.Вставить("СотрудникОтбор", 	СотрудникСтрока.Сотрудник);
			ПараметрыПечати.Вставить("НомерСтроки", 	СотрудникСтрока.НомерСтроки);
			
			Если НаПринтер Тогда
				
				УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер(
				ТипОбъекта,
				ИмяМакета,
				МассивОбъектов,
				ПараметрыПечати);
				
			Иначе
				
				УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
				ТипОбъекта,
				ИмяМакета,
				МассивОбъектов,
				Неопределено,
				ПараметрыПечати);
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ КомандированныеСотрудникиДляПечати.Количество() = 0
			И НЕ НаПринтер Тогда
			Закрыть();
		КонецЕсли;
		
	Иначе 
		
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Выберите хотя бы одного Сотрудника для печати.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КомандированныеСотрудники");
		
	КонецЕсли;
	
КонецПроцедуры // ПечатьДокумента()

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	Элемент 						= УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента 					= Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле 				= Новый ПолеКомпоновкиДанных(Элементы.КомандированныеСотрудникиЭкземпляров.Имя);
	
	ОтборЭлемента 					= Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("КомандированныеСотрудники.Печатать");
	ОтборЭлемента.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение 	= Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	Элемент 						= УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента 					= Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле 				= Новый ПолеКомпоновкиДанных(Элементы.КомандированныеСотрудникиСотрудник.Имя);
	
	ПолеЭлемента 					= Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле 				= Новый ПолеКомпоновкиДанных(Элементы.КомандированныеСотрудникиЭкземпляров.Имя);
	
	ОтборЭлемента 					= Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("КомандированныеСотрудники.Печатать");
	ОтборЭлемента.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение 	= Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
КонецПроцедуры // УстановитьУсловноеОформление()

#КонецОбласти
