#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// Работа с макетами офисных документов.

Функция ПолучитьДанныеПечати(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	ДанныеПоВсемОбъектам = Новый Соответствие;
	
	Для Каждого ОбъектСсылка Из МассивДокументов Цикл
		ДанныеОбъектаПоМакетам = Новый Соответствие;
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			ДанныеОбъектаПоМакетам.Вставить(ИмяМакета, ПолучитьДанныеОбъекта(ОбъектСсылка));
		КонецЦикла;
		ДанныеПоВсемОбъектам.Вставить(ОбъектСсылка, ДанныеОбъектаПоМакетам);
	КонецЦикла;
	
	ОписаниеОбластей = Новый Соответствие;
	ДвоичныеДанныеМакетов = Новый Соответствие;
	ТипыМакетов = Новый Соответствие;
	
	Для Каждого ИмяМакета Из МассивИменМакетов Цикл
		Если ИмяМакета = "КоммерческоеПредложение(MSWord)" Тогда
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, УправлениеПечатью.МакетПечатнойФормы("Документ.CRM_Продажа.ПФ_DOC_КоммерческоеПредложение"));
			ТипыМакетов.Вставить(ИмяМакета, "DOC");
		ИначеЕсли ИмяМакета = "КоммерческоеПредложение(ODT)" Тогда
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, УправлениеПечатью.МакетПечатнойФормы("Документ.CRM_Продажа.ПФ_ODT_КоммерческоеПредложение"));
			ТипыМакетов.Вставить(ИмяМакета, "ODT");
		КонецЕсли;
		ОписаниеОбластей.Вставить(ИмяМакета, ПолучитьОписаниеОбластейМакетаОфисногоДокумента());
	КонецЦикла;
	
	Возврат Новый Структура("Данные, Макеты",
							ДанныеПоВсемОбъектам,
							Новый Структура("ОписаниеОбластей, ТипыМакетов, ДвоичныеДанныеМакетов",
											ОписаниеОбластей,
											ТипыМакетов,
											ДвоичныеДанныеМакетов));
	
КонецФункции

Процедура ПолучитьКонтактныеДанные(ОбъектСсылка, СтруктураДанных)
	
	Для Каждого КлючИЗначение Из СтруктураДанных Цикл
		Попытка
			ВидКИ = Справочники.ВидыКонтактнойИнформации[КлючИЗначение.Ключ];
			// +CRM_УНФ
			//НайденаяСтрока = ОбъектСсылка.КонтактнаяИнформация.Найти(ВидКИ,"Вид");
			НайденаяСтрока = ОбъектСсылка.ФизЛицо.КонтактнаяИнформация.Найти(ВидКИ,"Вид");
			// -CRM_УНФ
		Исключение
			// +CRM_УНФ
			//НайденаяСтрока = ОбъектСсылка.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации["Телефон"],"Тип");
			НайденаяСтрока = ОбъектСсылка.ФизЛицо.КонтактнаяИнформация.Найти(Перечисления.ТипыКонтактнойИнформации["Телефон"],"Тип");
			// -CRM_УНФ
		КонецПопытки;
		Если НЕ НайденаяСтрока = Неопределено Тогда
			СтруктураДанных[КлючИЗначение.Ключ] = НайденаяСтрока.Представление;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ВернутьКЛКонтрагента(КонтрагентСсылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	КонтактныеЛица.Ссылка КАК КонтактноеЛицо
	|ИЗ
	|	Справочник.КонтактныеЛица КАК КонтактныеЛица
	|ГДЕ
	|	(НЕ КонтактныеЛица.ПометкаУдаления)
	|	И КонтактныеЛица.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", КонтрагентСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.КонтактноеЛицо;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДанныеОбъекта(СсылкаНаОбъект)
	
	Объект = СсылкаНаОбъект.ПолучитьОбъект();
	
	ДанныеОбъекта = Новый Структура;
	//
	//ДанныеОбъекта.Вставить("Дата",	Формат(CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса(),"ДЛФ=D"));
	//ДанныеОбъекта.Вставить("Номер",	Объект.Номер);
	//
	//СведенияОбОрганизации	= CRM_ОбщегоНазначенияСервер.СведенияОЮрФизЛице(Объект.Организация, CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса(), ,);
	//НаименованиеОрганизации	= CRM_ОбщегоНазначенияСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
	//АдресОрганизации		= CRM_ОбщегоНазначенияСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ЮридическийАдрес,");
	//ТелефоныОрганизации		= CRM_ОбщегоНазначенияСервер.ОписаниеОрганизации(СведенияОбОрганизации, "Телефоны,");
	//
	//СведенияОКонтрагенте	= CRM_ОбщегоНазначенияСервер.СведенияОЮрФизЛице(Объект.Контрагент, CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса(), ,);
	//НаименованиеКонтрагента = CRM_ОбщегоНазначенияСервер.ОписаниеОрганизации(СведенияОКонтрагенте, "ПолноеНаименование,");
	//
	//ДанныеОбъекта.Вставить("Организация",	НаименованиеОрганизации);
	//
	//ДанныеОбъекта.Вставить("АдресОрганизации",	АдресОрганизации);
	//ДанныеОбъекта.Вставить("ТелефонОрганизации",	ТелефоныОрганизации);
	//ДанныеОбъекта.Вставить("ТелефонОрганизации_1",	ТелефоныОрганизации);
	//
	//ДанныеОбъекта.Вставить("Клиент",		НаименованиеКонтрагента);
	//
	//Если ЗначениеЗаполнено(Объект.КонтактноеЛицо) Тогда
	//	
	//	КЛ_Контрагента = Объект.КонтактноеЛицо;
	//	
	//Иначе
	//	
	//	КЛ_Контрагента = ВернутьКЛКонтрагента(Объект.Контрагент);
	//	
	//КонецЕсли;	
	//
	//ДанныеОбъекта.Вставить("КонтактноеЛицо",	КЛ_Контрагента);
	//ДанныеОбъекта.Вставить("КонтактноеЛицо_1",	КЛ_Контрагента);
	//
	//НадписьУважаемый = "Уважаемый(ая)";
	//
	//// +CRM УНФ Пол хранится в реквизите физического лица.
	////Если ЗначениеЗаполнено(КЛ_Контрагента) И ЗначениеЗаполнено(КЛ_Контрагента.CRM_Пол) Тогда
	//	
	//	//Если КЛ_Контрагента.CRM_Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда
	//	
	//ФизическоеЛицоПол = Перечисления.ПолФизическогоЛица.ПустаяСсылка();
	//
	//Если Объект.Контрагент.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо
	//	И ЗначениеЗаполнено(Объект.Контрагент.ФизическоеЛицо)
	//	И ЗначениеЗаполнено(Объект.Контрагент.ФизическоеЛицо.Пол) Тогда
	//	
	//	ФизическоеЛицоПол = Объект.Контрагент.ФизическоеЛицо.Пол;
	//	
	//ИначеЕсли ЗначениеЗаполнено(КЛ_Контрагента) 
	//		И ЗначениеЗаполнено(КЛ_Контрагента.ФизЛицо)
	//		И ЗначениеЗаполнено(КЛ_Контрагента.ФизЛицо.Пол) Тогда
	//	
	//	ФизическоеЛицоПол = КЛ_Контрагента.ФизЛицо.Пол;
	//	
	//КонецЕсли;	
	//	
	//Если ЗначениеЗаполнено(ФизическоеЛицоПол)	Тогда
	//		
	//	Если ФизическоеЛицоПол = Перечисления.ПолФизическогоЛица.Мужской Тогда
	//
	//		НадписьУважаемый = "Уважаемый";
	//
	//	Иначе
	//
	//		НадписьУважаемый = "Уважаемая";
	//
	//	КонецЕсли;	
	//	
	//КонецЕсли;
	//
	//ДанныеОбъекта.Вставить("Уважаемый",	НадписьУважаемый);
	//
	//ДанныеОбъекта.Вставить("Ответственный",	Объект.Ответственный);
	//ДанныеОбъекта.Вставить("Ответственный_1",	Объект.Ответственный);
	//
	//СтруктураДанных = Новый Структура("Телефон, EmailПользователя","","");
	//
	//Если ЗначениеЗаполнено(Объект.Ответственный) Тогда
	//	ПолучитьКонтактныеДанные(Объект.Ответственный, СтруктураДанных);
	//КонецЕсли;
	//
	//ДанныеОбъекта.Вставить("ТелефонОтвественного",	СтруктураДанных.Телефон);
	//ДанныеОбъекта.Вставить("EmailОтвественного",	СтруктураДанных.EmailПользователя);
	//
	//ДанныеОбъекта.Вставить("Описание",	Объект.Описание);
	//
	//ДанныеОбъекта.Вставить("Товары", Новый Массив);
	//
	//ИтогоБезСкидки = 0;
	//Для Каждого СтрокаТабличнойЧасти Из Объект.Запасы Цикл
	//	СтрокаТаблицыТовары = Новый Структура;
	//	СтрокаТаблицыТовары.Вставить("НомерСтроки",		СтрокаТабличнойЧасти.НомерСтроки);
	//	
	//	// Для услуг и запасов представление номенклатуры заполняется по-разному.
	//	ТекущаяНоменклатура = СтрокаТабличнойЧасти.Номенклатура;
	//	
	//	Если ТекущаяНоменклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга Тогда
	//		
	//		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Содержание) Тогда
	//			
	//			ПредставлениеНоменклатурыДляПечати = СтрокаТабличнойЧасти.Содержание;
	//			
	//		Иначе
	//			
	//			ПредставлениеНоменклатурыДляПечати = CRM_ОбщегоНазначенияСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТабличнойЧасти.Номенклатура.Наименование, 
	//			СтрокаТабличнойЧасти.Характеристика, СтрокаТабличнойЧасти.Номенклатура.Артикул);
	//		КонецЕсли;
	//		
	//	Иначе
	//		
	//		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура.НаименованиеПолное) Тогда
	//			
	//			ПредставлениеНоменклатурыДляПечати = CRM_ОбщегоНазначенияСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТабличнойЧасти.Номенклатура.НаименованиеПолное, 
	//			СтрокаТабличнойЧасти.Характеристика, СтрокаТабличнойЧасти.Номенклатура.Артикул);
	//		Иначе
	//			
	//			ПредставлениеНоменклатурыДляПечати = CRM_ОбщегоНазначенияСервер.ПолучитьПредставлениеНоменклатурыДляПечати(СтрокаТабличнойЧасти.Номенклатура.Наименование, 
	//			СтрокаТабличнойЧасти.Характеристика, СтрокаТабличнойЧасти.Номенклатура.Артикул);
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//
	//    СтрокаТаблицыТовары.Вставить("Номенклатура",	ПредставлениеНоменклатурыДляПечати);
	//		
	//	СтрокаТаблицыТовары.Вставить("Количество",		Формат(СтрокаТабличнойЧасти.Количество,"ЧЦ=15; ЧДЦ=3"));
	//	СтрокаТаблицыТовары.Вставить("Цена",			Формат(СтрокаТабличнойЧасти.Цена,"ЧЦ=15; ЧДЦ=2"));
	//	СтрокаТаблицыТовары.Вставить("Единица",			СтрокаТабличнойЧасти.ЕдиницаИзмерения);
	//	
	//	СуммаБезСкидки	= СтрокаТабличнойЧасти.Цена*СтрокаТабличнойЧасти.Количество;
	//	СкидкаНаценка	= ?(СуммаБезСкидки >= СтрокаТабличнойЧасти.Сумма, СуммаБезСкидки - СтрокаТабличнойЧасти.Сумма,СтрокаТабличнойЧасти.Сумма - СуммаБезСкидки);
	//	
	//	ИтогоБезСкидки = ИтогоБезСкидки + СуммаБезСкидки;
	//	
	//	СтрокаТаблицыТовары.Вставить("Скидка",			Формат(СкидкаНаценка,"ЧЦ=15; ЧДЦ=2"));
	//	СтрокаТаблицыТовары.Вставить("Сумма",			Формат(СтрокаТабличнойЧасти.Сумма,"ЧЦ=15; ЧДЦ=2"));
	//	СтрокаТаблицыТовары.Вставить("СтрокаНДС",		Формат(СтрокаТабличнойЧасти.СуммаНДС,"ЧЦ=15; ЧДЦ=2"));
	//	СтрокаТаблицыТовары.Вставить("СтрокаВсего",		Формат(СтрокаТабличнойЧасти.Всего,"ЧЦ=15; ЧДЦ=2"));
	//	ДанныеОбъекта.Товары.Добавить(СтрокаТаблицыТовары);
	//КонецЦикла;
	//
	//// выводим итоги
	//
	//ИтоговаяСумма	 = Объект.Запасы.Итог("Сумма");
	//ИтоговаяСуммаНДС = Объект.Запасы.Итог("СуммаНДС");
	//
	//ДанныеОбъекта.Вставить("Всего",	Формат(ИтоговаяСумма,"ЧЦ=15; ЧДЦ=2"));
	//
	//Если ИтоговаяСуммаНДС = 0 Тогда
	//	ДанныеОбъекта.Вставить("СтрокаНДС", НСтр("ru = 'Без налога (НДС)'"));
	//	ДанныеОбъекта.Вставить("ВсегоНДС", "-");
	//Иначе
	//	ДанныеОбъекта.Вставить("СтрокаНДС", ?(Объект.СуммаВключаетНДС, НСтр("ru = 'В том числе НДС:'"), НСтр("ru = 'Сумма НДС:'")));
	//	ДанныеОбъекта.Вставить("ВсегоНДС",  Формат(ИтоговаяСуммаНДС, "ЧЦ=15; ЧДЦ=2"));
	//КонецЕсли; 
	//
	//ДанныеОбъекта.Вставить("ВсегоКОплате",	Формат(ИтоговаяСумма + ?(Объект.СуммаВключаетНДС, 0, ИтоговаяСуммаНДС),"ЧЦ=15; ЧДЦ=2"));
	//
	//ДанныеОбъекта.Вставить("ТелефонОтвественного",	СтруктураДанных.Телефон);
	//ДанныеОбъекта.Вставить("EmailОтвественного",	СтруктураДанных.EmailПользователя);
	//
	//ДанныеОбъекта.Вставить("Описание",			Объект.Описание);
	//ДанныеОбъекта.Вставить("Валюта",			Объект.ВалютаДокумента);
	//ДанныеОбъекта.Вставить("Валюта_1",			Объект.ВалютаДокумента);
	//ДанныеОбъекта.Вставить("Курс",				Формат(Объект.Курс,"ЧЦ=10; ЧДЦ=4"));
	//ДанныеОбъекта.Вставить("Кратность",			Формат(Объект.Кратность,"ЧЦ=10"));
	//ДанныеОбъекта.Вставить("СтоимостьПропись",	НРег(РаботаСКурсамиВалют.СформироватьСуммуПрописью(Объект.запасы.Итог("Сумма"), Объект.ВалютаДокумента)));
	//
	//Если ЗначениеЗаполнено(Объект.ШаблонУсловия) Тогда
	//	
	//	ДанныеОбъекта.Вставить("ТекстУсловия",		Объект.ШаблонУсловия.ТекстУсловия);
	//	
	//КонецЕсли;	
	
	Возврат ДанныеОбъекта;
	
КонецФункции

Функция ПолучитьОписаниеОбластейМакетаОфисногоДокумента()
	
	ОписаниеОбластей = Новый Структура;
	
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ВерхнийКолонтитул",	"ВерхнийКолонтитул");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "НижнийКолонтитул",		"НижнийКолонтитул");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Заголовок",			"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "НижняяЧасть",			"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ШапкаТаблицыТовары",	"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "СтрокаТаблицаТовары",	"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ИтогиТаблицаТовары",	"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ШапкаТаблицыТоварыТекст",	"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ШапкаТоварыНоменклатура",	"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ТоварыНоменклатура",		"Список");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ШапкаТоварыВсего",		"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ТоварыВсего",			"Список");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "ШаблонУсловия",			"Общая");
		
	Возврат ОписаниеОбластей;
	
КонецФункции

#КонецЕсли