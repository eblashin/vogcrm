#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Область ОбработчикиСобытий

Процедура ЗаполнитьЗначенияИзНастроекПользователяПоУмолчанию()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
		Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
			Организация = ЗначениеНастройки;
		Иначе
			Организация = CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию();
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнойОтветственный");
		Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
			Ответственный = ЗначениеНастройки;
		Иначе
			Ответственный = Автор;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Подразделение) Тогда
		Подразделение = Ответственный.Подразделение;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Проект) Тогда
		ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнойПроект");
		Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
			Проект			= ЗначениеНастройки;
			КартаМаршрута 	= Проект.CRM_КартаМаршрута;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Автор = ПараметрыСеанса.ТекущийПользователь;
	
	// Если ДанныеЗаполнения неопределены или является структурой без свойства "Основание"
	// это новый документ не введенный на основании, заполняем настройками пользователя по умолчанию.
	Если (ДанныеЗаполнения = Неопределено) ИЛИ (ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И НЕ ДанныеЗаполнения.Свойство("Основание")) Тогда
		
		ЗаполнитьЗначенияИзНастроекПользователяПоУмолчанию();
		
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Партнеры") Тогда
		
		Если ДанныеЗаполнения.ЭтоГруппа Тогда
			ВызватьИсключение НСтр("ru = 'Нельзя выбирать группу Клиентов.'");
		КонецЕсли;
		
		Клиент =  ДанныеЗаполнения;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.CRM_РассылкаЭлектронныхПисем") Тогда
		
		Дата			= ТекущаяДатаСеанса();
		Наименование	= ДанныеЗаполнения.Тема;
		Важность		= ДанныеЗаполнения.Важность;
		
		Проект			= ДанныеЗаполнения.Проект;
		Подразделение	= ДанныеЗаполнения.Подразделение;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.CRM_Телемаркетинг") Тогда
		
		Дата			= ТекущаяДатаСеанса();
		Наименование	= ДанныеЗаполнения.Тема;
		Важность		= ДанныеЗаполнения.Важность;
		
		Проект			= ДанныеЗаполнения.Проект;
		Подразделение	= ДанныеЗаполнения.Подразделение;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КоммерческоеПредложениеКлиенту") Тогда
		
		Дата			= ТекущаяДатаСеанса();
		Наименование	= Строка(ДанныеЗаполнения);
		Описание		= ДанныеЗаполнения.Комментарий;
		
		Организация		= ДанныеЗаполнения.Организация;
		Проект			= ДанныеЗаполнения.CRM_Проект;
		Подразделение	= ДанныеЗаполнения.CRM_Подразделение;
		Клиент			= ДанныеЗаполнения.Партнер;
		КонтактноеЛицо	= ДанныеЗаполнения.КонтактноеЛицо;
		
		ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
		СтруктураКурсовСтаройВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДанныеЗаполнения.Валюта, ДанныеЗаполнения.Дата);
		СтруктураКурсовНовойВалюты  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУправленческогоУчета, ДанныеЗаполнения.Дата);
		СуммаПотенциал = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(ДанныеЗаполнения.СуммаДокумента,ДанныеЗаполнения.Валюта, ВалютаУправленческогоУчета, СтруктураКурсовСтаройВалюты.Курс,СтруктураКурсовНовойВалюты.Курс
															,СтруктураКурсовСтаройВалюты.Кратность,СтруктураКурсовНовойВалюты.Кратность);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.МаркетинговыеМероприятия") Тогда
		
		Дата			= ТекущаяДатаСеанса();
		Наименование	= ДанныеЗаполнения.Наименование;
		Описание		= ДанныеЗаполнения.Комментарий;
		Важность		= ДанныеЗаполнения.CRM_Важность;
		
		Проект			= ДанныеЗаполнения.CRM_Проект;
		Подразделение	= ДанныеЗаполнения.CRM_Подразделение;
		
		ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
		СтруктураКурсовСтаройВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ДанныеЗаполнения.CRM_Валюта, ДанныеЗаполнения.ДатаНачала);
		СтруктураКурсовНовойВалюты  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаУправленческогоУчета, ДанныеЗаполнения.ДатаНачала);
		СуммаПотенциал = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(ДанныеЗаполнения.CRM_ПлановаяСуммаПродаж,ДанныеЗаполнения.CRM_Валюта, ВалютаУправленческогоУчета, СтруктураКурсовСтаройВалюты.Курс,СтруктураКурсовНовойВалюты.Курс
															,СтруктураКурсовСтаройВалюты.Кратность,СтруктураКурсовНовойВалюты.Кратность);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		
		Клиент = CRM_УправлениеЭлектроннойПочтой.ЭлектронноеПисьмоВходящееПолучитьКонтрагента(ДанныеЗаполнения);
		Основание = ДанныеЗаполнения;
		
		Описание = "Создано на основании документа """ + ДанныеЗаполнения + """
										|
										|Тема: " + ДанныеЗаполнения.Тема + "
										|
										|Текст письма:
										|" + ДанныеЗаполнения.Текст;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		
		Клиент = CRM_УправлениеЭлектроннойПочтой.ЭлектронноеПисьмоИсходящееПолучитьКонтрагента(ДанныеЗаполнения);
		Основание = ДанныеЗаполнения;
		
		Описание = "Создано на основании документа """ + ДанныеЗаполнения + """
										|
										|Тема: " + ДанныеЗаполнения.Тема + "
										|
										|Текст письма:
										|" + ДанныеЗаполнения.Текст;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СообщениеSMS") Тогда
		
		Основание = ДанныеЗаполнения;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) <> Тип("Структура")Тогда
		
		// Клиент и проект берется из документов взаимоотношений.
		Попытка
			Клиент  = ДанныеЗаполнения.Клиент;
		Исключение
		КонецПопытки;
		
	КонецЕсли;	
	
	Если ДанныеЗаполнения <> Неопределено И ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("Описание") Тогда
			Описание = ДанныеЗаполнения.Описание;
		КонецЕсли;
		Если ДанныеЗаполнения.Свойство("Партнер") Тогда
			Клиент = ДанныеЗаполнения.Партнер;
		КонецЕсли;
	КонецЕсли;
	
	// Заполнение значений по умолчанию.
		
	// Установим настройки пользователя.
	
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Попытка
			Организация  =  ДанныеЗаполнения.Организация;
		Исключение
		КонецПопытки;
		
		//Попытка
		//	Ответственный  =  ДанныеЗаполнения.Ответственный;
		//Исключение
		// КонецПопытки;
		
		Попытка
			Договор  =  ДанныеЗаполнения.Договор;
		Исключение
		КонецПопытки;
		
		Попытка
			Клиент  =  ДанныеЗаполнения.Клиент;
		Исключение
		КонецПопытки;
		
	КонецЕсли;	

	Если Не ЗначениеЗаполнено(Организация) Тогда
		ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "ОсновнаяОрганизация");
		Если ЗначениеЗаполнено(ЗначениеНастройки) И Организация <> ЗначениеНастройки Тогда
			Организация = ЗначениеНастройки;
		Иначе 
			Организация = CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию();
		КонецЕсли;
	КонецЕсли;	 					
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		
		Ответственный = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеПоУмолчаниюПользователя(Пользователь, "ОсновнойОтветственный");
		
		Если Не ЗначениеЗаполнено(Ответственный) Тогда
			Ответственный = Пользователь;
		КонецЕсли;
		
	КонецЕсли;
	
	// основной договор Клиента
	Если  ЗначениеЗаполнено(Клиент) Тогда
		
		Если НЕ ЗначениеЗаполнено(Договор) Тогда
			
			Договор = Клиент.ДоговорПоУмолчанию;
			
			Если НЕ (ЗначениеЗаполнено(Организация) И Договор.Организация = Организация) Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	ДоговорыКонтрагентов.Ссылка
				|ИЗ
				|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
				|ГДЕ
				|	ДоговорыКонтрагентов.Владелец = &Клиент
				|	И ДоговорыКонтрагентов.Организация = &Организация";
				
				Запрос.УстановитьПараметр("Клиент", Клиент);
				Запрос.УстановитьПараметр("Организация", Организация);
				
				РезультатЗапроса = Запрос.Выполнить().Выгрузить();
				
				Если РезультатЗапроса.Количество() > 0 Тогда
					Договор = РезультатЗапроса[0].Ссылка;
				Иначе
					Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Статус = "В работе";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Важность) Тогда
		Важность = Перечисления.ВариантыВажностиВзаимодействия.Обычная;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		Дата 		= CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
		ДатаСтарта 	= Дата;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик события "ПриКопировании".
//
Процедура ПриКопировании(ОбъектКопирования)
	
	БизнесПроцесс 			= БизнесПроцессы.CRM_БизнесПроцесс.ПустаяСсылка();
	ДатаЗавершения 			= '00010101';
	ЕстьЗаказыПокупателей 	= Ложь;
	КартаМаршрута 			= Справочники.CRM_КартыМаршрутов.ПустаяСсылка();
	СуммаОплатПоСделке 		= 0;
	СуммаОтгрузокПоСделке 	= 0;
	СуммаСделки 			= 0;
	ПричинаОтказа 			= Справочники.CRM_ПричиныОтказов.ПустаяСсылка();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ПрефиксацияОбъектовСобытия.УстановитьПрефиксОрганизации(ЭтотОбъект, СтандартнаяОбработка, Префикс);
КонецПроцедуры

#КонецОбласти

#КонецЕсли