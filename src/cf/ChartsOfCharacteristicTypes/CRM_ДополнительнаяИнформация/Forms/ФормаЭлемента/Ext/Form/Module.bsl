&НаКлиенте
Перем ОбработкаПродолженияПриОшибкеЗаписи;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЕдинственноеЧислоПредмета  = СтрПолучитьСтроку(Объект.СклоненияПредмета, 1);
	МножественноеЧислоПредмета = СтрПолучитьСтроку(Объект.СклоненияПредмета, 2);
	
	ОбновитьСоставЭлементовФормы();
	
	Элементы.ЗначенияВес.Видимость = Объект.ДополнительныеЗначенияСВесом;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСоставЭлементовФормы(ТекстПредупреждения = "")
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СтарыйТипЗначения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ТипЗначения");
	Иначе
		СтарыйТипЗначения = Новый ОписаниеТипов;
	КонецЕсли;
	// Проверка возможности удаления типа дополнительных значений.
	Если УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(СтарыйТипЗначения) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Владелец", Объект.Ссылка);
		
		Если СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА КАК ЗначениеИстина
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектовИерархия КАК ЗначенияСвойствОбъектовИерархия
			|ГДЕ
			|	ЗначенияСвойствОбъектовИерархия.Владелец = &Владелец";
		Иначе
			Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА КАК ЗначениеИстина
			|ИЗ
			|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|ГДЕ
			|	ЗначенияСвойствОбъектов.Владелец = &Владелец";
		КонецЕсли;
		
		Если НЕ Запрос.Выполнить().Пустой() Тогда
			
			Если СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия"))
			   И НЕ Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
				
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Недопустимо удалять тип ""%1"",
					           |так как дополнительные значения уже введены.
					           |Сначала нужно удалить введенные дополнительные значения.
					           |
					           |Удаленный тип восстановлен.'"),
					Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) );
				
				Объект.ТипЗначения = Новый ОписаниеТипов(
					Объект.ТипЗначения,
					"СправочникСсылка.ЗначенияСвойствОбъектовИерархия",
					"СправочникСсылка.ЗначенияСвойствОбъектов");
			
			ИначеЕсли СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов"))
			        И НЕ Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
				
				ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Недопустимо удалять тип ""%1"",
					           |так как дополнительные значения уже введены.
					           |Сначала нужно удалить введенные дополнительные значения.
					           |
					           |Удаленный тип восстановлен.'"),
					Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) );
				
				Объект.ТипЗначения = Новый ОписаниеТипов(
					Объект.ТипЗначения,
					"СправочникСсылка.ЗначенияСвойствОбъектов",
					"СправочникСсылка.ЗначенияСвойствОбъектовИерархия");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Проверка, что установлено не более одного типа дополнительных значений.
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия"))
	   И Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		
		Если НЕ СтарыйТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) Тогда
			
			ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Недопустимо одновременно использовать типы значения
				           |""%1"" и
				           |""%2"".
				           |
				           |Второй тип удален.'"),
				Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")),
				Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) );
			
			// Удаление второго типа.
			Объект.ТипЗначения = Новый ОписаниеТипов(
				Объект.ТипЗначения,
				,
				"СправочникСсылка.ЗначенияСвойствОбъектовИерархия");
		Иначе
			ТекстПредупреждения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Недопустимо одновременно использовать типы значения
				           |""%1"" и
				           |""%2"".
				           |
				           |Первый тип удален.'"),
				Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")),
				Строка(Тип("СправочникСсылка.ЗначенияСвойствОбъектовИерархия")) );
			
			// Удаление первого типа.
			Объект.ТипЗначения = Новый ОписаниеТипов(
				Объект.ТипЗначения,
				,
				"СправочникСсылка.ЗначенияСвойствОбъектов");
		КонецЕсли;
	КонецЕсли;
	
	ВладелецЗначений = Объект.Ссылка;
	
	Если УправлениеСвойствамиСлужебный.ТипЗначенияСодержитЗначенияСвойств(Объект.ТипЗначения) Тогда
		Элементы.ДополнительныеЗначения.Видимость = Истина;
	Иначе
		Элементы.ДополнительныеЗначения.Видимость = Ложь;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Значения, "Владелец", ВладелецЗначений, , , Истина);
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		Значения.ОсновнаяТаблица = "Справочник.ЗначенияСвойствОбъектов";
	Иначе
		Значения.ОсновнаяТаблица = "Справочник.ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ТекущийОбъект.СклоненияПредмета = ЕдинственноеЧислоПредмета + Символы.ПС + МножественноеЧислоПредмета;
	Иначе
		ТекущийОбъект.СклоненияПредмета = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ПараметрыЗаписи.Свойство("ОбработкаПродолжения") Тогда
		ОбработкаПродолженияПриОшибкеЗаписи = ПараметрыЗаписи.ОбработкаПродолжения;
		ПодключитьОбработчикОжидания("ПослеОшибкиЗаписи", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ПараметрыЗаписи.Свойство("ОбработкаПродолжения") Тогда
		ОбработкаПродолженияПриОшибкеЗаписи = Неопределено;
		ОтключитьОбработчикОжидания("ПослеОшибкиЗаписи");
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения(ПараметрыЗаписи.ОбработкаПродолжения.ИмяПроцедуры,
				ЭтотОбъект, ПараметрыЗаписи.ОбработкаПродолжения.Параметры),
			Ложь);
	КонецЕсли;
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(ЕдинственноеЧислоПредмета) И Не ЗначениеЗаполнено(МножественноеЧислоПредмета) Тогда
		ЕдинственноеЧислоПредмета = Объект.Наименование;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипЗначенияПриИзменении(Элемент)
	
	ТекстПредупреждения = "";
	ОбновитьСоставЭлементовФормы(ТекстПредупреждения);
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПриИзменении(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяСобытия = "Запись_ЗначенияСвойствОбъектов";
	Иначе
		ИмяСобытия = "Запись_ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	Оповестить(ИмяСобытия,
		Новый Структура("Ссылка", Элемент.ТекущиеДанные.Ссылка),
		Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьОбъект(ВариантТекстаВопроса, ИмяПроцедурыПродолжения, ДополнительныеПараметры = Неопределено, ПараметрыЗаписи = Неопределено)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И НЕ Модифицированность Тогда
		
		ВыполнитьОбработкуОповещения(Новый ОписаниеОповещения(
			ИмяПроцедурыПродолжения, ЭтотОбъект, ДополнительныеПараметры), Ложь);
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаписи = Неопределено Тогда
		ПараметрыЗаписи = Новый Структура;
	КонецЕсли;
	
	ОбработкаПродолжения = Новый Структура;
	ОбработкаПродолжения.Вставить("ИмяПроцедуры", ИмяПроцедурыПродолжения);
	ОбработкаПродолжения.Вставить("Параметры", ДополнительныеПараметры);
	
	ПараметрыЗаписи.Вставить("ОбработкаПродолжения", ОбработкаПродолжения);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаписатьОбъектПродолжение("Записать", ПараметрыЗаписи);
		Возврат;
	КонецЕсли;
	
	Если ВариантТекстаВопроса = "ПереходКСпискуЗначений" Тогда
		ТекстВопроса =
			НСтр("ru = 'Переход к работе со списком значений
			           |возможен только после записи данных.
			           |
			           |Данные будут записаны.'");
	Иначе
		ТекстВопроса =
			НСтр("ru = 'Данные будут записаны.'")
	КонецЕсли;
	
	Кнопки = Новый СписокЗначений;
	Кнопки.Добавить("Записать", НСтр("ru = 'Записать'"));
	Кнопки.Добавить("Отмена", НСтр("ru = 'Отмена'"));
	
	ПоказатьВопрос(
		Новый ОписаниеОповещения(
			"ЗаписатьОбъектПродолжение", ЭтотОбъект, ПараметрыЗаписи),
		ТекстВопроса, Кнопки, , "Записать");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьОбъектПродолжение(Ответ, ПараметрыЗаписи) Экспорт
	
	Если Ответ <> "Записать" Тогда
		Возврат;
	КонецЕсли;
	
	Записать(ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОшибкиЗаписи()
	
	Если ОбработкаПродолженияПриОшибкеЗаписи <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения(ОбработкаПродолженияПриОшибкеЗаписи.ИмяПроцедуры,
				ЭтотОбъект, ОбработкаПродолженияПриОшибкеЗаписи.Параметры),
			Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Копирование", Копирование);
	ДополнительныеПараметры.Вставить("Родитель", Родитель);
	ДополнительныеПараметры.Вставить("Группа", Группа);
	
	ЗаписатьОбъект("ПереходКСпискуЗначений",
		"ЗначенияПередНачаломДобавленияЗавершение", ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломДобавленияЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектов";
	Иначе
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Родитель", ДополнительныеПараметры.Родитель);
	ЗначенияЗаполнения.Вставить("Владелец", Объект.Ссылка);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СкрытьВладельца", Истина);
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	Если ДополнительныеПараметры.Группа Тогда
		ПараметрыФормы.Вставить("ЭтоГруппа", Истина);
		
		ОткрытьФорму(ИмяТаблицыЗначений + ".ФормаГруппы", ПараметрыФормы, Элементы.Значения);
	Иначе
		ПараметрыФормы.Вставить("ПоказатьВес", Объект.ДополнительныеЗначенияСВесом);
		
		Если ДополнительныеПараметры.Копирование Тогда
			ПараметрыФормы.Вставить("ЗначениеКопирования", Элементы.Значения.ТекущаяСтрока);
		КонецЕсли;
		
		ОткрытьФорму(ИмяТаблицыЗначений + ".ФормаОбъекта", ПараметрыФормы, Элементы.Значения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	Если Элементы.ДополнительныеЗначения.ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьОбъект("ПереходКСпискуЗначений", "ЗначенияПередНачаломИзмененияЗавершение");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияПередНачаломИзмененияЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ЗначенияСвойствОбъектов")) Тогда
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектов";
	Иначе
		ИмяТаблицыЗначений = "Справочник.ЗначенияСвойствОбъектовИерархия";
	КонецЕсли;
	
	Если Элементы.Значения.ТекущаяСтрока <> Неопределено Тогда
		// Открытие формы значения или группы значений.
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СкрытьВладельца", Истина);
		ПараметрыФормы.Вставить("ПоказатьВес", Объект.ДополнительныеЗначенияСВесом);
		ПараметрыФормы.Вставить("Ключ", Элементы.Значения.ТекущаяСтрока);
		
		ОткрытьФорму(ИмяТаблицыЗначений + ".ФормаОбъекта", ПараметрыФормы, Элементы.Значения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ОбновитьСоставЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеЗначенияСВесомПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
	   И НЕ Объект.ДополнительныеЗначенияСВесом Тогда
		
		ТекстВопроса =
			НСтр("ru = 'Очистить введенные весовые коэффициенты?
			           |
			           |Данные будут записаны.'");
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("ОчиститьИЗаписать", НСтр("ru = 'Очистить и записать'"));
		Кнопки.Добавить("Отмена", НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПослеПодтвержденияОчисткиВесовыхКоэффициентов", ЭтотОбъект),
			ТекстВопроса, Кнопки, , "ОчиститьИЗаписать");
	Иначе
		ЗаписатьОбъект("ИзменениеИспользованияВеса",
			"ДополнительныеЗначенияСВесомПриИзмененииЗавершение");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеПодтвержденияОчисткиВесовыхКоэффициентов(Ответ, Неопределен) Экспорт
	
	Если Ответ <> "ОчиститьИЗаписать" Тогда
		Объект.ДополнительныеЗначенияСВесом = НЕ Объект.ДополнительныеЗначенияСВесом;
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ОчиститьВведенныеВесовыеКоэффициенты");
	
	ЗаписатьОбъект("ИзменениеИспользованияВеса",
		"ДополнительныеЗначенияСВесомПриИзмененииЗавершение",
		,
		ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеЗначенияСВесомПриИзмененииЗавершение(Отказ, Неопределен) Экспорт
	
	Если Отказ Тогда
		Объект.ДополнительныеЗначенияСВесом = НЕ Объект.ДополнительныеЗначенияСВесом;
	Иначе
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Оповестить(
				"Изменение_ЗначениеХарактеризуетсяВесовымКоэффициентом",
				Объект.ДополнительныеЗначенияСВесом,
				Объект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ЗначенияВес.Видимость = Объект.ДополнительныеЗначенияСВесом;
	
КонецПроцедуры

#КонецОбласти
