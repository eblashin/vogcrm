////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура КонвертироватьНаСервере()
	
	СписокЗавершенныхИнтересов.Очистить();
	
	Если CRM_ИспользоватьБизнесПроцессы Тогда
		// конвертируем по бизнес-процессам
		КонвертироватьСделкиВИнтересы();
	КонецЕсли;
	
	// группируем все остальные события, в соответствии с выбранными настройками
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ" + ?(ГруппировкаПоПроектам, "
	|	УдалитьCRM_Событие.Проект КАК Проект,", "") + ?(ГруппировкаПоОтветственным, "
	|	УдалитьCRM_Событие.Ответственный КАК Ответственный,", "") + "
	|	УдалитьCRM_Событие.Партнер КАК Партнер,
	|	УдалитьCRM_Событие.Ссылка
	|ИЗ
	|	Документ.УдалитьCRM_Событие КАК УдалитьCRM_Событие
	|ГДЕ
	|	НЕ УдалитьCRM_Событие.ПометкаУдаления
	|	И УдалитьCRM_Событие.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	И НЕ УдалитьCRM_Событие.КонвертированоВИнтерес
	|	И УдалитьCRM_Событие.Интерес = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
	|УПОРЯДОЧИТЬ ПО
	|	УдалитьCRM_Событие.ОкончаниеСобытия УБЫВ
	|ИТОГИ ПО" + ?(ГруппировкаПоПроектам, "
	|	Проект,", "") + ?(ГруппировкаПоОтветственным, "
	|	Ответственный,", "") + "
	|	Партнер";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаРекурсия(Выборка, ?(ГруппировкаПоПроектам, "Проект", ?(ГруппировкаПоОтветственным, "Ответственный", "Партнер")));
	
	
	// добавить конвертацию событий, которые уже привязаны к интересу по ссылке, но еще не были конвертированы в него
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдалитьCRM_Событие.Интерес,
	|	УдалитьCRM_Событие.КонвертированоВИнтерес,
	|	УдалитьCRM_Событие.Ссылка
	|ИЗ
	|	Документ.УдалитьCRM_Событие КАК УдалитьCRM_Событие
	|ГДЕ
	|	НЕ УдалитьCRM_Событие.ПометкаУдаления
	|	И УдалитьCRM_Событие.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	И УдалитьCRM_Событие.Интерес <> ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
	|	И НЕ УдалитьCRM_Событие.КонвертированоВИнтерес
	|УПОРЯДОЧИТЬ ПО
	|	УдалитьCRM_Событие.ОкончаниеСобытия УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	НомерВариантаКП = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Событие = ВыборкаДетальныеЗаписи.Ссылка;
		НаименованиеВида = Строка(Событие.ВидСобытия) + " (" + Строка(Событие.ВходящееИсходящее) + ")";
		ВидВзаимодействия = Справочники.CRM_ВидыВзаимодействий.НайтиПоНаименованию(НаименованиеВида, Истина);
		Если ВидВзаимодействия = Справочники.CRM_ВидыВзаимодействий.ПустаяСсылка() Тогда
			ВидВзаимодействия = Справочники.CRM_ВидыВзаимодействий.СоздатьЭлемент();
			ВидВзаимодействия.Наименование = НаименованиеВида;
			ВидВзаимодействия.ВидСобытия = Событие.ВидСобытия;
			ВидВзаимодействия.ВидДела = Справочники.CRM_ВидыДелВзаимодействий.Интерес;
			ВидВзаимодействия.Направление = Событие.ВходящееИсходящее;
			ВидВзаимодействия.СостояниеИнтереса = Справочники.CRM_СостоянияИнтересов.ВыявлениеПотребностей;
			ВидВзаимодействия.Записать();
		КонецЕсли;
		
		ДокументВзаимодействие = Документы.CRM_Взаимодействие.СоздатьДокумент();
		ДокументВзаимодействие.ДокументОснование = ВыборкаДетальныеЗаписи.Интерес;
		ДокументВзаимодействие.СостояниеИнтереса = Справочники.CRM_СостоянияИнтересов.ВыявлениеПотребностей;
		ДокументВзаимодействие.Дата = Событие.Дата;
		ДокументВзаимодействие.ВидВзаимодействия = ВидВзаимодействия.Ссылка;
		ДокументВзаимодействие.Автор = ?(ЗначениеЗаполнено(Событие.Автор), Событие.Автор, ТекущийПользователь);
		ДокументВзаимодействие.Организация = Событие.Организация;
		ДокументВзаимодействие.Партнер = Событие.Партнер;
		ДокументВзаимодействие.КонтактноеЛицо = Событие.КонтактноеЛицо;
		ДокументВзаимодействие.Ответственный = Событие.Ответственный;
		ДокументВзаимодействие.Подразделение = Событие.Подразделение;
		ДокументВзаимодействие.Результат = Событие.Результат;
		ДокументВзаимодействие.Содержание = ?(ЗначениеЗаполнено(Событие.Описание), Событие.Описание, Событие.Тема);
		ДокументВзаимодействие.СтатусВзаимодействия = Событие.СостояниеСобытия;
		ДокументВзаимодействие.ПлановаяДата = Событие.ОкончаниеСобытия;
		ДокументВзаимодействие.НаВесьДень = Событие.НаВесьДень;
		ДокументВзаимодействие.ДатаЗавершенияВзаимодействия = Событие.ОкончаниеСобытия; 
		
		ОбъектСобытие = Событие.Ссылка.ПолучитьОбъект();
		ОбъектСобытие.ОбменДанными.Загрузка = Истина;
		ОбъектСобытие.КонвертированоВИнтерес = Истина;
		ОбъектСобытие.Интерес = ВыборкаДетальныеЗаписи.Интерес;
		
		// Если в событии заполнена ТЧ "Интерес клиента", то создаём КП с вариантами, где один вариант - одно событие
		Если Событие.Запасы.Количество() > 0 Тогда
			
			ДокументКП							= Документы.КоммерческоеПредложениеКлиенту.СоздатьДокумент();
			ДокументКП.CRM_Автор				= Событие.Автор;
			ДокументКП.CRM_Подразделение		= Событие.Подразделение;
			ДокументКП.CRM_Проект				= Событие.Проект;
			ДокументКП.Дата						= Событие.Дата;
			ДокументКП.Договор					= Событие.Договор;
			ДокументКП.ДокументОснование		= ВыборкаДетальныеЗаписи.Интерес;
			ДокументКП.КонтактноеЛицо			= Событие.КонтактноеЛицо;
			ДокументКП.Статус					= Перечисления.СтатусыКоммерческихПредложенийКлиентам.Отменено;
			ДокументКП.Организация				= Событие.Организация;
			ДокументКП.Менеджер					= Событие.Ответственный;
			ДокументКП.Партнер					= Событие.Партнер;
			Если Не ЗначениеЗаполнено(ДокументКП.Договор) Тогда
				ДокументКП.Договор				= ДокументКП.Партнер.ДоговорПоУмолчанию;
			КонецЕсли;
			
			ВалютаУправленческогоУчетаПоУмолчанию = Событие.ВалютаДокумента;
			Если ЗначениеЗаполнено(ДокументКП.Договор) Тогда
				ДокументКП.Валюта				= ДокументКП.Договор.ВалютаРасчетов;
			Иначе
				ДокументКП.Валюта				= ВалютаУправленческогоУчетаПоУмолчанию;
			КонецЕсли;
			
			СтруктураПоВалюте		= РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ДокументКП.Дата, Новый Структура("Валюта", ДокументКП.Валюта));
			ДокументКП.Курс			= СтруктураПоВалюте.Курс;
			ДокументКП.Кратность	= СтруктураПоВалюте.Кратность;
			
			ДокументКП.ЦенаВключаетНДС			= Событие.СуммаВключаетНДС;
			
			// первая строка комментария - номер, дата и тема события
			СтрокаКомментария = Нстр("ru = '#Конвертация из документа Событие '") + Событие.Номер + Нстр("ru = ' от '") + Событие.Дата + Нстр("ru = ', с темой: '") + Событие.Тема;
			СтрокаКомментария = СтрокаКомментария + Символы.ПС + Символы.ПС;
			// вторая  и третья строка комментария - содержание события и результат
			Если ЗначениеЗаполнено(Событие.Описание) Тогда
				СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Содержание события:'") + Символы.ПС + Событие.Описание;
			Иначе
				СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Содержание события:'") + Символы.ПС + Нстр("ru = '<отсутствует>'");
			КонецЕсли;	
			СтрокаКомментария = СтрокаКомментария + Символы.ПС + Символы.ПС;
			Если ЗначениеЗаполнено(Событие.Результат) Тогда
				СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Результат:'") + Символы.ПС + Событие.Результат;
			Иначе
				СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Результат:'") + Символы.ПС + Нстр("ru = '<отсутствует>'");
			КонецЕсли;

			ДокументКП.Комментарий	= СтрокаКомментария;
			
			НоваяСтрокаВариант = ДокументКП.CRM_КомментарииВариантов.Добавить();
			НоваяСтрокаВариант.ИДВарианта = НомерВариантаКП;
			
			ТаблицаЗапасов = Событие.Запасы.Выгрузить();
			ИмяВарианта = Нстр("ru = 'Вариант '") + Строка(НомерВариантаКП);
			Для Каждого СтрокаЗапасов Из ТаблицаЗапасов Цикл
				НоваяСтрока = ДокументКП.Товары.Добавить(); 
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
				НоваяСтрока.CRM_ИмяВарианта = ИмяВарианта;
				НоваяСтрока.CRM_ИДВарианта = НомерВариантаКП;
				НоваяСтрока.CRM_Утвержден  = Истина;
			КонецЦикла;
			Попытка
				ДокументКП.Записать();
				СписокКП.Добавить(ДокументКП.Ссылка);
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		Попытка
			ОбъектСобытие.Записать();
		Исключение
			НоваяСтрока = НеобработанныеСобытия.Добавить();
			НоваяСтрока.Ссылка = Событие.Ссылка;
			НоваяСтрока.Причина = НСтр("ru = 'Ошибка при записи события'"); //ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			Продолжить;
		КонецПопытки;
		Попытка
			ДокументВзаимодействие.Записать();
		Исключение
			ОбъектСобытие.КонвертированоВИнтерес = Ложь;
			ОбъектСобытие.Записать();
		КонецПопытки;
	КонецЦикла;
	
	
	// добавляем в таблицу необработанных события без клиента
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдалитьCRM_Событие.Ссылка
	|ИЗ
	|	Документ.УдалитьCRM_Событие КАК УдалитьCRM_Событие
	|ГДЕ
	|	НЕ УдалитьCRM_Событие.ПометкаУдаления
	|	И УдалитьCRM_Событие.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|	И УдалитьCRM_Событие.Интерес = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
	|	И НЕ УдалитьCRM_Событие.КонвертированоВИнтерес
	|УПОРЯДОЧИТЬ ПО
	|	УдалитьCRM_Событие.Дата УБЫВ";
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = НеобработанныеСобытия.Добавить();
		НоваяСтрока.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		НоваяСтрока.Причина = НСтр("ru = 'Событие без клиента'"); 
	КонецЦикла;
	
	
	// добавляем в таблицу необработанных все остальные события, с пометкой прочее (больше для отладки)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УдалитьCRM_Событие.Ссылка
	|ИЗ
	|	Документ.УдалитьCRM_Событие КАК УдалитьCRM_Событие
	|ГДЕ
	|	НЕ УдалитьCRM_Событие.ПометкаУдаления
	|	И УдалитьCRM_Событие.Ссылка НЕ В (&МассивНеобработанныхСобытий)
	|	И УдалитьCRM_Событие.Интерес = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
	|	И НЕ УдалитьCRM_Событие.КонвертированоВИнтерес
	|УПОРЯДОЧИТЬ ПО
	|	УдалитьCRM_Событие.Дата УБЫВ";
	ТЗНеобработано = РеквизитФормыВЗначение("НеобработанныеСобытия");
	Запрос.УстановитьПараметр("МассивНеобработанныхСобытий", ТЗНеобработано.ВыгрузитьКолонку("Ссылка"));
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НоваяСтрока = НеобработанныеСобытия.Добавить();
		НоваяСтрока.Ссылка = ВыборкаДетальныеЗаписи.Ссылка;
		НоваяСтрока.Причина = НСтр("ru = 'Прочее'"); 
	КонецЦикла;
	
	// Напоминания и оповещения решено не переносить в типовом продукте.
	// Код оставлен для примера
	
	// очищаем оповещения и напоминания по событиям и вешаем их на интересы
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	УдалитьCRM_Событие.Интерес,
	//|	УдалитьCRM_Событие.Ссылка
	//|ИЗ
	//|	Документ.УдалитьCRM_Событие КАК УдалитьCRM_Событие
	//|ГДЕ
	//|	НЕ УдалитьCRM_Событие.ПометкаУдаления
	//|	И УдалитьCRM_Событие.Интерес <> ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
	//|	И УдалитьCRM_Событие.КонвертированоВИнтерес
	//|УПОРЯДОЧИТЬ ПО
	//|	УдалитьCRM_Событие.ОкончаниеСобытия УБЫВ";
	//РезультатЗапроса = Запрос.Выполнить();
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	НаборЗаписей = РегистрыСведений.CRM_Напоминания.СоздатьНаборЗаписей();
	//	НаборЗаписей.Отбор.Предмет.Установить(ВыборкаДетальныеЗаписи.Ссылка);
	//	НаборЗаписей.Прочитать();
	//	НовыйНаборЗаписей = РегистрыСведений.CRM_Напоминания.СоздатьНаборЗаписей();
	//	НовыйНаборЗаписей.Отбор.Предмет.Установить(ВыборкаДетальныеЗаписи.Интерес);
	//	НовыйНаборЗаписей.Прочитать();
	//	Для Каждого Запись Из НаборЗаписей Цикл
	//		НоваяЗапись = НовыйНаборЗаписей.Добавить();
	//		ЗаполнитьЗначенияСвойств(НоваяЗапись, Запись);
	//		НоваяЗапись.Предмет = ВыборкаДетальныеЗаписи.Интерес;
	//	КонецЦикла;
	//	НаборЗаписей.Очистить();
	//	НаборЗаписей.Записать();
	//	НовыйНаборЗаписей.Записать();
	//	
	//	НаборЗаписей = РегистрыСведений.CRM_Оповещения.СоздатьНаборЗаписей();
	//	НаборЗаписей.Отбор.Предмет.Установить(ВыборкаДетальныеЗаписи.Ссылка);
	//	НаборЗаписей.Прочитать();
	//	НовыйНаборЗаписей = РегистрыСведений.CRM_Оповещения.СоздатьНаборЗаписей();
	//	НовыйНаборЗаписей.Отбор.Предмет.Установить(ВыборкаДетальныеЗаписи.Интерес);
	//	НовыйНаборЗаписей.Прочитать();
	//	Для Каждого Запись Из НаборЗаписей Цикл
	//		НоваяЗапись = НовыйНаборЗаписей.Добавить();
	//		ЗаполнитьЗначенияСвойств(НоваяЗапись, Запись);
	//		НоваяЗапись.Предмет = ВыборкаДетальныеЗаписи.Интерес;
	//	КонецЦикла;
	//	НаборЗаписей.Очистить();
	//	НаборЗаписей.Записать();
	//	НовыйНаборЗаписей.Записать();
	//	
	//	НаборЗаписей = РегистрыСведений.НапоминанияПользователя.СоздатьНаборЗаписей();
	//	НаборЗаписей.Отбор.Источник.Установить(ВыборкаДетальныеЗаписи.Ссылка);
	//	НаборЗаписей.Прочитать();
	//	НовыйНаборЗаписей = РегистрыСведений.НапоминанияПользователя.СоздатьНаборЗаписей();
	//	НовыйНаборЗаписей.Отбор.Источник.Установить(ВыборкаДетальныеЗаписи.Интерес);
	//	НовыйНаборЗаписей.Прочитать();
	//	Для Каждого Запись Из НаборЗаписей Цикл
	//		НоваяЗапись = НовыйНаборЗаписей.Добавить();
	//		ЗаполнитьЗначенияСвойств(НоваяЗапись, Запись);
	//		НоваяЗапись.Источник = ВыборкаДетальныеЗаписи.Интерес;
	//	КонецЦикла;
	//	НаборЗаписей.Очистить();
	//	НаборЗаписей.Записать();
	//	НовыйНаборЗаписей.Записать();
	//КонецЦикла;
	
	Для Каждого ЭлементСписка из СписокКП Цикл
		ОбъектКП = ЭлементСписка.Значение.ПолучитьОбъект();
		Попытка
			ОбъектКП.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;			
	КонецЦикла;		
	
	Элементы.ГруппаНеобработано.Видимость = Истина;
	Элементы.ГруппаПараметры.Доступность = Ложь;
КонецПроцедуры

&НаСервере
Процедура ВыборкаРекурсия(ВыборкаВерхнийУровень, Аналитика, Ответственный = Неопределено, Тема = "")
	
	Если Аналитика = "Партнер" Тогда
		Пока ВыборкаВерхнийУровень.Следующий() Цикл
			Партнер = ВыборкаВерхнийУровень.Партнер;
			Если Ответственный = Неопределено Тогда
				Ответственный = Партнер.ОсновнойМенеджер;
			КонецЕсли;
			ДокументИнтерес = Документы.CRM_Интерес.СоздатьДокумент();
			ДокументИнтерес.Партнер = Партнер;
			ДокументИнтерес.ТипУслуги = Справочники.CRM_ТипУслуги.ПоставкаТоварыУслуги;
			СсылкаНового = Документы.CRM_Интерес.ПолучитьСсылку(Новый УникальныйИдентификатор);
			
			ПоследнееСобытиеИнтереса = Неопределено;
			ТекущееКП = Неопределено;
			НомерВариантаКП = 1;
			ВыборкаСобытие = ВыборкаВерхнийУровень.Выбрать();
			
			Если ВыборкаСобытие.Количество() = 1 Тогда
				ПроставитьОснованиеУИнтереса = Истина;
			Иначе
				ПроставитьОснованиеУИнтереса = Ложь;
			КонецЕсли;				
			
			Пока ВыборкаСобытие.Следующий() Цикл
				Событие = ВыборкаСобытие.Ссылка;
				
				НаименованиеВида = Строка(Событие.ВидСобытия) + " (" + Строка(Событие.ВходящееИсходящее) + ")";
				ВидВзаимодействия = Справочники.CRM_ВидыВзаимодействий.НайтиПоНаименованию(НаименованиеВида, Истина);
				Если ВидВзаимодействия = Справочники.CRM_ВидыВзаимодействий.ПустаяСсылка() Тогда
					ВидВзаимодействия = Справочники.CRM_ВидыВзаимодействий.СоздатьЭлемент();
					ВидВзаимодействия.Наименование = НаименованиеВида;
					ВидВзаимодействия.ВидСобытия = Событие.ВидСобытия;
					ВидВзаимодействия.ВидДела = Справочники.CRM_ВидыДелВзаимодействий.Интерес;
					ВидВзаимодействия.Направление = Событие.ВходящееИсходящее;
					ВидВзаимодействия.СостояниеИнтереса = Справочники.CRM_СостоянияИнтересов.ВыявлениеПотребностей;
					ВидВзаимодействия.Записать();
				КонецЕсли;
				
				ДокументВзаимодействие = Документы.CRM_Взаимодействие.СоздатьДокумент();
				ДокументВзаимодействие.ДокументОснование = СсылкаНового;
				ДокументВзаимодействие.СостояниеИнтереса = Справочники.CRM_СостоянияИнтересов.ВыявлениеПотребностей;
				ДокументВзаимодействие.Дата = Событие.Дата;
				ДокументВзаимодействие.ВидВзаимодействия = ВидВзаимодействия.Ссылка;
				ДокументВзаимодействие.Автор = ?(ЗначениеЗаполнено(Событие.Автор), Событие.Автор, ?(ПоследнееСобытиеИнтереса <> Неопределено, ПоследнееСобытиеИнтереса.Автор, ТекущийПользователь));
				ДокументВзаимодействие.Организация = Событие.Организация;
				ДокументВзаимодействие.Партнер = Событие.Партнер;
				ДокументВзаимодействие.КонтактноеЛицо = Событие.КонтактноеЛицо;
				ДокументВзаимодействие.Ответственный = Событие.Ответственный;
				ДокументВзаимодействие.Подразделение = Событие.Подразделение;
				ДокументВзаимодействие.Результат = Событие.Результат;
				ДокументВзаимодействие.Содержание = ?(ЗначениеЗаполнено(Событие.Описание), Событие.Описание, Событие.Тема);
				ДокументВзаимодействие.СтатусВзаимодействия = Событие.СостояниеСобытия;
				ДокументВзаимодействие.ПлановаяДата = Событие.ОкончаниеСобытия;
				ДокументВзаимодействие.НаВесьДень = Событие.НаВесьДень;
				ДокументВзаимодействие.ДатаЗавершенияВзаимодействия = Событие.ОкончаниеСобытия; 
				
				ОбъектСобытие = Событие.Ссылка.ПолучитьОбъект();
				ОбъектСобытие.ОбменДанными.Загрузка 	= Истина;
				ОбъектСобытие.КонвертированоВИнтерес 	= Истина;
				ОбъектСобытие.Интерес = СсылкаНового;
								
				// Если в событии заполнена ТЧ "Интерес клиента", то создаём КП с вариантами, где один вариант - одно событие
				Если Событие.Запасы.Количество() > 0 Тогда
					Если ТекущееКП = Неопределено Тогда
						
						ДокументКП							= Документы.КоммерческоеПредложениеКлиенту.СоздатьДокумент();
						ДокументКП.CRM_Автор				= Событие.Автор;
						ДокументКП.CRM_Подразделение		= Событие.Подразделение;
						ДокументКП.CRM_Проект				= Событие.Проект;
						ДокументКП.Дата						= Событие.Дата;
						ДокументКП.Договор					= Событие.Договор;
						ДокументКП.ДокументОснование		= СсылкаНового;
						ДокументКП.КонтактноеЛицо			= Событие.КонтактноеЛицо;
						ДокументКП.Статус					= Перечисления.СтатусыКоммерческихПредложенийКлиентам.Отменено;
						ДокументКП.Организация				= Событие.Организация;
						ДокументКП.Менеджер					= Событие.Ответственный;
						ДокументКП.Партнер					= Событие.Партнер;
						Если Не ЗначениеЗаполнено(ДокументКП.Договор) Тогда
							ДокументКП.Договор				= ДокументКП.Партнер.ДоговорПоУмолчанию;
						КонецЕсли;
						
						ВалютаУправленческогоУчетаПоУмолчанию 				= Событие.ВалютаДокумента;
						Если ЗначениеЗаполнено(ДокументКП.Договор) Тогда
							ДокументКП.Валюта = ДокументКП.Договор.ВалютаРасчетов;
						Иначе
							ДокументКП.Валюта = ВалютаУправленческогоУчетаПоУмолчанию;
						КонецЕсли;
						
						СтруктураПоВалюте		= РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ДокументКП.Дата, Новый Структура("Валюта", ДокументКП.Валюта));
						ДокументКП.Курс			= СтруктураПоВалюте.Курс;
						ДокументКП.Кратность	= СтруктураПоВалюте.Кратность;
						
						ДокументКП.ЦенаВключаетНДС			= Событие.СуммаВключаетНДС;
						
						// первая строка комментария - номер, дата и тема события
						СтрокаКомментария = Нстр("ru = '#Конвертация из документа Событие '") + Событие.Номер + Нстр("ru = ' от '") + Событие.Дата + Нстр("ru = ', с темой: '") + Событие.Тема;
						СтрокаКомментария = СтрокаКомментария + Символы.ПС + Символы.ПС;
						// вторая  и третья строка комментария - содержание события и результат
						Если ЗначениеЗаполнено(Событие.Описание) Тогда
							СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Содержание события:'") + Символы.ПС + Событие.Описание;
						Иначе
							СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Содержание события:'") + Символы.ПС + Нстр("ru = '<отсутствует>'");
						КонецЕсли;	
						СтрокаКомментария = СтрокаКомментария + Символы.ПС + Символы.ПС;			
						Если ЗначениеЗаполнено(Событие.Результат) Тогда
							СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Результат:'") + Символы.ПС + Событие.Результат;
						Иначе
							СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Результат:'") + Символы.ПС + Нстр("ru = '<отсутствует>'");
						КонецЕсли;

						ДокументКП.Комментарий	= СтрокаКомментария;
						
						НоваяСтрокаВариант = ДокументКП.CRM_КомментарииВариантов.Добавить();
						НоваяСтрокаВариант.ИДВарианта = НомерВариантаКП;
						
						ТаблицаЗапасов = Событие.Запасы.Выгрузить();
						ИмяВарианта = Нстр("ru = 'Вариант '") + Строка(НомерВариантаКП);
						Для Каждого СтрокаЗапасов Из ТаблицаЗапасов Цикл
							НоваяСтрока = ДокументКП.Товары.Добавить(); 
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
							НоваяСтрока.CRM_ИмяВарианта = ИмяВарианта;
							НоваяСтрока.CRM_ИДВарианта = НомерВариантаКП;
							НоваяСтрока.CRM_Утвержден  = Истина;
						КонецЦикла;
						Попытка
							ДокументКП.Записать();
							ТекущееКП = ДокументКП.Ссылка;
							НомерВариантаКП = НомерВариантаКП + 1;
							СписокКП.Добавить(ТекущееКП);
						Исключение
						КонецПопытки;
					Иначе
						ДокументКПОбъект = ТекущееКП.ПолучитьОбъект();
						НоваяСтрокаВариант = ДокументКПОбъект.CRM_КомментарииВариантов.Добавить();
						НоваяСтрокаВариант.ИДВарианта = НомерВариантаКП;

						ТаблицаЗапасов = Событие.Запасы.Выгрузить();
						ИмяВарианта = Нстр("ru = 'Вариант '") + Строка(НомерВариантаКП);
						Для Каждого СтрокаЗапасов Из ТаблицаЗапасов Цикл
							НоваяСтрока = ДокументКПОбъект.Запасы.Добавить(); 
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
							НоваяСтрока.CRM_ИмяВарианта = ИмяВарианта;
							НоваяСтрока.CRM_ИДВарианта = НомерВариантаКП;
						КонецЦикла;
						Попытка
							ДокументКПОбъект.Записать();
							НомерВариантаКП = НомерВариантаКП + 1;
							Если СписокКП.НайтиПоЗначению(ТекущееКП) = Неопределено Тогда
								СписокКП.Добавить(ТекущееКП);
							КонецЕсли;
						Исключение
						КонецПопытки
					КонецЕсли;
				КонецЕсли;
				
				Попытка
					ОбъектСобытие.Записать();
				Исключение
					НоваяСтрока = НеобработанныеСобытия.Добавить();
					НоваяСтрока.Ссылка = Событие.Ссылка;
					НоваяСтрока.Причина = НСтр("ru = 'Ошибка при записи события'"); //ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
					Продолжить;
				КонецПопытки;
				Попытка
					ДокументВзаимодействие.Записать();
					ДокументИнтерес.Дата 	 = Событие.Дата;
					Если ПоследнееСобытиеИнтереса = Неопределено Тогда
						ПоследнееСобытиеИнтереса = ОбъектСобытие.Ссылка;
					КонецЕсли;
					Если Событие.ВидСобытия = Перечисления.CRM_ВидыСобытий.ЛичнаяВстреча 
					И (Событие.СторонниеЛица.Количество() > 0 ИЛИ Событие.СвоиЛица.Количество() > 0) Тогда
						ДокументМероприятие = Документы.CRM_Мероприятие.СоздатьДокумент();
						ДокументМероприятие.Дата = Событие.Дата;
						ДокументМероприятие.Автор = Событие.Автор;
						ДокументМероприятие.Место = Событие.Место;
						ДокументМероприятие.НаВесьДень = Событие.НаВесьДень;
						ДокументМероприятие.ОкончаниеМероприятия = Событие.ОкончаниеСобытия;
						ДокументМероприятие.Описание = Событие.Описание;
						ДокументМероприятие.Ответственный = Событие.Ответственный;
						ДокументМероприятие.Периодическое = Событие.Периодическое;
						ДокументМероприятие.Подразделение = Событие.Подразделение;
						ДокументМероприятие.Помещение = Событие.Помещение;
						ДокументМероприятие.Тема = Событие.Тема;
						ДокументМероприятие.РядСобытий = Событие.РядСобытий;
						ДокументМероприятие.ИзмененоВРяде = Событие.ИзмененоВРяде;
						ДокументМероприятие.Организация = Событие.Организация;
						ДокументМероприятие.Состояние = Событие.СостояниеСобытия;
						ДокументМероприятие.СторонниеЛица.Загрузить(Событие.СторонниеЛица.Выгрузить());
						ДокументМероприятие.СвоиЛица.Загрузить(Событие.СвоиЛица.Выгрузить());
						ДокументМероприятие.Категории.Загрузить(Событие.Категории.Выгрузить());
						ДокументМероприятие.КонвертацияИнтересов = Истина;
						ДокументМероприятие.Записать();
					КонецЕсли;
				Исключение
					ОбъектСобытие.КонвертированоВИнтерес = Ложь;
					ОбъектСобытие.Записать();
				КонецПопытки;
			КонецЦикла;
			
			Если ПоследнееСобытиеИнтереса <> Неопределено Тогда
				ДокументИнтерес.Завершен = (ПоследнееСобытиеИнтереса.СостояниеСобытия = Справочники.CRM_СостоянияСобытий.Завершено
											ИЛИ ПоследнееСобытиеИнтереса.СостояниеСобытия = Справочники.CRM_СостоянияСобытий.Отменено);
				//
				ДокументИнтерес.Автор = ПоследнееСобытиеИнтереса.Автор;
				ДокументИнтерес.Описание = ПоследнееСобытиеИнтереса.Описание;
				ДокументИнтерес.Организация = ПоследнееСобытиеИнтереса.Организация;
				ДокументИнтерес.КонтактноеЛицо = ?(ЗначениеЗаполнено(ПоследнееСобытиеИнтереса.КонтактноеЛицо), ПоследнееСобытиеИнтереса.КонтактноеЛицо, Партнер.CRM_ОсновноеКонтактноеЛицо);
				ДокументИнтерес.ДатаЗакрытия = ?(ДокументИнтерес.Завершен, ПоследнееСобытиеИнтереса.ОкончаниеСобытия, '00010101');
				ДокументИнтерес.СостояниеИнтереса = ?(ДокументИнтерес.Завершен, Справочники.CRM_СостоянияИнтересов.ИнтересЗакрыт, Справочники.CRM_СостоянияИнтересов.ВыявлениеПотребностей);
				ДокументИнтерес.Тема = НСтр("ru = 'История общения с клиентом '") + Тема;
				ДокументИнтерес.Ответственный = ПоследнееСобытиеИнтереса.Ответственный;
				ДокументИнтерес.Подразделение = ПоследнееСобытиеИнтереса.Подразделение;
				ДокументИнтерес.Офис = ПоследнееСобытиеИнтереса.Подразделение.CRM_Офис;
				Если ПроставитьОснованиеУИнтереса Тогда
					ДокументИнтерес.ДокументОснование = ПоследнееСобытиеИнтереса.ДокументОснование;
				КонецЕсли;
				ДокументИнтерес.УстановитьСсылкуНового(СсылкаНового);
				Попытка
					ДокументИнтерес.Записать();
				Исключение
				КонецПопытки;
				Если ЗначениеЗаполнено(ДокументИнтерес.Ссылка) И ДокументИнтерес.Завершен Тогда
					Если СписокЗавершенныхИнтересов.НайтиПоЗначению(ДокументИнтерес.Ссылка) = Неопределено Тогда
						СписокЗавершенныхИнтересов.Добавить(ДокументИнтерес.Ссылка);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Пока ВыборкаВерхнийУровень.Следующий() Цикл
			ЗначениеАналитики = ВыборкаВерхнийУровень[Аналитика];
			Тема = ?(Аналитика = "[Проект", Аналитика + ": " + Строка(ЗначениеАналитики) + "]", "");
			ВыборкаНиже = ВыборкаВерхнийУровень.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ВыборкаРекурсия(ВыборкаНиже, ?(Аналитика = "Проект" И ГруппировкаПоОтветственным, "Ответственный", "Партнер"), ?(Аналитика = "Ответственный", ЗначениеАналитики, Неопределено), Тема);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУВзаимодействийСостояниеЗавершено()
	
	Если СписокЗавершенныхИнтересов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	МассивИнтересов = Новый Массив;
	Для Каждого ЭлементСписка Из СписокЗавершенныхИнтересов Цикл
		МассивИнтересов.Добавить(ЭлементСписка.Значение);
	КонецЦикла;			
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_Взаимодействие.Ссылка КАК Взаимодействие,
	|	CRM_Взаимодействие.ДокументОснование КАК Интерес
	|ИЗ
	|	Документ.CRM_Взаимодействие КАК CRM_Взаимодействие
	|ГДЕ
	|	CRM_Взаимодействие.ДокументОснование ССЫЛКА Документ.CRM_Интерес
	|	И НЕ CRM_Взаимодействие.ДокументОснование = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
	|	И CRM_Взаимодействие.ДокументОснование В(&СписокИнтересов)";
	
	Запрос.УстановитьПараметр("СписокИнтересов", МассивИнтересов);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ВзаимодействиеОбъект =  Выборка.Взаимодействие.ПолучитьОбъект();
		ВзаимодействиеОбъект.СостояниеИнтереса = ПредопределенноеЗначение("Справочник.CRM_СостоянияИнтересов.ИнтересЗакрыт");
		Если Не ЗначениеЗаполнено(ВзаимодействиеОбъект.ДатаЗавершенияВзаимодействия) Тогда
			ВзаимодействиеОбъект.ДатаЗавершенияВзаимодействия = Выборка.Интерес.ДатаЗакрытия;
		КонецЕсли;			
		Попытка
			ВзаимодействиеОбъект.Записать();	
		Исключение			
		КонецПопытки;			
	КонецЦикла;
	 
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаписиРегистраСостояниеИнтересовНаСервере()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	CRM_Взаимодействие.ДокументОснование КАК Интерес,
	               |	CRM_Взаимодействие.Ссылка КАК Взаимодействие
	               |ПОМЕСТИТЬ ИнтересыВзаимодействия
	               |ИЗ
	               |	Документ.CRM_Взаимодействие КАК CRM_Взаимодействие
	               |ГДЕ
	               |	CRM_Взаимодействие.ДокументОснование ССЫЛКА Документ.CRM_Интерес
	               |	И НЕ CRM_Взаимодействие.ДокументОснование = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ИнтересыВзаимодействия.Интерес КАК Интерес,
	               |	ИнтересыВзаимодействия.Интерес.СостояниеИнтереса КАК ИнтересСостояниеИнтереса,
	               |	ИнтересыВзаимодействия.Взаимодействие КАК Взаимодействие,
	               |	ИнтересыВзаимодействия.Взаимодействие.СостояниеИнтереса,
	               |	ИнтересыВзаимодействия.Взаимодействие.СтатусВзаимодействия,
	               |	ВЫБОР
	               |		КОГДА ИнтересыВзаимодействия.Взаимодействие.СтатусВзаимодействия = ЗНАЧЕНИЕ(Справочник.CRM_СостоянияСобытий.Завершено)
	               |			ТОГДА 1
	               |		КОГДА ИнтересыВзаимодействия.Взаимодействие.СтатусВзаимодействия = ЗНАЧЕНИЕ(Справочник.CRM_СостоянияСобытий.Отменено)
	               |			ТОГДА 3
	               |		ИНАЧЕ 2
	               |	КОНЕЦ КАК ПолеСортировки
	               |ИЗ
	               |	ИнтересыВзаимодействия КАК ИнтересыВзаимодействия
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Интерес,
	               |	ИнтересыВзаимодействия.Взаимодействие.СостояниеИнтереса.РеквизитДопУпорядочивания УБЫВ,
	               |	ПолеСортировки,
	               |	ИнтересыВзаимодействия.Взаимодействие.ДатаЗавершенияВзаимодействия УБЫВ
	               |ИТОГИ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Взаимодействие)
	               |ПО
	               |	Интерес,
	               |	ИнтересСостояниеИнтереса";
				   
	
	ВыборкаПоИнтересам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоИнтересам.Следующий() Цикл
		
		ВыборкаПоСостояниям = ВыборкаПоИнтересам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ВыборкаПоСостояниям.Следующий() Тогда
			
			Выборка = ВыборкаПоСостояниям.Выбрать();
			Если Выборка.Следующий() Тогда
				
				ЗаписьРегистра = РегистрыСведений.CRM_СостоянияИнтересов.СоздатьМенеджерЗаписи();
				ЗаписьРегистра.Интерес			= Выборка.Интерес;
				ЗаписьРегистра.Взаимодействие	= Выборка.Взаимодействие;
				ЗаписьРегистра.Состояние		= Выборка.ИнтересСостояниеИнтереса;
				ЗаписьРегистра.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦИкла;
	
КонецПроцедуры

&НаСервере
Процедура КонвертироватьСделкиВИнтересы()
	
	Если СписокКартМаршрута.Количество() > 0 Тогда
		МассивКарт = Новый Массив;
		Для Каждого ЭлементСписка Из СписокКартМаршрута Цикл
			Если ЭлементСписка.Пометка Тогда
				МассивКарт.Добавить(ЭлементСписка.Значение);
			КонецЕсли;					
		КонецЦикла;
		
		// получим все БП по выбранному массиву карт
		Запрос = Новый Запрос;
		Запрос.Текст ="ВЫБРАТЬ
		|	CRM_БизнесПроцесс.Ссылка КАК Ссылка,
		|	CRM_БизнесПроцесс.Предмет КАК Основание
		|ИЗ
		|	БизнесПроцесс.CRM_БизнесПроцесс КАК CRM_БизнесПроцесс
		|ГДЕ
		|	CRM_БизнесПроцесс.КартаМаршрута В(&МассивКарт)
		|	И CRM_БизнесПроцесс.Партнер <> ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)";
		
		Запрос.УстановитьПараметр("МассивКарт", МассивКарт);
		РезультатЗапроса = Запрос.Выполнить().Выгрузить();
		
		// Теперь задача обработать все БП - создать интересы на основании каждого
		// При этом, если основание у БП - сделка, то данные прописываем у интереса из неё, иначе - из БП
		
		Для Каждого Выборка Из РезультатЗапроса Цикл
			
			Если ТипЗнч(Выборка.Основание) = Тип("ДокументСсылка.удалитьCRM_Сделка") Тогда
				// интерес на основании сделки
				ДокументОснование		= Выборка.Основание;
				БПЗавершен				= ДокументОснование.БизнесПроцесс.Завершен;
				ТемаБП					= ДокументОснование.Тема;
				Партнер					= ДокументОснование.Клиент;
				СостояниеИнтереса 		= 
				?(ДокументОснование.БизнесПроцесс.ВариантЗавершения.УспешностьЗавершения, 
				Справочники.CRM_СостоянияИнтересов.ИнтересЗакрыт,
				Справочники.CRM_СостоянияИнтересов.ИнтересПотерян);
			Иначе					
				// интерес на основании БП
				ДокументОснование		= Выборка.Ссылка;
				БПЗавершен 				= ДокументОснование.Завершен;
				ТемаБП					= ДокументОснование.Наименование;
				Партнер					= ДокументОснование.Партнер;
				СостояниеИнтереса		= 
				?(ДокументОснование.ВариантЗавершения.УспешностьЗавершения, 
				Справочники.CRM_СостоянияИнтересов.ИнтересЗакрыт,
				Справочники.CRM_СостоянияИнтересов.ИнтересПотерян);
			КонецЕсли;
			
			ДокументИнтерес					= Документы.CRM_Интерес.СоздатьДокумент();
			ДокументИнтерес.Дата			= ДокументОснование.Дата;
			ДокументИнтерес.Автор			= ДокументОснование.Автор;
			ДокументИнтерес.Завершен		= БПЗавершен;
			ДокументИнтерес.Описание		= ДокументОснование.Описание + НСтр("ru = ' [Конвертирован из '") + ДокументОснование.Ссылка + "]";
			ДокументИнтерес.Организация		= ДокументОснование.Организация;
			ДокументИнтерес.Партнер			= Партнер;
			ДокументИнтерес.КонтактноеЛицо	= ДокументОснование.КонтактноеЛицо;
			ДокументИнтерес.Ответственный 	= ДокументОснование.Ответственный;
			ДокументИнтерес.Подразделение 	= ДокументОснование.Подразделение;
			ДокументИнтерес.Офис 			= ДокументОснование.Подразделение.CRM_Офис;
			ДокументИнтерес.ТипУслуги 		= Справочники.CRM_ТипУслуги.ПоставкаТоварыУслуги;
			ДокументИнтерес.Тема 			= ТемаБП;
			ДокументИнтерес.ДатаЗакрытия 	= ДокументОснование.ДатаЗавершения;
			Если НЕ БПЗавершен Тогда
				ДокументИнтерес.СостояниеИнтереса = Справочники.CRM_СостоянияИнтересов.ВыявлениеПотребностей;
			Иначе
				ДокументИнтерес.СостояниеИнтереса = СостояниеИнтереса;
			КонецЕсли;
			
			// У интереса прописываем основание такое же, как и у БП
			ДокументИнтерес.ДокументОснование = Выборка.Основание;
			
			//СсылкаНового = Документы.CRM_Интерес.ПолучитьСсылку(Новый УникальныйИдентификатор);
			
			// Теперь привязываем все документы по БП в новому интересу
			// Если у БП есть документы взаимодействия, то интерес записываем, если нет, то переходим к следующему БП
			
			Запрос = Новый Запрос;
			Запрос.Текст =  "ВЫБРАТЬ
			|	CRM_ОбъектыПоБизнесПроцессам.Объект КАК Ссылка
			|ИЗ
			|	РегистрСведений.CRM_ОбъектыПоБизнесПроцессам КАК CRM_ОбъектыПоБизнесПроцессам
			|ГДЕ
			|	CRM_ОбъектыПоБизнесПроцессам.БизнесПроцесс = &БизнесПроцесс";
			
			Запрос.УстановитьПараметр("БизнесПроцесс", Выборка.Ссылка);
			ТаблицаОбъектовПоБП = Запрос.Выполнить().Выгрузить();
			Если ТаблицаОбъектовПоБП.Количество() = 0 Тогда 
				Продолжить;
			Иначе
				Попытка
					ДокументИнтерес.Записать();
				Исключение
				КонецПопытки;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДокументИнтерес.Ссылка) И ДокументИнтерес.Завершен  Тогда
				Если СписокЗавершенныхИнтересов.НайтиПоЗначению(ДокументИнтерес.Ссылка) = Неопределено Тогда
					СписокЗавершенныхИнтересов.Добавить(ДокументИнтерес.Ссылка);
				КонецЕсли;						
			КонецЕсли;					
			
			ТекущееКП 		= Неопределено;
			НомерВариантаКП = 1;
			
			Для Каждого ВыборкаОбъект Из ТаблицаОбъектовПоБП Цикл
				
				ДокументБП = ВыборкаОбъект.Ссылка;
				
				Если ТипЗнч(ДокументБП) = Тип("ДокументСсылка.УдалитьCRM_Событие") Тогда
					
					НаименованиеВида	= Строка(ДокументБП.ВидСобытия) + " (" + Строка(ДокументБП.ВходящееИсходящее) + ")";
					ВидВзаимодействия 	= Справочники.CRM_ВидыВзаимодействий.НайтиПоНаименованию(НаименованиеВида, Истина);
					Если ВидВзаимодействия = Справочники.CRM_ВидыВзаимодействий.ПустаяСсылка() Тогда
						ВидВзаимодействия 					= Справочники.CRM_ВидыВзаимодействий.СоздатьЭлемент();
						ВидВзаимодействия.Наименование 		= НаименованиеВида;
						ВидВзаимодействия.ВидСобытия 		= ДокументБП.ВидСобытия;
						ВидВзаимодействия.ВидДела 			= Справочники.CRM_ВидыДелВзаимодействий.Интерес;
						ВидВзаимодействия.Направление 		= ДокументБП.ВходящееИсходящее;
						ВидВзаимодействия.СостояниеИнтереса = Справочники.CRM_СостоянияИнтересов.ВыявлениеПотребностей;
						ВидВзаимодействия.Записать();
					КонецЕсли;
					
					ДокументВзаимодействие						= Документы.CRM_Взаимодействие.СоздатьДокумент();
					ДокументВзаимодействие.ДокументОснование 	= ДокументИнтерес.Ссылка;
					ДокументВзаимодействие.СостояниеИнтереса 	= Справочники.CRM_СостоянияИнтересов.ВыявлениеПотребностей;
					ДокументВзаимодействие.Дата 				= ДокументБП.Дата;
					ДокументВзаимодействие.ВидВзаимодействия 	= ВидВзаимодействия.Ссылка;
					ДокументВзаимодействие.Автор 				= ?(ЗначениеЗаполнено(ДокументБП.Автор), ДокументБП.Автор, ТекущийПользователь);
					ДокументВзаимодействие.Организация 			= ДокументБП.Организация;
					ДокументВзаимодействие.Партнер 				= ДокументБП.Партнер;
					ДокументВзаимодействие.КонтактноеЛицо 		= ДокументБП.КонтактноеЛицо;
					ДокументВзаимодействие.Ответственный 		= ДокументБП.Ответственный;
					ДокументВзаимодействие.Подразделение 		= ДокументБП.Подразделение;
					ДокументВзаимодействие.Результат 			= ДокументБП.Результат;
					ДокументВзаимодействие.Содержание 			= ?(ЗначениеЗаполнено(ДокументБП.Описание), ДокументБП.Описание, ДокументБП.Тема);
					ДокументВзаимодействие.СтатусВзаимодействия = ДокументБП.СостояниеСобытия;
					ДокументВзаимодействие.ПлановаяДата 		= ДокументБП.ОкончаниеСобытия;
					ДокументВзаимодействие.НаВесьДень 			= ДокументБП.НаВесьДень;
					ДокументВзаимодействие.ДатаЗавершенияВзаимодействия = ДокументБП.ОкончаниеСобытия;
					
					ОбъектСобытие 							= ДокументБП.Ссылка.ПолучитьОбъект();
					ОбъектСобытие.ОбменДанными.Загрузка 	= Истина;
					ОбъектСобытие.КонвертированоВИнтерес 	= Истина;
					ОбъектСобытие.Интерес 					= ДокументИнтерес.Ссылка;
					
					Попытка
						ОбъектСобытие.Записать();
					Исключение
						НоваяСтрока = НеобработанныеСобытия.Добавить();
						НоваяСтрока.Ссылка = ДокументБП.Ссылка;
						НоваяСтрока.Причина = НСтр("ru = 'Ошибка при записи события'"); //ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
						Продолжить;
					КонецПопытки;	
											
					Попытка
						ДокументВзаимодействие.Записать();
					Исключение
						ОбъектСобытие.КонвертированоВИнтерес = Ложь;
						ОбъектСобытие.Записать();
					КонецПопытки;
					
					// Если в событии заполнена ТЧ "Интерес клиента", то создаём КП с вариантами, где один вариант - одно событие
					Если ДокументБП.Запасы.Количество() > 0 Тогда
						
						Если ТекущееКП = Неопределено Тогда
							
							ДокументКП							= Документы.КоммерческоеПредложениеКлиенту.СоздатьДокумент();
							ДокументКП.CRM_Автор				= ДокументБП.Автор;
							ДокументКП.CRM_Подразделение		= ДокументБП.Подразделение;
							ДокументКП.CRM_Проект				= ДокументБП.Проект;
							ДокументКП.Дата						= ДокументБП.Дата;
							ДокументКП.Договор					= ДокументБП.Договор;
							ДокументКП.ДокументОснование		= ДокументИнтерес.Ссылка;
							ДокументКП.КонтактноеЛицо			= ДокументБП.КонтактноеЛицо;
							ДокументКП.Статус					= Перечисления.СтатусыКоммерческихПредложенийКлиентам.Отменено;
							ДокументКП.Организация				= ДокументБП.Организация;
							ДокументКП.Менеджер					= ДокументБП.Ответственный;
							ДокументКП.Партнер					= ДокументБП.Партнер;
							Если Не ЗначениеЗаполнено(ДокументКП.Договор) Тогда
								ДокументКП.Договор				= ДокументКП.Партнер.ДоговорПоУмолчанию;
							КонецЕсли;
							
							ВалютаУправленческогоУчетаПоУмолчанию 				= ДокументБП.ВалютаДокумента;
							Если ЗначениеЗаполнено(ДокументКП.Договор) Тогда
								ДокументКП.Валюта = ДокументКП.Договор.ВалютаРасчетов;
							Иначе
								ДокументКП.Валюта = ВалютаУправленческогоУчетаПоУмолчанию;
							КонецЕсли;
							
							СтруктураПоВалюте		= РегистрыСведений.КурсыВалют.ПолучитьПоследнее(ДокументКП.Дата, Новый Структура("Валюта", ДокументКП.Валюта));
							ДокументКП.Курс			= СтруктураПоВалюте.Курс;
							ДокументКП.Кратность	= СтруктураПоВалюте.Кратность;
							
							ДокументКП.ЦенаВключаетНДС			= ДокументБП.СуммаВключаетНДС;
							
							// первая строка комментария - номер, дата и тема события
							СтрокаКомментария = Нстр("ru = '#Конвертация из документа Событие '") + ДокументБП.Номер + Нстр("ru = ' от '") + ДокументБП.Дата + Нстр("ru = ', с темой: '") + ДокументБП.Тема;
							СтрокаКомментария = СтрокаКомментария + Символы.ПС + Символы.ПС;
							// вторая  и третья строка комментария - содержание события и результат
							Если ЗначениеЗаполнено(ДокументБП.Описание) Тогда
								СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Содержание события:'") + Символы.ПС + ДокументБП.Описание;
							Иначе
								СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Содержание события:'") + Символы.ПС + Нстр("ru = '<отсутствует>'");
							КонецЕсли;	
							СтрокаКомментария = СтрокаКомментария + Символы.ПС + Символы.ПС;			
							Если ЗначениеЗаполнено(ДокументБП.Результат) Тогда
								СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Результат:'") + Символы.ПС + ДокументБП.Результат;
							Иначе
								СтрокаКомментария = СтрокаКомментария + Нстр("ru = 'Результат:'") + Символы.ПС + Нстр("ru = '<отсутствует>'");
							КонецЕсли;											
							
							ДокументКП.Комментарий			= СтрокаКомментария;
							
							НоваяСтрокаВариант 				= ДокументКП.CRM_КомментарииВариантов.Добавить();
							НоваяСтрокаВариант.ИДВарианта 	= НомерВариантаКП;
							
							ТаблицаЗапасов 	= ДокументБП.Запасы.Выгрузить();
							ИмяВарианта 	= Нстр("ru = 'Вариант '") + Строка(НомерВариантаКП);
							Для Каждого СтрокаЗапасов Из ТаблицаЗапасов Цикл
								НоваяСтрока 			= ДокументКП.Товары.Добавить(); 
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
								НоваяСтрока.CRM_ИмяВарианта	= ИмяВарианта;
								НоваяСтрока.CRM_ИДВарианта	= НомерВариантаКП;
								НоваяСтрока.CRM_Утвержден	= Истина;							
							КонецЦикла;
							Попытка
								ДокументКП.Записать();						
								ТекущееКП 		= ДокументКП.Ссылка;
								НомерВариантаКП = НомерВариантаКП + 1;
								СписокКП.Добавить(ТекущееКП);
							Исключение
							КонецПопытки;
						Иначе
							ДокументКПОбъект = ТекущееКП.ПолучитьОбъект();
							НоваяСтрокаВариант = ДокументКПОбъект.CRM_КомментарииВариантов.Добавить();
							НоваяСтрокаВариант.ИДВарианта = НомерВариантаКП;
							
							ТаблицаЗапасов = ДокументБП.Запасы.Выгрузить();
							ИмяВарианта = Нстр("ru = 'Вариант '") + Строка(НомерВариантаКП);
							Для Каждого СтрокаЗапасов Из ТаблицаЗапасов Цикл
								НоваяСтрока = ДокументКПОбъект.Запасы.Добавить(); 
								ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
								НоваяСтрока.CRM_ИмяВарианта = ИмяВарианта;
								НоваяСтрока.CRM_ИДВарианта = НомерВариантаКП;
							КонецЦикла;
							Попытка
								ДокументКПОбъект.Записать();						
								НомерВариантаКП = НомерВариантаКП + 1;							
								Если СписокКП.НайтиПоЗначению(ТекущееКП) = Неопределено Тогда
									СписокКП.Добавить(ТекущееКП);
								КонецЕсли;								
							Исключение
							КонецПопытки							
						КонецЕсли;		
					КонецЕсли;						
					
				Иначе
					// просто пропишем связь с интересом
					НаборЗаписей = РегистрыСведений.CRM_ЖурналДокументов.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Объект.Установить(ДокументБП);
					НаборЗаписей.Отбор.ГлавнаяЗапись.Установить(Истина);						
					НаборЗаписей.Прочитать();
					Если НаборЗаписей.Количество() > 0 Тогда
						ЗаписьСИнтересом = НаборЗаписей[0];
						ЗаписьСИнтересом.CRM_Интерес = ДокументИнтерес.Ссылка;
						НаборЗаписей.Записать();
					КонецЕсли;

				КонецЕсли;						
			КонецЦикла;					
		КонецЦикла;
	КонецЕсли;			
		
КонецПроцедуры

&НаСервере
Функция ПолучитьКартыМаршрутовДляАнализа()
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	CRM_КартыМаршрутов.Ссылка КАК Ссылка
	                |ИЗ
	                |	Справочник.CRM_КартыМаршрутов КАК CRM_КартыМаршрутов
	                |ГДЕ
	                |	НЕ CRM_КартыМаршрутов.Предопределенный
	                |	И НЕ CRM_КартыМаршрутов.ЭтоГруппа
	                |	И НЕ CRM_КартыМаршрутов.ПометкаУдаления";
	
	Результат = Запрос.Выполнить();
	КартыМаршрута = Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат КартыМаршрута;
	
КонецФункции	


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	
	CRM_ИспользоватьБизнесПроцессы = Константы.CRM_ИспользоватьБизнесПроцессы.Получить();
	
	Если CRM_ИспользоватьБизнесПроцессы Тогда 
		КартыМаршрута = ПолучитьКартыМаршрутовДляАнализа();	
		Для Каждого ЭлементМассива Из КартыМаршрута Цикл
			СписокКартМаршрута.Добавить(ЭлементМассива.Ссылка, ЭлементМассива.Наименование, Истина);
		КонецЦикла;		
	Иначе
		Элементы.ГруппаКартыМаршрута.Видимость = Ложь;
		Элементы.ДекорацияПредупреждениеПоБП.Видимость = Истина;
	КонецЕсли;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура НеобработанныеСобытияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение(,Элемент.ТекущиеДанные.Ссылка);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД 

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	Для Каждого ЭлементСписка Из СписокКартМаршрута Цикл
		 ЭлементСписка.Пометка = Истина;
	КонецЦикла;		
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	Для Каждого ЭлементСписка Из СписокКартМаршрута Цикл
		 ЭлементСписка.Пометка = Ложь;
	КонецЦикла;		
КонецПроцедуры

&НаКлиенте
Процедура Конвертировать(Команда)
	КонвертироватьНаСервере();
	УстановитьУВзаимодействийСостояниеЗавершено();
	СформироватьЗаписиРегистраСостояниеИнтересовНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредупреждениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьСправкуФормы();
КонецПроцедуры

