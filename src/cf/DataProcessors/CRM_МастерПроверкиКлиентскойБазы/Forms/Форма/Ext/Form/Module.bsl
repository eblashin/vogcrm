
///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ДобавитьПользователейГруппеПользователей(ГруппаПользователей)
	Если Не ЗначениеЗаполнено(ГруппаПользователей) 
		Или (ТипЗнч(ГруппаПользователей) <> Тип("СправочникСсылка.ГруппыПользователей") 
			И ТипЗнч(ГруппаПользователей) <> Тип("СправочникСсылка.СтруктураПредприятия")) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ГруппаПользователей) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		МассивПользователиГруппы = CRM_УправлениеДоступомПовтИсп.ПолучитьПользователейПодразделения(ГруппаПользователей);
	Иначе
		МассивПользователиГруппы = CRM_ОбщегоНазначенияСервер.ПолучитьПользователейГруппы(ГруппаПользователей, Истина);
	КонецЕсли;
	Для Каждого ПользовательСсылка Из МассивПользователиГруппы Цикл
		НайденныеСтроки = ТаблицаИсполнителей.НайтиСтроки(Новый Структура("Пользователь", ПользовательСсылка));
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = ТаблицаИсполнителей.Добавить();
			НоваяСтрока.Пользователь = ПользовательСсылка;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)
	Если	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи")
		Или	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.СтруктураПредприятия")
		Или	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ГруппыПользователей")
		Или	ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		//
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
			МассивПользователейГрупп = ВыбранноеЗначение;
		Иначе
			МассивПользователейГрупп = Новый Массив();
			МассивПользователейГрупп.Добавить(ВыбранноеЗначение);
		КонецЕсли;
		
		Для Каждого ВыбранныйПользовательГруппа Из МассивПользователейГрупп Цикл
			Если ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.Пользователи") Тогда
				НайденныеСтроки = ТаблицаИсполнителей.НайтиСтроки(Новый Структура("Пользователь", ВыбранныйПользовательГруппа));
				Если НайденныеСтроки.Количество() = 0 Тогда
					НоваяСтрока = ТаблицаИсполнителей.Добавить();
					НоваяСтрока.Пользователь = ВыбранныйПользовательГруппа;
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.ГруппыПользователей")
				ИЛИ ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
				ДобавитьПользователейГруппеПользователей(ВыбранныйПользовательГруппа);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанные()
	НастройкиМастера = ПолучитьСохраненныеНастройкиМастера();
	Если ТипЗнч(НастройкиМастера) <> Тип("Структура") Тогда
		НастройкиМастера = Неопределено;
	КонецЕсли;
	
	// Контактная информация справочника Партнеры.
	МассивРодителей = Новый Массив();
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникПартнеры);
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыЧастноеЛицо);
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыКомпания);
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации
	|ГДЕ
	|	Родитель В (&МассивРодителей)
	|	И НЕ ПометкаУдаления
	|	И НЕ ЭтоГруппа
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|");
	Запрос.УстановитьПараметр("МассивРодителей", МассивРодителей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаРеквизитыПартнераКИ.Добавить();
		НоваяСтрока.Реквизит = Выборка.Ссылка;
		НоваяСтрока.Представление = Строка(Выборка.Ссылка);
		
		Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("ТаблицаРеквизитыПартнераКИ") И ТипЗнч(НастройкиМастера.ТаблицаРеквизитыПартнераКИ) = Тип("Массив") Тогда
			Если НастройкиМастера.ТаблицаРеквизитыПартнераКИ.Найти(НоваяСтрока.Реквизит) <> Неопределено Тогда
				НоваяСтрока.Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Контактная информация справочника КонтактныеЛицаПартнеров.
	МассивРодителей = Новый Массив();
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров);
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации
	|ГДЕ
	|	Родитель В (&МассивРодителей)
	|	И НЕ ПометкаУдаления
	|	И НЕ ЭтоГруппа
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|");
	Запрос.УстановитьПараметр("МассивРодителей", МассивРодителей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаРеквизитыКонтактногоЛицаКИ.Добавить();
		НоваяСтрока.Реквизит = Выборка.Ссылка;
		НоваяСтрока.Представление = Строка(Выборка.Ссылка);
		
		Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("ТаблицаРеквизитыКонтактногоЛицаКИ") И ТипЗнч(НастройкиМастера.ТаблицаРеквизитыКонтактногоЛицаКИ) = Тип("Массив") Тогда
			Если НастройкиМастера.ТаблицаРеквизитыКонтактногоЛицаКИ.Найти(НоваяСтрока.Реквизит) <> Неопределено Тогда
				НоваяСтрока.Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		// Дополнительные реквизиты справочника Партнеры.
		МассивРеквизитов = Новый Массив();
		Для Каждого СтрокаТаблицы Из Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Общие.ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
				ДопРеквизитыОбщие.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрокаТаблицы Из Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Компании_CRM.ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
				ДопРеквизитыЮрЛица.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрокаТаблицы Из Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_ЧастныеЛица_CRM.ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
				ДопРеквизитыФизЛица.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого ДопРеквизитСсылка Из МассивРеквизитов Цикл
			НоваяСтрока = ТаблицаРеквизитыПартнераДополнительные.Добавить();
			НоваяСтрока.Реквизит = ДопРеквизитСсылка;
			НоваяСтрока.Представление = Строка(ДопРеквизитСсылка);
			
			Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("ТаблицаРеквизитыПартнераДополнительные") И ТипЗнч(НастройкиМастера.ТаблицаРеквизитыПартнераДополнительные) = Тип("Массив") Тогда
				Если НастройкиМастера.ТаблицаРеквизитыПартнераДополнительные.Найти(НоваяСтрока.Реквизит) <> Неопределено Тогда
					НоваяСтрока.Пометка = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		// Дополнительные реквизиты справочника КонтактныеЛицаПартнеров.
		МассивРеквизитов = Новый Массив();
		Для Каждого СтрокаТаблицы Из Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_КонтактныеЛицаПартнеров.ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого ДопРеквизитСсылка Из МассивРеквизитов Цикл
			НоваяСтрока = ТаблицаРеквизитыКонтактногоЛицаДополнительные.Добавить();
			НоваяСтрока.Реквизит = ДопРеквизитСсылка;
			НоваяСтрока.Представление = Строка(ДопРеквизитСсылка);
			
			Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("ТаблицаРеквизитыКонтактногоЛицаДополнительные") И ТипЗнч(НастройкиМастера.ТаблицаРеквизитыКонтактногоЛицаДополнительные) = Тип("Массив") Тогда
				Если НастройкиМастера.ТаблицаРеквизитыКонтактногоЛицаДополнительные.Найти(НоваяСтрока.Реквизит) <> Неопределено Тогда
					НоваяСтрока.Пометка = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	// Реквизиты справочников
	МассивИсключений = Новый Массив();
	МассивИсключений.Добавить("ЮрФизЛицо");
	МассивИсключений.Добавить("ДатаРегистрации");
	МассивИсключений.Добавить("Комментарий");
	МассивИсключений.Добавить("CRM_УчаствуетВАнкетировании");
	МассивИсключений.Добавить("сфпПользовательДляПереключенияЗвонков");
	Для Каждого РеквизитМд Из Метаданные.Справочники.Партнеры.Реквизиты Цикл
		Если МассивИсключений.Найти(РеквизитМд.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаРеквизитыПартнераДополнительные.Добавить();
		НоваяСтрока.Реквизит = РеквизитМд.Имя;
		НоваяСтрока.Представление = РеквизитМд.Представление();
		Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("ТаблицаРеквизитыПартнераДополнительные") И ТипЗнч(НастройкиМастера.ТаблицаРеквизитыПартнераДополнительные) = Тип("Массив") Тогда
			Если НастройкиМастера.ТаблицаРеквизитыПартнераДополнительные.Найти(НоваяСтрока.Реквизит) <> Неопределено Тогда
				НоваяСтрока.Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	МассивИсключений = Новый Массив();
	МассивИсключений.Добавить("ДатаРегистрацииСвязи");
	МассивИсключений.Добавить("сфпПользовательДляПереключенияЗвонков");
	МассивИсключений.Добавить("CRM_УчаствуетВАнкетировании");
	МассивИсключений.Добавить("CRM_НапоминатьОДнеРождения");
	Для Каждого РеквизитМд Из Метаданные.Справочники.КонтактныеЛицаПартнеров.Реквизиты Цикл
		Если МассивИсключений.Найти(РеквизитМд.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаРеквизитыКонтактногоЛицаДополнительные.Добавить();
		НоваяСтрока.Реквизит = РеквизитМд.Имя;
		НоваяСтрока.Представление = РеквизитМд.Представление();
		Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("ТаблицаРеквизитыКонтактногоЛицаДополнительные") И ТипЗнч(НастройкиМастера.ТаблицаРеквизитыКонтактногоЛицаДополнительные) = Тип("Массив") Тогда
			Если НастройкиМастера.ТаблицаРеквизитыКонтактногоЛицаДополнительные.Найти(НоваяСтрока.Реквизит) <> Неопределено Тогда
				НоваяСтрока.Пометка = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		// Реквизиты дополнительной информации справочника Партнеры.
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДополнительнаяИнформация.Ссылка КАК Ссылка,
		|	ДополнительнаяИнформация.Наименование КАК Наименование
		|ИЗ
		|	ПланВидовХарактеристик.CRM_ДополнительнаяИнформация КАК ДополнительнаяИнформация
		|ГДЕ
		|	НЕ ДополнительнаяИнформация.ПометкаУдаления
		|УПОРЯДОЧИТЬ ПО
		|	ДополнительнаяИнформация.Наименование
		|");
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ТаблицаРеквизитыПартнераДополнительные.Добавить();
			НоваяСтрока.Реквизит = Выборка.Ссылка;
			НоваяСтрока.Представление = Выборка.Наименование;
			Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("ТаблицаРеквизитыПартнераДополнительные") И ТипЗнч(НастройкиМастера.ТаблицаРеквизитыПартнераДополнительные) = Тип("Массив") Тогда
				Если НастройкиМастера.ТаблицаРеквизитыПартнераДополнительные.Найти(НоваяСтрока.Реквизит) <> Неопределено Тогда
					НоваяСтрока.Пометка = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Таблица РеквизитыПоискаДублейПартнеров
	РеквизитыПоискаДублейПартнеров.Добавить("Наименование;ПОДОБНО","Наименование");
	РеквизитыПоискаДублейПартнеров.Добавить("НаименованиеПолное;ПОДОБНО","Наименование полное");
	Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		РеквизитыПоискаДублейПартнеров.Добавить("CRM_ИНН;=","ИНН");
	КонецЕсли;	
	РеквизитыПоискаДублейПартнеров.Добавить("Контакт_Адрес;ПОДОБНО","Адрес");
	РеквизитыПоискаДублейПартнеров.Добавить("Контакт_АдресЭлектроннойПочты;=","Email");
	РеквизитыПоискаДублейПартнеров.Добавить("Контакт_Телефон;=","Телефон");
	
	Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("РеквизитыПоискаДублейПартнеров") И ТипЗнч(НастройкиМастера.РеквизитыПоискаДублейПартнеров) = Тип("Массив") Тогда
		Для Каждого ЭлементСписка Из РеквизитыПоискаДублейПартнеров Цикл
			Если НастройкиМастера.РеквизитыПоискаДублейПартнеров.Найти(ЭлементСписка.Значение) <> Неопределено Тогда
				ЭлементСписка.Пометка = Истина;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ЗначениеХранилища = Константы.CRM_РеквизитыПоискаДублейПартнеров.Получить();
		РеквизитыПоиска = ЗначениеХранилища.Получить();
		Если ТипЗнч(РеквизитыПоиска) = Тип("СписокЗначений") Тогда
			Для Каждого ЭлементСписка Из РеквизитыПоиска Цикл
				НайденныйЭлемент = РеквизитыПоискаДублейПартнеров.НайтиПоЗначению(ЭлементСписка.Значение);
				Если НайденныйЭлемент <> Неопределено Тогда
					НайденныйЭлемент.Пометка = ЭлементСписка.Пометка;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	ВедетсяИсторияРеквизитовКлиентов = ПолучитьФункциональнуюОпцию("CRM_ВестиИсториюРеквизитовКлиентов");
	ВедетсяИсторияПотенциалаКлиента = Ложь;
	ВедетсяИсторияРеквизитовВлияющихНаПотенциалКлиента = Ложь;
	РеквизитыРасчетаПотенциалаКлиента = Неопределено;
	Если ВедетсяИсторияРеквизитовКлиентов Тогда
		ВерсионируемыеРеквизиты = РегистрыСведений.CRM_НастройкаВерсионированияРеквизитовПартнеров.ПолучитьСписокВерсионируемыхРеквизитов();
		Если ВерсионируемыеРеквизиты.НайтиПоЗначению("CRM_Потенциал") <> Неопределено Тогда
			ВедетсяИсторияПотенциалаКлиента = Истина;
		КонецЕсли;
		Если ВедетсяИсторияПотенциалаКлиента Тогда
			РеквизитыРасчетаПотенциалаКлиента = CRM_КлиентыСервер.ПолучитьРеквизитыРасчетаПотенциалаКлиента();
			Для Каждого ВерсионируемыйРеквизит Из ВерсионируемыеРеквизиты Цикл
				Если РеквизитыРасчетаПотенциалаКлиента.Реквизиты.Найти(ВерсионируемыйРеквизит.Значение) <> Неопределено Тогда
					ВедетсяИсторияРеквизитовВлияющихНаПотенциалКлиента = Истина;
					Прервать;
				КонецЕсли;
				Если РеквизитыРасчетаПотенциалаКлиента.ДополнительныеРеквизиты.Найти(ВерсионируемыйРеквизит.Значение) <> Неопределено Тогда
					ВедетсяИсторияРеквизитовВлияющихНаПотенциалКлиента = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если РеквизитыРасчетаПотенциалаКлиента = Неопределено Тогда
		РеквизитыРасчетаПотенциалаКлиента = CRM_КлиентыСервер.ПолучитьРеквизитыРасчетаПотенциалаКлиента();
	КонецЕсли;
	СтрСоставРеквизитов = "";
	МдПартнеры = Метаданные.Справочники.Партнеры;
	нСчетчикПереноса = 0;
	Для Каждого ИмяРеквизита Из РеквизитыРасчетаПотенциалаКлиента.Реквизиты Цикл
		НайденныйРеквизит = МдПартнеры.Реквизиты.Найти(ИмяРеквизита);
		Если НайденныйРеквизит <> Неопределено Тогда
			ПредставлениеРеквизита = НайденныйРеквизит.Представление();
			Если Не ЗначениеЗаполнено(ПредставлениеРеквизита) Тогда
				ПредставлениеРеквизита = ИмяРеквизита;
			КонецЕсли;
			СтрСоставРеквизитов = СтрСоставРеквизитов + ?(ЗначениеЗаполнено(СтрСоставРеквизитов), ", ", "");
			Если нСчетчикПереноса % 5 = 0 Тогда
				СтрСоставРеквизитов = СтрСоставРеквизитов + ?(ЗначениеЗаполнено(СтрСоставРеквизитов), Символы.ПС, "");
			КонецЕсли;
			СтрСоставРеквизитов = СтрСоставРеквизитов + """" + ПредставлениеРеквизита + """";
			нСчетчикПереноса = нСчетчикПереноса + 1;
		КонецЕсли;
	КонецЦикла;
	Для Каждого ДопРеквизитСсылка Из РеквизитыРасчетаПотенциалаКлиента.ДополнительныеРеквизиты Цикл
		Если ЗначениеЗаполнено(ДопРеквизитСсылка) Тогда
			СтрСоставРеквизитов = СтрСоставРеквизитов + ?(ЗначениеЗаполнено(СтрСоставРеквизитов), ", ", "");
			Если нСчетчикПереноса % 5 = 0 Тогда
				СтрСоставРеквизитов = СтрСоставРеквизитов + ?(ЗначениеЗаполнено(СтрСоставРеквизитов), Символы.ПС, "");
			КонецЕсли;
			СтрСоставРеквизитов = СтрСоставРеквизитов + """" + ДопРеквизитСсылка.Заголовок + """";
			нСчетчикПереноса = нСчетчикПереноса + 1;
		КонецЕсли;
	КонецЦикла;
	СтрСоставРеквизитов = СтрСоставРеквизитов + ?(ЗначениеЗаполнено(СтрСоставРеквизитов), ".", "");
	Элементы.ДекорацияКонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциалСоставРеквизитов.Заголовок = СтрСоставРеквизитов;
	// Проект
	Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("Проект") И ТипЗнч(НастройкиМастера.Проект) = Тип("СправочникСсылка.Проекты") Тогда
		Проект = НастройкиМастера.Проект;
	КонецЕсли;
	// КонтрольПотенциалаФлагБезЗаполненногоПотенциала
	Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("КонтрольПотенциалаФлагБезЗаполненногоПотенциала") И ТипЗнч(НастройкиМастера.КонтрольПотенциалаФлагБезЗаполненногоПотенциала) = Тип("Булево") Тогда
		КонтрольПотенциалаФлагБезЗаполненногоПотенциала = НастройкиМастера.КонтрольПотенциалаФлагБезЗаполненногоПотенциала;
	Иначе
		КонтрольПотенциалаФлагБезЗаполненногоПотенциала = Истина;
	КонецЕсли;
	// КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал
	Если ВедетсяИсторияРеквизитовВлияющихНаПотенциалКлиента Тогда
		Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал") И ТипЗнч(НастройкиМастера.КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал) = Тип("Булево") Тогда
			КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал = НастройкиМастера.КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал;
		Иначе
			КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал = Истина;
		КонецЕсли;
	Иначе
		КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал = Ложь;
	КонецЕсли;
	// КонтрольРегистрацииКлиентовФлагСобытия
	Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("КонтрольРегистрацииКлиентовФлагСобытия") И ТипЗнч(НастройкиМастера.КонтрольРегистрацииКлиентовФлагСобытия) = Тип("Булево") Тогда
		КонтрольРегистрацииКлиентовФлагСобытия = НастройкиМастера.КонтрольРегистрацииКлиентовФлагСобытия;
	Иначе
		КонтрольРегистрацииКлиентовФлагСобытия = Истина;
	КонецЕсли;
	// КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма
	Если ТипЗнч(НастройкиМастера) = Тип("Структура") И НастройкиМастера.Свойство("КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма") И ТипЗнч(НастройкиМастера.КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма) = Тип("Булево") Тогда
		КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма = НастройкиМастера.КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма;
	Иначе
		КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма = Истина;
	КонецЕсли;
	
	ИспользоватьГруппыПользователей = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыПользователей");
	
	ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации;
	
	Проверяющий = Пользователи.ТекущийПользователь();
	
	ПользовательСеанса = Пользователи.ТекущийПользователь();
	
	УстановитьЗаголовокОтборДляКИ();
	УстановитьЗаголовокОтборДляДопРеквизитов();
	УстановитьЗаголовокОтборДляДублирующихсяРеквизитов();
КонецПроцедуры

&НаСервере
Функция ПолучитьФормулуРасчетаПотенциала()
	Возврат СокрЛП(Подразделение.CRM_ФормулаРасчетаПотенциала);
КонецФункции	

&НаСервере
Функция ПолучитьПериодРасчетаПотенциала()
	Возврат Подразделение.CRM_ПериодРасчетаПотенциала;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ВидимостьИДоступностьЭлементовФормы(Форма)
	Если Форма.ВидРаспределенияПоИсполнителям = 0 Тогда
		Форма.Элементы.ТаблицаИсполнителей.Видимость = Ложь;
		Форма.Элементы.ПользовательОтветственныйПоУмолчанию.Видимость = Истина;
	ИначеЕсли Форма.ВидРаспределенияПоИсполнителям = 1 Тогда
		Форма.Элементы.ТаблицаИсполнителей.Видимость = Истина;
		Форма.Элементы.ПользовательОтветственныйПоУмолчанию.Видимость = Ложь;
	КонецЕсли;
	
	Если Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации") Тогда
		Форма.Элементы.ПанельШаги.ТекущаяСтраница = Форма.Элементы.СтраницаШагиМастераЗаполненияКИ;
		
	ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов") Тогда
		Форма.Элементы.ПанельШаги.ТекущаяСтраница = Форма.Элементы.СтраницаШагиМастераЗаполненияСвойствКлиентов;
		
	ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов") Тогда
		Форма.Элементы.ПанельШаги.ТекущаяСтраница = Форма.Элементы.СтраницаШагиМастераПоискаЗадвоенныхКлиентов;
		
	ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов") Тогда
		Форма.Элементы.ПанельШаги.ТекущаяСтраница = Форма.Элементы.СтраницаШагиМастераКонтроляПотенциалаКлиентов;
		
	ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов") Тогда
		Форма.Элементы.ПанельШаги.ТекущаяСтраница = Форма.Элементы.СтраницаШагиМастераКонтрольРегистрацииКлиентов;
		
	КонецЕсли;
	
	Форма.Элементы.КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал.Доступность = Форма.ВедетсяИсторияРеквизитовВлияющихНаПотенциалКлиента;
	//Форма.Элементы.ДекорацияОтступКонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал.Видимость = Не Форма.ВедетсяИсторияРеквизитовВлияющихНаПотенциалКлиента;
	//Форма.Элементы.ДекорацияКонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал.Видимость = Не Форма.ВедетсяИсторияРеквизитовВлияющихНаПотенциалКлиента;
	//Форма.Элементы.ДекорацияКонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциалСоставРеквизитов.Видимость = Не Форма.ВедетсяИсторияРеквизитовВлияющихНаПотенциалКлиента;
	Форма.Элементы.ДекорацияОтборКонтрольРегистрацииКлиентов.Доступность = (Форма.КонтрольРегистрацииКлиентовФлагСобытия Или Форма.КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокОтбор(АдресОтбор, ЭлементыДекорация)
	Если ЭтоАдресВременногоХранилища(АдресОтбор) Тогда
		ТекОтбор = ПолучитьИзВременногоХранилища(АдресОтбор);
		Если ТипЗнч(ТекОтбор) = Тип("ОтборКомпоновкиДанных") И ТекОтбор.Элементы.Количество() > 0 Тогда
			ЭлементыДекорация.Заголовок = НСтр("ru = 'Отбор:'") + " " + Строка(ТекОтбор);
		Иначе
			ЭлементыДекорация.Заголовок = НСтр("ru = 'Настройка отбора...'");
		КонецЕсли;
	Иначе
		ЭлементыДекорация.Заголовок = НСтр("ru = 'Настройка отбора...'");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокОтборДляКИ()
	УстановитьЗаголовокОтбор(АдресОтборДляКИ, Элементы.ДекорацияОтборДляКИ);
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокОтборДляДублирующихсяРеквизитов()
	УстановитьЗаголовокОтбор(АдресОтборДляДублирующихсяРеквизитов, Элементы.ДекорацияОтборДляДублирующихсяРеквизитов);
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокОтборДляКонтрольРегистрацииКлиентов()
	УстановитьЗаголовокОтбор(АдресОтборДляКонтрольРегистрацииКлиентов, Элементы.ДекорацияОтборКонтрольРегистрацииКлиентов);
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокОтборДляДопРеквизитов()
	УстановитьЗаголовокОтбор(АдресОтборДляДопРеквизитов, Элементы.ДекорацияОтборДляДопРеквизитов);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьВыбранныеВидыКИ(Форма)
	СтруктураКИ = Новый Структура("Партнер,КонтактноеЛицо", Новый Массив(), Новый Массив());
	
	Для Каждого СтрокаТаблицы Из Форма.ТаблицаРеквизитыПартнераКИ Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураКИ.Партнер.Добавить(СтрокаТаблицы.Реквизит);
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТаблицы Из Форма.ТаблицаРеквизитыКонтактногоЛицаКИ Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураКИ.КонтактноеЛицо.Добавить(СтрокаТаблицы.Реквизит);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураКИ;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьВыбранныеДопРеквизиты(Форма)
	СтруктураДопРеквизиты = Новый Структура("Партнер,КонтактноеЛицо", Новый Массив(), Новый Массив());
	
	Для Каждого СтрокаТаблицы Из Форма.ТаблицаРеквизитыПартнераДополнительные Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураДопРеквизиты.Партнер.Добавить(СтрокаТаблицы.Реквизит);
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТаблицы Из Форма.ТаблицаРеквизитыКонтактногоЛицаДополнительные Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураДопРеквизиты.КонтактноеЛицо.Добавить(СтрокаТаблицы.Реквизит);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураДопРеквизиты;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьВыбранныеРеквизитыПоискаДублей(Форма)
	СтруктураРеквизиты = Новый Структура("Партнер,КонтактноеЛицо", Новый Массив(), Новый Массив());
	
	Для Каждого ЭлементСписка Из Форма.РеквизитыПоискаДублейПартнеров Цикл
		Если ЭлементСписка.Пометка Тогда
			СтруктураРеквизиты.Партнер.Добавить(ЭлементСписка.Значение);
			СтруктураРеквизиты.КонтактноеЛицо.Добавить(ЭлементСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураРеквизиты;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьТекстЗапросаДляОтборов(ВидКонтроля, ДополнительныеПараметры = Неопределено)
	Если ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов") Тогда
		ТекстЗапроса = "";
		бДобавленоРазрешенные = Ложь;
		
		Если ДополнительныеПараметры.КонтрольРегистрацииКлиентовФлагСобытия Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ" + ?(бДобавленоРазрешенные, "", " РАЗРЕШЕННЫЕ") + "
			|	ТелефонныеЗвонки.Ссылка КАК Документ,
			|	ТелефонныеЗвонки.Тема КАК Тема,
			|	"""" КАК АдресОтправителя" + ?(бДобавленоРазрешенные, "", "
			|ПОМЕСТИТЬ ВТДокументы") + "
			|ИЗ
			|	Документ.ТелефонныйЗвонок КАК ТелефонныеЗвонки
			|ГДЕ
			|	НЕ ТелефонныеЗвонки.ПометкаУдаления
			|	И ТИПЗНАЧЕНИЯ(ТелефонныеЗвонки.АбонентКонтакт) ЕСТЬ NULL
			|	
			|";
			бДобавленоРазрешенные = Истина;
		КонецЕсли;
		
		Если ДополнительныеПараметры.КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма Тогда
			ТекстЗапроса = ТекстЗапроса + ?(Не ЗначениеЗаполнено(ТекстЗапроса), "", "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|");
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ" + ?(бДобавленоРазрешенные, "", " РАЗРЕШЕННЫЕ") + "
			|	ЭлектронноеПисьмоВходящее.Ссылка КАК Документ,
			|	ЭлектронноеПисьмоВходящее.Тема КАК Тема,
			|	ЭлектронноеПисьмоВходящее.ОтправительАдрес КАК АдресОтправителя" + ?(бДобавленоРазрешенные, "", "
			|ПОМЕСТИТЬ ВТДокументы") + "
			|ИЗ
			|	Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее
			|ГДЕ
			|	НЕ ЭлектронноеПисьмоВходящее.ПометкаУдаления
			|	И (ЭлектронноеПисьмоВходящее.ОтправительКонтакт = НЕОПРЕДЕЛЕНО ИЛИ ТИПЗНАЧЕНИЯ(ЭлектронноеПисьмоВходящее.ОтправительКонтакт) = ТИП(Строка))
			|	
			|";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДокументы.Документ КАК Документ,
		|	ВТДокументы.Тема КАК Тема,
		|	ВТДокументы.АдресОтправителя КАК АдресОтправителя
		|ИЗ
		|	ВТДокументы КАК ВТДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
		|		ПО ВТДокументы.Документ = CRM_ЖурналДокументов.Объект
		|			И (CRM_ЖурналДокументов.CRM_Интерес = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПУСТАЯССЫЛКА))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТДокументы";
		
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов") Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Партнеры.Ссылка КАК Клиент,
		|	ABCКлассификацияКлиентов.Класс КАК ABCКласс,
		|	XYZКлассификацияКлиентов.Класс КАК XYZКласс,
		|	ПартнерыСегмента.Сегмент КАК Сегмент
		|ИЗ
		|	Справочник.Партнеры КАК Партнеры
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ABCXYZКлассификацияКлиентов.СрезПоследних() КАК ABCКлассификацияКлиентов
		|ПО
		|	ABCКлассификацияКлиентов.Партнер = Партнеры.Ссылка
		|	И ABCКлассификацияКлиентов.ТипКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыКлассификации.ABC)
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ABCXYZКлассификацияКлиентов.СрезПоследних() КАК XYZКлассификацияКлиентов
		|ПО
		|	ABCКлассификацияКлиентов.Партнер = Партнеры.Ссылка
		|	И ABCКлассификацияКлиентов.ТипКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыКлассификации.XYZ)
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
		|ПО
		|	ПартнерыСегмента.Партнер = Партнеры.Ссылка
		|	
		|ГДЕ";
		Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	НЕ Партнеры.ЭтоГруппа И";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|	НЕ Партнеры.ПометкаУдаления
		|";
		
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Партнеры.Ссылка КАК Клиент,
		|	КонтактныеЛицаПартнеров.Ссылка КАК КонтактноеЛицо,
		|	ABCКлассификацияКлиентов.Класс КАК ABCКласс,
		|	XYZКлассификацияКлиентов.Класс КАК XYZКласс,
		|	ПартнерыСегмента.Сегмент КАК Сегмент
		|ИЗ
		|	Справочник.Партнеры КАК Партнеры
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
		|ПО
		|	Партнеры.Ссылка = КонтактныеЛицаПартнеров.Владелец
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ABCXYZКлассификацияКлиентов.СрезПоследних() КАК ABCКлассификацияКлиентов
		|ПО
		|	ABCКлассификацияКлиентов.Партнер = Партнеры.Ссылка
		|	И ABCКлассификацияКлиентов.ТипКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыКлассификации.ABC)
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ABCXYZКлассификацияКлиентов.СрезПоследних() КАК XYZКлассификацияКлиентов
		|ПО
		|	ABCКлассификацияКлиентов.Партнер = Партнеры.Ссылка
		|	И ABCКлассификацияКлиентов.ТипКлассификации = ЗНАЧЕНИЕ(Перечисление.ТипыКлассификации.XYZ)
		|	
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
		|ПО
		|	ПартнерыСегмента.Партнер = Партнеры.Ссылка
		|	
		|ГДЕ";
		Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	НЕ Партнеры.ЭтоГруппа И";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|	НЕ Партнеры.ПометкаУдаления
		|	И (КонтактныеЛицаПартнеров.Ссылка ЕСТЬ NULL ИЛИ НЕ КонтактныеЛицаПартнеров.ПометкаУдаления)
		|";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьВыбранныхИсполнителей(Форма)
	МассивИсполнителей = Новый Массив();
	Для Каждого СтрокаТаблицы Из Форма.ТаблицаИсполнителей Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.Пользователь) Тогда
			МассивИсполнителей.Добавить(СтрокаТаблицы.Пользователь);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивИсполнителей;
КонецФункции

&НаСервере
Функция ПроверитьПравоПользователейНаРедактированиеПотенциалаКлиента(МассивИсполнителей)
	МассивПользователейНеРазрешеноРедактированиеПотенциала = Новый Массив();
	
	Для Каждого ПользовательСсылка Из МассивИсполнителей Цикл
		Если Не CRM_КлиентыСервер.РазрешеноРедактированиеПотенциалаКлиента(ПользовательСсылка) Тогда
			Если МассивПользователейНеРазрешеноРедактированиеПотенциала.Найти(ПользовательСсылка) = Неопределено Тогда
				МассивПользователейНеРазрешеноРедактированиеПотенциала.Добавить(ПользовательСсылка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивПользователейНеРазрешеноРедактированиеПотенциала;
	
КонецФункции

&НаСервере
Функция ПолучитьВыбранныхИсполнителейПоОтветственнымМенеджерамКлиентов()
	МассивИсполнителей = Новый Массив();
	
	Если ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоПартнеровКИ");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоПартнеровДопРеквизиты");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоДублирующихсяПартнеров");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоПартнерыКонтрольПотенциала");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоСобытияКонтрольРегистрацииКлиентов");
	Иначе
		
	КонецЕсли;
	
	НайденныеСтроки = ДеревоПартнеры.Строки.НайтиСтроки(Новый Структура("Пометка, ТипСтроки", Истина, 1));
	МассивПартнеры = Новый Массив();
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		Если ЗначениеЗаполнено(НайденнаяСтрока.Партнер) И ТипЗнч(НайденнаяСтрока.Партнер) = Тип("СправочникСсылка.Партнеры") И МассивПартнеры.Найти(НайденнаяСтрока.Партнер) = Неопределено Тогда
			МассивПартнеры.Добавить(НайденнаяСтрока.Партнер);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	Партнеры.ОсновнойМенеджер КАК ОсновнойМенеджер
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	Партнеры.Ссылка В (&МассивПартнеры)
	|");
	Запрос.УстановитьПараметр("МассивПартнеры", МассивПартнеры);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.ОсновнойМенеджер) Тогда
			Если МассивИсполнителей.Найти(Выборка.ОсновнойМенеджер) = Неопределено Тогда
				МассивИсполнителей.Добавить(Выборка.ОсновнойМенеджер);
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(ПользовательОтветственныйПоУмолчанию) Тогда
				Если МассивИсполнителей.Найти(ПользовательОтветственныйПоУмолчанию) = Неопределено Тогда
					МассивИсполнителей.Добавить(ПользовательОтветственныйПоУмолчанию);
				КонецЕсли;
			Иначе
				// Клиенту не назначен ответственный менеджер и не заполнен реквизит ПользовательОтветственныйПоУмолчанию.
				Возврат Новый Массив();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивИсполнителей;
	
КонецФункции

&НаСервере
Процедура СформироватьДеревоПартнеровКИ()
	Дерево = РеквизитФормыВЗначение("ДеревоПартнеровКИ");
	Дерево.Строки.Очистить();
	
	Если ЭтоАдресВременногоХранилища(АдресОтборДляКИ) Тогда
		ТекОтбор = ПолучитьИзВременногоХранилища(АдресОтборДляКИ);
	Иначе
		ТекОтбор = Неопределено;
	КонецЕсли;
	Если ТипЗнч(ТекОтбор) <> Тип("ОтборКомпоновкиДанных") Тогда
		ТекОтбор = Неопределено;
	КонецЕсли;
	
	ТаблицаПартнерыПоОтбору = CRM_ОбщегоНазначенияСервер.ВыполнитьЗапросВКомпоновкеДанных(ПолучитьТекстЗапросаДляОтборов(ВидКонтроля), ТекОтбор);
	
	ВыбранныеВидыКИ = ПолучитьВыбранныеВидыКИ(ЭтотОбъект);
	
	ТекстЗапроса = "";
	Запрос = Новый Запрос();
	
	СчетчикПараметраВид = 1;
	ДобавленоРазрешенные = Ложь;
	Если ВыбранныеВидыКИ.Партнер.Количество() > 0 Тогда
		Для Каждого ВидКИ Из ВыбранныеВидыКИ.Партнер Цикл
			ИмяПараметраВид = "ВидКИ" + Формат(СчетчикПараметраВид, "ЧН=0; ЧГ=");
			
			ТекстЗапроса = ТекстЗапроса + ?(ПустаяСтрока(ТекстЗапроса), "", "
			|	
			|ОБЪЕДИНИТЬ ВСЕ
			|	
			|");
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ " + ?(ДобавленоРазрешенные, "", "РАЗРЕШЕННЫЕ") + "
			|	
			|	Партнеры.Ссылка КАК Партнер,
			|	&" + ИмяПараметраВид + " КАК ВидКИПартнера,
			|	ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка) КАК КонтактноеЛицо,
			|	ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка) КАК ВидКИКонтактногоЛица
			|	
			|ИЗ
			|	
			|	Справочник.Партнеры КАК Партнеры
			|	
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Справочник.Партнеры.КонтактнаяИнформация КАК ПартнерыКонтактнаяИнформация
			|	
			|ПО
			|	Партнеры.Ссылка = ПартнерыКонтактнаяИнформация.Ссылка
			|	И ПартнерыКонтактнаяИнформация.Вид = &" + ИмяПараметраВид + "
			|	
			|ГДЕ";
			Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
			ТекстЗапроса = ТекстЗапроса + "
			|	НЕ Партнеры.ЭтоГруппа И";
			КонецЕсли;
			ТекстЗапроса = ТекстЗапроса + "
			|	Партнеры.Ссылка В (&Партнеры)
			|	И НЕ Партнеры.ПометкаУдаления
			|	И (ПартнерыКонтактнаяИнформация.Представление = """" ИЛИ ПартнерыКонтактнаяИнформация.Представление ЕСТЬ NULL)
			|	
			|";
			
			Запрос.УстановитьПараметр(ИмяПараметраВид, ВидКИ);
			СчетчикПараметраВид = СчетчикПараметраВид + 1;
			ДобавленоРазрешенные = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Если ВыбранныеВидыКИ.КонтактноеЛицо.Количество() > 0 Тогда 
		Для Каждого ВидКИ Из ВыбранныеВидыКИ.КонтактноеЛицо Цикл
			ИмяПараметраВид = "ВидКИ" + Формат(СчетчикПараметраВид, "ЧН=0; ЧГ=");
			
			ТекстЗапроса = ТекстЗапроса + ?(ПустаяСтрока(ТекстЗапроса), "", "
			|	
			|ОБЪЕДИНИТЬ ВСЕ
			|	
			|");
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ " + ?(ДобавленоРазрешенные, "", "РАЗРЕШЕННЫЕ") + "
			|	
//			|	КонтактныеЛицаПартнеров.Владелец КАК Партнер,
			|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)КАК Партнер, 
			|	ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка) КАК ВидКИПартнера,
			|	КонтактныеЛицаПартнеров.Ссылка КАК КонтактноеЛицо,
			|	&" + ИмяПараметраВид + " КАК ВидКИКонтактногоЛица
			|	
			|ИЗ
			|	
			|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
			|	
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
			|	
			|ПО
			|	КонтактныеЛицаПартнеров.Ссылка = КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка
			|	И КонтактныеЛицаПартнеровКонтактнаяИнформация.Вид = &" + ИмяПараметраВид + "
			|	
			|ГДЕ
			|	КонтактныеЛицаПартнеров.Владелец В (&Партнеры)
			|	И КонтактныеЛицаПартнеров.Ссылка В (&КонтактныеЛица)
			|	И НЕ КонтактныеЛицаПартнеров.ПометкаУдаления
			|	И (КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление = """" ИЛИ КонтактныеЛицаПартнеровКонтактнаяИнформация.Представление ЕСТЬ NULL)
			|	
			|";
			
			Запрос.УстановитьПараметр(ИмяПараметраВид, ВидКИ);
			СчетчикПараметраВид = СчетчикПараметраВид + 1;
			ДобавленоРазрешенные = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Партнеры", ТаблицаПартнерыПоОтбору.ВыгрузитьКолонку("Клиент"));
	Запрос.УстановитьПараметр("КонтактныеЛица", ТаблицаПартнерыПоОтбору.ВыгрузитьКолонку("КонтактноеЛицо"));
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Таблица.Свернуть("Партнер,ВидКИПартнера,КонтактноеЛицо,ВидКИКонтактногоЛица");
	
	Запрос = Новый Запрос();
	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПартнеры.*
	|ПОМЕСТИТЬ
	|	Таблица
	|ИЗ
	|	&ТаблицаПартнеры КАК ТаблицаПартнеры
	|;
	|///////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|	Таблица.Партнер КАК Партнер,
	|	Таблица.КонтактноеЛицо КАК КонтактноеЛицо,
	|	Таблица.ВидКИПартнера КАК ВидКИПартнера,
	|	Таблица.ВидКИКонтактногоЛица КАК ВидКИКонтактногоЛица
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Партнер.Наименование,
	|	КонтактноеЛицо.Наименование,
	|	ВидКИПартнера.РеквизитДопУпорядочивания,
	|	ВидКИКонтактногоЛица.РеквизитДопУпорядочивания
	|	
	|ИТОГИ ПО
	|	Партнер,КонтактноеЛицо,ВидКИПартнера,ВидКИКонтактногоЛица
	|";
	Запрос.УстановитьПараметр("ТаблицаПартнеры", Таблица);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПартнеры = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПартнеры.Следующий() Цикл
		Если Не ЗначениеЗаполнено(ВыборкаПартнеры.Партнер) Тогда Продолжить; КонецЕсли;
		
		СоответствиеСтроки = Новый Соответствие();
		НоваяСтрока = Дерево.Строки.Добавить();
		НоваяСтрока.Партнер = ВыборкаПартнеры.Партнер;
		НоваяСтрока.ТипСтроки = 1;
		НоваяСтрока.Пометка = Истина;
		СоответствиеСтроки.Вставить(НоваяСтрока.Партнер, НоваяСтрока);
		
		ВыборкаКонтактноеЛицо = ВыборкаПартнеры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКонтактноеЛицо.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаКонтактноеЛицо.КонтактноеЛицо) Тогда
				НоваяСтрока = СоответствиеСтроки[ВыборкаКонтактноеЛицо.Партнер].Строки.Добавить();
				НоваяСтрока.Партнер = ВыборкаКонтактноеЛицо.КонтактноеЛицо;
				НоваяСтрока.ТипСтроки = 2;
				СоответствиеСтроки.Вставить(НоваяСтрока.Партнер, НоваяСтрока);
			КонецЕсли;
			
			ВыборкаВидКИПартнера = ВыборкаКонтактноеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаВидКИПартнера.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаВидКИПартнера.ВидКИПартнера) Тогда
					НоваяСтрока = СоответствиеСтроки[ВыборкаКонтактноеЛицо.Партнер].Строки.Добавить();
					НоваяСтрока.Партнер = ВыборкаВидКИПартнера.ВидКИПартнера;
					НоваяСтрока.ТипСтроки = 3;
				КонецЕсли;
				
				ВыборкаВидКИКонтактногоЛица = ВыборкаВидКИПартнера.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаВидКИКонтактногоЛица.Следующий() Цикл
					Если ЗначениеЗаполнено(ВыборкаВидКИКонтактногоЛица.ВидКИКонтактногоЛица) Тогда
						НоваяСтрока = СоответствиеСтроки[ВыборкаКонтактноеЛицо.КонтактноеЛицо].Строки.Добавить();
						НоваяСтрока.Партнер = ВыборкаВидКИКонтактногоЛица.ВидКИКонтактногоЛица;
						НоваяСтрока.ТипСтроки = 3;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоПартнеровКИ");
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоПартнеровДопРеквизиты()
	Дерево = РеквизитФормыВЗначение("ДеревоПартнеровДопРеквизиты");
	Дерево.Строки.Очистить();
	
	Если ЭтоАдресВременногоХранилища(АдресОтборДляДопРеквизитов) Тогда
		ТекОтбор = ПолучитьИзВременногоХранилища(АдресОтборДляДопРеквизитов);
	Иначе
		ТекОтбор = Неопределено;
	КонецЕсли;
	Если ТипЗнч(ТекОтбор) <> Тип("ОтборКомпоновкиДанных") Тогда
		ТекОтбор = Неопределено;
	КонецЕсли;
	
	ТаблицаПартнерыПоОтбору = CRM_ОбщегоНазначенияСервер.ВыполнитьЗапросВКомпоновкеДанных(ПолучитьТекстЗапросаДляОтборов(ВидКонтроля), ТекОтбор);
	
	ВыбранныеДопРеквизиты = ПолучитьВыбранныеДопРеквизиты(ЭтотОбъект);
	
	ТекстЗапроса = "";
	Запрос = Новый Запрос();
	
	СчетчикПараметраДопРеквизит = 1;
	ДобавленоРазрешенные = Ложь;
	Если ВыбранныеДопРеквизиты.Партнер.Количество() > 0 Тогда
		Для Каждого ДопРеквизит Из ВыбранныеДопРеквизиты.Партнер Цикл
			ИмяПараметраДопРеквизит = "ДопРеквизит" + Формат(СчетчикПараметраДопРеквизит, "ЧН=0; ЧГ=");
			ИмяПараметраИмяРеквизита = "ИмяРеквизита" + Формат(СчетчикПараметраДопРеквизит, "ЧН=0; ЧГ=");
			ИмяПараметраДопРеквизитПустоеЗначение = "ДопРеквизитПустоеЗначение" + Формат(СчетчикПараметраДопРеквизит, "ЧН=0; ЧГ=");
			
			ТекстЗапроса = ТекстЗапроса + ?(ПустаяСтрока(ТекстЗапроса), "", "
			|	
			|ОБЪЕДИНИТЬ ВСЕ
			|	
			|");
			
			Если ТипЗнч(ДопРеквизит) = Тип("Строка") Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|ВЫБРАТЬ РАЗЛИЧНЫЕ " + ?(ДобавленоРазрешенные, "", "РАЗРЕШЕННЫЕ") + "
				|	
				|	Партнеры.Ссылка КАК Партнер,
				|	&" + ИмяПараметраДопРеквизит + " КАК ДопРеквизитПартнера,
				|	&" + ИмяПараметраИмяРеквизита + " КАК ИмяРеквизитаПартнера,
				|	ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка) КАК КонтактноеЛицо,
				|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка) КАК ДопРеквизитКонтактногоЛица,
				|	"""" КАК ИмяРеквизитаКонтактногоЛица
				|	
				|ИЗ
				|	
				|	Справочник.Партнеры КАК Партнеры
				|	
				|ГДЕ";
				Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|	НЕ Партнеры.ЭтоГруппа И";
				КонецЕсли;
				ТекстЗапроса = ТекстЗапроса + "
				|	Партнеры.Ссылка В (&Партнеры)
				|	И НЕ Партнеры.ПометкаУдаления
				|	И Партнеры." + ДопРеквизит + " = &" + ИмяПараметраДопРеквизитПустоеЗначение + "
				|	
				|";
				
				НайденныеСтроки = ТаблицаРеквизитыПартнераДополнительные.НайтиСтроки(Новый Структура("Реквизит", ДопРеквизит));
				Запрос.УстановитьПараметр(ИмяПараметраДопРеквизит, НайденныеСтроки[0].Представление);
				Запрос.УстановитьПараметр(ИмяПараметраИмяРеквизита, ДопРеквизит);
				
				РеквизитМд = Метаданные.Справочники.Партнеры.Реквизиты.Найти(ДопРеквизит);
				Запрос.УстановитьПараметр(ИмяПараметраДопРеквизитПустоеЗначение, РеквизитМд.Тип.ПривестиЗначение(Неопределено));
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
				|ВЫБРАТЬ РАЗЛИЧНЫЕ " + ?(ДобавленоРазрешенные, "", "РАЗРЕШЕННЫЕ") + "
				|	
				|	Партнеры.Ссылка КАК Партнер,
				|	&" + ИмяПараметраДопРеквизит + " КАК ДопРеквизитПартнера,
				|	"""" КАК ИмяРеквизитаПартнера,
				|	ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка) КАК КонтактноеЛицо,
				|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка) КАК ДопРеквизитКонтактногоЛица,
				|	"""" КАК ИмяРеквизитаКонтактногоЛица
				|	
				|ИЗ
				|	
				|	Справочник.Партнеры КАК Партнеры
				|	
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|	Справочник.Партнеры." + ?(ТипЗнч(ДопРеквизит) = Тип("ПланВидовХарактеристикСсылка.CRM_ДополнительнаяИнформация"), "CRM_ДополнительнаяИнформация", "ДополнительныеРеквизиты") + " КАК ПартнерыДополнительныеРеквизиты
				|	
				|ПО
				|	Партнеры.Ссылка = ПартнерыДополнительныеРеквизиты.Ссылка
				|	И ПартнерыДополнительныеРеквизиты.Свойство = &" + ИмяПараметраДопРеквизит + "
				|	
				|ГДЕ";
				Если CRM_ОбщегоНазначенияПовтИсп.ЭтоCRM() Тогда
				ТекстЗапроса = ТекстЗапроса + "
				|	НЕ Партнеры.ЭтоГруппа И";
				КонецЕсли;
				ТекстЗапроса = ТекстЗапроса + "
				|	Партнеры.Ссылка В (&Партнеры)
				|	И НЕ Партнеры.ПометкаУдаления
				|	И (ПартнерыДополнительныеРеквизиты.Значение = &" + ИмяПараметраДопРеквизитПустоеЗначение + " ИЛИ ПартнерыДополнительныеРеквизиты.Значение ЕСТЬ NULL)
				|	
				|";
				
				Запрос.УстановитьПараметр(ИмяПараметраДопРеквизит, ДопРеквизит);
				Запрос.УстановитьПараметр(ИмяПараметраДопРеквизитПустоеЗначение, ДопРеквизит.ТипЗначения.ПривестиЗначение(Неопределено));
			КонецЕсли;
			
			СчетчикПараметраДопРеквизит = СчетчикПараметраДопРеквизит + 1;
			ДобавленоРазрешенные = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Если ВыбранныеДопРеквизиты.КонтактноеЛицо.Количество() > 0 Тогда 
		Для Каждого ДопРеквизит Из ВыбранныеДопРеквизиты.КонтактноеЛицо Цикл
			ИмяПараметраДопРеквизит = "ДопРеквизит" + Формат(СчетчикПараметраДопРеквизит, "ЧН=0; ЧГ=");
			ИмяПараметраИмяРеквизита = "ИмяРеквизита" + Формат(СчетчикПараметраДопРеквизит, "ЧН=0; ЧГ=");
			ИмяПараметраДопРеквизитПустоеЗначение = "ДопРеквизитПустоеЗначение" + Формат(СчетчикПараметраДопРеквизит, "ЧН=0; ЧГ=");
			
			ТекстЗапроса = ТекстЗапроса + ?(ПустаяСтрока(ТекстЗапроса), "", "
			|	
			|ОБЪЕДИНИТЬ ВСЕ
			|	
			|");
			
			Если ТипЗнч(ДопРеквизит) = Тип("Строка") Тогда
				РеквизитМд = Метаданные.Справочники.КонтактныеЛицаПартнеров.Реквизиты.Найти(ДопРеквизит);
				
				ВыразитьСтрокуВЗапросе = Ложь;
				Если	РеквизитМд.Тип.Типы().Количество() = 1
					И	РеквизитМд.Тип.Типы()[0] = Тип("Строка")
					И	РеквизитМд.Тип.КвалификаторыСтроки.Длина = 0 Тогда
					// Строка неограниченной длины.
					ВыразитьСтрокуВЗапросе = Истина;
				КонецЕсли;
				
				ТекстЗапроса = ТекстЗапроса + "
				|ВЫБРАТЬ РАЗЛИЧНЫЕ " + ?(ДобавленоРазрешенные, "", "РАЗРЕШЕННЫЕ") + "
				|	
				|	КонтактныеЛицаПартнеров.Владелец КАК Партнер,
				|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка) КАК ДопРеквизитПартнера,
				|	"""" КАК ИмяРеквизитаПартнера,
				|	КонтактныеЛицаПартнеров.Ссылка КАК КонтактноеЛицо,
				|	&" + ИмяПараметраДопРеквизит + " КАК ДопРеквизитКонтактногоЛица,
				|	&" + ИмяПараметраИмяРеквизита + " КАК ИмяРеквизитаКонтактногоЛица
				|	
				|ИЗ
				|	
				|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
				|	
				|ГДЕ
				|	КонтактныеЛицаПартнеров.Владелец В (&Партнеры)
				|	И КонтактныеЛицаПартнеров.Ссылка В (&КонтактныеЛица)
				|	И НЕ КонтактныеЛицаПартнеров.ПометкаУдаления
				|";
				Если ВыразитьСтрокуВЗапросе Тогда
					ТекстЗапроса = ТекстЗапроса + "
					|	И ВЫРАЗИТЬ(КонтактныеЛицаПартнеров." + ДопРеквизит + " КАК СТРОКА(100)) = &" + ИмяПараметраДопРеквизитПустоеЗначение + "
					|	
					|";
				Иначе
					ТекстЗапроса = ТекстЗапроса + "
					|	И КонтактныеЛицаПартнеров." + ДопРеквизит + " = &" + ИмяПараметраДопРеквизитПустоеЗначение + "
					|	
					|";
				КонецЕсли;
				
				НайденныеСтроки = ТаблицаРеквизитыКонтактногоЛицаДополнительные.НайтиСтроки(Новый Структура("Реквизит", ДопРеквизит));
				Запрос.УстановитьПараметр(ИмяПараметраДопРеквизит, НайденныеСтроки[0].Представление);
				Запрос.УстановитьПараметр(ИмяПараметраИмяРеквизита, ДопРеквизит);
				
				Запрос.УстановитьПараметр(ИмяПараметраДопРеквизитПустоеЗначение, РеквизитМд.Тип.ПривестиЗначение(Неопределено));
			Иначе
				ТекстЗапроса = ТекстЗапроса + "
				|ВЫБРАТЬ РАЗЛИЧНЫЕ " + ?(ДобавленоРазрешенные, "", "РАЗРЕШЕННЫЕ") + "
				|	
				|	КонтактныеЛицаПартнеров.Владелец КАК Партнер,
				|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПустаяСсылка) КАК ДопРеквизитПартнера,
				|	"""" КАК ИмяРеквизитаПартнера,
				|	КонтактныеЛицаПартнеров.Ссылка КАК КонтактноеЛицо,
				|	&" + ИмяПараметраДопРеквизит + " КАК ДопРеквизитКонтактногоЛица,
				|	"""" КАК ИмяРеквизитаКонтактногоЛица
				|	
				|ИЗ
				|	
				|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
				|	
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|	Справочник.КонтактныеЛицаПартнеров.ДополнительныеРеквизиты КАК КонтактныеЛицаПартнеровДополнительныеРеквизиты
				|	
				|ПО
				|	КонтактныеЛицаПартнеров.Ссылка = КонтактныеЛицаПартнеровДополнительныеРеквизиты.Ссылка
				|	И КонтактныеЛицаПартнеровДополнительныеРеквизиты.Свойство = &" + ИмяПараметраДопРеквизит + "
				|	
				|ГДЕ
				|	КонтактныеЛицаПартнеров.Владелец В (&Партнеры)
				|	И КонтактныеЛицаПартнеров.Ссылка В (&КонтактныеЛица)
				|	И НЕ КонтактныеЛицаПартнеров.ПометкаУдаления
				|	И (КонтактныеЛицаПартнеровДополнительныеРеквизиты.Значение = &" + ИмяПараметраДопРеквизитПустоеЗначение + " ИЛИ КонтактныеЛицаПартнеровДополнительныеРеквизиты.Значение ЕСТЬ NULL)
				|	
				|";
				
				Запрос.УстановитьПараметр(ИмяПараметраДопРеквизит, ДопРеквизит);
				Запрос.УстановитьПараметр(ИмяПараметраДопРеквизитПустоеЗначение, ДопРеквизит.ТипЗначения.ПривестиЗначение(Неопределено));
			КонецЕсли;
			
			СчетчикПараметраДопРеквизит = СчетчикПараметраДопРеквизит + 1;
			ДобавленоРазрешенные = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Партнеры", ТаблицаПартнерыПоОтбору.ВыгрузитьКолонку("Клиент"));
	Запрос.УстановитьПараметр("КонтактныеЛица", ТаблицаПартнерыПоОтбору.ВыгрузитьКолонку("КонтактноеЛицо"));
	
	Таблица = Запрос.Выполнить().Выгрузить();
	
	Таблица.Свернуть("Партнер,ДопРеквизитПартнера,КонтактноеЛицо,ДопРеквизитКонтактногоЛица,ИмяРеквизитаПартнера,ИмяРеквизитаКонтактногоЛица");
	
	Запрос = Новый Запрос();
	МенеджерВТ = Новый МенеджерВременныхТаблиц();
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаПартнеры.*
	|ПОМЕСТИТЬ
	|	Таблица
	|ИЗ
	|	&ТаблицаПартнеры КАК ТаблицаПартнеры
	|;
	|///////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|	Таблица.Партнер КАК Партнер,
	|	Таблица.Партнер.ЮрФизЛицо КАК ВидПартнера,
	|	Таблица.КонтактноеЛицо КАК КонтактноеЛицо,
	|	Таблица.ДопРеквизитПартнера КАК ДопРеквизитПартнера,
	|	Таблица.ДопРеквизитКонтактногоЛица КАК ДопРеквизитКонтактногоЛица,
	|	Таблица.ИмяРеквизитаПартнера КАК ИмяРеквизитаПартнера,
	|	Таблица.ИмяРеквизитаКонтактногоЛица КАК ИмяРеквизитаКонтактногоЛица
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Партнер.Наименование,
	|	КонтактноеЛицо.Наименование
	|	
	|ИТОГИ ПО
	|	Партнер,КонтактноеЛицо,ДопРеквизитПартнера,ДопРеквизитКонтактногоЛица
	|";
	Запрос.УстановитьПараметр("ТаблицаПартнеры", Таблица);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПартнеры = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПартнеры.Следующий() Цикл
		Если Не ЗначениеЗаполнено(ВыборкаПартнеры.Партнер) Тогда Продолжить; КонецЕсли;
		
		СоответствиеСтроки = Новый Соответствие();
		НоваяСтрока = Дерево.Строки.Добавить();
		НоваяСтрока.Партнер = ВыборкаПартнеры.Партнер;
		НоваяСтрока.ТипСтроки = 1;
		НоваяСтрока.Пометка = Истина;
		СоответствиеСтроки.Вставить(НоваяСтрока.Партнер, НоваяСтрока);
		
		ВыборкаКонтактноеЛицо = ВыборкаПартнеры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКонтактноеЛицо.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаКонтактноеЛицо.КонтактноеЛицо) Тогда
				НоваяСтрока = СоответствиеСтроки[ВыборкаКонтактноеЛицо.Партнер].Строки.Добавить();
				НоваяСтрока.Партнер = ВыборкаКонтактноеЛицо.КонтактноеЛицо;
				НоваяСтрока.ТипСтроки = 2;
				СоответствиеСтроки.Вставить(НоваяСтрока.Партнер, НоваяСтрока);
			КонецЕсли;
			
			ВыборкаДопРеквизитПартнера = ВыборкаКонтактноеЛицо.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаДопРеквизитПартнера.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаДопРеквизитПартнера.ДопРеквизитПартнера) Тогда
					Если ТипЗнч(ВыборкаДопРеквизитПартнера.ДопРеквизитПартнера) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
						Если ВыборкаДопРеквизитПартнера.ВидПартнера = Перечисления.КомпанияЧастноеЛицо.Компания Тогда
							Если	ДопРеквизитыФизЛица.НайтиПоЗначению(ВыборкаДопРеквизитПартнера.ДопРеквизитПартнера) <> Неопределено
								И	ДопРеквизитыЮрЛица.НайтиПоЗначению(ВыборкаДопРеквизитПартнера.ДопРеквизитПартнера) = Неопределено
								И	ДопРеквизитыОбщие.НайтиПоЗначению(ВыборкаДопРеквизитПартнера.ДопРеквизитПартнера) = Неопределено Тогда
								// Этот доп. реквизит только для физического лица.
								Продолжить;
							КонецЕсли;
						ИначеЕсли ВыборкаДопРеквизитПартнера.ВидПартнера = Перечисления.КомпанияЧастноеЛицо.ЧастноеЛицо Тогда
							Если	ДопРеквизитыЮрЛица.НайтиПоЗначению(ВыборкаДопРеквизитПартнера.ДопРеквизитПартнера) <> Неопределено
								И	ДопРеквизитыФизЛица.НайтиПоЗначению(ВыборкаДопРеквизитПартнера.ДопРеквизитПартнера) = Неопределено
								И	ДопРеквизитыОбщие.НайтиПоЗначению(ВыборкаДопРеквизитПартнера.ДопРеквизитПартнера) = Неопределено Тогда
								// Этот доп. реквизит только для юридического лица.
								Продолжить;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					НоваяСтрока = СоответствиеСтроки[ВыборкаКонтактноеЛицо.Партнер].Строки.Добавить();
					НоваяСтрока.Партнер = ВыборкаДопРеквизитПартнера.ДопРеквизитПартнера;
					НоваяСтрока.ТипСтроки = 3;
					
					ДетальныеЗаписи = ВыборкаДопРеквизитПартнера.Выбрать(ОбходРезультатаЗапроса.Прямой);
					Пока ДетальныеЗаписи.Следующий() Цикл
						НоваяСтрока.ИмяРеквизита = ДетальныеЗаписи.ИмяРеквизитаПартнера;
						Если ЗначениеЗаполнено(ДетальныеЗаписи.ИмяРеквизитаПартнера) Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ВыборкаДопРеквизитКонтактногоЛица = ВыборкаДопРеквизитПартнера.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаДопРеквизитКонтактногоЛица.Следующий() Цикл
					Если ЗначениеЗаполнено(ВыборкаДопРеквизитКонтактногоЛица.ДопРеквизитКонтактногоЛица) Тогда
						НоваяСтрока = СоответствиеСтроки[ВыборкаКонтактноеЛицо.КонтактноеЛицо].Строки.Добавить();
						НоваяСтрока.Партнер = ВыборкаДопРеквизитКонтактногоЛица.ДопРеквизитКонтактногоЛица;
						НоваяСтрока.ТипСтроки = 3;
						
						ДетальныеЗаписи = ВыборкаДопРеквизитКонтактногоЛица.Выбрать(ОбходРезультатаЗапроса.Прямой);
						Пока ДетальныеЗаписи.Следующий() Цикл
							НоваяСтрока.ИмяРеквизита = ДетальныеЗаписи.ИмяРеквизитаКонтактногоЛица;
							Если ЗначениеЗаполнено(ДетальныеЗаписи.ИмяРеквизитаКонтактногоЛица) Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если СоответствиеСтроки[ВыборкаПартнеры.Партнер] <> Неопределено И СоответствиеСтроки[ВыборкаПартнеры.Партнер].Строки.Количество() = 0 Тогда
			Попытка Дерево.Строки.Удалить(СоответствиеСтроки[ВыборкаПартнеры.Партнер]);
			Исключение КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоПартнеровДопРеквизиты");
КонецПроцедуры

&НаСервере
Функция ЗаполнитьТаблицуКонтактов(СсылкаНаОбъект)
	
	СтруктураКонтактов = Новый СписокЗначений;
	
	Для Каждого Стр Из СсылкаНаОбъект.КонтактнаяИнформация Цикл
		Представление = Строка(Стр.Представление);
		Если ПустаяСтрока(Представление) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Стр.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			СтруктураКонтактов.Добавить("АдресЭлектроннойПочты", Представление);
		ИначеЕсли Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
			СтруктураКонтактов.Добавить("Адрес", Представление);
		ИначеЕсли Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон ИЛИ Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Факс Тогда
			СтруктураКонтактов.Добавить("Телефон", Представление);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураКонтактов;
КонецФункции

&НаСервере
Функция СоздатьСтруктуруПоиска()
	СтруктураПоиска = Новый Структура;
	
	Для Каждого СтрокаСписка Из РеквизитыПоискаДублейПартнеров Цикл
		Если СтрокаСписка.Пометка Тогда	
			Значение = СтрокаСписка.Значение;
			ТочкаСЗапятой = Найти(Значение,";");

			СтруктураПоиска.Вставить(Сред(Значение,1,ТочкаСЗапятой-1),Сред(Значение,ТочкаСЗапятой+1));
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураПоиска;
КонецФункции

&НаСервере
Процедура СформироватьДеревоПартнеровДублирующиесяРеквизиты()
	Дерево = РеквизитФормыВЗначение("ДеревоДублирующихсяПартнеров");
	Дерево.Строки.Очистить();
	
	Если ЭтоАдресВременногоХранилища(АдресОтборДляДублирующихсяРеквизитов) Тогда
		ТекОтбор = ПолучитьИзВременногоХранилища(АдресОтборДляДублирующихсяРеквизитов);
	Иначе
		ТекОтбор = Неопределено;
	КонецЕсли;
	Если ТипЗнч(ТекОтбор) <> Тип("ОтборКомпоновкиДанных") Тогда
		ТекОтбор = Неопределено;
	КонецЕсли;
	
	ТаблицаПартнерыПоОтбору = CRM_ОбщегоНазначенияСервер.ВыполнитьЗапросВКомпоновкеДанных(ПолучитьТекстЗапросаДляОтборов(ВидКонтроля), ТекОтбор);
	
	ТаблицаКлиенты = Новый ТаблицаЗначений();
	ТаблицаКлиенты.Колонки.Добавить("Клиент");
	Для Каждого СтрокаТаблицы Из ТаблицаПартнерыПоОтбору Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.Клиент) Тогда
			НоваяСтрока = ТаблицаКлиенты.Добавить();
			НоваяСтрока.Клиент = СтрокаТаблицы.Клиент;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТаблицы Из ТаблицаПартнерыПоОтбору Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.КонтактноеЛицо) Тогда
			НоваяСтрока = ТаблицаКлиенты.Добавить();
			НоваяСтрока.Клиент = СтрокаТаблицы.КонтактноеЛицо;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаКлиенты.Свернуть("Клиент");
	
	СтруктураПоиска = СоздатьСтруктуруПоиска();
	
	МассивОбработанныхПартнеров = Новый Массив();
	Для Каждого СтрокаТаблицы Из ТаблицаКлиенты Цикл
		ПартнерСсылка = СтрокаТаблицы.Клиент;
		Если МассивОбработанныхПартнеров.Найти(ПартнерСсылка) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивОбработанныхПартнеров.Добавить(ПартнерСсылка);
		
		СписокКонтактов = ЗаполнитьТаблицуКонтактов(ПартнерСсылка);
		
		Если НайтиДубли(ПартнерСсылка, СтруктураПоиска, СписокКонтактов) Тогда
			СтрокаПартнер = Дерево.Строки.Добавить();
			СтрокаПартнер.Пометка = Истина;
			СтрокаПартнер.Партнер = ПартнерСсылка;
			СтрокаПартнер.ТипСтроки = 1;
			
			Для Каждого СтрокаТаблицыНайдено Из ТаблицаНайдено Цикл
				Если ЗначениеЗаполнено(СтрокаТаблицыНайдено.Объект) Тогда
					МассивОбработанныхПартнеров.Добавить(СтрокаТаблицыНайдено.Объект);
					
					СтрокаПартнерДубль = СтрокаПартнер.Строки.Добавить();
					СтрокаПартнерДубль.Партнер = СтрокаТаблицыНайдено.Объект;
					СтрокаПартнерДубль.ТипСтроки = 2;
					
					НайденныеСтроки = ТаблицаРасшифровкаНайдено.НайтиСтроки(Новый Структура("Объект", СтрокаПартнерДубль.Партнер));
					Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
						СтрокаРеквизит = СтрокаПартнерДубль.Строки.Добавить();
						СтрокаРеквизит.Партнер = НайденнаяСтрока.ПредставлениеНайденоПо;
						СтрокаРеквизит.ТипСтроки = 3;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоДублирующихсяПартнеров");
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСобытияКонтрольРегистрацииКлиентов()
	Дерево = РеквизитФормыВЗначение("ДеревоСобытияКонтрольРегистрацииКлиентов");
	Дерево.Строки.Очистить();
	
	Если ЭтоАдресВременногоХранилища(АдресОтборДляКонтрольРегистрацииКлиентов) Тогда
		ТекОтбор = ПолучитьИзВременногоХранилища(АдресОтборДляКонтрольРегистрацииКлиентов);
	Иначе
		ТекОтбор = Неопределено;
	КонецЕсли;
	Если ТипЗнч(ТекОтбор) <> Тип("ОтборКомпоновкиДанных") Тогда
		ТекОтбор = Неопределено;
	КонецЕсли;
	
	ТаблицаСобытияПоОтбору = CRM_ОбщегоНазначенияСервер.ВыполнитьЗапросВКомпоновкеДанных(ПолучитьТекстЗапросаДляОтборов(ВидКонтроля,
		Новый Структура("КонтрольРегистрацииКлиентовФлагСобытия,КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма", КонтрольРегистрацииКлиентовФлагСобытия, КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма)), ТекОтбор);
	//
	
	ТаблицаСобытия = ТаблицаСобытияПоОтбору.Скопировать(, "Документ");
	ТаблицаСобытия.Свернуть("Документ");
	
	Для Каждого СтрокаТаблицы Из ТаблицаСобытия Цикл
		НайденныеСтроки = ТаблицаСобытияПоОтбору.НайтиСтроки(Новый Структура("Документ", СтрокаТаблицы.Документ));
		
		НоваяСтрока = Дерево.Строки.Добавить();
		НоваяСтрока.Пометка = Истина;
		НоваяСтрока.ТипСтроки = 1;
		НоваяСтрока.Партнер = СтрокаТаблицы.Документ;
		НоваяСтрока.Тема = НайденныеСтроки[0].Тема;
		НоваяСтрока.АдресОтправителя = НайденныеСтроки[0].АдресОтправителя;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоСобытияКонтрольРегистрацииКлиентов");
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоПартнеровКонтрольПотенциала()
	Дерево = РеквизитФормыВЗначение("ДеревоПартнерыКонтрольПотенциала");
	Дерево.Строки.Очистить();
	
		
	СписокПартнеры = Новый СписокЗначений();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	CRM_Потенциалы.Клиент
	|ПОМЕСТИТЬ тмпКлиентыСПотенциалами
	|ИЗ
	|	РегистрСведений.CRM_Потенциалы КАК CRM_Потенциалы
	|ГДЕ
	|	CRM_Потенциалы.Подразделение = &Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Партнеры.Ссылка КАК Партнер,
	|	Партнеры.Наименование
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	Партнеры.ОсновнойМенеджер.Подразделение = &Подразделение
	|	И НЕ Партнеры.Ссылка В
	|				(ВЫБРАТЬ
	|					тмпКлиентыСПотенциалами.Клиент
	|				ИЗ
	|					тмпКлиентыСПотенциалами КАК тмпКлиентыСПотенциалами)";
	Запрос.УстановитьПараметр("МассивПартнеры", СписокПартнеры.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если СписокПартнеры.НайтиПоЗначению(Выборка.Партнер) = Неопределено Тогда
			СписокПартнеры.Добавить(Выборка.Партнер, Выборка.Наименование);
		КонецЕсли;
	КонецЦикла;
	СписокПартнеры.СортироватьПоПредставлению();
	
	Для Каждого ЗначениеСписка Из СписокПартнеры Цикл
		СтрокаПартнер = Дерево.Строки.Добавить();
		СтрокаПартнер.Пометка = Истина;
		СтрокаПартнер.Партнер = ЗначениеСписка.Значение;
		СтрокаПартнер.ТипСтроки = 1;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоПартнерыКонтрольПотенциала");
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСтрокиДерева(ЭлементДерево, ИмяРеквизитаФормы, Развернуть = Истина)
	СтрокиДерева = ЭтотОбъект[ИмяРеквизитаФормы].ПолучитьЭлементы();
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если Развернуть Тогда
			ЭлементДерево.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Истина);
		Иначе
			ЭлементДерево.Свернуть(СтрокаДерева.ПолучитьИдентификатор());
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ВопросФормированиеПоручений()
	Если ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации") Тогда
		Вопрос = НСтр("ru =	'Исполнителям будут сформированы поручения по заполнению
									|контактной информации клиентов и контактных лиц.
									|Продолжить?'");
		//
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов") Тогда
		Вопрос = НСтр("ru =	'Исполнителям будут сформированы поручения по заполнению
									|дополнительных реквизитов клиентов и контактных лиц.
									|Продолжить?'");
		//
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов") Тогда
		Вопрос = НСтр("ru =	'Исполнителям будут сформированы поручения по исправлению
									|информации задвоенных клиентов.
									|Продолжить?'");
		//
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов") Тогда
		Вопрос = НСтр("ru =	'Исполнителям будут сформированы поручения по заполнению/обновлению
									|значения потенциала клиентов.
									|Продолжить?'");
		//
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов") Тогда
		Вопрос = НСтр("ru =	'Исполнителям будут сформированы поручения по заполнению
									|клиентов в документах Электронное письмо входящее и Телефонный звонок.
									|Продолжить?'");
		//
	КонецЕсли;
	
	Возврат Вопрос;
КонецФункции

&НаСервере
Процедура ДобавитьСтрокуПартнеров(СоответствиеРезультат, Исполнитель, СтрокаДерева)
	Если СоответствиеРезультат[Исполнитель] = Неопределено Тогда
		СоответствиеРезультат.Вставить(Исполнитель, Новый Массив());
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаДерева.Партнер) Тогда
		Если ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов Тогда
			СоответствиеРезультат[Исполнитель].Добавить(Новый Структура("Партнер,ПартнерыДубли", СтрокаДерева.Партнер, Новый Массив()));
			Для Каждого ПодстрокаПартнер Из СтрокаДерева.Строки Цикл
				СоответствиеРезультат[Исполнитель][СоответствиеРезультат[Исполнитель].ВГраница()].ПартнерыДубли.Добавить(Новый Структура("Партнер,Реквизиты", ПодстрокаПартнер.Партнер, Новый Массив()));
				Для Каждого ПодстрокаРеквизит Из ПодстрокаПартнер.Строки Цикл
					СоответствиеРезультат[Исполнитель][СоответствиеРезультат[Исполнитель].ВГраница()].ПартнерыДубли[СоответствиеРезультат[Исполнитель][СоответствиеРезультат[Исполнитель].ВГраница()].ПартнерыДубли.ВГраница()].Реквизиты.Добавить(ПодстрокаРеквизит.Партнер);
				КонецЦикла;
			КонецЦикла;
			
		Иначе
			Если	ТипЗнч(СтрокаДерева.Партнер) = Тип("СправочникСсылка.Партнеры")
				Или	ТипЗнч(СтрокаДерева.Партнер) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")
				Или	ТипЗнч(СтрокаДерева.Партнер) = Тип("ДокументСсылка.ТелефонныйЗвонок")
				Или	ТипЗнч(СтрокаДерева.Партнер) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
				//
				СоответствиеРезультат[Исполнитель].Добавить(Новый Структура("Партнер,Реквизиты", СтрокаДерева.Партнер, Новый Массив()));
				Для Каждого ПодчСтрока Из СтрокаДерева.Строки Цикл
					Если ЗначениеЗаполнено(ПодчСтрока.Партнер) Тогда
						Если ТипЗнч(ПодчСтрока.Партнер) = Тип("СправочникСсылка.Партнеры") Или ТипЗнч(ПодчСтрока.Партнер) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
							ДобавитьСтрокуПартнеров(СоответствиеРезультат, Исполнитель, ПодчСтрока);
						Иначе
							Если ТипЗнч(ПодчСтрока.Партнер) = Тип("Строка") И ЗначениеЗаполнено(ПодчСтрока.ИмяРеквизита) Тогда
								СоответствиеРезультат[Исполнитель][СоответствиеРезультат[Исполнитель].ВГраница()].Реквизиты.Добавить(ПодчСтрока.ИмяРеквизита);
							Иначе
								СоответствиеРезультат[Исполнитель][СоответствиеРезультат[Исполнитель].ВГраница()].Реквизиты.Добавить(ПодчСтрока.Партнер);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПодсчетВыбранныхКлиентов()
	
	Если ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоПартнеровКИ");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоПартнеровДопРеквизиты");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоДублирующихсяПартнеров");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоПартнерыКонтрольПотенциала");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоСобытияКонтрольРегистрацииКлиентов");
	КонецЕсли;
	
	НайденныеСтроки = ДеревоПартнеры.Строки.НайтиСтроки(Новый Структура("Пометка, ТипСтроки", Истина, 1));
	
	Возврат НайденныеСтроки.Количество();
	
КонецФункции

&НаКлиенте
Процедура ВывестиКоличествоВыбранныхКлиентов()
	
	ПоОтветственнымМенеджерам = (ВидРаспределенияПоИсполнителям = 0);
	
	Если ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов") Тогда
		Если ПоОтветственнымМенеджерам Тогда
			СтрокаЗаголовок = НСтр("ru = 'Число документов к распределению : '");
		Иначе
			СтрокаЗаголовок = НСтр("ru = 'Число документов к распределению на одного исполнителя: '");
		КонецЕсли;
	Иначе
		Если ПоОтветственнымМенеджерам Тогда
			СтрокаЗаголовок = НСтр("ru = 'Число клиентов к распределению : '");
		Иначе
			СтрокаЗаголовок = НСтр("ru = 'Число клиентов к распределению на одного исполнителя: '");
		КонецЕсли;
	КонецЕсли;
	
	Если ПоОтветственнымМенеджерам Тогда
		Элементы.ДекорацияКоличествоОбрабатываемых.Заголовок = СтрокаЗаголовок + КоличествоВыбранныхПартнеров;
	Иначе
		ВыбранныеИсполнители = ПолучитьВыбранныхИсполнителей(ЭтотОбъект);
		КоличествоПользователей = ВыбранныеИсполнители.Количество();
		
		КоличествоНаОдногоПользователя = ?(КоличествоПользователей > 0, Цел(КоличествоВыбранныхПартнеров / КоличествоПользователей),КоличествоВыбранныхПартнеров);
		Если КоличествоНаОдногоПользователя < 1 Тогда
			КоличествоНаОдногоПользователя = 1;
		КонецЕсли;
		
		Элементы.ДекорацияКоличествоОбрабатываемых.Заголовок = СтрокаЗаголовок + КоличествоНаОдногоПользователя;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РаспределитьПартнеровПоИсполнителям(ПоОтветственнымМенеджерам = Ложь, МассивПользователей = Неопределено)
	Если ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоПартнеровКИ");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоПартнеровДопРеквизиты");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоДублирующихсяПартнеров");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоПартнерыКонтрольПотенциала");
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов Тогда
		ДеревоПартнеры = РеквизитФормыВЗначение("ДеревоСобытияКонтрольРегистрацииКлиентов");
	КонецЕсли;
	
	СоответствиеРезультат = Новый Соответствие();
	
	НайденныеСтроки = ДеревоПартнеры.Строки.НайтиСтроки(Новый Структура("Пометка, ТипСтроки", Истина, 1), Истина);
	
	Если ПоОтветственнымМенеджерам Тогда
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если Не ЗначениеЗаполнено(НайденнаяСтрока.Партнер) Тогда Продолжить; КонецЕсли;
			
			Если ТипЗнч(НайденнаяСтрока.Партнер) = Тип("СправочникСсылка.Партнеры") Тогда
				ОсновнойМенеджер = НайденнаяСтрока.Партнер.ОсновнойМенеджер;
			ИначеЕсли ТипЗнч(НайденнаяСтрока.Партнер) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров") Тогда
				ОсновнойМенеджер = НайденнаяСтрока.Партнер.Владелец.ОсновнойМенеджер;
			Иначе
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ОсновнойМенеджер) Тогда
				ТекМенеджер = ОсновнойМенеджер;
			Иначе
				Если ЗначениеЗаполнено(ПользовательОтветственныйПоУмолчанию) Тогда
					ТекМенеджер = ПользовательОтветственныйПоУмолчанию;
				Иначе
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для некоторых клиентов не указан основной менеджер - нужно выбрать иполнителя для клиентов, которым не назначен ответственный менеджер!'"),, "ПользовательОтветственныйПоУмолчанию");
					Возврат Неопределено;
				КонецЕсли;
			КонецЕсли;
			Если ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов Тогда
				Если Не CRM_КлиентыСервер.РазрешеноРедактированиеПотенциалаКлиента(ТекМенеджер) Тогда
					ТекМенеджер = ПользовательСеанса;
				КонецЕсли;
			КонецЕсли;
			ДобавитьСтрокуПартнеров(СоответствиеРезультат, ТекМенеджер, НайденнаяСтрока);
		КонецЦикла;
		
	Иначе
		КоличествоПользователей = МассивПользователей.Количество();
		ОбщееКоличествоПартнеровИКЛ = НайденныеСтроки.Количество();
		
		КоличествоНаОдногоПользователя = Цел(ОбщееКоличествоПартнеровИКЛ / КоличествоПользователей);
		Если КоличествоНаОдногоПользователя < 1 Тогда
			КоличествоНаОдногоПользователя = 1;
		КонецЕсли;
		
		ТекИндексПользователя = 0;
		ТекИндексПартнеров = 0;
		
		Пока Истина Цикл
			ТекПользователь = МассивПользователей[ТекИндексПользователя];
			
			Для н = 1 По КоличествоНаОдногоПользователя Цикл
				Если ЗначениеЗаполнено(НайденныеСтроки[ТекИндексПартнеров].Партнер) Тогда
					ДобавитьСтрокуПартнеров(СоответствиеРезультат, ТекПользователь, НайденныеСтроки[ТекИндексПартнеров]);
				КонецЕсли;
				
				ТекИндексПартнеров = ТекИндексПартнеров + 1;
				Если ТекИндексПартнеров >= ОбщееКоличествоПартнеровИКЛ Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ТекИндексПартнеров >= ОбщееКоличествоПартнеровИКЛ Тогда
				Прервать;
			КонецЕсли;
			
			Если ТекИндексПользователя = МассивПользователей.ВГраница() Тогда
				// На последнего пользователя скидываем всех оставшихся.
				Пока ТекИндексПартнеров < ОбщееКоличествоПартнеровИКЛ Цикл
					Если ЗначениеЗаполнено(НайденныеСтроки[ТекИндексПартнеров].Партнер) Тогда
						ДобавитьСтрокуПартнеров(СоответствиеРезультат, ТекПользователь, НайденныеСтроки[ТекИндексПартнеров]);
					КонецЕсли;
					ТекИндексПартнеров = ТекИндексПартнеров + 1;
				КонецЦикла;
			КонецЕсли;
			
			ТекИндексПользователя = ТекИндексПользователя + 1;
			Если ТекИндексПользователя > МассивПользователей.ВГраница() Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СоответствиеРезультат;
	
КонецФункции

&НаСервере
Функция ПолучитьНаименованиеПоручения()
	Если ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации Тогда
		Возврат НСтр("ru = 'Заполнение контактной информации клиентов и контактных лиц'");
		
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов Тогда
		Возврат НСтр("ru = 'Заполнение реквизитов клиентов и контактных лиц'");
		
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов Тогда
		Возврат НСтр("ru = 'Исправление дублирующихся записей по клиентам'");
		
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов Тогда
		Возврат НСтр("ru = 'Заполнить портрет клиентов для расчета потенциала'");
		
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов Тогда
		Возврат НСтр("ru = 'Заполнение клиента в электронных письмах и телефонных звонках'");
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьРеквизитыИзФормулыРасчетаПотенциала()
	ФормулаРасчета = Подразделение.CRM_ФормулаРасчетаПотенциала;
	СписокРеквизитов = Новый СписокЗначений;
	ИскатьРеквизиты = Истина;
	Пока ИскатьРеквизиты Цикл
		НачПозиция = СтрНайти(ФормулаРасчета,"[");
		Если НачПозиция = 0 Тогда
			ИскатьРеквизиты = Ложь;
			Продолжить;
		КонецЕсли;	
		КонПозиция = СтрНайти(ФормулаРасчета,"]");
		Реквизит = Сред(ФормулаРасчета, НачПозиция + 1, КонПозиция - НачПозиция - 1);
		СписокРеквизитов.Добавить(Реквизит);
		ФормулаРасчета = СтрЗаменить(ФормулаРасчета, "["+Реквизит+"]", "");
	КонецЦикла;
	Возврат СписокРеквизитов;
КонецФункции	

&НаСервере
Функция ПолучитьОписаниеПоручения()
	Если ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации Тогда
		ВидыКИ = ПолучитьВыбранныеВидыКИ(ЭтотОбъект);
		
		Текст = НСтр("ru = 'Проверить заполненность / заполнить следующие виды контактной информации клиентов и контактных лиц:'");
		Если ВидыКИ.Партнер.Количество() > 0 Тогда
			Текст = Текст + Символы.ПС;
			Текст = Текст + НСтр("ru = 'Клиенты:'");
			Для Каждого ВидКИ Из ВидыКИ.Партнер Цикл
				Текст = Текст + Символы.ПС + "   - """ + Строка(ВидКИ) + """";
			КонецЦикла;
		КонецЕсли;
		Если ВидыКИ.КонтактноеЛицо.Количество() > 0 Тогда
			Текст = Текст + Символы.ПС;
			Текст = Текст + НСтр("ru = 'Контактные лица:'");
			Для Каждого ВидКИ Из ВидыКИ.КонтактноеЛицо Цикл
				Текст = Текст + Символы.ПС + "   - """ + Строка(ВидКИ) + """";
			КонецЦикла;
		КонецЕсли;
		
		Возврат Текст;
		
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов Тогда
		ВидыДопРеквизитов = ПолучитьВыбранныеДопРеквизиты(ЭтотОбъект);
		
		Текст = НСтр("ru = 'Проверить заполненность / заполнить следующие дополнительные реквизиты клиентов и контактных лиц:'");
		Если ВидыДопРеквизитов.Партнер.Количество() > 0 Тогда
			Текст = Текст + Символы.ПС;
			Текст = Текст + НСтр("ru = 'Клиенты:'");
			Для Каждого ДопРеквизит Из ВидыДопРеквизитов.Партнер Цикл
				Текст = Текст + Символы.ПС + "   - """ + Строка(ДопРеквизит) + """";
			КонецЦикла;
		КонецЕсли;
		Если ВидыДопРеквизитов.КонтактноеЛицо.Количество() > 0 Тогда
			Текст = Текст + Символы.ПС;
			Текст = Текст + НСтр("ru = 'Контактные лица:'");
			Для Каждого ДопРеквизит Из ВидыДопРеквизитов.КонтактноеЛицо Цикл
				Текст = Текст + Символы.ПС + "   - """ + Строка(ДопРеквизит) + """";
			КонецЦикла;
		КонецЕсли;
		
		Возврат Текст;
		
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов Тогда
		Возврат НСтр("ru = 'Исправить дублирующиеся записи по клиентам'");
		
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов Тогда
	    Описание = НСтр("ru = 'Для клиентов, указанных на закладке “Контроль потенциала клиентов”, необходимо заполнить
		|следующие реквизиты портрета:'");
		СписокРеквизитов =  ПолучитьРеквизитыИзФормулыРасчетаПотенциала();
		СчетчикСтрок = 1;
		Для Каждого РеквизитФормулы Из СписокРеквизитов Цикл
			Описание = Описание + "
			|	" + Формат(СчетчикСтрок, "ЧГ=") + ". " + РеквизитФормулы;
			СчетчикСтрок = СчетчикСтрок + 1;
		КонецЦикла;	
		Возврат Описание;
		
	ИначеЕсли ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов Тогда
		Возврат НСтр("ru = 'Заполнить клиента в электронных письмах и телефонных звонках'");
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция СформироватьПоручения(ВыбранныеИсполнители)
	
	РаспределенныеПартнеры = РаспределитьПартнеровПоИсполнителям((ВидРаспределенияПоИсполнителям = 0), ВыбранныеИсполнители);
	Если РаспределенныеПартнеры = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СписокСозданныеБизнесПроцессы.Очистить();
	
	ТекДата = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	ТекСекунды = ТекДата - НачалоДня(ТекДата);
	Организация = Неопределено;
	ЗначениеНастройки = CRM_ОбщегоНазначенияПовтИсп.ПолучитьЗначениеНастройки("ОсновнаяОрганизация");
	Если ЗначениеЗаполнено(ЗначениеНастройки) Тогда
		Организация = ЗначениеНастройки;
	Иначе
		Организация = CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию();
	КонецЕсли;
	
	Попытка
		НачатьТранзакцию();
		
		Для Каждого КлючЗначение Из РаспределенныеПартнеры Цикл
			ТекПользователь = КлючЗначение.Ключ;
			ТекПартнеры = КлючЗначение.Значение;
			
			НовыйБизнесПроцесс = БизнесПроцессы.CRM_БизнесПроцесс.СоздатьБизнесПроцесс();
			НовыйБизнесПроцесс.Заполнить(Справочники.CRM_КартыМаршрутов.Поручение);
			
			НовыйБизнесПроцесс.Дата						= ТекДата;
			НовыйБизнесПроцесс.ДатаСтарта				= ТекДата;
			НовыйБизнесПроцесс.Важность					= Перечисления.ВариантыВажностиВзаимодействия.Обычная;
			НовыйБизнесПроцесс.Автор					= ПользовательСеанса;
			НовыйБизнесПроцесс.Ответственный			= ПользовательСеанса;
			НовыйБизнесПроцесс.Организация				= Организация;
			
			НовыйБизнесПроцесс.Наименование = ПолучитьНаименованиеПоручения();
			НовыйБизнесПроцесс.Описание = ПолучитьОписаниеПоручения();
			
			НовыйБизнесПроцесс.Проект = Проект;
			
			НовыйБизнесПроцесс.Записать();
			
			НаборЭтапов = РегистрыСведений.CRM_НастройкиЭтаповБизнесПроцессов.СоздатьНаборЗаписей();
			НаборЭтапов.Отбор.Объект.Установить(НовыйБизнесПроцесс.Ссылка);
			НаборЭтапов.Прочитать();
			
			НаборИсполнителей = РегистрыСведений.CRM_ИсполнителиЭтаповБизнесПроцессов.СоздатьНаборЗаписей();
			НаборИсполнителей.Отбор.Объект.Установить(НовыйБизнесПроцесс.Ссылка);
			НаборИсполнителей.Прочитать();
			
			Для Каждого СтрокаНабора Из НаборИсполнителей Цикл
				Если СтрокаНабора.ТочкаМаршрута = НаборЭтапов[0].ТочкаМаршрута Тогда		// точка действия "Выполнить"
					СтрокаНабора.Исполнитель = ТекПользователь;
					НаборЭтапов[0].ДатаВыполнения = ДатаИсполнения + ТекСекунды;
					НаборЭтапов[0].ВариантВыполнения = 1;
					НаборЭтапов[0].ВариантВыполненияСтрокой = CRM_БизнесПроцессыСервер.ПолучитьПредставлениеВариантаУсловия(НаборЭтапов[0].ТочкаМаршрута, НаборЭтапов[0].ВариантВыполнения, НовыйБизнесПроцесс.НомерВерсииКартыМаршрута);
				ИначеЕсли СтрокаНабора.ТочкаМаршрута = НаборЭтапов[1].ТочкаМаршрута Тогда	// точка действия "Проверить"
					НаборЭтапов[1].ДатаВыполнения = ДатаКонтроля + ТекСекунды;
					НаборЭтапов[1].Используется	= Истина;
					СтрокаНабора.Исполнитель = ?(ЗначениеЗаполнено(Проверяющий), Проверяющий, ПользовательСеанса);
				КонецЕсли;
			КонецЦикла;
			
			НаборЭтапов.Записать();
			НаборИсполнителей.Записать();
			
			Для Каждого ПартнерКЛСтруктура Из ТекПартнеры Цикл
				Если ВидКонтроля = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов Тогда
					МенеджерЗаписи = РегистрыСведений.CRM_ЗадачиПоИсправлениюКлиентскойБазы.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.БизнесПроцесс = НовыйБизнесПроцесс.Ссылка;
					МенеджерЗаписи.Исполнитель = ТекПользователь;
					МенеджерЗаписи.Партнер = ПартнерКЛСтруктура.Партнер;
					МенеджерЗаписи.Проект = Проект;
					
					МенеджерЗаписи.Завершено = (ПартнерКЛСтруктура.ПартнерыДубли.Количество() = 0);
					
					МенеджерЗаписи.ВидКонтроля = ВидКонтроля;
					МенеджерЗаписи.Контролер = ?(ЗначениеЗаполнено(Проверяющий), Проверяющий, ПользовательСеанса);
					
					МенеджерЗаписи.Записать();
					
					Для Каждого ПартнерДубль Из ПартнерКЛСтруктура.ПартнерыДубли Цикл
						МенеджерЗаписи = РегистрыСведений.CRM_ЗадачиПоИсправлениюКлиентскойБазы.СоздатьМенеджерЗаписи();
						МенеджерЗаписи.БизнесПроцесс = НовыйБизнесПроцесс.Ссылка;
						МенеджерЗаписи.Исполнитель = ТекПользователь;
						МенеджерЗаписи.Партнер = ПартнерДубль.Партнер;
						МенеджерЗаписи.Проект = Проект;
						
						МенеджерЗаписи.Завершено = Ложь;
						
						МенеджерЗаписи.ВидКонтроля = ВидКонтроля;
						МенеджерЗаписи.Контролер = ?(ЗначениеЗаполнено(Проверяющий), Проверяющий, ПользовательСеанса);
						
						МенеджерЗаписи.ПартнерРодитель = ПартнерКЛСтруктура.Партнер;
						
						МенеджерЗаписи.Записать();
						
						Для Каждого Реквизит Из ПартнерДубль.Реквизиты Цикл
							МенеджерЗаписи = РегистрыСведений.CRM_ЗадачиПоИсправлениюКлиентскойБазыРеквизиты.СоздатьМенеджерЗаписи();
							МенеджерЗаписи.БизнесПроцесс = НовыйБизнесПроцесс.Ссылка;
							МенеджерЗаписи.Партнер = ПартнерДубль.Партнер;
							МенеджерЗаписи.Реквизит = Реквизит;
							
							МенеджерЗаписи.Записать();
						КонецЦикла;
						
					КонецЦикла;
					
				Иначе
					// Партнеры / КЛ
					МенеджерЗаписи = РегистрыСведений.CRM_ЗадачиПоИсправлениюКлиентскойБазы.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.БизнесПроцесс = НовыйБизнесПроцесс.Ссылка;
					МенеджерЗаписи.Исполнитель = ТекПользователь;
					МенеджерЗаписи.Партнер = ПартнерКЛСтруктура.Партнер;
					МенеджерЗаписи.Проект = Проект;
					
					Если	ВидКонтроля <> Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов
						И	ВидКонтроля <> Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов Тогда
						//
						МенеджерЗаписи.Завершено = (ПартнерКЛСтруктура.Реквизиты.Количество() = 0);
					КонецЕсли;
					
					МенеджерЗаписи.ВидКонтроля = ВидКонтроля;
					МенеджерЗаписи.Контролер = ?(ЗначениеЗаполнено(Проверяющий), Проверяющий, ПользовательСеанса);
					
					МенеджерЗаписи.Записать();
					
					// Реквизиты
					Для Каждого Реквизит Из ПартнерКЛСтруктура.Реквизиты Цикл
						МенеджерЗаписи = РегистрыСведений.CRM_ЗадачиПоИсправлениюКлиентскойБазыРеквизиты.СоздатьМенеджерЗаписи();
						МенеджерЗаписи.БизнесПроцесс = НовыйБизнесПроцесс.Ссылка;
						МенеджерЗаписи.Партнер = ПартнерКЛСтруктура.Партнер;
						МенеджерЗаписи.Реквизит = Реквизит;
						
						МенеджерЗаписи.Записать();
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
			НовыйБизнесПроцесс.Старт();
			
			СписокСозданныеБизнесПроцессы.Добавить(НовыйБизнесПроцесс.Ссылка);
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		СтрОшибка = ОписаниеОшибки();
		ОтменитьТранзакцию();
		Сообщить(СтрОшибка);
		СписокСозданныеБизнесПроцессы.Очистить();
		Возврат Ложь;
		
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПолучитьПредставлениеРеквизита(ИмяРеквизита)
	Если ИмяРеквизита = "ИНН" Тогда
		Возврат НСтр("ru = 'ИНН'");
	ИначеЕсли ИмяРеквизита = "Адрес" Тогда
		Возврат НСтр("ru = 'Адрес'");
	ИначеЕсли ИмяРеквизита = "АдресЭлектроннойПочты" Тогда
		Возврат НСтр("ru = 'Адрес электронной почты'");
	ИначеЕсли ИмяРеквизита = "Телефон" Тогда
		Возврат НСтр("ru = 'Телефон'");
	ИначеЕсли ИмяРеквизита = "Наименование" Тогда
		Возврат НСтр("ru = 'Наименование'");
	ИначеЕсли ИмяРеквизита = "НаименованиеПолное" Тогда
		Возврат НСтр("ru = 'Наименование полное'");
	Иначе
		Возврат ИмяРеквизита;
	КонецЕсли;
	
КонецФункции

&НаСервере 
Функция НайтиДубли(СсылкаНаОбъект, СтруктураПоиска, СписокКонтактов)
	
	ТаблицаНайдено.Очистить();
	ТаблицаРасшифровкаНайдено.Очистить();
	
	Запрос = Новый Запрос;
	Сч = 0;

	ПервоеЗначение = Истина;
	Для каждого КлючИЗначение Из СтруктураПоиска Цикл
		ИмяРеквизита      = КлючИЗначение.Ключ;
		СтепеньСхожести   = КлючИЗначение.Значение;
		ЗначениеРеквизита = Неопределено;
		Реквизиты = "";
		Сч = Сч + 1;
		
		Если Найти(ИмяРеквизита,"Контакт")=0  Тогда
			Если ТипЗнч(СсылкаНаОбъект) = Тип("Структура") Тогда
				СсылкаНаОбъект.Свойство(ИмяРеквизита,ЗначениеРеквизита);
			Иначе
				Попытка
					ЗначениеРеквизита = СсылкаНаОбъект[ИмяРеквизита];
				Исключение
					Продолжить;
				КонецПопытки;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ ПервоеЗначение Тогда
				Реквизиты = "
				| ОБЪЕДИНИТЬ ВСЕ
				|";
			КонецЕсли;
			
			Реквизиты =  Реквизиты + "
			|ВЫБРАТЬ " +  ?(ПервоеЗначение,"РАЗРЕШЕННЫЕ","")+"
			|Данные.Ссылка" +  ?(ПервоеЗначение," КАК Ссылка","");
			
			Реквизиты = Реквизиты + "
			|,Данные."+ИмяРеквизита + ?(ПервоеЗначение," КАК Реквизит","");
			
			Реквизиты = Реквизиты + "
			|,"""+ИмяРеквизита + """" + ?(ПервоеЗначение," КАК ИмяРеквизита","");
			
			Условия  = "
			|Данные."+ИмяРеквизита + " " + СтепеньСхожести + " &" + ИмяРеквизита + Строка(Сч);
			
			Запрос.УстановитьПараметр(ИмяРеквизита+ Строка(Сч),?(СтепеньСхожести = "ПОДОБНО","%"+ЗначениеРеквизита+"%",ЗначениеРеквизита));
			
			Запрос.Текст = Запрос.Текст + Реквизиты + "
				|ИЗ Справочник.Партнеры КАК Данные
				|ГДЕ " + Сред(Условия,2) + "  И Данные.Ссылка <> &СсылкаНаОбъект";
				
			Если ИмяРеквизита <> "CRM_ИНН" И ИмяРеквизита <> "НаименованиеПолное" Тогда
				Реквизиты = "
				|
				| ОБЪЕДИНИТЬ ВСЕ
				|";
				
				Реквизиты =  Реквизиты + "
				|ВЫБРАТЬ
				|Данные.Ссылка" +  ?(ПервоеЗначение," КАК Ссылка","");
				
				Реквизиты = Реквизиты + "
				|,Данные."+ИмяРеквизита + ?(ПервоеЗначение," КАК Реквизит","");
				
				Реквизиты = Реквизиты + "
				|,"""+ИмяРеквизита + """" + ?(ПервоеЗначение," КАК ИмяРеквизита","");
				
				Условия  = "
				|Данные."+ИмяРеквизита + " " + СтепеньСхожести + " &" + ИмяРеквизита + Строка(Сч);
				
				Запрос.УстановитьПараметр(ИмяРеквизита+ Строка(Сч),?(СтепеньСхожести = "ПОДОБНО","%"+ЗначениеРеквизита+"%",ЗначениеРеквизита));
				
				Запрос.Текст = Запрос.Текст + Реквизиты + "
					|ИЗ Справочник.КонтактныеЛицаПартнеров КАК Данные
					|ГДЕ " + Сред(Условия,2) + "  И Данные.Ссылка <> &СсылкаНаОбъект";
					
			КонецЕсли;
			
			ПервоеЗначение = Ложь;
			
		Иначе
				
			Массив = Новый Массив;
			Для Каждого Стр Из СписокКонтактов Цикл
				ИмяРеквизита = СтрЗаменить(ИмяРеквизита,"Контакт_","");
				Если Стр.Значение = ИмяРеквизита И ЗначениеЗаполнено(Стр.Представление) Тогда
					Массив.Добавить(Стр.Представление);	
				КонецЕсли;
				
			КонецЦикла;
			
			Если Массив.Количество() > 0 Тогда
				Для Каждого Стр Из Массив Цикл
					Если НЕ ПервоеЗначение Тогда
						Реквизиты = "
						| ОБЪЕДИНИТЬ ВСЕ
						|";
					КонецЕсли;
		
					Реквизиты =  Реквизиты + "
					|ВЫБРАТЬ " +  ?(ПервоеЗначение,"РАЗРЕШЕННЫЕ","")+"
					|Данные.Ссылка" +  ?(ПервоеЗначение," КАК Ссылка","");
		
					Реквизиты = Реквизиты + "
					|,Данные.Представление" + ?(ПервоеЗначение," КАК Реквизит","");
					
					Реквизиты = Реквизиты + "
					|,"""+ИмяРеквизита + """" + ?(ПервоеЗначение," КАК ИмяРеквизита","");
					
					Условия  = "
					|Данные.Представление "+ СтепеньСхожести + " &" + ИмяРеквизита + Строка(Сч) + "
					|И Данные.Тип = &Тип"+ Строка(Сч);
					
					Запрос.УстановитьПараметр(ИмяРеквизита + Строка(Сч),?(СтепеньСхожести = "ПОДОБНО","%"+Стр+"%",Стр));
					Если ИмяРеквизита = "Адрес" Тогда
						Запрос.УстановитьПараметр("Тип" + Строка(Сч),Перечисления.ТипыКонтактнойИнформации.Адрес);
					ИначеЕсли ИмяРеквизита = "Телефон" Тогда 
						Запрос.УстановитьПараметр("Тип" + Строка(Сч),Перечисления.ТипыКонтактнойИнформации.Телефон);
					ИначеЕсли ИмяРеквизита = "АдресЭлектроннойПочты" Тогда 
						Запрос.УстановитьПараметр("Тип" + Строка(Сч),Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
					КонецЕсли;
					
					Запрос.Текст = Запрос.Текст + Реквизиты + "
						|ИЗ Справочник.Партнеры.КонтактнаяИнформация КАК Данные
						|ГДЕ " + Сред(Условия,2) + "  И Данные.Ссылка <> &СсылкаНаОбъект";
					
					Сч = Сч + 1;
					
					Реквизиты = "
					| ОБЪЕДИНИТЬ ВСЕ
					|";
		
					Реквизиты =  Реквизиты + "
					|ВЫБРАТЬ
					|Данные.Ссылка" +  ?(ПервоеЗначение," КАК Ссылка","");
		
					Реквизиты = Реквизиты + "
					|,Данные.Представление" + ?(ПервоеЗначение," КАК Реквизит","");
					
					Реквизиты = Реквизиты + "
					|,"""+ИмяРеквизита + """" + ?(ПервоеЗначение," КАК ИмяРеквизита","");
					
					Условия  = "
					|Данные.Представление "+ СтепеньСхожести + " &" + ИмяРеквизита + Строка(Сч) + "
					|И Данные.Тип = &Тип"+ Строка(Сч);
					
					Запрос.УстановитьПараметр(ИмяРеквизита + Строка(Сч),?(СтепеньСхожести = "ПОДОБНО","%"+Стр+"%",Стр));
					Если ИмяРеквизита = "Адрес" Тогда
						Запрос.УстановитьПараметр("Тип" + Строка(Сч),Перечисления.ТипыКонтактнойИнформации.Адрес);
					ИначеЕсли ИмяРеквизита = "Телефон" Тогда 
						Запрос.УстановитьПараметр("Тип" + Строка(Сч),Перечисления.ТипыКонтактнойИнформации.Телефон);
					ИначеЕсли ИмяРеквизита = "АдресЭлектроннойПочты" Тогда 
						Запрос.УстановитьПараметр("Тип" + Строка(Сч),Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
					КонецЕсли;
					
					Запрос.Текст = Запрос.Текст + Реквизиты + "
						|ИЗ Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК Данные
						|ГДЕ " + Сред(Условия,2) + "  И Данные.Ссылка <> &СсылкаНаОбъект";
					
					Сч = Сч + 1;
					
					ПервоеЗначение = Ложь;
					
				КонецЦикла;
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(Запрос.Текст) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект", СсылкаНаОбъект);
	
	Результат = Запрос.Выполнить();	
	Выборка = Результат.Выбрать();
	ЕстьНайденные = Ложь;	
	Пока Выборка.Следующий() Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Объект", Выборка.Ссылка);
		
		НайдСтрока = ТаблицаНайдено.НайтиСтроки(Отбор);
		Если НайдСтрока.Количество() = 0 Тогда
			Строка = ТаблицаНайдено.Добавить();
			Строка.Объект = Выборка.Ссылка;
		КонецЕсли;
		
		ПредставлениеНайденоПо = ПолучитьПредставлениеРеквизита(СтрЗаменить(Выборка.ИмяРеквизита,"CRM_",""));
		Если ЗначениеЗаполнено(Выборка.Реквизит) Тогда
			ПредставлениеНайденоПо = ПредставлениеНайденоПо + ": " + Строка(Выборка.Реквизит);
		КонецЕсли;
		Если ТаблицаРасшифровкаНайдено.НайтиСтроки(Новый Структура("Объект,ПредставлениеНайденоПо", Выборка.Ссылка, ПредставлениеНайденоПо)).Количество() = 0 Тогда
			Строка = ТаблицаРасшифровкаНайдено.Добавить();
			Строка.Объект = Выборка.Ссылка;
			Строка.ПредставлениеНайденоПо = ПредставлениеНайденоПо;
		КонецЕсли;
		
		ЕстьНайденные = Истина;
		
	КонецЦикла;
	
	Возврат ЕстьНайденные;
	
КонецФункции

&НаКлиенте
Процедура ФормированиеПоручений()
	ВыбранныеИсполнители = Неопределено;
	Если ВидРаспределенияПоИсполнителям = 1 Тогда
		ВыбранныеИсполнители = ПолучитьВыбранныхИсполнителей(ЭтотОбъект);
		Если ВыбранныеИсполнители.Количество() = 0 Тогда
			ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного исполнителя!'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Если ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов") Тогда
		Если ВидРаспределенияПоИсполнителям = 1 Тогда
			ИсполнителиКонтрольПотенциалаКлиентов = ВыбранныеИсполнители;
		Иначе
			ИсполнителиКонтрольПотенциалаКлиентов = ПолучитьВыбранныхИсполнителейПоОтветственнымМенеджерамКлиентов();
			Если ИсполнителиКонтрольПотенциалаКлиентов.Количество() = 0 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Для некоторых клиентов не указан основной менеджер - нужно выбрать иполнителя для клиентов, которым не назначен ответственный менеджер!'"),, "ПользовательОтветственныйПоУмолчанию");
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		МассивПользователейНеРазрешеноРедактированиеПотенциала = ПроверитьПравоПользователейНаРедактированиеПотенциалаКлиента(ИсполнителиКонтрольПотенциалаКлиентов);
		
		Если МассивПользователейНеРазрешеноРедактированиеПотенциала.Количество() > 0 Тогда
			ДополнительныеПараметры = Новый Структура("МассивПользователейНеРазрешеноРедактированиеПотенциала, ИсполнителиКонтрольПотенциалаКлиентов",
				МассивПользователейНеРазрешеноРедактированиеПотенциала, ИсполнителиКонтрольПотенциалаКлиентов);
			ОписаниеОповещения = Новый ОписаниеОповещения("ФормированиеПорученийПродолжение", ЭтотОбъект, ДополнительныеПараметры);
			ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Один или более из выбранных пользователей не имеет право на изменение потенциала клиента.
				|Поручение для выполнения по клиентам таких пользователей будет создано для текущего пользователя (автора).
				|Продолжить?'"), РежимДиалогаВопрос.ДаНет);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	ТекстВопроса = ВопросФормированиеПоручений();
	ОписаниеОповещения = Новый ОписаниеОповещения("ФормированиеПорученийЗавершение", ЭтотОбъект, ВыбранныеИсполнители);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ФормированиеПорученийПродолжение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Если ВидРаспределенияПоИсполнителям = 1 Тогда
			ВыбранныеИсполнители = Новый Массив();
			Для Каждого ПользовательСсылка Из ДополнительныеПараметры.ИсполнителиКонтрольПотенциалаКлиентов Цикл
				Если ДополнительныеПараметры.МассивПользователейНеРазрешеноРедактированиеПотенциала.Найти(ПользовательСсылка) = Неопределено Тогда
					Если ВыбранныеИсполнители.Найти(ПользовательСсылка) = Неопределено Тогда
						ВыбранныеИсполнители.Добавить(ПользовательСсылка);
					КонецЕсли;
				Иначе
					Если ВыбранныеИсполнители.Найти(ПользовательСеанса) = Неопределено Тогда
						ВыбранныеИсполнители.Добавить(ПользовательСеанса);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ТаблицаИсполнителей.Очистить();
			Для Каждого ПользовательСсылка Из ВыбранныеИсполнители Цикл
				НоваяСтрока = ТаблицаИсполнителей.Добавить();
				НоваяСтрока.Пользователь = ПользовательСсылка;
			КонецЦикла;
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	ТекстВопроса = ВопросФормированиеПоручений();
	ОписаниеОповещения = Новый ОписаниеОповещения("ФормированиеПорученийЗавершение", ЭтотОбъект, ВыбранныеИсполнители);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура ФормированиеПорученийЗавершение(Ответ, ВыбранныеИсполнители) Экспорт
	Если Ответ <> КодВозвратаДиалога.Да Тогда Возврат; КонецЕсли;
	
	Состояние(НСтр("ru = 'Формирование поручений...'"));
	Если СформироватьПоручения(ВыбранныеИсполнители) Тогда
		РаботаМастераЗавершена();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РаботаМастераЗавершена()
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокСозданныеЗадачи.Отбор,
		"БизнесПроцесс", СписокСозданныеБизнесПроцессы, ВидСравненияКомпоновкиДанных.ВСписке,, Истина);
	//
	
	Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаРаботаМастераЗавершена;
	НастроитьЗаголовкиШагов(ЭтотОбъект);
	
	Элементы.КомандаНазад.Видимость = Ложь;
	Элементы.КомандаДалее.Заголовок = НСтр("ru = '  Закрыть  '");
	Элементы.КомандаДалее.Картинка = БиблиотекаКартинок.Закрыть;
	Элементы.КомандаОтмена.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьПометкиВДереве(ПолученныеЭлементы, Установить, бРекурсивно = Истина)
	Для Каждого ЭлементДерева Из ПолученныеЭлементы Цикл
		Если ЗначениеЗаполнено(ЭлементДерева.Партнер) Тогда
			Если	ТипЗнч(ЭлементДерева.Партнер) = Тип("СправочникСсылка.Партнеры")
				Или	ТипЗнч(ЭлементДерева.Партнер) = Тип("ДокументСсылка.ТелефонныйЗвонок")
				Или	ТипЗнч(ЭлементДерева.Партнер) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
				ЭлементДерева.Пометка = Установить;
			Иначе
				ЭлементДерева.Пометка = Ложь;
			КонецЕсли;
		Иначе
			ЭлементДерева.Пометка = Ложь;
		КонецЕсли;
		
		Если бРекурсивно Тогда
			ПодчЭлементы = ЭлементДерева.ПолучитьЭлементы();
			Если ПодчЭлементы.Количество() > 0 Тогда
				УстановитьСнятьПометкиВДереве(ПодчЭлементы, Установить)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьПометки(РеквизитТаблица, Установить)
	Для Каждого СтрокаТаблицы Из РеквизитТаблица Цикл
		СтрокаТаблицы.Пометка = Установить;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПроверитьНаВыбранныеЭлементы(ПолученныеЭлементы)
	Для Каждого ЭлементДерева Из ПолученныеЭлементы Цикл
		Если ЗначениеЗаполнено(ЭлементДерева.Партнер) Тогда
			Если	ТипЗнч(ЭлементДерева.Партнер) = Тип("СправочникСсылка.Партнеры")
				Или	ТипЗнч(ЭлементДерева.Партнер) = Тип("СправочникСсылка.КонтактныеЛицаПартнеров")
				Или	ТипЗнч(ЭлементДерева.Партнер) = Тип("ДокументСсылка.ТелефонныйЗвонок")
				Или	ТипЗнч(ЭлементДерева.Партнер) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
				//
				Если ЭлементДерева.Пометка Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ПодчЭлементы = ЭлементДерева.ПолучитьЭлементы();
		Если ПодчЭлементы.Количество() > 0 Тогда
			Рез = ПроверитьНаВыбранныеЭлементы(ПодчЭлементы);
			Если Рез Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

&НаСервере
Процедура СохранитьНастройкиМастера()
	СтруктураНастройки = Новый Структура();
	
	СтруктураНастройки.Вставить("ТаблицаРеквизитыПартнераКИ", Новый Массив());
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыПартнераКИ Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.ТаблицаРеквизитыПартнераКИ.Добавить(СтрокаТаблицы.Реквизит);
		КонецЕсли;
	КонецЦикла;
	СтруктураНастройки.Вставить("ТаблицаРеквизитыПартнераДополнительные", Новый Массив());
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыПартнераДополнительные Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.ТаблицаРеквизитыПартнераДополнительные.Добавить(СтрокаТаблицы.Реквизит);
		КонецЕсли;
	КонецЦикла;
	СтруктураНастройки.Вставить("ТаблицаРеквизитыКонтактногоЛицаКИ", Новый Массив());
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыКонтактногоЛицаКИ Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.ТаблицаРеквизитыКонтактногоЛицаКИ.Добавить(СтрокаТаблицы.Реквизит);
		КонецЕсли;
	КонецЦикла;
	СтруктураНастройки.Вставить("ТаблицаРеквизитыКонтактногоЛицаДополнительные", Новый Массив());
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыКонтактногоЛицаДополнительные Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.ТаблицаРеквизитыКонтактногоЛицаДополнительные.Добавить(СтрокаТаблицы.Реквизит);
		КонецЕсли;
	КонецЦикла;
	СтруктураНастройки.Вставить("РеквизитыПоискаДублейПартнеров", Новый Массив());
	Для Каждого СтрокаТаблицы Из РеквизитыПоискаДублейПартнеров Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.РеквизитыПоискаДублейПартнеров.Добавить(СтрокаТаблицы.Значение);
		КонецЕсли;
	КонецЦикла;
	
	СтруктураНастройки.Вставить("Проект", Проект);
	СтруктураНастройки.Вставить("КонтрольПотенциалаФлагБезЗаполненногоПотенциала", КонтрольПотенциалаФлагБезЗаполненногоПотенциала);
	СтруктураНастройки.Вставить("КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал", КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал);
	СтруктураНастройки.Вставить("КонтрольРегистрацииКлиентовФлагСобытия", КонтрольРегистрацииКлиентовФлагСобытия);
	СтруктураНастройки.Вставить("КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма", КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма);
	
	CRM_ХранилищеНастроек.Сохранить("МастерПроверкиКлиентскойБазы", "НастройкиМастера", СтруктураНастройки);
КонецПроцедуры

&НаСервере
Функция ПолучитьСохраненныеНастройкиМастера()
	Возврат CRM_ХранилищеНастроек.Загрузить("МастерПроверкиКлиентскойБазы", "НастройкиМастера");
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПервуюСтраницуМастера(Форма)
	Если ЗначениеЗаполнено(Форма.ВидМастера) Тогда
		Если Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации") Тогда
			Возврат Форма.Элементы.СтраницаОписаниеМастераЗаполненияКИ;
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов") Тогда
			Возврат Форма.Элементы.СтраницаОписаниеМастераЗаполненияСвойствКлиентов;
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов") Тогда
			Возврат Форма.Элементы.СтраницаОписаниеМастераПоискаЗадвоенныхКлиентов;
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов") Тогда
			Возврат Форма.Элементы.СтраницаОписаниеМастераКонтроляПотенциалаКлиентов;
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов") Тогда
			Возврат Форма.Элементы.СтраницаОписаниеМастераКонтрольРегистрацииКлиентов;
		Иначе
			Возврат Форма.Элементы.СтраницаВыборМастера;
		КонецЕсли;
	Иначе
		Возврат Форма.Элементы.СтраницаВыборМастера;
	КонецЕсли;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗаголовкиШагов(Форма)
	нИндекс = 1;
	Пока Истина Цикл
		Попытка
			Форма.Элементы["ДекорацияШаг" + Формат(нИндекс, "ЧН=0; ЧГ=")].Шрифт = Новый Шрифт();
			нИндекс = нИндекс + 1;
		Исключение
			Прервать;
		КонецПопытки;
	КонецЦикла;
	
	ИмяЭлемента = Неопределено;
	Если Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаОписаниеМастераЗаполненияКИ Тогда
		ИмяЭлемента = "ДекорацияШаг13";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаОписаниеМастераЗаполненияСвойствКлиентов Тогда
		ИмяЭлемента = "ДекорацияШаг14";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаОписаниеМастераПоискаЗадвоенныхКлиентов Тогда
		ИмяЭлемента = "ДекорацияШаг15";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаОписаниеМастераКонтроляПотенциалаКлиентов Тогда
		ИмяЭлемента = "ДекорацияШаг16";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаОписаниеМастераКонтрольРегистрацииКлиентов Тогда
		ИмяЭлемента = "ДекорацияШаг21";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаВыборМастера Тогда
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольЗаполненияКИВыборВидовКИ Тогда
		ИмяЭлемента = "ДекорацияШаг1";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольЗаполненияКИФормированиеСписков Тогда
		ИмяЭлемента = "ДекорацияШаг2";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольЗаполненияДопРеквизитовВыборДопРеквизитов Тогда
		ИмяЭлемента = "ДекорацияШаг4";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольЗаполненияДопРеквизитовФормированиеСписков Тогда
		ИмяЭлемента = "ДекорацияШаг5";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
		Если Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации") Тогда
			ИмяЭлемента = "ДекорацияШаг3";
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов") Тогда
			ИмяЭлемента = "ДекорацияШаг6";
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов") Тогда
			ИмяЭлемента = "ДекорацияШаг9";
			
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов") Тогда
			ИмяЭлемента = "ДекорацияШаг19";
			
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов") Тогда
			ИмяЭлемента = "ДекорацияШаг24";
		КонецЕсли;
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольДублированияВыборРеквизитов Тогда
		ИмяЭлемента = "ДекорацияШаг7";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольДублированияФормированиеСписков Тогда
		ИмяЭлемента = "ДекорацияШаг8";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольПотенциалаВыборРеквизитов Тогда
		ИмяЭлемента = "ДекорацияШаг17";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольПотенциалаФормированиеСписков Тогда
		ИмяЭлемента = "ДекорацияШаг18";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольРегистрацииКлиентовВыборРеквизитов Тогда
		ИмяЭлемента = "ДекорацияШаг22";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаКонтрольРегистрацииКлиентовФормированиеСписков Тогда
		ИмяЭлемента = "ДекорацияШаг23";
		
	ИначеЕсли Форма.Элементы.ПанельСтраницы.ТекущаяСтраница = Форма.Элементы.СтраницаРаботаМастераЗавершена Тогда
		Если Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации") Тогда
			ИмяЭлемента = "ДекорацияШаг10";
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов") Тогда
			ИмяЭлемента = "ДекорацияШаг11";
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов") Тогда
			ИмяЭлемента = "ДекорацияШаг12";
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов") Тогда
			ИмяЭлемента = "ДекорацияШаг20";
		ИначеЕсли Форма.ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов") Тогда
			ИмяЭлемента = "ДекорацияШаг25";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ИмяЭлемента <> Неопределено Тогда
		Форма.Элементы[ИмяЭлемента].Шрифт = Новый Шрифт(,,Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрытьМастер(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаЗакрытьМастерЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Завершить работу с мастером?'"), РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрытьМастерЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		// Снимем признак модифицированности, чтобы не было вопроса о сохранении данных.
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура КомандаДалее(Команда)
	ТекСтраница = Элементы.ПанельСтраницы.ТекущаяСтраница;
	
	Если ТекСтраница = Элементы.СтраницаРаботаМастераЗавершена Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	Если Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
		Если Не ЗначениеЗаполнено(ДатаИсполнения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбрана дата исполнения!'"),, "ДатаИсполнения");
			Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДатаКонтроля) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбрана дата контроля!'"),, "ДатаКонтроля");
			Возврат;
		КонецЕсли;
		Если ДатаКонтроля < ДатаИсполнения Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Дата контроля не может быть меньше даты исполнения!'"),, "ДатаКонтроля");
			Возврат;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Проверяющий) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбран проверяющий!'"),, "Проверяющий");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации") Тогда
		Если Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект) Тогда
			Элементы.ГруппаПоказыватьНачальнуюСтраницу.Видимость = Ложь;
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияКИВыборВидовКИ;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияКИВыборВидовКИ Тогда
			ВыбранныеВидыКИ = ПолучитьВыбранныеВидыКИ(ЭтотОбъект);
			Если ВыбранныеВидыКИ.Партнер.Количество() = 0 И ВыбранныеВидыКИ.КонтактноеЛицо.Количество() = 0 Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного вида контактной информации!'"));
				Возврат;
			КонецЕсли;
			
			Состояние(НСтр("ru = 'Формируется список клиентов...'"));
			СформироватьДеревоПартнеровКИ();
			РазвернутьСтрокиДерева(Элементы.ДеревоПартнеровКИ, "ДеревоПартнеровКИ", Ложь);
			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияКИФормированиеСписков;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияКИФормированиеСписков Тогда
			Если Не ПроверитьНаВыбранныеЭлементы(ДеревоПартнеровКИ.ПолучитьЭлементы()) Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного клиента!'"));
				Возврат;
			КонецЕсли;
			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			// подсчет выбранных клиентов
			КоличествоВыбранныхПартнеров = ПодсчетВыбранныхКлиентов();
			ВывестиКоличествоВыбранныхКлиентов();
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
			ФормированиеПоручений();
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов") Тогда
		Если Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект) Тогда
			Элементы.ГруппаПоказыватьНачальнуюСтраницу.Видимость = Ложь;
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовВыборДопРеквизитов;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовВыборДопРеквизитов Тогда
			ВыбранныеДопРеквизиты = ПолучитьВыбранныеДопРеквизиты(ЭтотОбъект);
			Если ВыбранныеДопРеквизиты.Партнер.Количество() = 0 И ВыбранныеДопРеквизиты.КонтактноеЛицо.Количество() = 0 Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного дополнительного реквизита!'"));
				Возврат;
			КонецЕсли;
			
			Состояние(НСтр("ru = 'Формируется список клиентов...'"));
			СформироватьДеревоПартнеровДопРеквизиты();
			РазвернутьСтрокиДерева(Элементы.ДеревоПартнеровДопРеквизиты, "ДеревоПартнеровДопРеквизиты", Ложь);
			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовФормированиеСписков;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовФормированиеСписков Тогда
			Если Не ПроверитьНаВыбранныеЭлементы(ДеревоПартнеровДопРеквизиты.ПолучитьЭлементы()) Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного клиента!'"));
				Возврат;
			КонецЕсли;
			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			// подсчет выбранных клиентов
			КоличествоВыбранныхПартнеров = ПодсчетВыбранныхКлиентов();
			ВывестиКоличествоВыбранныхКлиентов();
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
			ФормированиеПоручений();
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов") Тогда
		Если Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект) Тогда
			Элементы.ГруппаПоказыватьНачальнуюСтраницу.Видимость = Ложь;
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольДублированияВыборРеквизитов;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольДублированияВыборРеквизитов Тогда
			ВыбранныеРеквизиты = ПолучитьВыбранныеРеквизитыПоискаДублей(ЭтотОбъект);
			Если ВыбранныеРеквизиты.Партнер.Количество() = 0 И ВыбранныеРеквизиты.КонтактноеЛицо.Количество() = 0 Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного реквизита!'"));
				Возврат;
			КонецЕсли;
			
			Состояние(НСтр("ru = 'Формируется список клиентов...'"));
			СформироватьДеревоПартнеровДублирующиесяРеквизиты();
			РазвернутьСтрокиДерева(Элементы.ДеревоДублирующихсяПартнеров, "ДеревоДублирующихсяПартнеров", Ложь);
			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольДублированияФормированиеСписков;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольДублированияФормированиеСписков Тогда
			Если Не ПроверитьНаВыбранныеЭлементы(ДеревоДублирующихсяПартнеров.ПолучитьЭлементы()) Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного клиента!'"));
				Возврат;
			КонецЕсли;
			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			// подсчет выбранных клиентов
			КоличествоВыбранныхПартнеров = ПодсчетВыбранныхКлиентов();
			ВывестиКоличествоВыбранныхКлиентов();
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
			ФормированиеПоручений();
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов") Тогда
		Если ТекСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект) Тогда
			Элементы.ГруппаПоказыватьНачальнуюСтраницу.Видимость = Ложь;	
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольПотенциалаВыборРеквизитов;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольПотенциалаВыборРеквизитов Тогда
			Если Не КонтрольПотенциалаФлагБезЗаполненногоПотенциала И (Не ВедетсяИсторияРеквизитовВлияющихНаПотенциалКлиента Или Не КонтрольПотенциалаФлагИзменилисьРеквизитыВлияющиеНаПотенциал) Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одно условие поиска!'"));
				Возврат;
			КонецЕсли;
			Если Подразделение.Пустая() Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано подразделение!'"));
				Возврат;
			КонецЕсли;
			Если ПолучитьФормулуРасчетаПотенциала() = "" Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'У подразделения не заполнена формула расчета потенциала!'"));
				Возврат;
			КонецЕсли;
			Состояние(НСтр("ru = 'Формируется список клиентов...'"));
			СформироватьДеревоПартнеровКонтрольПотенциала();
			РазвернутьСтрокиДерева(Элементы.ДеревоПартнерыКонтрольПотенциала, "ДеревоПартнерыКонтрольПотенциала", Ложь);
			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольПотенциалаФормированиеСписков;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			// подсчет выбранных клиентов
			КоличествоВыбранныхПартнеров = ПодсчетВыбранныхКлиентов();
			ВывестиКоличествоВыбранныхКлиентов();
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольПотенциалаФормированиеСписков Тогда
			Если Не ПроверитьНаВыбранныеЭлементы(ДеревоПартнерыКонтрольПотенциала.ПолучитьЭлементы()) Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного клиента!'"));
				Возврат;
			КонецЕсли;
			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
			ФормированиеПоручений();
			Возврат;
		КонецЕсли;
		
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов") Тогда
		Если ТекСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект) Тогда
			Элементы.ГруппаПоказыватьНачальнуюСтраницу.Видимость = Ложь;			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовВыборРеквизитов;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовВыборРеквизитов Тогда
			Если Не КонтрольРегистрацииКлиентовФлагСобытия И Не КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбран ни один вид документа!'"));
				Возврат;
			КонецЕсли;
			
			Состояние(НСтр("ru = 'Формируется список событий...'"));
			СформироватьДеревоСобытияКонтрольРегистрацииКлиентов();
			РазвернутьСтрокиДерева(Элементы.ДеревоСобытияКонтрольРегистрацииКлиентов, "ДеревоСобытияКонтрольРегистрацииКлиентов", Ложь);
			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовФормированиеСписков;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			// подсчет выбранных событий
			КоличествоВыбранныхПартнеров = ПодсчетВыбранныхКлиентов();
			ВывестиКоличествоВыбранныхКлиентов();
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовФормированиеСписков Тогда
			Если Не ПроверитьНаВыбранныеЭлементы(ДеревоСобытияКонтрольРегистрацииКлиентов.ПолучитьЭлементы()) Тогда
				ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного объекта!'"));
				Возврат;
			КонецЕсли;
			
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
			
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
			ФормированиеПоручений();
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект) Тогда
		Элементы.КомандаНазад.Доступность = Ложь;
	Иначе
		Элементы.КомандаНазад.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаНазад(Команда)
	ТекСтраница = Элементы.ПанельСтраницы.ТекущаяСтраница;
	
	Если ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации") Тогда
		Если ТекСтраница = Элементы.СтраницаКонтрольЗаполненияКИВыборВидовКИ Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект);
			Элементы.ГруппаПоказыватьНачальнуюСтраницу.Видимость = Истина;			
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияКИФормированиеСписков Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияКИВыборВидовКИ;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияКИФормированиеСписков;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		КонецЕсли;
	
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов") Тогда
		Если ТекСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовВыборДопРеквизитов Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект);
			Элементы.ГруппаПоказыватьНачальнуюСтраницу.Видимость = Истина;			
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовФормированиеСписков Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовВыборДопРеквизитов;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовФормированиеСписков;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		КонецЕсли;
		
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов") Тогда
		Если ТекСтраница = Элементы.СтраницаКонтрольДублированияВыборРеквизитов Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект);
			Элементы.ГруппаПоказыватьНачальнуюСтраницу.Видимость = Истина;			
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольДублированияФормированиеСписков Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольДублированияВыборРеквизитов;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольДублированияФормированиеСписков;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		КонецЕсли;
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов") Тогда
		Если ТекСтраница = Элементы.СтраницаКонтрольПотенциалаВыборРеквизитов Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект);
			Элементы.ГруппаПоказыватьНачальнуюСтраницу.Видимость = Истина;			
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольПотенциалаФормированиеСписков Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольПотенциалаВыборРеквизитов;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольПотенциалаФормированиеСписков;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		КонецЕсли;
	ИначеЕсли ВидКонтроля = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов") Тогда
		Если ТекСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовВыборРеквизитов Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект);
			Элементы.ГруппаПоказыватьНачальнуюСтраницу.Видимость = Истина;			
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовФормированиеСписков Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовВыборРеквизитов;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		ИначеЕсли ТекСтраница = Элементы.СтраницаКонтрольЗаполненияВыборПолучателейПоручений Тогда
			Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовФормированиеСписков;
			НастроитьЗаголовкиШагов(ЭтотОбъект);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект) Тогда
		Элементы.КомандаНазад.Доступность = Ложь;
	Иначе
		Элементы.КомандаНазад.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтборНажатие(ИмяРеквизитаАдресОтбор, ОписаниеОповещенияОЗавершении)
	
	ПараметрыСтруктура = Новый Структура();
	ПараметрыСтруктура.Вставить("ТекстЗапроса", ПолучитьТекстЗапросаДляОтборов(ВидКонтроля,
		Новый Структура("КонтрольРегистрацииКлиентовФлагСобытия,КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма", КонтрольРегистрацииКлиентовФлагСобытия, КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма)));
	//
	ПараметрыСтруктура.Вставить("Заголовок", НСтр("ru = 'Настройка отбора по клиентам и контактным лицам'"));
	Если ЭтоАдресВременногоХранилища(ЭтотОбъект[ИмяРеквизитаАдресОтбор]) Тогда
		ПараметрыСтруктура.Вставить("ОтборКомпоновкиДанных", ПолучитьИзВременногоХранилища(ЭтотОбъект[ИмяРеквизитаАдресОтбор]));
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияОтборНажатиеЗавершение", ЭтотОбъект, Новый Структура("ИмяРеквизитаАдресОтбор, ОписаниеОповещения", ИмяРеквизитаАдресОтбор, ОписаниеОповещенияОЗавершении));
	ОткрытьФорму("ОбщаяФорма.CRM_ОтборКомпоновкиДанных", ПараметрыСтруктура, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтборНажатиеЗавершение(НастроенныйОтбор, ДополнительныеПараметры) Экспорт
		
	Если НастроенныйОтбор <> Неопределено Тогда
		Если ЭтоАдресВременногоХранилища(ЭтотОбъект[ДополнительныеПараметры.ИмяРеквизитаАдресОтбор]) Тогда
			Попытка УдалитьИзВременногоХранилища(ЭтотОбъект[ДополнительныеПараметры.ИмяРеквизитаАдресОтбор]);
			Исключение КонецПопытки;
		КонецЕсли;
		
		Если НастроенныйОтбор.Элементы.Количество() = 0 Тогда
			ЭтотОбъект[ДополнительныеПараметры.ИмяРеквизитаАдресОтбор] = "";
		Иначе
			ЭтотОбъект[ДополнительныеПараметры.ИмяРеквизитаАдресОтбор] = ПоместитьВоВременноеХранилище(НастроенныйОтбор, УникальныйИдентификатор);
		КонецЕсли;
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, Истина);
	Иначе	
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтборДляКИНажатие(Элемент)
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияОтборНажатиеПослеЗавершения", ЭтотОбъект, "АдресОтборДляКИ");
	ДекорацияОтборНажатие("АдресОтборДляКИ", ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтборДляДублирующихсяРеквизитовНажатие(Элемент)
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияОтборНажатиеПослеЗавершения", ЭтотОбъект, "АдресОтборДляДублирующихсяРеквизитов");
	ДекорацияОтборНажатие("АдресОтборДляДублирующихсяРеквизитов", ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтборКонтрольРегистрацииКлиентовНажатие(Элемент)
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияОтборНажатиеПослеЗавершения", ЭтотОбъект, "АдресОтборДляКонтрольРегистрацииКлиентов");
	ДекорацияОтборНажатие("АдресОтборДляКонтрольРегистрацииКлиентов", ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура КонтрольРегистрацииКлиентовФлагСобытияПриИзменении(Элемент)
	Если ЭтоАдресВременногоХранилища(АдресОтборДляКонтрольРегистрацииКлиентов) Тогда
		УдалитьИзВременногоХранилища(АдресОтборДляКонтрольРегистрацииКлиентов);
		АдресОтборДляКонтрольРегистрацииКлиентов = "";
		УстановитьЗаголовокОтборДляКонтрольРегистрацииКлиентов();
	КонецЕсли;
	Элементы.ДекорацияОтборКонтрольРегистрацииКлиентов.Доступность = (КонтрольРегистрацииКлиентовФлагСобытия Или КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма);
КонецПроцедуры

&НаКлиенте
Процедура КонтрольРегистрацииКлиентовФлагЭлектронныеПисьмаПриИзменении(Элемент)
	Если ЭтоАдресВременногоХранилища(АдресОтборДляКонтрольРегистрацииКлиентов) Тогда
		УдалитьИзВременногоХранилища(АдресОтборДляКонтрольРегистрацииКлиентов);
		АдресОтборДляКонтрольРегистрацииКлиентов = "";
		УстановитьЗаголовокОтборДляКонтрольРегистрацииКлиентов();
	КонецЕсли;
	Элементы.ДекорацияОтборКонтрольРегистрацииКлиентов.Доступность = (КонтрольРегистрацииКлиентовФлагСобытия Или КонтрольРегистрацииКлиентовФлагЭлектронныеПисьма);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтборДляДопРеквизитовНажатие(Элемент)
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияОтборНажатиеПослеЗавершения", ЭтотОбъект, "АдресОтборДляДопРеквизитов");
	ДекорацияОтборНажатие("АдресОтборДляДопРеквизитов", ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОтборНажатиеПослеЗавершения(Результат, ИмяРеквизитаАдресОтбор) Экспорт
	Если Результат Тогда
		Если ИмяРеквизитаАдресОтбор = "АдресОтборДляДопРеквизитов" Тогда
			УстановитьЗаголовокОтборДляДопРеквизитов();
		ИначеЕсли ИмяРеквизитаАдресОтбор = "АдресОтборДляКонтрольРегистрацииКлиентов" Тогда
			УстановитьЗаголовокОтборДляКонтрольРегистрацииКлиентов();
		ИначеЕсли ИмяРеквизитаАдресОтбор = "АдресОтборДляДублирующихсяРеквизитов" Тогда
			УстановитьЗаголовокОтборДляДублирующихсяРеквизитов();
		ИначеЕсли ИмяРеквизитаАдресОтбор = "АдресОтборДляКИ" Тогда
			УстановитьЗаголовокОтборДляКИ();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидРаспределенияПоИсполнителямПриИзменении(Элемент)
	ВидимостьИДоступностьЭлементовФормы(ЭтотОбъект);
	Элементы.ТаблицаИсполнителей.Обновить();
	ВывестиКоличествоВыбранныхКлиентов();
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьПометки(Команда)
	Если Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияКИФормированиеСписков Тогда
		УстановитьСнятьПометкиВДереве(ДеревоПартнеровКИ.ПолучитьЭлементы(), Истина);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовФормированиеСписков Тогда
		УстановитьСнятьПометкиВДереве(ДеревоПартнеровДопРеквизиты.ПолучитьЭлементы(), Истина);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольДублированияФормированиеСписков Тогда
		УстановитьСнятьПометкиВДереве(ДеревоДублирующихсяПартнеров.ПолучитьЭлементы(), Истина, Ложь);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольПотенциалаФормированиеСписков Тогда
		УстановитьСнятьПометкиВДереве(ДеревоПартнерыКонтрольПотенциала.ПолучитьЭлементы(), Истина);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовФормированиеСписков Тогда
		УстановитьСнятьПометкиВДереве(ДеревоСобытияКонтрольРегистрацииКлиентов.ПолучитьЭлементы(), Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьПометки(Команда)
	Если Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияКИФормированиеСписков Тогда
		УстановитьСнятьПометкиВДереве(ДеревоПартнеровКИ.ПолучитьЭлементы(), Ложь);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовФормированиеСписков Тогда
		УстановитьСнятьПометкиВДереве(ДеревоПартнеровДопРеквизиты.ПолучитьЭлементы(), Ложь);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольДублированияФормированиеСписков Тогда
		УстановитьСнятьПометкиВДереве(ДеревоДублирующихсяПартнеров.ПолучитьЭлементы(), Ложь, Ложь);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольПотенциалаФормированиеСписков Тогда
		УстановитьСнятьПометкиВДереве(ДеревоПартнерыКонтрольПотенциала.ПолучитьЭлементы(), Ложь);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовФормированиеСписков Тогда
		УстановитьСнятьПометкиВДереве(ДеревоСобытияКонтрольРегистрацииКлиентов.ПолучитьЭлементы(), Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьПометкиТаблицаРеквизитыКонтактногоЛицаДополнительные(Команда)
	УстановитьСнятьПометки(ТаблицаРеквизитыКонтактногоЛицаДополнительные, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьПометкиТаблицаРеквизитыКонтактногоЛицаКИ(Команда)
	УстановитьСнятьПометки(ТаблицаРеквизитыКонтактногоЛицаКИ, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьПометкиТаблицаРеквизитыПартнераДополнительные(Команда)
	УстановитьСнятьПометки(ТаблицаРеквизитыПартнераДополнительные, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьПометкиТаблицаРеквизитыПартнераКИ(Команда)
	УстановитьСнятьПометки(ТаблицаРеквизитыПартнераКИ, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьПометкиРеквизитыПоискаДублейПартнеров(Команда)
	УстановитьСнятьПометки(РеквизитыПоискаДублейПартнеров, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьПометкиТаблицаРеквизитыКонтактногоЛицаДополнительные(Команда)
	УстановитьСнятьПометки(ТаблицаРеквизитыКонтактногоЛицаДополнительные, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьПометкиТаблицаРеквизитыКонтактногоЛицаКИ(Команда)
	УстановитьСнятьПометки(ТаблицаРеквизитыКонтактногоЛицаКИ, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьПометкиТаблицаРеквизитыПартнераДополнительные(Команда)
	УстановитьСнятьПометки(ТаблицаРеквизитыПартнераДополнительные, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьПометкиТаблицаРеквизитыПартнераКИ(Команда)
	УстановитьСнятьПометки(ТаблицаРеквизитыПартнераКИ, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьПометкиРеквизитыПоискаДублейПартнеров(Команда)
	УстановитьСнятьПометки(РеквизитыПоискаДублейПартнеров, Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаТаблицаИсполнителейЗаполнитьПоГруппеПользователей(Команда)
	Если Не ИспользоватьГруппыПользователей Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Отключена настройка ""Использовать группы пользователей""!'"), 10);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("РежимВыбора,ЗакрыватьПриВыборе,ВыборГруппПользователей", Истина, Истина, Истина);
	ОткрытьФорму("Справочник.Пользователи.ФормаСписка", ПараметрыФормы, ЭтотОбъект, ,);
КонецПроцедуры

&НаКлиенте
Процедура КомандаТаблицаИсполнителейПодбор(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Ложь);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	Если ИспользоватьГруппыПользователей Тогда
		ПараметрыФормы.Вставить("ВыборГруппПользователей", Истина);
	КонецЕсли;
	ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка", ПараметрыФормы, Элементы.ТаблицаИсполнителей, , );
КонецПроцедуры

&НаКлиенте
Процедура КомандаТаблицаИсполнителейОчистить(Команда)
	Если ТаблицаИсполнителей.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("КомандаТаблицаИсполнителейОчиститьЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Очистить список исполнителей?'"), РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаТаблицаИсполнителейОчиститьЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ТаблицаИсполнителей.Очистить();
		ВывестиКоличествоВыбранныхКлиентов();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаРазвернуть(Команда)
	Если Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияКИФормированиеСписков Тогда
		РазвернутьСтрокиДерева(Элементы.ДеревоПартнеровКИ, "ДеревоПартнеровКИ", Истина);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовФормированиеСписков Тогда
		РазвернутьСтрокиДерева(Элементы.ДеревоПартнеровДопРеквизиты, "ДеревоПартнеровДопРеквизиты", Истина);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольДублированияФормированиеСписков Тогда
		РазвернутьСтрокиДерева(Элементы.ДеревоДублирующихсяПартнеров, "ДеревоДублирующихсяПартнеров", Истина);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольПотенциалаФормированиеСписков Тогда
		РазвернутьСтрокиДерева(Элементы.ДеревоПартнерыКонтрольПотенциала, "ДеревоПартнерыКонтрольПотенциала", Истина);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовФормированиеСписков Тогда
		РазвернутьСтрокиДерева(Элементы.ДеревоСобытияКонтрольРегистрацииКлиентов, "ДеревоСобытияКонтрольРегистрацииКлиентов", Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСвернуть(Команда)
	Если Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияКИФормированиеСписков Тогда
		РазвернутьСтрокиДерева(Элементы.ДеревоПартнеровКИ, "ДеревоПартнеровКИ", Ложь);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольЗаполненияДопРеквизитовФормированиеСписков Тогда
		РазвернутьСтрокиДерева(Элементы.ДеревоПартнеровДопРеквизиты, "ДеревоПартнеровДопРеквизиты", Ложь);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольДублированияФормированиеСписков Тогда
		РазвернутьСтрокиДерева(Элементы.ДеревоДублирующихсяПартнеров, "ДеревоДублирующихсяПартнеров", Ложь);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольПотенциалаФормированиеСписков Тогда
		РазвернутьСтрокиДерева(Элементы.ДеревоПартнерыКонтрольПотенциала, "ДеревоПартнерыКонтрольПотенциала", Ложь);
	ИначеЕсли Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаКонтрольРегистрацииКлиентовФормированиеСписков Тогда
		РазвернутьСтрокиДерева(Элементы.ДеревоСобытияКонтрольРегистрацииКлиентов, "ДеревоСобытияКонтрольРегистрацииКлиентов", Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновитьДеревоДублей(Команда)
	СформироватьДеревоПартнеровДублирующиесяРеквизиты();
	РазвернутьСтрокиДерева(Элементы.ДеревоДублирующихсяПартнеров, "ДеревоДублирующихсяПартнеров", Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсполнителейОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи")
		Или	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ГруппыПользователей")
		Или	ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		//
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
			МассивПользователейГрупп = ВыбранноеЗначение;
		Иначе
			МассивПользователейГрупп = Новый Массив();
			МассивПользователейГрупп.Добавить(ВыбранноеЗначение);
		КонецЕсли;
		
		Для Каждого ВыбранныйПользовательГруппа Из МассивПользователейГрупп Цикл
			Если ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.Пользователи") Тогда
				НайденныеСтроки = ТаблицаИсполнителей.НайтиСтроки(Новый Структура("Пользователь", ВыбранныйПользовательГруппа));
				Если НайденныеСтроки.Количество() = 0 Тогда
					НоваяСтрока = ТаблицаИсполнителей.Добавить();
					НоваяСтрока.Пользователь = ВыбранныйПользовательГруппа;
				КонецЕсли;
				
			ИначеЕсли ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
				ДобавитьПользователейГруппеПользователей(ВыбранныйПользовательГруппа);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ВывестиКоличествоВыбранныхКлиентов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсполнителейПослеУдаления(Элемент)
	ВывестиКоличествоВыбранныхКлиентов();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсполнителейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	Если ИспользоватьГруппыПользователей Тогда
		ПараметрыФормы.Вставить("ВыборГруппПользователей", Истина);
	КонецЕсли;
	ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка", ПараметрыФормы, Элементы.ТаблицаИсполнителей, , );
КонецПроцедуры

&НаКлиенте
Процедура ДеревоФормированиеСписковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Попытка		ТекДанные = Элемент.ТекущиеДанные;
	Исключение	ТекДанные = Неопределено;
	КонецПопытки;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка		ЗначениеОткрыть = ТекДанные.Партнер;
	Исключение	ЗначениеОткрыть = Неопределено;
	КонецПопытки;
	
	Если ЗначениеОткрыть = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеПостыхТипов = Новый ОписаниеТипов("Строка,Число,Булево,Дата");
	Если ОписаниеПостыхТипов.СодержитТип(ТипЗнч(ЗначениеОткрыть)) Тогда
		Возврат;
	КонецЕсли;
	
	Если	ТипЗнч(ЗначениеОткрыть) = Тип("СправочникСсылка.ВидыКонтактнойИнформации")
		Или	ТипЗнч(ЗначениеОткрыть) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
		//
		Возврат;
	КонецЕсли;
	
	Попытка ПоказатьЗначение(, ЗначениеОткрыть);
	Исключение КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ФлагПоказыватьНачальнуюСтраницуПриИзменении(Элемент)
	
	Если ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов") Тогда
		НазваниеМастера = "ДублированиеКлиентов";
	ИначеЕсли ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов") Тогда		
		НазваниеМастера = "ЗаполнениеДополнительныхРеквизитов";        		
	ИначеЕсли ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации") Тогда		
		НазваниеМастера = "ЗаполнениеКонтактнойИнформации";        
	ИначеЕсли ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов") Тогда		
		НазваниеМастера = "КонтрольПотенциалаКлиентов";
	ИначеЕсли ВидМастера = ПредопределенноеЗначение("Перечисление.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов") Тогда		
		НазваниеМастера = "КонтрольРегистрацииКлиентов";        		
	КонецЕсли;		
	
	CRM_ХранилищеНастроек.Сохранить(ЭтотОбъект.ИмяФормы, "ПоказыватьНачальнуюСтраницу" + НазваниеМастера, ФлагПоказыватьНачальнуюСтраницу);
	
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ПанельСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	ЗаполнитьДанные();
	
	Если Параметры.Свойство("ВидМастера")
		 И ЗначениеЗаполнено(Параметры.ВидМастера)
		 И ТипЗнч(Параметры.ВидМастера) = Тип("ПеречислениеСсылка.CRM_ВидыМастераПроверкиКлиентскойБазы") Тогда
		
		ВидМастера = Параметры.ВидМастера;
		ВидКонтроля = ВидМастера;
		
		Если ВидМастера = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов
			И НЕ CRM_КлиентыСервер.РазрешеноРедактированиеПотенциалаКлиента() Тогда
			//
			ВызватьИсключение НСтр("ru = 'Нарушение прав доступа!'");
			Возврат;
		КонецЕсли;
		
		Если ВидМастера = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов Тогда
			ВидРаспределенияПоИсполнителям = 1;
			Элементы.ВидРаспределенияПоИсполнителям.Видимость = Ложь;
			Элементы.ДекорацияОписаниеСтраницыСтраницаКонтрольЗаполненияКИВыборПолучателейПоручений.Заголовок = НСтр("ru = 'Распределение документов по исполнителям'");
		КонецЕсли;
		
		Элементы.ПанельСтраницы.ТекущаяСтраница = ПолучитьПервуюСтраницуМастера(ЭтотОбъект);
		НастроитьЗаголовкиШагов(ЭтотОбъект);
		
	Иначе
		Элементы.ПанельСтраницы.ТекущаяСтраница = Элементы.СтраницаВыборМастера;
		НастроитьЗаголовкиШагов(ЭтотОбъект);
		
	КонецЕсли;
	
	ВидимостьИДоступностьЭлементовФормы(ЭтотОбъект);
	
	// Размещать текст в конце процедуры, проверка на снятие флага показа стартовой страницы.
	Если ВидМастера = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ДублированиеКлиентов Тогда
		НазваниеМастера = "ДублированиеКлиентов";
	ИначеЕсли ВидМастера = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеДополнительныхРеквизитов Тогда		
		НазваниеМастера = "ЗаполнениеДополнительныхРеквизитов";        		
	ИначеЕсли ВидМастера = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.ЗаполнениеКонтактнойИнформации Тогда		
		НазваниеМастера = "ЗаполнениеКонтактнойИнформации";        
	ИначеЕсли ВидМастера = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольПотенциалаКлиентов Тогда		
		НазваниеМастера = "КонтрольПотенциалаКлиентов";        
	ИначеЕсли ВидМастера = Перечисления.CRM_ВидыМастераПроверкиКлиентскойБазы.КонтрольРегистрацииКлиентов Тогда		
		НазваниеМастера = "КонтрольРегистрацииКлиентов";        		
	КонецЕсли;		
	ПоказыватьНачальнуюСтраницу = CRM_ХранилищеНастроек.Загрузить(ЭтотОбъект.ИмяФормы, "ПоказыватьНачальнуюСтраницу" + НазваниеМастера);
	Если НЕ ЗначениеЗаполнено(ПоказыватьНачальнуюСтраницу) Тогда
		ФлагПоказыватьНачальнуюСтраницу = Истина;
	Иначе
		ФлагПоказыватьНачальнуюСтраницу = ПоказыватьНачальнуюСтраницу;
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПриЗакрытии".
//
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	СохранитьНастройкиМастера();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТаблицаИсполнителей.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru='Очистить список исполнителей?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораЗавершение", ЭтотОбъект, ВыбранноеЗначение);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,РежимДиалогаВопрос.ДаНет,,,,);
	Иначе
		ОбработкаВыбораЗавершение(Неопределено, ВыбранноеЗначение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораЗавершение(Ответ, ВыбранноеЗначение) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ТаблицаИсполнителей.Очистить();
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		МассивПользователейГрупп = ВыбранноеЗначение;
	Иначе
		МассивПользователейГрупп = Новый Массив();
		МассивПользователейГрупп.Добавить(ВыбранноеЗначение);
	КонецЕсли;
	
	ОбработкаВыбораНаСервере(МассивПользователейГрупп);
	
	ВывестиКоличествоВыбранныхКлиентов();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ФлагПоказыватьНачальнуюСтраницу Тогда
		КомандаДалее(Неопределено);
	КонецЕсли;		
КонецПроцедуры


&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ФормулаРасчета = ПолучитьФормулуРасчетаПотенциала();
	Если ФормулаРасчета = "" Тогда
		Элементы.ДекорацияФормулаРасчетаПотенциала.ЦветТекста  = Новый Цвет(255,0,0);
		Элементы.ДекорацияФормулаРасчетаПотенциала.Заголовок   = НСтр("ru = 'Для подразделения не определена формула расчета потенциала клиентов. После настройки расчета потенциала необходимо выполнить команду ""Сохранить и пересчитать потенциалы""'");
		Элементы.ДекорацияФормулаРасчетаПотенциала.Видимость   = Истина;
		Элементы.ДекорацияНастроитьРасчетПотенциалов.Видимость = Истина;
	Иначе	
		Элементы.ДекорацияФормулаРасчетаПотенциала.ЦветТекста  = Новый Цвет(0,0,255);
		Элементы.ДекорацияФормулаРасчетаПотенциала.Заголовок   = НСтр("ru = 'Формула расчета потенциала:'") + Символы.ПС + ФормулаРасчета;
		Элементы.ДекорацияФормулаРасчетаПотенциала.Видимость   = Истина;
		Элементы.ДекорацияНастроитьРасчетПотенциалов.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРасчетПотенциалов(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	ФормулаРасчета = ПолучитьФормулуРасчетаПотенциала();
	Если ФормулаРасчета = "" Тогда
		Элементы.ДекорацияФормулаРасчетаПотенциала.ЦветТекста  = Новый Цвет(255,0,0);
		Элементы.ДекорацияФормулаРасчетаПотенциала.Заголовок   = НСтр("ru = 'Для подразделения не определена формула расчета потенциала клиентов. После настройки расчета потенциала необходимо выполнить команду ""Сохранить и пересчитать потенциалы""'");
		Элементы.ДекорацияФормулаРасчетаПотенциала.Видимость   = Истина;
		Элементы.ДекорацияНастроитьРасчетПотенциалов.Видимость = Истина;
	Иначе	
		Элементы.ДекорацияФормулаРасчетаПотенциала.ЦветТекста  = Новый Цвет(0,0,255);
		Элементы.ДекорацияФормулаРасчетаПотенциала.Заголовок   = НСтр("ru = 'Формула расчета потенциала:'") + Символы.ПС + ФормулаРасчета;
		Элементы.ДекорацияФормулаРасчетаПотенциала.Видимость   = Истина;
		Элементы.ДекорацияНастроитьРасчетПотенциалов.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНастроитьРасчетПотенциаловНажатие(Элемент)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Подразделение", Подразделение);
	ПараметрыФормы.Вставить("Формула", ПолучитьФормулуРасчетаПотенциала());
	ПараметрыФормы.Вставить("ПериодРасчета", ПолучитьПериодРасчетаПотенциала());
	ПараметрыФормы.Вставить("РежимВыбора", Ложь);
	ДополнительныеПараметры	= Новый Структура;
	ОповещениеРасчетПотенциалов		= Новый ОписаниеОповещения("ОбработкаРасчетПотенциалов", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("РегистрСведений.CRM_ВесаПоказателейПотенциала.Форма.ФормаНастройкиПотенциала", ПараметрыФормы, ЭтотОбъект, , , , ОповещениеРасчетПотенциалов);
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Ключ", Подразделение);	
	ДополнительныеПараметры	= Новый Структура;
	ОповещениеРасчетПотенциалов		= Новый ОписаниеОповещения("ОбработкаРасчетПотенциалов", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Справочник.СтруктураПредприятия.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект, , , , ОповещениеРасчетПотенциалов);
КонецПроцедуры

&НаСервере
Процедура РассчитатьПотенциалыНаСервере()
	
	
	Для Каждого СтрокаДерева Из ДеревоПартнерыКонтрольПотенциала.ПолучитьЭлементы() Цикл
		
		Если НЕ СтрокаДерева.Пометка Тогда Продолжить; КонецЕсли;
		
		Потенциал = CRM_РасчетПотенциалаСервер.РассчитатьПотенциалКлиента(СтрокаДерева.Партнер, Подразделение);
		
		Если Потенциал = 0 Тогда Продолжить; КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.CRM_Потенциалы.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Клиент        = СтрокаДерева.Партнер;
		МенеджерЗаписи.Подразделение = Подразделение;
		МенеджерЗаписи.Потенциал     = Потенциал;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
		КонецПопытки;
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьПотенциалы(Команда)
	РассчитатьПотенциалыНаСервере();
	СформироватьДеревоПартнеровКонтрольПотенциала();
	РазвернутьСтрокиДерева(Элементы.ДеревоПартнерыКонтрольПотенциала, "ДеревоПартнерыКонтрольПотенциала", Ложь);	
КонецПроцедуры
//СтраницаКонтрольПотенциалаВыборРеквизитов
#КонецОбласти
