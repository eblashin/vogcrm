
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	РежимПросмотра = "Инициатор";
	Если Параметры.Свойство("Пользователь") Тогда
		ОтборПользователь = Параметры.Пользователь;	
	Иначе	
		ОтборПользователь = Пользователи.ТекущийПользователь();	
	КонецЕсли;
	
	ОбновитьДеревоКейсов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РежимПросмотраПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьДеревоКейсов", 0.1, Истина);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборПользовательПриИзменении(Элемент)
	ПодключитьОбработчикОжидания("Подключаемый_ОбновитьДеревоКейсов", 0.1, Истина);
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеПроцедурыФункции

&НаКлиенте
Процедура Подключаемый_ОбновитьДеревоКейсов()
	
	ОбновитьДеревоКейсовКлиент();
	РазвернутьСтрокиДерева(Элементы.ДеревоКейсов, "ДеревоКейсов", Истина);
	
КонецПроцедуры // Подключаемый_ОбновитьДеревоКейсов()

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

&НаКлиенте
Процедура ОбновитьДеревоКейсовКлиент()
	ОбновитьДеревоКейсов();			
КонецПроцедуры // ОбновитьДеревоКейсовКлиент()

&НаСервере
Процедура ОбновитьДеревоКейсов()

	СхемаКомпоновкиДанных = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ПроектыПоМоделиКейсов");
	
	КомпоновщикНастроекКомпоновкиДанных = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	//Параметры и отборы
	Настройки = КомпоновщикНастроекКомпоновкиДанных.Настройки;
	Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ОтборПользователь", ОтборПользователь);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Настройки.Отбор, "РежимПросмотра", РежимПросмотра);
	
	КомпоновщикМакетаКомпоновкиДанных = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакетаКомпоновкиДанных.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроекКомпоновкиДанных.ПолучитьНастройки(),,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	// Инициализация процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);		
	
	// Дерево значений, в которое будет получен результат
	Результат = Новый ДеревоЗначений;
		
	// Получение результата
	ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений.УстановитьОбъект(Результат);
	ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений.Вывести(ПроцессорКомпоновкиДанных);
	
	Результат.Колонки.Добавить("Группировка");
	
	Результат.Колонки.Добавить("Действия"      , Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("ИндексКартинки", Новый ОписаниеТипов("Число"));
	
	Для каждого СтрокаМодельКейса Из Результат.Строки Цикл
		СтрокаМодельКейса.Группировка 		    = СтрокаМодельКейса.МодельКейса;
		СтрокаМодельКейса.Действия	     	    = 1;	
		СтрокаМодельКейса.ИндексКартинки	    = 3;	
		
		Для каждого СтрокаПроект Из СтрокаМодельКейса.Строки Цикл
			СтрокаПроект.Группировка		   = СтрокаПроект.Проект;
			СтрокаПроект.Действия       	   = 0;	
			СтрокаПроект.ИндексКартинки 	   = 4;	
		
		КонецЦикла;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Результат, "ДеревоКейсов");
	
КонецПроцедуры // ОбновитьДеревоКейсов()

&НаКлиенте
Процедура РазвернутьСтрокиДерева(ЭлементДерево, ИмяРеквизитаФормы, Развернуть = Истина)
	СтрокиДерева = ЭтотОбъект[ИмяРеквизитаФормы].ПолучитьЭлементы();
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если Развернуть Тогда
			ЭлементДерево.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Истина);
		Иначе
			ЭлементДерево.Свернуть(СтрокаДерева.ПолучитьИдентификатор());
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоКейсовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Не Поле.Имя = "ДеревоКейсовДействия" Тогда
		Возврат;	
	КонецЕсли;
	
	ДанныеСтроки = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;	
	
	КонецЕсли;
	
	ОбработкаДействийСтроки(ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаДействийСтроки(СтрокаДерева)

	Если СтрокаДерева.Действия = 1 Тогда
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить("CRM_ЭтоКейс"    , Истина);
		ЗначенияЗаполнения.Вставить("CRM_МодельКейса", СтрокаДерева.МодельКейса);
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		ОткрытьФорму("Справочник.Проекты.Форма.CRM_ФормаКейса", 
			ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
		
	ИначеЕсли СтрокаДерева.Действия = 0 Тогда	
		ПоказатьЗначение(, СтрокаДерева.Группировка);
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Действие не определено. '"));
	КонецЕсли;	

КонецПроцедуры // ОбработкаДействийСтроки()

&НаКлиенте
Процедура ДеревоКейсовДействияНажатие(Элемент, СтандартнаяОбработка)
	
КонецПроцедуры

#КонецОбласти
