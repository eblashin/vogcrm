
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийПользователь	 = Пользователи.ТекущийПользователь();
	ТекущееПодразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "Подразделение");	
	
	СписокОбъектов.Добавить("ОбщиеНастройки");
	СписокОбъектов.Добавить(ТекущийПользователь);
	СписокОбъектов.Добавить(ТекущееПодразделение);
	
	скРабочийСтолСервер.ИнициализироватьРабочийСтолСервер(ЭтаФорма, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("Подключаемый_ИнициализироватьРабочийСтолКлиент", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
//	ПараметрыРаботыКлиентаПриЗапуске = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
//	Если ПараметрыРаботыКлиентаПриЗапуске.ЗапускатьРабочийСтолМенеджера Тогда
		//{[-](фрагмент удален)Администратор 18.05.2018 10:09:50 ID 000001857
		//Если ЗакрытьБезусловно Тогда
		//}Администратор 18.05.2018 10:09:50
		//{[+](фрагмент добавлен), Виноградов Дмитрий 18.05.2018 10:10:01 ID 000001857
		Если ЗакрытьБезусловно Или ЗавершениеРаботы Тогда
		//}Администратор 18.05.2018 10:10:01
			Возврат;
		КонецЕсли;
		
		СписокВариантов = Новый СписокЗначений;
		СписокВариантов.Добавить(Истина, НСтр("ru = 'Завершить работу'"));
		СписокВариантов.Добавить(Ложь, НСтр("ru = 'Продолжить работу'"));
		
		Отказ = Истина;
		Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		//{[-](фрагмент удален)Администратор 18.05.2018 10:10:31 ID 000001857
		//ПоказатьВопрос(Оповещение, НСтр("ru = 'Завершить работу с программой?'"), СписокВариантов)
		//}Администратор 18.05.2018 10:10:31
		//{[+](фрагмент добавлен), Виноградов Дмитрий 18.05.2018 10:10:41 ID 000001857
		Попытка ПоказатьВопрос(Оповещение, НСтр("ru = 'Завершить работу с программой?'"), СписокВариантов);
		Исключение //Дополнительная обработка исключения не требуется.
		КонецПопытки; 
		//}Администратор 18.05.2018 10:10:41
	  
//	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Конекст) Экспорт
	
	Если Результат = Истина Тогда
		ЗакрытьБезусловно = Истина;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытиемЗавершение()

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ск_глСтекФормРабочегоСтола = Новый Соответствие;
	
	//ПараметрыРаботыКлиентаПриЗапуске = СтандартныеПодсистемыКлиентПовтИсп.ПараметрыРаботыКлиентаПриЗапуске();
	//Если ПараметрыРаботыКлиентаПриЗапуске.ЗапускатьРабочийСтолМенеджера Тогда
		ЗавершитьРаботуСистемы(Ложь);
		
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеПроцедурыФукнции

&НаКлиенте
Процедура Подключаемый_ИнициализироватьРабочийСтолКлиент()
	ИнициализироватьРабочийСтолКлиент();
КонецПроцедуры // Подключаемый_ИнициализироватьРабочийСтолКлиент()

#КонецОбласти

#Область Инициализация

&НаКлиенте
Процедура ИнициализироватьРабочийСтолКлиент()

	скРабочийСтолКлиент.ИнициализироватьРабочийСтолКлиент(ЭтаФорма);
	Возврат;
	
	Если Не ЗначениеЗаполнено(ИмяОписания) Тогда
		Оповещение = Новый ОписаниеОповещения("НастроитьРабочийСтолКлиент", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Настройки рабочего стола не определены. Перейти к настройке?'"), РежимДиалогаВопрос.ДаНет);	
		Возврат;
		
	КонецЕсли;
	
	ОбщиеПараметры = Новый Структура;
	ОбщиеПараметры.Вставить("ТекущееПодразделение", ТекущееПодразделение);
	ОбщиеПараметры.Вставить("ТекущийПользователь" , ТекущийПользователь);
		
	ск_глСтекФормРабочегоСтола = Новый Соответствие;	
	
	ШаблонПояснение = НСтр("ru = 'Формирование страницы ""%1""'");
	ВсегоСтраниц    = ЭтаФорма[ИмяОписания].Количество();	
	СчетчикСтраниц  = 1;	
	
	Для каждого ЭлементРабочегоСтола Из ЭтаФорма[ИмяОписания] Цикл
		ТекстСостоянния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПояснение, ЭлементРабочегоСтола.Наименование);
		
		Состояние(
			ТекстСостоянния,
			Окр((СчетчикСтраниц / ВсегоСтраниц) * 100, 0)); 
			
		Форма = ск_глСтекФормРабочегоСтола.Получить(ЭлементРабочегоСтола.Идентификатор);
		Если Форма = Неопределено Тогда		
			ПараметрыФормы = Новый Структура("скНастройкиРабочегоСтола, скОбщиеПараметры",
				ЭтаФорма[ИмяОписания], ОбщиеПараметры 
			);
			
			Попытка
				Выполнить(ЭлементРабочегоСтола.Параметры);
			Исключение			
			КонецПопытки;
			
			Форма = ПолучитьФорму(ЭлементРабочегоСтола.ИмяФормы, ПараметрыФормы,,, ЭтаФорма.Окно);
			Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.Независимый;
			
			ск_глСтекФормРабочегоСтола.Вставить(ЭлементРабочегоСтола.Идентификатор, Форма);
			скРабочийСтолКлиент.ОбработкаПриСменеВкладки(Форма, ЭлементРабочегоСтола);
			
		КонецЕсли;
					
		СчетчикСтраниц = СчетчикСтраниц + 1;
		
	КонецЦикла;  
	
	Форма.Подключаемый_ОбновитьТаблицуНапоминаний(CRM_НапоминанияСервер.ПолучитьНапоминания());
	Форма.Открыть(); 	
			
КонецПроцедуры // ИнициализироватьРабочийСтолКлиент()

&НаКлиенте
Процедура НастроитьРабочийСтолКлиент(Результат, Контекст) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		ОткрытьФорму("Обработка.скРабочийСтол.Форма.ФормаНастройкиРабочегоСтола",
			Новый Структура("СписокОбъектов", СписокОбъектов), ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс
		);
		
	КонецЕсли;

	Закрыть();
	
КонецПроцедуры // НастроитьРабочийСтолКлиент()

#КонецОбласти

