
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("СписокОбъектов", СписокОбъектов);
	
	ПодсистемаРабочийСтол = Метаданные.Подсистемы.Найти("скРабочийСтол");
	Если ПодсистемаРабочийСтол = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не найдена основная подсистема рабочего стола. '"));	
		Возврат;
	КонецЕсли;	
	
	ПодсистемаСоставРабочийСтол = ПодсистемаРабочийСтол.Подсистемы.Найти("скОбъектыРабочегоСтола");	
	Если ПодсистемаСоставРабочийСтол = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не найдена подсистема состава рабочего стола. '"));	
		Возврат;
	КонецЕсли;	
	
	СформироватьДеревоМетаданныхРабочегоСтола(ПодсистемаСоставРабочийСтол.Состав);
	ПрочитатьНастройкиРабочегоСтола();
	
	Для каждого ТекущаяСтраница Из Элементы.СтраницыЭлементыРабочегоСтола.ПодчиненныеЭлементы Цикл
		УстановитьФиксированныйОтбор(ТекущаяСтраница.Имя);
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьДоступнуюФорму(Команда)
	ВыполнитьДобавлениеФормы();	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДоступнуюФорму(Команда)
	ВыполнитьУдалениеФормы();	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗакрыть(Команда)
	
	ЗаписатьНастройкиРабочегоСтола();
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНастройкиРабочегоСтола();
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьПараметрыФормы(Команда)
	
	ИмяСтраницы = Элементы.СтраницыЭлементыРабочегоСтола.ТекущаяСтраница.Имя;
	
	ТекущиеДанные = Элементы["ЭлементыРабочегоСтола_" + ИмяСтраницы].ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОбработчикиСобытийЗавершение", ЭтотОбъект, ТекущиеДанные);
	ОткрытьФорму("Обработка.скРабочийСтол.Форма.ФормаНастройкиПараметров",
		Новый Структура("ПараметрыВыражение", ТекущиеДанные.Параметры), ЭтаФорма,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикиСобытийЗавершение(Результат, ТекущиеДанные) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	
	КонецЕсли;
	
	ТекущиеДанные.Параметры = Результат;	

КонецПроцедуры // ОбработчикиСобытийЗавершение()

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	ДобавитьИзображениеНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИзображение(Команда)
	
	АдресКартинки = "";
	ДанныеФайлаКартинки = Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыполнитьДобавлениеФормы();	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМетаданныхНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ТекущаяСтрока = Элементы.ДеревоМетаданных.ТекущиеДанные;	
	ПараметрыПеретаскивания.Значение = ТекущаяСтрока;
	
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Копирование;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыРабочегоСтолаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;	
КонецПроцедуры

&НаКлиенте
Процедура ЭлементыРабочегоСтолаПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ПараметрыПеретаскивания.Значение.Тип = "Форма" Тогда
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Копирование;
	Иначе	
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ЭлементыРабочегоСтолаПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	ДобавитьДоступнуюФорму(ПараметрыПеретаскивания.Значение);
	
КонецПроцедуры

&НаКлиенте
Процедура АдресКартинкиНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДобавитьИзображениеНаКлиенте();	
	
КонецПроцедуры
	
#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

&НаСервере
Процедура СформироватьДеревоМетаданныхРабочегоСтола(СоставМетаданных)
	
	Дерево = РеквизитФормыВЗначение("ДеревоМетаданных");
	
	МассивПустыхСтрокДерева = Новый Массив;
	
	соотОграниченияМетаданных = ПолучитьОграничениеСоставаМетаданных();
	Для каждого соотЭлементОграгичения Из соотОграниченияМетаданных Цикл		
		СтрокаГруппа = Дерево.Строки.Добавить();
		
		СтрокаГруппа.Имя      = "";
		СтрокаГруппа.Синоним  = соотЭлементОграгичения.Ключ.Имя;
		СтрокаГруппа.Картинка = соотЭлементОграгичения.Ключ.Картинка;
		СтрокаГруппа.Порядок  = соотЭлементОграгичения.Ключ.Порядок;
		
		ЗаполнитьГруппуПоСоставу(СтрокаГруппа, соотЭлементОграгичения.Значение, СоставМетаданных);
		
		Если СтрокаГруппа.Строки.Количество() = 0 Тогда
			МассивПустыхСтрокДерева.Добавить(СтрокаГруппа);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого ПустаяСтрокаДерева Из МассивПустыхСтрокДерева Цикл
		Дерево.Строки.Удалить(ПустаяСтрокаДерева);	
	
	КонецЦикла;
	
	Дерево.Строки.Сортировать("Порядок");
	ЗначениеВРеквизитФормы(Дерево, "ДеревоМетаданных");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОграничениеСоставаМетаданных()
	
	соотМетаданных = Новый Соответствие;
	
	ДобавитьКоллекциюМетаданных(соотМетаданных, "ОбщиеФормы"	  , БиблиотекаКартинок.Форма          , 1);
	ДобавитьКоллекциюМетаданных(соотМетаданных, "Справочники"     , БиблиотекаКартинок.Справочник     , 2);
	ДобавитьКоллекциюМетаданных(соотМетаданных, "Документы" 	  , БиблиотекаКартинок.Документ	      , 3);
	ДобавитьКоллекциюМетаданных(соотМетаданных, "Отчеты"	      , БиблиотекаКартинок.Отчет		  , 4);
	ДобавитьКоллекциюМетаданных(соотМетаданных, "Обработки"       , БиблиотекаКартинок.Обработка	  , 5);
	ДобавитьКоллекциюМетаданных(соотМетаданных, "РегистрыСведений", БиблиотекаКартинок.РегистрСведений, 6);
	ДобавитьКоллекциюМетаданных(соотМетаданных, "БизнесПроцессы"  , БиблиотекаКартинок.БизнесПроцесс  , 7);
	ДобавитьКоллекциюМетаданных(соотМетаданных, "Задачи"	      , БиблиотекаКартинок.Задача         , 8);
	
	Возврат соотМетаданных;

КонецФункции // мсвОграниченияМетаданных()

&НаСервереБезКонтекста
Процедура ДобавитьКоллекциюМетаданных(соотМетаданных, Имя, Картинка, Порядок)
	
	Ключ = Новый Структура("Имя, Картинка, Порядок", Имя, Картинка, Порядок);	
	соотМетаданных.Вставить(Ключ, Метаданные[Имя]);

КонецПроцедуры // ДобавитКоллекциюМетаданных()

&НаСервереБезКонтекста
Процедура ЗаполнитьГруппуПоСоставу(СтрокаГруппа, КоллекцияМетаданных, СоставМетаданных)
	
	Для каждого Объект Из СоставМетаданных Цикл
		Если КоллекцияМетаданных.Содержит(Объект) Тогда
			НоваяСтрока = СтрокаГруппа.Строки.Добавить();
			НоваяСтрока.Тип		= СтрокаГруппа.Синоним;
			НоваяСтрока.Имя     = Объект.ПолноеИмя();
			НоваяСтрока.Синоним = ?(Объект.Синоним = "", Объект.Имя, Объект.Синоним);
				
			НоваяСтрока.Картинка  = СтрокаГруппа.Картинка;		
			Если НоваяСтрока.Тип = "ОбщиеФормы" Тогда
				Продолжить;			
			КонецЕсли;
			
			ЗаполнитьФормыОбъекта(НоваяСтрока, Объект);
		
		КонецЕсли;	
			
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьГруппуПоСоставу()

&НаСервереБезКонтекста
Процедура ЗаполнитьФормыОбъекта(СтрокаОбъекта, Объект)
	
	Для каждого Форма Из Объект.Формы Цикл
		НоваяСтрока = СтрокаОбъекта.Строки.Добавить();
		НоваяСтрока.Тип		= "Форма";
		НоваяСтрока.Имя     = Форма.ПолноеИмя();
		НоваяСтрока.Синоним = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1(%2)'"),
			?(Форма.Синоним = "", Форма.Имя, Форма.Синоним), Форма.Имя);
		
		НоваяСтрока.СинонимОбъектаФормы = ?(Объект.Синоним = "", Объект.Имя, Объект.Синоним);
		
		НоваяСтрока.Картинка = БиблиотекаКартинок.Форма;
	
	КонецЦикла;		

КонецПроцедуры // ЗаполнитьФормыОбъекта()

&НаКлиенте
Процедура ВыполнитьДобавлениеФормы(ТекущаяСтрока = Неопределено)
	
	Если ТекущаяСтрока = Неопределено Тогда
		ТекущаяСтрока = Элементы.ДеревоМетаданных.ТекущиеДанные;
		Если ТекущаяСтрока = Неопределено Тогда
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИмяСтраницы 	= Элементы.СтраницыЭлементыРабочегоСтола.ТекущаяСтраница.Имя;
	ПараметрыОтбора = СформироватьПараметрыОтбора(ИмяСтраницы);
	Если ТекущаяСтрока.Тип = "Форма" 
	  ИЛИ ТекущаяСтрока.Тип = "ОбщиеФормы" Тогда
	 	НовыйЭлементРабочегоСтола = Объект.ЭлементыРабочегоСтола.Добавить();
		НовыйЭлементРабочегоСтола.ИмяФормы      = ТекущаяСтрока.Имя;
		НовыйЭлементРабочегоСтола.Наименование  = ТекущаяСтрока.СинонимОбъектаФормы;
		НовыйЭлементРабочегоСтола.Синоним       = ТекущаяСтрока.Синоним;
		НовыйЭлементРабочегоСтола.Объект        = ПараметрыОтбора.Объект;
		НовыйЭлементРабочегоСтола.Идентификатор = Новый УникальныйИдентификатор;
			
		УстановитьФиксированныйОтбор(ИмяСтраницы);
					
	КонецЕсли;

КонецПроцедуры // ВыполнитьДобавлениеФормы()

&НаКлиенте
Процедура ВыполнитьУдалениеФормы()
	
	ИмяСтраницы = Элементы.СтраницыЭлементыРабочегоСтола.ТекущаяСтраница.Имя;
	ТекущаяСтрока = Элементы["ЭлементыРабочегоСтола_" + ИмяСтраницы].ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;	
	                                           
	КонецЕсли;
	
	Объект.ЭлементыРабочегоСтола.Удалить(
		Объект.ЭлементыРабочегоСтола.НайтиПоИдентификатору(ТекущаяСтрока)
	);

КонецПроцедуры // ВыполнитьУдалениеФормы()

&НаСервере
Процедура ПрочитатьНастройкиРабочегоСтола()
	
	ТаблицуНастроек = скРабочийСтолСервер.ПолучитьТаблицуНастроекРабочегоСтола(ЭтаФорма.СписокОбъектов);
	Для каждого СтрокаНастроек Из ТаблицуНастроек Цикл
		ЗаполнитьЗначенияСвойств(Объект.ЭлементыРабочегоСтола.Добавить(), СтрокаНастроек);
	
	КонецЦикла;
		
	СохраненныеДанныеФайлаКартинки = Константы.скЛоготипРабочегоСтола.Получить().Получить();	
	Если СохраненныеДанныеФайлаКартинки <> Неопределено Тогда
		АдресКартинки = ПоместитьВоВременноеХранилище(СохраненныеДанныеФайлаКартинки.ДвоичныеДанные, УникальныйИдентификатор);
		
		СохраненныеДанныеФайлаКартинки.Удалить("ДвоичныеДанные");
		ДанныеФайлаКартинки = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СохраненныеДанныеФайлаКартинки);
		
	КонецЕсли;
	
КонецПроцедуры // ПрочитатьНастройкиРабочегоСтола()

&НаСервере
Процедура ЗаписатьНастройкиРабочегоСтола()
	
	РегистрНастроек = РегистрыСведений.скНастройкиРабочегоСтола;
	
	УстановитьПривилегированныйРежим(Истина);
	
		ОчиститьРегистрНастроек(РегистрНастроек, СписокОбъектов);
		Для каждого ЭлементРабочегоСтола Из Объект.ЭлементыРабочегоСтола Цикл
			текЗапись = РегистрНастроек.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(текЗапись, ЭлементРабочегоСтола);
			
			текЗапись.Порядок = ЭлементРабочегоСтола.НомерСтроки;
			текЗапись.Записать();
			
		КонецЦикла;
		
	Если ДанныеФайлаКартинки <> Неопределено Тогда
		СохранямыеДанныеФайлаКартинки = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ДанныеФайлаКартинки);
		СохранямыеДанныеФайлаКартинки.Вставить("ДвоичныеДанные", ПолучитьИзВременногоХранилища(АдресКартинки));		
	Иначе
		СохранямыеДанныеФайлаКартинки = Неопределено;	
	КонецЕсли;	
	
	Константы.скЛоготипРабочегоСтола.Установить(Новый ХранилищеЗначения(СохранямыеДанныеФайлаКартинки, Новый СжатиеДанных(9)));
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры // ЗаписатьНастройкиРабочегоСтола()

&НаСервереБезКонтекста
Процедура ОчиститьРегистрНастроек(РегистрНастроек, СписокОбъектов)
	
	НаборОчистки = РегистрНастроек.СоздатьНаборЗаписей();
	Для каждого ОбъектНастройки Из СписокОбъектов Цикл
		НаборОчистки.Отбор.Объект.Установить(ОбъектНастройки.Значение);
		
		НаборОчистки.Прочитать();
		НаборОчистки.Очистить();
		НаборОчистки.Записать();
		
	КонецЦикла; 
	
КонецПроцедуры // ОчиститьРегистрНастроек()

&НаСервере
Процедура УстановитьФиксированныйОтбор(ИмяСтраницы)
	
	ПараметрыОтбора = СформироватьПараметрыОтбора(ИмяСтраницы);
	Элементы["ЭлементыРабочегоСтола_" + ИмяСтраницы].ОтборСтрок = Новый ФиксированнаяСтруктура(ПараметрыОтбора);
	
КонецПроцедуры // УстановитьФиксированныйОтбор()

&НаСервере
Функция СформироватьПараметрыОтбора(ИмяСтраницы)

	Если ИмяСтраницы = "ОбщиеНастройки" Тогда
		ТипЗначения = Тип("Строка"); 
	ИначеЕсли ИмяСтраницы = "ПодразделениеНастройки" Тогда	
		ТипЗначения = Тип("СправочникСсылка.СтруктураПредприятия"); 
	ИначеЕсли ИмяСтраницы = "ПользовательНастройки" Тогда	
		ТипЗначения = Тип("СправочникСсылка.Пользователи"); 
	КонецЕсли;
	
	Возврат Новый Структура("Объект", 
		ЗначениеСпискаПоТипу(ТипЗначения)
	);

КонецФункции // СформироватьПараметрыОтбора()

&НаСервере
Функция ЗначениеСпискаПоТипу(ТипЗначения)
	
	Перем Результат;
	
	Для каждого ЭлементСписка Из СписокОбъектов Цикл
		Если ТипЗнч(ЭлементСписка.Значение) = ТипЗначения Тогда
			Результат = ЭлементСписка.Значение;
			Прервать;
			
		КонецЕсли;
	
	КонецЦикла; 		

	Возврат Результат;
	
КонецФункции // ЗначениеСпискаПоТипу()

&НаКлиенте
Процедура ДобавитьИзображениеНаКлиенте()
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр =  НСтр("ru = 'Все картинки (*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf)|*.bmp;*.gif;*.png;*.jpeg;*.dib;*.rle;*.tif;*.jpg;*.ico;*.wmf;*.emf"
	                            + "|Все файлы(*.*)|*.*"
	                            + "|Формат bmp(*.bmp*;*.dib;*.rle)|*.bmp;*.dib;*.rle"
	                            + "|Формат GIF(*.gif*)|*.gif"
	                            + "|Формат JPEG(*.jpeg;*.jpg)|*.jpeg;*.jpg"
	                            + "|Формат PNG(*.png*)|*.png"
	                            + "|Формат TIFF(*.tif)|*.tif"
	                            + "|Формат icon(*.ico)|*.ico"
	                            + "|Формат метафайл(*.wmf;*.emf)|*.wmf;*.emf'");
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
	"ДобавлениеФайлаДиалогЗавершение",
	ЭтотОбъект,
	Новый Структура("ИмяРеквизита", "ДанныеФайлаКартинки"));
	
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаДиалогЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайла = ВыбранныеФайлы[0];
	ДополнительныеПараметры.Вставить("ИмяФайла", ИмяФайла);
	
	ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита] =
		Новый Структура("ИмяБезРасширения, Расширение, ВремяИзменения, УниверсальноеВремяИзменения");
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДобавлениеФайлаИнициализацияФайла",
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	Файл = Новый Файл;
	Файл.НачатьИнициализацию(ОписаниеОповещения, ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаИнициализацияФайла(Файл, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Вставить("Файл", Файл);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДобавлениеФайлаСуществованияФайла",
		ЭтотОбъект,
		ДополнительныеПараметры);
		
	ДополнительныеПараметры.Файл.НачатьПроверкуСуществования(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаСуществованияФайла(Существует, ДополнительныеПараметры) Экспорт
	
	Если НЕ Существует Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Файл не найден'"));
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита], ДополнительныеПараметры.Файл);
	
	ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита].Расширение =
		СтрЗаменить(ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита].Расширение, ".", "");
		
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДобавлениеФайлаПолучениеВремениИзменения",
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	ДополнительныеПараметры.Файл.НачатьПолучениеВремениИзменения(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаПолучениеВремениИзменения(ВремяИзменения, ДополнительныеПараметры) Экспорт
	
	ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита].ВремяИзменения = ВремяИзменения;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ДобавлениеФайлаПолучениеУниверсальногоВремениИзменения",
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	ДополнительныеПараметры.Файл.НачатьПолучениеУниверсальногоВремениИзменения(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеФайлаПолучениеУниверсальногоВремениИзменения(ВремяИзменения, ДополнительныеПараметры) Экспорт
	
	ЭтаФорма[ДополнительныеПараметры.ИмяРеквизита].УниверсальноеВремяИзменения = ВремяИзменения;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ДополнительныеПараметры.ИмяФайла);
	АдресКартинки = ПоместитьВоВременноеХранилище(ДвоичныеДанные, УникальныйИдентификатор);;
	
КонецПроцедуры

#КонецОбласти
