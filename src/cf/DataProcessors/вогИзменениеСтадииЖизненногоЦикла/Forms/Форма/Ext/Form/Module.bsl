
&НаКлиенте
Процедура Записать(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	ЗаписатьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Период) Тогда
		ПериодСтатусов = Объект.Период;
	Иначе
		ПериодСтатусов = ТекущаяДата();
	КонецЕсли;
	
	// ++ VOG Солодов В.В. 24.06.2021 DEV-545
	ТаблицаBSU = Объект.СписокНоменклатурныхПозиций.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаBSU.НоменклатурнаяПозиция КАК НоменклатурнаяПозиция,
		|	ТаблицаBSU.СтадияЖЦ КАК СтадияЖизненногоЦикла,
		|	ТаблицаBSU.НВЛ КАК СтатусНеликвида
		|ПОМЕСТИТЬ ВТ_НоменклатурныеПозиции
		|ИЗ
		|	&ТаблицаBSU КАК ТаблицаBSU
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаНоменклатурныеПозиции.Ссылка КАК НоменклатурнаяПозиция,
		|	ЕСТЬNULL(ТаблицаСтадииЖизненногоЦикла.Ссылка, ЗНАЧЕНИЕ(Перечисление.СтадииЖизненногоЦиклаОбои.ПустаяСсылка)) КАК СтадияЖизненногоЦикла,
		|	ЕСТЬNULL(ТаблицаСтатусыНеликвидов.Ссылка, ЗНАЧЕНИЕ(Перечисление.СтатусыНеликвидовОбои.ПустаяСсылка)) КАК СтатусНеликвида
		|ПОМЕСТИТЬ ВТ_Отобранная
		|ИЗ
		|	ВТ_НоменклатурныеПозиции КАК ВТ_НоменклатурныеПозиции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.вогНоменклатурныеПозиции КАК ТаблицаНоменклатурныеПозиции
		|		ПО ВТ_НоменклатурныеПозиции.НоменклатурнаяПозиция = ТаблицаНоменклатурныеПозиции.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.СтадииЖизненногоЦиклаОбои КАК ТаблицаСтадииЖизненногоЦикла
		|		ПО ВТ_НоменклатурныеПозиции.СтадияЖизненногоЦикла = ТаблицаСтадииЖизненногоЦикла.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.СтатусыНеликвидовОбои КАК ТаблицаСтатусыНеликвидов
		|		ПО ВТ_НоменклатурныеПозиции.СтатусНеликвида = ТаблицаСтатусыНеликвидов.Ссылка
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ТаблицаНоменклатурныеПозиции.Ссылка,
		|	ЕСТЬNULL(ТаблицаСтадииЖизненногоЦикла.Ссылка, ЗНАЧЕНИЕ(Перечисление.СтадииЖизненногоЦиклаОбои.ПустаяСсылка)),
		|	ЕСТЬNULL(ТаблицаСтатусыНеликвидов.Ссылка, ЗНАЧЕНИЕ(Перечисление.СтатусыНеликвидовОбои.ПустаяСсылка))
		|ИЗ
		|	ВТ_НоменклатурныеПозиции КАК ВТ_НоменклатурныеПозиции
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.вогНоменклатурныеПозиции КАК ТаблицаНоменклатурныеПозиции
		|		ПО ВТ_НоменклатурныеПозиции.НоменклатурнаяПозиция = ТаблицаНоменклатурныеПозиции.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.СтадииЖизненногоЦиклаОбои КАК ТаблицаСтадииЖизненногоЦикла
		|		ПО ВТ_НоменклатурныеПозиции.СтадияЖизненногоЦикла = ТаблицаСтадииЖизненногоЦикла.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.СтатусыНеликвидовОбои КАК ТаблицаСтатусыНеликвидов
		|		ПО ВТ_НоменклатурныеПозиции.СтатусНеликвида = ТаблицаСтатусыНеликвидов.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаСтатусы.НоменклатурнаяПозиция КАК НоменклатурнаяПозиция,
		|	ТаблицаСтатусы.СтатусПредставленностиВСетях КАК СтатусПредставленностиВСетях,
		|	ТаблицаСтатусы.СтатусПродажПоХолдингу КАК СтатусПродажПоХолдингу,
		|	ТаблицаСтатусы.СтатусПродажПоБренду КАК СтатусПродажПоБренду
		|ПОМЕСТИТЬ ВТ_ТекущиеСтатусы
		|ИЗ
		|	РегистрСведений.СтатусыНоменклатурныхПозицийОбоев.СрезПоследних(
		|			&ПериодСтатусов,
		|			НоменклатурнаяПозиция В
		|				(ВЫБРАТЬ
		|					ВТ_Отобранная.НоменклатурнаяПозиция
		|				ИЗ
		|					ВТ_Отобранная)) КАК ТаблицаСтатусы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&ПериодСтатусов КАК Период,
		|	ВТ_Отобранная.НоменклатурнаяПозиция КАК НоменклатурнаяПозиция,
		|	ВТ_Отобранная.СтадияЖизненногоЦикла КАК СтадияЖизненногоЦикла,
		|	ЕСТЬNULL(ВТ_ТекущиеСтатусы.СтатусПредставленностиВСетях, ЛОЖЬ) КАК СтатусПредставленностиВСетях,
		|	ЕСТЬNULL(ВТ_ТекущиеСтатусы.СтатусПродажПоХолдингу, ЗНАЧЕНИЕ(Перечисление.СтатусыABC.ПустаяСсылка)) КАК СтатусПродажПоХолдингу,
		|	ЕСТЬNULL(ВТ_ТекущиеСтатусы.СтатусПродажПоБренду, ЗНАЧЕНИЕ(Перечисление.СтатусыABC.ПустаяСсылка)) КАК СтатусПродажПоБренду,
		|	ВТ_Отобранная.СтатусНеликвида КАК СтатусНеликвида
		|ИЗ
		|	ВТ_Отобранная КАК ВТ_Отобранная
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТекущиеСтатусы КАК ВТ_ТекущиеСтатусы
		|		ПО ВТ_Отобранная.НоменклатурнаяПозиция = ВТ_ТекущиеСтатусы.НоменклатурнаяПозиция";
	
	Запрос.УстановитьПараметр("ТаблицаBSU", 	ТаблицаBSU);
	Запрос.УстановитьПараметр("ПериодСтатусов", ПериодСтатусов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = РегистрыСведений.СтатусыНоменклатурныхПозицийОбоев.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
		НоваяСтрока.Период = ПериодСтатусов;
		
		НоваяСтрока.Записать();
		
	КонецЦикла;
	// До изменения
	//Для Каждого Строка Из Объект.СписокНоменклатурныхПозиций Цикл
	//	Если ЗначениеЗаполнено(Строка.СтадияЖЦ) ИЛИ ЗначениеЗаполнено(Строка.НВЛ) Тогда
	//		НоваяСтрока = РегистрыСведений.СтатусыНоменклатурныхПозицийОбоев.СоздатьМенеджерЗаписи();
	//		НоваяСтрока.Период = ПериодСтатусов;
	//		НоваяСтрока.НоменклатурнаяПозиция = Строка.НоменклатурнаяПозиция;
	//		НоваяСтрока.СтадияЖизненногоЦикла = Строка.СтадияЖЦ;
	//		НоваяСтрока.СтатусНеликвида = Строка.НВЛ;
	//		НоваяСтрока.Записать();
	//	КонецЕсли;
	//КонецЦикла;
	// -- VOG Солодов В.В. 24.06.2021 DEV-545
	
	ТаблицаНоменклатурныхПозицийПоСкладам = Объект.СписокНоменклатурныхПозицийПоСкладам.Выгрузить();
	
	СоответствиеСкладов = Новый Соответствие;
	ТекущаяДата = ТекущаяДата();
	
	Для Каждого Строка Из ТаблицаНоменклатурныхПозицийПоСкладам Цикл
		Для Каждого Колонка Из ТаблицаНоменклатурныхПозицийПоСкладам.Колонки Цикл
			Если СтрНайти(Колонка.Имя,"Склад") = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если НЕ Элементы["СписокНоменклатурныхПозицийПоСкладам" + Колонка.Имя].Родитель.Видимость Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = РегистрыСведений.НоменклатурныеПозицииВНТЗ.СоздатьМенеджерЗаписи();
			НоваяСтрока.Период = ТекущаяДата;
			НоваяСтрока.НоменклатурнаяПозиция = Строка.НоменклатурнаяПозиция;
			Склад = СоответствиеСкладов.Получить(Колонка.Имя);
			Если Склад = Неопределено Тогда
				ИмяСклада = Элементы["СписокНоменклатурныхПозицийПоСкладам" + Колонка.Имя].Заголовок;
				Склад = Справочники.Склады.НайтиПоНаименованию(ИмяСклада);
				Если Склад = Справочники.Склады.ПустаяСсылка() Тогда
					Сообщить("Не найден склад: " + ИмяСклада);
					Продолжить;
				КонецЕсли;
				СоответствиеСкладов.Вставить(Колонка.Имя,Склад);
			КонецЕсли;
			НоваяСтрока.Склад = Склад;
			НоваяСтрока.НТЗ = Строка[Колонка.Имя];
			ИмяКолонкиКоличество = "Количество" + СтрЗаменить(Колонка.Имя,"Склад","");
			НоваяСтрока.Количество = Строка[ИмяКолонкиКоличество];
			НоваяСтрока.Записать();
		КонецЦикла;
	КонецЦикла;
	
	Сообщить("Статусы BSU установлены.");
	
КонецПроцедуры

&НаКлиенте
Процедура Подобрать(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Ложь);
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",Истина);
	ПараметрыФормы.Вставить("ТолькоПросмотр",Истина);
	
	Если ЗначениеЗаполнено(Объект.Период) Тогда
		ПериодСтатусов = Объект.Период;
	Иначе
		ПериодСтатусов = ТекущаяДата();
	КонецЕсли;
	ПараметрыФормы.Вставить("Период", ПериодСтатусов);
	
	Если Элементы.Страницы.ТекущаяСтраница.Имя = "СтраницаНоменклатурныхПозиций" Тогда
		ТаблицаФормы = Элементы.СписокНоменклатурныхПозиций;
	ИначеЕсли Элементы.Страницы.ТекущаяСтраница.Имя = "СтраницаНоменклатурныхПозицийПоСкладам" Тогда
		ТаблицаФормы = Элементы.СписокНоменклатурныхПозицийПоСкладам;
	КонецЕсли;
	
	ОткрытьФорму(
		"Обработка.вогИзменениеСтадииЖизненногоЦикла.Форма.ФормаПодбораНоменклатурныхПозиций",
		ПараметрыФормы,
		ТаблицаФормы,
		,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение <> Неопределено Тогда
		Для Каждого НоменклатурнаяПозиция Из ВыбранноеЗначение Цикл
			
			НайденныеСтроки = Объект.СписокНоменклатурныхПозиций.НайтиСтроки(Новый Структура("НоменклатурнаяПозиция",НоменклатурнаяПозиция));
			Если НайденныеСтроки.Количество() > 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Объект.СписокНоменклатурныхПозиций.Добавить();
			НоваяСтрока.НоменклатурнаяПозиция = НоменклатурнаяПозиция;
			ДанныеЗаполнения = ПолучитьДанныеЗаполненияНаСервере(НоменклатурнаяПозиция);
			НоваяСтрока.СтадияЖЦ = ДанныеЗаполнения.СтадияЖизненногоЦикла;
			НоваяСтрока.НВЛ = ДанныеЗаполнения.СтатусНеликвида;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеЗаполненияНаСервере(НоменклатурнаяПозиция)
	
	Если ЗначениеЗаполнено(Объект.Период) Тогда
		ПериодСтатусов = Объект.Период;
	Иначе
		ПериодСтатусов = ТекущаяДата();
	КонецЕсли;
	ДанныеЗаполнения = РегистрыСведений.СтатусыНоменклатурныхПозицийОбоев.ПолучитьПоследнее(ПериодСтатусов,Новый Структура("НоменклатурнаяПозиция",НоменклатурнаяПозиция));
	Возврат ДанныеЗаполнения;
	
КонецФункции 

&НаКлиенте
Процедура СохранитьЗначение(Команда)
	
	Если Этаформа.ТекущийЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Этаформа.ТекущийЭлемент) <> Тип("ТаблицаФормы") Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКолонки = ПолучитьИмяКолонкиНаСервере();
	Если ИмяКолонки = "" Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(ИмяКолонки,"НоменклатурнаяПозиция") > 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Этаформа.ТекущийЭлемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКолонкиЗаполнения = ИмяКолонки;
	
	ЗначениеЗаполнения = Этаформа.ТекущийЭлемент.ТекущиеДанные[ИмяКолонки];
	Если ЗначениеЗаполнено(ЗначениеЗаполнения) Тогда
		ЗаголовокЗаполнения = "" + ЗначениеЗаполнения;
	Иначе
		ЗаголовокЗаполнения = "<Пустое значение>";
	КонецЕсли;
	ВариантОтображения = ОтображениеКнопки.КартинкаИТекст;
	
	Если Этаформа.ТекущийЭлемент.Имя = "СписокНоменклатурныхПозиций" Тогда
		Элементы.СписокНоменклатурныхПозицийВосстановитьЗначения.Доступность = Истина;
		Элементы.СписокНоменклатурныхПозицийВосстановитьЗначения.Заголовок = ЗаголовокЗаполнения;
		Элементы.СписокНоменклатурныхПозицийВосстановитьЗначения.Отображение = ВариантОтображения;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяКолонкиНаСервере()
	
	НомерСимвола = СтрНайти(Этаформа.ТекущийЭлемент.ТекущийЭлемент.ПутьКДанным,".",НаправлениеПоиска.СКонца);
	Если НомерСимвола = 0 Тогда 
		Возврат "";
	КонецЕсли;
	
	ДлинаСтроки = СтрДлина(Этаформа.ТекущийЭлемент.ТекущийЭлемент.ПутьКДанным);
	ИмяКолонки = Прав(Этаформа.ТекущийЭлемент.ТекущийЭлемент.ПутьКДанным,ДлинаСтроки - НомерСимвола);
	
	Возврат ИмяКолонки;
	
КонецФункции

&НаКлиенте
Процедура ВосстановитьЗначения(Команда)
	
	Если ЗначениеЗаполнения <> Неопределено Тогда
		ВариантОтображения = ОтображениеКнопки.Картинка;
		Если Этаформа.ТекущийЭлемент.Имя = "СписокНоменклатурныхПозиций" Тогда
			Для Каждого ИндексСтроки Из ЭтаФорма.ТекущийЭлемент.ВыделенныеСтроки Цикл
				Строка = Объект.СписокНоменклатурныхПозиций.НайтиПоИдентификатору(ИндексСтроки);
				Если Строка <> Неопределено И Строка.Свойство(ИмяКолонкиЗаполнения) Тогда 
					Если ИмяКолонкиЗаполнения = "НВЛ" И Строка.СтадияЖЦ <> ПредопределенноеЗначение("Перечисление.СтадииЖизненногоЦиклаОбои.Неликвид") Тогда
						Продолжить;
					КонецЕсли;
					Если ИмяКолонкиЗаполнения = "СтадияЖЦ" 
							И ЗначениеЗаполнения <> ПредопределенноеЗначение("Перечисление.СтадииЖизненногоЦиклаОбои.Неликвид")
							И ЗначениеЗаполнено(Строка.НВЛ) Тогда
						Строка.НВЛ = ПредопределенноеЗначение("Перечисление.СтатусыНеликвидовОбои.ПустаяСсылка");
					КонецЕсли;
					Строка[ИмяКолонкиЗаполнения] = ЗначениеЗаполнения;
				КонецЕсли;
			КонецЦикла;
			Элементы.СписокНоменклатурныхПозицийВосстановитьЗначения.Доступность = Ложь;
			Элементы.СписокНоменклатурныхПозицийВосстановитьЗначения.Отображение = ВариантОтображения;
		КонецЕсли;
		
		ЗначениеЗаполнения = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицуСкладов();
	УстановитьВидимостьЭлементов();
	ЗаполнитьСписокВыбораТипНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораТипНоменклатуры()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	вогТипыНоменклатуры.Код КАК Код
		|ИЗ
		|	Справочник.вогТипыНоменклатуры КАК вогТипыНоменклатуры
		|ГДЕ
		|	вогТипыНоменклатуры.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Обои)
		|	И НЕ вогТипыНоменклатуры.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Элементы.ТипНоменклатурыПредставление.СписокВыбора.ЗагрузитьЗначения(РезультатЗапроса.ВыгрузитьКолонку("Код"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	ЭтоПолноправныйПользователь = Пользователи.ЭтоПолноправныйПользователь(ТекущийПользователь);
	Если ЭтоПолноправныйПользователь Тогда
		Элементы.Период.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСкладов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склады.Подразделение КАК Подразделение,
		|	Склады.Наименование КАК Склад
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	НЕ Склады.ПометкаУдаления
		|	И Склады.УчаствуетВНТЗПоСкладам
		|ИТОГИ ПО
		|	Подразделение";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПодразделение = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СчетчикПодразделений = 1;
	СчетчикСкладов = 1;
	
	МассивПодразделений = Новый Массив;
	Пока ВыборкаПодразделение.Следующий() Цикл
		
		//МассивПодразделений.Добавить(ВыборкаПодразделение.Подразделение);
		СписокПодразделений.Добавить(ВыборкаПодразделение.Подразделение,ВыборкаПодразделение.Подразделение.Наименование,Истина);
		
		ИмяГруппы = "СписокНоменклатурныхПозицийПоСкладамПодразделение" + СчетчикПодразделений;
		ГруппаПодразделения = Элементы.Добавить(ИмяГруппы,Тип("ГруппаФормы"),Элементы.СписокНоменклатурныхПозицийПоСкладам);
		ГруппаПодразделения.Вид = ВидГруппыФормы.ГруппаКолонок;
		ГруппаПодразделения.ОтображатьВШапке = Истина;
		ГруппаПодразделения.Заголовок = ВыборкаПодразделение.Подразделение.Наименование;
		ГруппаПодразделения.Группировка = ГруппировкаКолонок.Горизонтальная;
		
		ВыборкаДетальныеЗаписи = ВыборкаПодразделение.Выбрать();
		
		СчетчикСкладовДляЭлементов = СчетчикСкладов;
		нРеквизиты = Новый Массив;
		КвалификаторыЧисла = Новый КвалификаторыЧисла(10);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
   			нРеквизиты.Добавить(Новый РеквизитФормы("Склад" + СчетчикСкладов, Новый ОписаниеТипов("Булево"), "Объект.СписокНоменклатурныхПозицийПоСкладам", ВыборкаДетальныеЗаписи.Склад, Истина));
			нРеквизиты.Добавить(Новый РеквизитФормы("Количество" + СчетчикСкладов, Новый ОписаниеТипов("Число",КвалификаторыЧисла), "Объект.СписокНоменклатурныхПозицийПоСкладам", "Количество", Истина));
			СчетчикСкладов = СчетчикСкладов + 1;
		КонецЦикла;
		
		ИзменитьРеквизиты(нРеквизиты);
		
		ВыборкаДетальныеЗаписи.Сбросить();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ЭлементГруппы = Элементы.Добавить("СписокНоменклатурныхПозицийПоСкладамСклад" + СчетчикСкладовДляЭлементов,Тип("ПолеФормы"),ГруппаПодразделения);
			ЭлементГруппы.Вид = ВидПоляФормы.ПолеФлажка;
			ЭлементГруппы.ПутьКДанным = "Объект.СписокНоменклатурныхПозицийПоСкладам.Склад" + СчетчикСкладовДляЭлементов;
			ЭлементГруппы.Заголовок = ВыборкаДетальныеЗаписи.Склад;
			
			ЭлементГруппы = Элементы.Добавить("СписокНоменклатурныхПозицийПоСкладамКоличество" + СчетчикСкладовДляЭлементов,Тип("ПолеФормы"),ГруппаПодразделения);
			ЭлементГруппы.Вид = ВидПоляФормы.ПолеВвода;
			ЭлементГруппы.ПутьКДанным = "Объект.СписокНоменклатурныхПозицийПоСкладам.Количество" + СчетчикСкладовДляЭлементов;
			ЭлементГруппы.Заголовок = "Количество";
			
			СчетчикСкладовДляЭлементов = СчетчикСкладовДляЭлементов + 1;
			
		КонецЦикла;
		СчетчикПодразделений = СчетчикПодразделений + 1;
		
	КонецЦикла;
	
	//
	//Элементы.СписокПодразделений.СписокВыбора.ЗагрузитьЗначения(МассивПодразделений);
	//Элементы.СписокПодразделений.РежимВыбораИзСписка = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	ВыбратьВсеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсеНаСервере()
	
	ТаблицаНоменклатурныхПозицийПоСкладам = Объект.СписокНоменклатурныхПозицийПоСкладам.Выгрузить();
	
	Для Каждого ИндексСтроки Из Элементы.СписокНоменклатурныхПозицийПоСкладам.ВыделенныеСтроки Цикл
		Строка = Объект.СписокНоменклатурныхПозицийПоСкладам.НайтиПоИдентификатору(ИндексСтроки);
		Если Строка = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Колонка Из ТаблицаНоменклатурныхПозицийПоСкладам.Колонки Цикл
			Если СтрНайти(Колонка.Имя,"Склад") = 0 Тогда
				Продолжить;
			КонецЕсли;
			Строка[Колонка.Имя] = Истина;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	СнятьВсеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СнятьВсеНаСервере()
	
	ТаблицаНоменклатурныхПозицийПоСкладам = Объект.СписокНоменклатурныхПозицийПоСкладам.Выгрузить();
	
	Для Каждого ИндексСтроки Из Элементы.СписокНоменклатурныхПозицийПоСкладам.ВыделенныеСтроки Цикл
		Строка = Объект.СписокНоменклатурныхПозицийПоСкладам.НайтиПоИдентификатору(ИндексСтроки);
		Если Строка = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Колонка Из ТаблицаНоменклатурныхПозицийПоСкладам.Колонки Цикл
			Если СтрНайти(Колонка.Имя,"Склад") = 0 Тогда
				Продолжить;
			КонецЕсли;
			Строка[Колонка.Имя] = Ложь;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПодразделенийПометкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.СписокПодразделений.ТекущиеДанные;
	
	Для Каждого Колонка Из Элементы.СписокНоменклатурныхПозицийПоСкладам.ПодчиненныеЭлементы Цикл
		Если СтрНайти(Колонка.Имя,"Подразделение") = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрНайти(Колонка.Заголовок,ТекущаяСтрока.Представление) = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Колонка.Видимость = ТекущаяСтрока.Пометка;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийПоСкладамОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВыбранноеЗначение <> Неопределено Тогда
		Для Каждого НоменклатурнаяПозиция Из ВыбранноеЗначение Цикл
			
			НайденныеСтроки = Объект.СписокНоменклатурныхПозицийПоСкладам.НайтиСтроки(Новый Структура("НоменклатурнаяПозиция",НоменклатурнаяПозиция));
			Если НайденныеСтроки.Количество() > 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Объект.СписокНоменклатурныхПозицийПоСкладам.Добавить();
			НоваяСтрока.НоменклатурнаяПозиция = НоменклатурнаяПозиция;
			ДанныеЗаполнения = ПолучитьДанныеЗаполненияПоСкладамНаСервере(НоменклатурнаяПозиция);
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ДанныеЗаполнения);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеЗаполненияПоСкладамНаСервере(НоменклатурнаяПозиция)
	
	ТаблицаНоменклатурныхПозицийПоСкладам = Объект.СписокНоменклатурныхПозицийПоСкладам.Выгрузить();
	
	ДанныеЗаполнения = Новый Структура;
	ТекущаяДата = ТекущаяДата();
	
	Для Каждого Колонка Из ТаблицаНоменклатурныхПозицийПоСкладам.Колонки Цикл
		Если СтрНайти(Колонка.Имя,"Склад") = 0 Тогда
			Продолжить;
		КонецЕсли;
		ИмяСклада = Элементы["СписокНоменклатурныхПозицийПоСкладам" + Колонка.Имя].Заголовок;
		Склад = Справочники.Склады.НайтиПоНаименованию(ИмяСклада);
		Если Склад = Справочники.Склады.ПустаяСсылка() Тогда
			Возврат ДанныеЗаполнения;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НоменклатурныеПозицииВНТЗСрезПоследних.НТЗ КАК НТЗ,
			|	НоменклатурныеПозицииВНТЗСрезПоследних.Количество КАК Количество,
			|	НоменклатурныеПозицииВНТЗСрезПоследних.НоменклатурнаяПозиция КАК НоменклатурнаяПозиция,
			|	НоменклатурныеПозицииВНТЗСрезПоследних.Склад КАК Склад
			|ИЗ
			|	РегистрСведений.НоменклатурныеПозицииВНТЗ.СрезПоследних(
			|			&ТекущаяДата,
			|			НоменклатурнаяПозиция = &НоменклатурнаяПозиция
			|				И Склад = &Склад) КАК НоменклатурныеПозицииВНТЗСрезПоследних";
		
		Запрос.УстановитьПараметр("НоменклатурнаяПозиция", НоменклатурнаяПозиция);
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ДанныеЗаполнения.Вставить(Колонка.Имя,ВыборкаДетальныеЗаписи.НТЗ);
			ИмяКолонкиКоличество = СтрЗаменить(Колонка.Имя,"Склад","Количество");
			ДанныеЗаполнения.Вставить(ИмяКолонкиКоличество,ВыборкаДетальныеЗаписи.Количество);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

&НаКлиенте
Процедура СписокНоменклатурныхПозицийПоСкладамНоменклатурнаяПозицияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокНоменклатурныхПозицийПоСкладам.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = ПолучитьДанныеЗаполненияПоСкладамНаСервере(ТекущиеДанные.НоменклатурнаяПозиция);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные,ДанныеЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийНоменклатурнаяПозицияПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокНоменклатурныхПозиций.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеЗаполнения = ПолучитьДанныеЗаполненияНаСервере(ТекущиеДанные.НоменклатурнаяПозиция);
	ТекущиеДанные.СтадияЖЦ = ДанныеЗаполнения.СтадияЖизненногоЦикла;
	ТекущиеДанные.НВЛ = ДанныеЗаполнения.СтатусНеликвида;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийНоменклатурнаяПозицияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Истина);
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",Ложь);
	ПараметрыФормы.Вставить("ТолькоПросмотр",Истина);
	
	Если ЗначениеЗаполнено(Объект.Период) Тогда
		ПериодСтатусов = Объект.Период;
	Иначе
		ПериодСтатусов = ТекущаяДата();
	КонецЕсли;
	ПараметрыФормы.Вставить("Период", ПериодСтатусов);
	
	ОткрытьФорму(
		"Обработка.вогИзменениеСтадииЖизненногоЦикла.Форма.ФормаПодбораНоменклатурныхПозиций",
		ПараметрыФормы,
		Элемент,
		,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийПоСкладамНоменклатурнаяПозицияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Истина);
	ПараметрыФормы.Вставить("РежимВыбора",Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",Ложь);
	ПараметрыФормы.Вставить("ТолькоПросмотр",Истина);
	
	Если ЗначениеЗаполнено(Объект.Период) Тогда
		ПериодСтатусов = Объект.Период;
	Иначе
		ПериодСтатусов = ТекущаяДата();
	КонецЕсли;
	ПараметрыФормы.Вставить("Период", ПериодСтатусов);
	
	ОткрытьФорму(
		"Обработка.вогИзменениеСтадииЖизненногоЦикла.Форма.ФормаПодбораНоменклатурныхПозиций",
		ПараметрыФормы,
		Элемент,
		,
		,
		,
		,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийНоменклатурнаяПозицияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		НоменклатурнаяПозиция = ВыбранноеЗначение[0];
	Иначе
		НоменклатурнаяПозиция = ВыбранноеЗначение;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	НайденныеСтроки = Объект.СписокНоменклатурныхПозиций.НайтиСтроки(Новый Структура("НоменклатурнаяПозиция",НоменклатурнаяПозиция));	
	Если НайденныеСтроки.Количество() > 0 Тогда
	Иначе
		Элементы.СписокНоменклатурныхПозиций.ТекущиеДанные.НоменклатурнаяПозиция = НоменклатурнаяПозиция;
		ДанныеЗаполнения = ПолучитьДанныеЗаполненияНаСервере(НоменклатурнаяПозиция);
		Элементы.СписокНоменклатурныхПозиций.ТекущиеДанные.СтадияЖЦ = ДанныеЗаполнения.СтадияЖизненногоЦикла;
		Элементы.СписокНоменклатурныхПозиций.ТекущиеДанные.НВЛ = ДанныеЗаполнения.СтатусНеликвида;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийПоСкладамНоменклатурнаяПозицияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		НоменклатурнаяПозиция = ВыбранноеЗначение[0];
	Иначе
		НоменклатурнаяПозиция = ВыбранноеЗначение;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	НайденныеСтроки = Объект.СписокНоменклатурныхПозицийПоСкладам.НайтиСтроки(Новый Структура("НоменклатурнаяПозиция",НоменклатурнаяПозиция));	
	Если НайденныеСтроки.Количество() > 0 Тогда
	Иначе
		Элементы.СписокНоменклатурныхПозицийПоСкладам.ТекущиеДанные.НоменклатурнаяПозиция = НоменклатурнаяПозиция;
		ДанныеЗаполнения = ПолучитьДанныеЗаполненияПоСкладамНаСервере(НоменклатурнаяПозиция);
		ЗаполнитьЗначенияСвойств(Элементы.СписокНоменклатурныхПозицийПоСкладам.ТекущиеДанные,ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если Объект.СписокНоменклатурныхПозиций.Количество() > 0 Тогда 
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗавершение", ЭтотОбъект), "Табличная часть будет очищена. Продолжить",РежимДиалогаВопрос.ДаНет);
	Иначе
		Если НЕ ОтборУстановлен() Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗавершениеПослеВопроса", ЭтотОбъект), "Отбор не установлен. Формирование может занять продолжительное время. Продолжить?",РежимДиалогаВопрос.ДаНет);
		Иначе
			ЗаполнитьНаСервере();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОтборУстановлен()
	
	ОтборЗаполнен = Ложь;
	
	Если ЗначениеЗаполнено(Бренд)
			ИЛИ ЗначениеЗаполнено(СтадияЖЦ)
			ИЛИ ЗначениеЗаполнено(Дизайн)
			ИЛИ ЗначениеЗаполнено(НВЛ)
			ИЛИ ЗначениеЗаполнено(ТипНоменклатуры)
			ИЛИ ЗначениеЗаполнено(Производитель)
			ИЛИ ЗначениеЗаполнено(Коллекция) Тогда
		ОтборЗаполнен = Истина;
	КонецЕсли;
	
	Возврат ОтборЗаполнен;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.СписокНоменклатурныхПозиций.Очистить();               
		Если НЕ ОтборУстановлен() Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьЗавершениеПослеВопроса", ЭтотОбъект), "Отбор не установлен. Формирование может занять продолжительное время. Продолжить?",РежимДиалогаВопрос.ДаНет);
		Иначе
			ЗаполнитьНаСервере();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗавершениеПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

	
&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТаблицаНоменклатура.НоменклатурнаяПозиция КАК НоменклатурнаяПозиция,
		|	СтатусыНоменклатурныхПозицийОбоевСрезПоследних.СтадияЖизненногоЦикла КАК СтадияЖЦ,
		|	СтатусыНоменклатурныхПозицийОбоевСрезПоследних.СтатусНеликвида КАК НВЛ
		|ИЗ
		|	Справочник.Номенклатура КАК ТаблицаНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНоменклатурныхПозицийОбоев.СрезПоследних(&ТекущаяДата, ) КАК СтатусыНоменклатурныхПозицийОбоевСрезПоследних
		|		ПО (СтатусыНоменклатурныхПозицийОбоевСрезПоследних.НоменклатурнаяПозиция = ТаблицаНоменклатура.НоменклатурнаяПозиция)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КоллекцииДляСайта.Состав КАК КоллекцииДляСайтаСостав
		|		ПО ТаблицаНоменклатура.Ссылка = КоллекцииДляСайтаСостав.Номенклатура
		|ГДЕ
		|	НЕ ТаблицаНоменклатура.ПометкаУдаления
		|	И ТаблицаНоменклатура.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Обои)
		|	И НЕ ТаблицаНоменклатура.НоменклатурнаяПозиция.ПометкаУдаления
		|	#ТекстОтбораПроизводителя
		|
		|СГРУППИРОВАТЬ ПО
		|	СтатусыНоменклатурныхПозицийОбоевСрезПоследних.СтадияЖизненногоЦикла,
		|	СтатусыНоменклатурныхПозицийОбоевСрезПоследних.СтатусНеликвида,
		|	ТаблицаНоменклатура.НоменклатурнаяПозиция";
	
	Если ЗначениеЗаполнено(Объект.Период) Тогда 
		ТекущаяДата = Объект.Период;
	Иначе
		ТекущаяДата = ТекущаяДата();
	КонецЕсли;
	
	ТекстОтбора = "";
	ТекстОтбораПроизводителя = "";
	Если ЗначениеЗаполнено(Бренд) Тогда 
		ТекстОтбораПроизводителя = ТекстОтбораПроизводителя + " И ТаблицаНоменклатура.НоменклатурнаяПозиция.Дизайн.Бренд = &Бренд";
		Запрос.УстановитьПараметр("Бренд",Бренд);
	Иначе
		ТекстОтбораПроизводителя = ТекстОтбораПроизводителя + " И ТаблицаНоменклатура.НоменклатурнаяПозиция.Дизайн.Бренд.ПринадлежностьБренда = &ПринадлежностьБренда";
		Запрос.УстановитьПараметр("ПринадлежностьБренда",Перечисления.вогПринадлежностьБренда.ТоварныйПортфельВОГ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтадияЖЦ) Тогда
		ТекстОтбораПроизводителя = ТекстОтбораПроизводителя + ?(ТекстОтбораПроизводителя = "",""," И ") + "СтатусыНоменклатурныхПозицийОбоевСрезПоследних.СтадияЖизненногоЦикла = &СтадияЖизненногоЦикла";
		Запрос.УстановитьПараметр("СтадияЖизненногоЦикла",СтадияЖЦ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Дизайн) Тогда 
		ТекстОтбораПроизводителя = ТекстОтбораПроизводителя + ?(ТекстОтбораПроизводителя = "",""," И ") + "ТаблицаНоменклатура.НоменклатурнаяПозиция.Дизайн = &Дизайн";
		Запрос.УстановитьПараметр("Дизайн",Дизайн);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НВЛ) Тогда
		ТекстОтбораПроизводителя = ТекстОтбораПроизводителя + ?(ТекстОтбораПроизводителя = "",""," И ") + "СтатусыНоменклатурныхПозицийОбоевСрезПоследних.СтатусНеликвида = &СтатусНеликвида";
		Запрос.УстановитьПараметр("СтатусНеликвида",НВЛ);
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ТипНоменклатуры) Тогда
		ТекстОтбораПроизводителя = ТекстОтбораПроизводителя + ?(ТекстОтбораПроизводителя = "",""," И ") + "ТаблицаНоменклатура.НоменклатурнаяПозиция.Дизайн.ТипНоменклатуры = &ТипНоменклатуры";
		Запрос.УстановитьПараметр("ТипНоменклатуры",ТипНоменклатуры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Производитель) Тогда
		ТекстОтбораПроизводителя = ТекстОтбораПроизводителя + " И ТаблицаНоменклатура.вогПроизводитель = &Производитель";
		Запрос.УстановитьПараметр("Производитель",Производитель);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Коллекция) Тогда 
		ТекстОтбораПроизводителя = ?(ТекстОтбораПроизводителя = "",""," И ") + "КоллекцииДляСайтаСостав.Ссылка = &Коллекция";
		Запрос.УстановитьПараметр("Коллекция",Коллекция);
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"#ТекстОтбораПроизводителя",ТекстОтбораПроизводителя);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"#Отбор",ТекстОтбора);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаРезультат = РезультатЗапроса.Выгрузить();
	Объект.СписокНоменклатурныхПозиций.Загрузить(ТаблицаРезультат);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНТЗ(Команда)
	
	Если Объект.СписокНоменклатурныхПозицийПоСкладам.Количество() > 0 Тогда 
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьНТЗЗавершение", ЭтаФорма), "Табличная часть будет очищена. Продолжить",РежимДиалогаВопрос.ДаНет);
	Иначе
		Если НЕ ОтборУстановлен() Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьНТЗЗавершениеПослеВопроса", ЭтотОбъект), "Отбор не установлен. Формирование может занять продолжительное время. Продолжить?",РежимДиалогаВопрос.ДаНет);
		Иначе
			ЗаполнитьНТЗНаСервере();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНТЗЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.СписокНоменклатурныхПозицийПоСкладам.Очистить();
		Если НЕ ОтборУстановлен() Тогда
			ПоказатьВопрос(Новый ОписаниеОповещения("ЗаполнитьНТЗЗавершениеПослеВопроса", ЭтотОбъект), "Отбор не установлен. Формирование может занять продолжительное время. Продолжить?",РежимДиалогаВопрос.ДаНет);
		Иначе
			ЗаполнитьНТЗНаСервере();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНТЗЗавершениеПослеВопроса(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьНТЗНаСервере();
	КонецЕсли;
		
КонецПроцедуры

Процедура ЗаполнитьНТЗНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаНоменклатура.НоменклатурнаяПозиция КАК НоменклатурнаяПозиция,
		|	СтатусыНоменклатурныхПозицийОбоевСрезПоследних.СтадияЖизненногоЦикла КАК СтадияЖизненногоЦикла
		|ИЗ
		|	Справочник.Номенклатура КАК ТаблицаНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатурныеПозицииВНТЗ.СрезПоследних(&Период, ) КАК НоменклатурныеПозицииВНТЗСрезПоследних
		|		ПО (НоменклатурныеПозицииВНТЗСрезПоследних.НоменклатурнаяПозиция = ТаблицаНоменклатура.НоменклатурнаяПозиция)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыНоменклатурныхПозицийОбоев.СрезПоследних(&Период, ) КАК СтатусыНоменклатурныхПозицийОбоевСрезПоследних
		|		ПО ТаблицаНоменклатура.НоменклатурнаяПозиция = СтатусыНоменклатурныхПозицийОбоевСрезПоследних.НоменклатурнаяПозиция
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КоллекцииДляСайта.Состав КАК КоллекцииДляСайтаСостав
		|		ПО ТаблицаНоменклатура.Ссылка = КоллекцииДляСайтаСостав.Номенклатура
		|ГДЕ
		|	ТаблицаНоменклатура.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Обои)
		|	И НЕ ТаблицаНоменклатура.ПометкаУдаления
		|	И НЕ ТаблицаНоменклатура.НоменклатурнаяПозиция.ПометкаУдаления
		|	#Отбор
		|
		|СГРУППИРОВАТЬ ПО
		|	СтатусыНоменклатурныхПозицийОбоевСрезПоследних.СтадияЖизненногоЦикла,
		|	ТаблицаНоменклатура.НоменклатурнаяПозиция";
	
	ТекстОтбора = "";
	Если ЗначениеЗаполнено(Бренд) Тогда 
		ТекстОтбора = ТекстОтбора + " И ТаблицаНоменклатура.НоменклатурнаяПозиция.Дизайн.Бренд = &Бренд";
		Запрос.УстановитьПараметр("Бренд",Бренд);
	Иначе
		ТекстОтбора = ТекстОтбора + " И ТаблицаНоменклатура.НоменклатурнаяПозиция.Дизайн.Бренд.ПринадлежностьБренда = &ПринадлежностьБренда";
		Запрос.УстановитьПараметр("ПринадлежностьБренда",Перечисления.вогПринадлежностьБренда.ТоварныйПортфельВОГ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтадияЖЦ) Тогда
		ТекстОтбора = ТекстОтбора + ?(ТекстОтбора = "",""," И ") + "СтатусыНоменклатурныхПозицийОбоевСрезПоследних.СтадияЖизненногоЦикла = &СтадияЖизненногоЦикла";
		Запрос.УстановитьПараметр("СтадияЖизненногоЦикла",СтадияЖЦ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Дизайн) Тогда 
		ТекстОтбора = ТекстОтбора + ?(ТекстОтбора = "",""," И ") + "ТаблицаНоменклатура.НоменклатурнаяПозиция.Дизайн = &Дизайн";
		Запрос.УстановитьПараметр("Дизайн",Дизайн);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НВЛ) Тогда
		ТекстОтбора = ТекстОтбора + ?(ТекстОтбора = "",""," И ") + "СтатусыНоменклатурныхПозицийОбоевСрезПоследних.СтатусНеликвида = &СтатусНеликвида";
		Запрос.УстановитьПараметр("СтатусНеликвида",НВЛ);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТипНоменклатуры) Тогда
		ТекстОтбора = ТекстОтбора + ?(ТекстОтбора = "",""," И ") + "ТаблицаНоменклатура.НоменклатурнаяПозиция.Дизайн.ТипНоменклатуры = &ТипНоменклатуры";
		Запрос.УстановитьПараметр("ТипНоменклатуры",ТипНоменклатуры);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Производитель) Тогда
		ТекстОтбора = ТекстОтбора + ?(ТекстОтбора = "",""," И ") + "ТаблицаНоменклатура.вогПроизводитель = &Производитель";
		Запрос.УстановитьПараметр("Производитель",Производитель);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Коллекция) Тогда 
		ТекстОтбора = ТекстОтбора + ?(ТекстОтбора = "",""," И ") + "КоллекцииДляСайтаСостав.Ссылка = &Коллекция";
		Запрос.УстановитьПараметр("Коллекция",Коллекция);
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"#Отбор",ТекстОтбора);
	
	Если ЗначениеЗаполнено(Объект.Период) Тогда 
		ТекущаяДата = Объект.Период;
	Иначе
		ТекущаяДата = ТекущаяДата();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Период", ТекущаяДата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатурнаяПозиция = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаНоменклатурнаяПозиция.Следующий() Цикл
		НоваяСтрока = Объект.СписокНоменклатурныхПозицийПоСкладам.Добавить();
		НоваяСтрока.НоменклатурнаяПозиция 	= ВыборкаНоменклатурнаяПозиция.НоменклатурнаяПозиция;
		НоваяСтрока.СтадияЖЦ				= ВыборкаНоменклатурнаяПозиция.СтадияЖизненногоЦикла;
		
		ДанныеЗаполнения = ПолучитьДанныеЗаполненияПоСкладамНаСервере(НоваяСтрока.НоменклатурнаяПозиция);
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ДанныеЗаполнения);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийСтадияЖЦНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СписокВыбора = Новый СписокЗначений;
	ТекущиеДанные = Элементы.СписокНоменклатурныхПозиций.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.НВЛ = ПредопределенноеЗначение("Перечисление.СтатусыНеликвидовОбои.ПустаяСсылка") Тогда
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтадииЖизненногоЦиклаОбои.Новинка"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтадииЖизненногоЦиклаОбои.Закрыт"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтадииЖизненногоЦиклаОбои.Заказной"));
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтадииЖизненногоЦиклаОбои.Неликвид"));
			// +++ VOG Кулаков П.Л. 04.05.2021 DEV-481
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтадииЖизненногоЦиклаОбои.ОсновнойАссортимент"));
			// --- VOG Кулаков П.Л.
		Иначе
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтадииЖизненногоЦиклаОбои.Неликвид"));
		КонецЕсли;
	КонецЕсли;
	ДанныеВыбора = СписокВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийНВЛНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокНоменклатурныхПозиций.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ТекущиеДанные.СтадияЖЦ <> ПредопределенноеЗначение("Перечисление.СтадииЖизненногоЦиклаОбои.Неликвид") Тогда
		СтандартнаяОбработка = Ложь;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийПоСкладамПриИзменении(Элемент)
	
	Если Элемент.ТекущийЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКолонки = СтрЗаменить(Элемент.ТекущийЭлемент.Имя,"СписокНоменклатурныхПозицийПоСкладам","");
	
	Если СтрНайти(ИмяКолонки,"Количество") > 0 Тогда
		
		Если ТекущиеДанные[ИмяКолонки] = 0 Тогда
			Возврат;
		КонецЕсли;
		
		КоличествоШтукВКоробке = ПолучитьКоличествоШтукВКоробкеНаСервере(ТекущиеДанные.НоменклатурнаяПозиция);
		Если ТекущиеДанные[ИмяКолонки] % КоличествоШтукВКоробке <> 0 Тогда
			ТекущиеДанные[ИмяКолонки] = (Цел(ТекущиеДанные[ИмяКолонки] / КоличествоШтукВКоробке) + 1) * (КоличествоШтукВКоробке);
			ОчиститьСообщения();
			Сообщить("Произведен пересчет на ближайшее кратное коробке <" + КоличествоШтукВКоробке + ">");
		КонецЕсли;
		
	ИначеЕсли СтрНайти(ИмяКолонки,"Склад") > 0 Тогда
		
		Если ТекущиеДанные[ИмяКолонки] Тогда
			Возврат;
		КонецЕсли;
		
		ИмяКолонкиКоличество = СтрЗаменить(ИмяКолонки,"Склад","Количество");
		ТекущиеДанные[ИмяКолонкиКоличество] = 0;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоШтукВКоробкеНаСервере(НоменклатурнаяПозиция)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ЕдиницыИзмерения.Содержит) КАК КоличествоШтук
		|ИЗ
		|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|ГДЕ
		|	ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору
		|	И ЕдиницыИзмерения.Владелец.НоменклатурнаяПозиция = &НоменклатурнаяПозиция";
	
	ЕдиницаКоробки 	= Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("875"); // Корбоки
	
	Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору", ЕдиницаКоробки);
	Запрос.УстановитьПараметр("НоменклатурнаяПозиция", НоменклатурнаяПозиция);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		КоличествоШтук = ВыборкаДетальныеЗаписи.КоличествоШтук;
	Иначе
		КоличествоШтук = 0;
	КонецЕсли;
	
	Возврат КоличествоШтук;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьСтадиюИНВЛ(Команда)
	
	Если Объект.СписокНоменклатурныхПозиций.Количество() <> 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьСтадиюИНВЛЗавершение", ЭтотОбъект), "Табличная часть будет очищена. Продолжить?",РежимДиалогаВопрос.ДаНет);
	Иначе	
		ВыбратьФайл("СтадияЖЦ");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьСтадиюИНВЛЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.СписокНоменклатурныхПозиций.Очистить();
		ВыбратьФайл("СтадияЖЦ");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайл(ИмяТаблицы)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Если Диалог.Выбрать() Тогда
		Файл = Новый Файл(Диалог.ПолноеИмяФайла);
		Если НЕ Файл.Существует() Тогда
			Возврат;
		КонецЕсли;
		ДвоичныеДанные = Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла);
		ЗагрузитьНаСервере(ДвоичныеДанные, Файл.Расширение,ИмяТаблицы);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере(ДвоичныеДанные, Расширение, ИмяТаблицы)
	
	ФайлEXCELНаСервере = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанные.Записать(ФайлEXCELНаСервере);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ФайлEXCELНаСервере);
	УдалитьФайлы(ФайлEXCELНаСервере);
	ОбластьТаблицы = ТабличныйДокумент.Область(1, 1, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьТаблицы);  
	ПостроительЗапроса.Выполнить();
	ТаблицаДанных = ПостроительЗапроса.Результат.Выгрузить();
	
	Если ИмяТаблицы = "СтадияЖЦ" Тогда
		ЗагрузитьСтадиюЖЦНаСервере(ТаблицаДанных);
	ИначеЕсли ИмяТаблицы = "НТЗ" Тогда
		ЗагрузитьНТЗНаСервере(ТаблицаДанных);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСтадиюЖЦНаСервере(ТаблицаДанных)
	
	Попытка
		Для Каждого Строка Из ТаблицаДанных Цикл
			
			Если Не ЗначениеЗаполнено(Строка.СтадияЖЦ) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.Номенклатура) Тогда
				Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Строка.Номенклатура);
				Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
					Сообщить("Не удалось найти номенклатура по артикулу: " + Строка.Номенклатура);
					Продолжить;
				КонецЕсли;
			Иначе
				Продолжить;
			КонецЕсли;
			
			НоменклатурнаяПозиция = Номенклатура.НоменклатурнаяПозиция;
			Если Не ЗначениеЗаполнено(НоменклатурнаяПозиция) Тогда
				Сообщить("У номенклатуры: " + Номенклатура.Наименование + " не заполнена номенклатурная позиция"); 
				Продолжить;
			КонецЕсли;
			
			СтруктураЗаполнения = Новый Структура("НоменклатурнаяПозиция,СтадияЖЦ,НВЛ");
			СтруктураЗаполнения.НоменклатурнаяПозиция = НоменклатурнаяПозиция;
			
			Попытка
				СтадияЖЦСтрока = СтрЗаменить(СокрЛП(Строка.СтадияЖЦ)," ","");
				СтадияЖЦСсылка = Перечисления.СтадииЖизненногоЦиклаОбои[СтадияЖЦСтрока];
			Исключение
				Сообщить("Не найдена стадия жизненного цикла: " + СтадияЖЦСтрока);
				Продолжить;
			КонецПопытки;
			
			СтруктураЗаполнения.СтадияЖЦ = СтадияЖЦСсылка;
			
			Если СтадияЖЦСсылка = Перечисления.СтадииЖизненногоЦиклаОбои.Неликвид Тогда
				Попытка
					НВЛСтрока = СокрЛП(Строка.НВЛ);
					НВЛСсылка = Перечисления.СтатусыНеликвидовОбои[НВЛСтрока];
				Исключение
					Сообщить("Не найден статус неликвида: " + НВЛСтрока);
					Продолжить;
				КонецПопытки;
				Если НЕ ЗначениеЗаполнено(НВЛСсылка) Тогда
					Сообщить("Для номенклатуры: " + Номенклатура + "не заполнен статус неликвида");
				КонецЕсли;
				СтруктураЗаполнения.НВЛ = НВЛСсылка;
			КонецЕсли;
			
			НоваяСтрока = Объект.СписокНоменклатурныхПозиций.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураЗаполнения);
			
		КонецЦикла;
		
	Исключение
		Сообщить("Во время загрузки произошла ошибка. Обратитесь к администратору." + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСоответствиеСкладов()
	
	СоответствиеСкладов = Новый Соответствие;
	
	ТаблицаНоменклатурныхПозицийПоСкладам = Объект.СписокНоменклатурныхПозицийПоСкладам.Выгрузить();
	
	Для Каждого Колонка Из ТаблицаНоменклатурныхПозицийПоСкладам.Колонки Цикл
		
		Если СтрНайти(Колонка.Имя,"Склад") = 0 Тогда
			Продолжить;
		КонецЕсли;
		ИмяСклада = Элементы["СписокНоменклатурныхПозицийПоСкладам" + Колонка.Имя].Заголовок;
		СоответствиеСкладов.Вставить(НРег(ИмяСклада),Колонка.Имя);
		
	КонецЦикла;
	
	Возврат СоответствиеСкладов;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьНТЗНаСервере(ТаблицаДанных)
	
	Попытка
		СоответствиеСкладов = ПолучитьСоответствиеСкладов();
		
		МассивНоменклатуры = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ТаблицаДанных.ВыгрузитьКолонку("Номенклатура"));
		
		Для Каждого Элемент Из МассивНоменклатуры Цикл
			
			Если ЗначениеЗаполнено(Элемент) Тогда
				Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",Элемент);
				Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
					Сообщить("Не удалось найти номенклатура по артикулу: " + Элемент);
					Продолжить;
				КонецЕсли;
			Иначе
				Продолжить;
			КонецЕсли;
			
			НайденныеСтроки = ТаблицаДанных.НайтиСтроки(Новый Структура("Номенклатура",Элемент));	
			
			НоменклатурнаяПозиция = Номенклатура.НоменклатурнаяПозиция;
			Если Не ЗначениеЗаполнено(НоменклатурнаяПозиция) Тогда
				Сообщить("У номенклатуры: " + Номенклатура.Наименование + " не заполнена номенклатурная позиция"); 
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = Объект.СписокНоменклатурныхПозицийПоСкладам.Добавить();
			НоваяСтрока.НоменклатурнаяПозиция = НоменклатурнаяПозиция;
			
			Для Каждого Строка Из НайденныеСтроки Цикл
				
				Попытка
					ИмяКолонкиСклад = СоответствиеСкладов.Получить(НРег(Строка.Склад));
					ИмяКолонкиКоличество = СтрЗаменить(ИмяКолонкиСклад,"Склад","Количество");
					НоваяСтрока[ИмяКолонкиСклад] = Истина;
					НоваяСтрока[ИмяКолонкиКоличество] = Строка.Количество;
					
					КоличествоШтукВКоробке = ПолучитьКоличествоШтукВКоробкеНаСервере(НоменклатурнаяПозиция);
					ПроизведенПересчет = Ложь;
					Если НоваяСтрока[ИмяКолонкиКоличество] % КоличествоШтукВКоробке <> 0 Тогда
						НоваяСтрока[ИмяКолонкиКоличество] = (Цел(НоваяСтрока[ИмяКолонкиКоличество] / КоличествоШтукВКоробке) + 1) * (КоличествоШтукВКоробке);
						ПроизведенПересчет = Истина;
					КонецЕсли;
				Исключение
					Сообщить("Для BSU: " + НоменклатурнаяПозиция + " при загрузке данных по складу: " + ИмяКолонкиСклад + " произошла ошибка. Данные по складу не загружены.")
				КонецПопытки;
				
			КонецЦикла;
			
			Если ПроизведенПересчет Тогда
				Сообщить("Для BSU: " + НоменклатурнаяПозиция + " произведен пересчет на ближайшее кратное коробке <" + КоличествоШтукВКоробке + ">");
			КонецЕсли;
			
		КонецЦикла;
	Исключение
		Сообщить("Во время загрузки произошла ошибка. Обратитесь к администратору." + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНТЗ(Команда)
	
	Если Объект.СписокНоменклатурныхПозицийПоСкладам.Количество() <> 0 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗагрузитьНТЗЗавершение", ЭтотОбъект), "Табличная часть будет очищена. Продолжить?",РежимДиалогаВопрос.ДаНет);
	Иначе	
		ВыбратьФайл("НТЗ");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНТЗЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.СписокНоменклатурныхПозицийПоСкладам.Очистить();
		ВыбратьФайл("НТЗ");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//СтандартнаяОбработка = Ложь;
	//ПараметрыФормы = Новый Структура();
	//СтруктураОтбора = Новый Структура();
	//СтруктураОтбора.Вставить("НаправлениеДеятельности",ПредопределенноеЗначение("Справочник.НаправленияДеятельности.Обои"));
	//ПараметрыФормы.Вставить("Отбор",СтруктураОтбора);
	//ПараметрыФормы.Вставить("РежимВыбора",Истина);
	//ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Истина);
	//ОткрытьФорму("Справочник.вогТипыНоменклатуры.ФормаВыбора"
	//		,ПараметрыФормы
	//		,Элемент
	//		,
	//		,
	//		,
	//		,
	//		,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийСтадияЖЦПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокНоменклатурныхПозиций.ТекущиеДанные;
	Если ТекущиеДанные.СтадияЖЦ <> ПредопределенноеЗначение("Перечисление.СтадииЖизненногоЦиклаОбои.Неликвид")
			И ЗначениеЗаполнено(ТекущиеДанные.НВЛ) Тогда
		ТекущиеДанные.НВЛ = ПредопределенноеЗначение("Перечисление.СтатусыНеликвидовОбои.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипНоменклатурыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Неопределено Тогда
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Число") Тогда
			ТипНоменклатуры = ПолучитьСсылкуНаТипНоменклатуры(ВыбранноеЗначение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаТипНоменклатуры(Код)
	
	Возврат Справочники.вогТипыНоменклатуры.НайтиПоКоду(Код,Истина);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКодСправочника(Ссылка)
	Возврат Ссылка.Код;
КонецФункции

&НаКлиенте
Процедура ТипНоменклатурыПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	ТипНоменклатуры = ПредопределенноеЗначение("Справочник.вогТипыНоменклатуры.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурныхПозицийПоСкладамПриАктивизацииЯчейки(Элемент)
	
	Если Элемент.ТекущийЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНайти(Элемент.ТекущийЭлемент.Заголовок,"Количество") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКолонки = "Склад" + СтрЗаменить(Элемент.ТекущийЭлемент.Имя,"СписокНоменклатурныхПозицийПоСкладамКоличество","");
	
	Если НЕ ТекущиеДанные[ИмяКолонки] Тогда
		Элементы[Элемент.ТекущийЭлемент.Имя].ТолькоПросмотр = Истина;
	Иначе
		Элементы[Элемент.ТекущийЭлемент.Имя].ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура БрендАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ПараметрыПолученияДанных.Вставить("Отбор",Новый Структура("ПометкаУдаления",Ложь));
	
КонецПроцедуры
