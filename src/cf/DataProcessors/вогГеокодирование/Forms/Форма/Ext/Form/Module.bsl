
Процедура НачальноеЗаполнение()
	
	Если ПоставщикКарты = 1 тогда
		ИмяМакета =?(РаботаСПолигонами,"HTMLPoly","HTMLGoogle");
	// +++ VOG Кулаков П.Л. 07.12.2020 CRM-1110
	ИначеЕсли ПоставщикКарты = 2 Тогда
		ИмяМакета = "HTMLYandex";
	Иначе 
		ИмяМакета = "HTML2Gis";
	// --- VOG Кулаков П.Л.		
	КонецЕсли;
	ТекстДокумента = Обработки.вогГеокодирование.ПолучитьМакет(ИмяМакета).ПолучитьТекст();
	//ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	//ТекстДокумента = ОбработкаОбъект.ПолучитьМакет(ИмяМакета).ПолучитьТекст();
	// +++ VOG Кулаков П.Л. 11.01.2021 DEV-60
	ЯндексКлючJavaAPI 	= вогГеокодированиеСерверПовтИсп.ПолучитьКлючЯндекс();
	// --- VOG Кулаков П.Л.
	//ЯндексКлючJavaAPI 	= "811c9840-7435-4a52-8f46-f1247610d1ed";
	ТекстДокумента 		= СтрЗаменить(ТекстДокумента,"<ваш API-ключ>",ЯндексКлючJavaAPI);
	Объект.Карта = ТекстДокумента;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	СкрытьПанельАдресов 		= Ложь;
	КоличествоОтветов			= 5;
	
	Если Параметры.Свойство("СкрытьПанельАдресов") Тогда
		СкрытьПанельАдресов = Параметры.СкрытьПанельАдресов;
	КонецЕсли;
	
	Если Параметры.Свойство("РежимПоискОбъектов") Тогда
		РежимПоискаОбъектов = Параметры.РежимПоискОбъектов;
	КонецЕсли;
	
	Если Параметры.Свойство("РежимРаботы") Тогда
		Если Параметры.РежимРаботы = "Полигоны" Тогда
			РаботаСПолигонами = Истина;
			РежимПоискОбъектов = Ложь;
			СкрытьПанельАдресов = Истина;
			Если Параметры.Свойство("Полигоны") Тогда
				вогГеокодированиеСервер.РазвернутьДанныеПоПолигонам(Объект.Полигоны, Параметры.Полигоны, Истина); 
			КонецЕсли;
			Элементы.ПоставщикКарты.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоискПоОрганизациям") Тогда
		ПоискПоОрганизациям = Параметры.ПоискПоОрганизациям;
	КонецЕсли;
	
	Если Параметры.Свойство("КоличествоОтветов") Тогда
		КоличествоОтветов = Параметры.КоличествоОтветов;
	КонецЕсли;
	
	РежимВыбора 	= Параметры.РежимВыбора;
	
	СтрокаПоискаАдреса 	= Параметры.Адрес;
	
	Если РежимПоискаОбъектов тогда
		массивчик = СтрРазделить(СтрокаПоискаАдреса,",");
		Попытка
			Широта = Число(массивчик[0]);
			Долгота = Число(массивчик[1]);
		Исключение
			РежимПоискаОбъектов = Ложь;
		КонецПопытки;
	КонецЕсли;
	
	Если Параметры.Свойство("ЦентрКарты") Тогда
		ЦентрКартыШирота = Параметры.ЦентрКарты.Широта;
		ЦентрКартыДолгота = Параметры.ЦентрКарты.Долгота;
	КонецЕсли;
	
	Если Параметры.Свойство("МасштабКарты") Тогда
		МасштабКарты = Параметры.МасштабКарты;		
	КонецЕсли;
	
	
	ФормаВвода3в1 				= Параметры.ФормаВвода3в1;
	Если ФормаВвода3в1 Тогда
		ПараметрыФормыВвода3в1 	= ЗначениеВСтрокуВнутр(Параметры.ПараметрыФормыВвода3в1);
	КонецЕсли;
	
	ФормаБыстрогоВвода = Параметры.ФормаБыстрогоВвода;
	
	Элементы.ГруппаКолонкаЛевая.Видимость = не СкрытьПанельАдресов;
	Элементы.ФормаВыбратьЭлемент.Видимость = РежимВыбора или ФормаВвода3в1;
	
	ПоставщикКарты = 1;
	
	НачальноеЗаполнение();
	
	// ++ VOG Солодов В.В. 26.11.2020 CRM-1071
	Если Параметры.Свойство("АдресТаблицыАдресов")
		И ЭтоАдресВременногоХранилища(Параметры.АдресТаблицыАдресов) Тогда
		
		ФормаПоручения = Истина;
		
		ТаблицаАдресов.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресТаблицыАдресов));
		
		Если Не ПустаяСтрока(Параметры.Адрес) Тогда
			
			ПараметрыОтбораСтрок = Новый Структура;
			ПараметрыОтбораСтрок.Вставить("Адрес", Параметры.Адрес);
			
			НайденныеСтроки = ТаблицаАдресов.НайтиСтроки(ПараметрыОтбораСтрок);
			
			Если НайденныеСтроки.Количество() > 0 Тогда
				Элементы.ТаблицаАдресов.ТекущаяСтрока = ТаблицаАдресов.Индекс(НайденныеСтроки[0]);
			Иначе
				
				НоваяСтрока = ТаблицаАдресов.Добавить();
				НоваяСтрока.Адрес = Параметры.Адрес;
				НоваяСтрока.Наименование = НСтр("ru = 'Адрес по поручению'");
				
				Элементы.ТаблицаАдресов.ТекущаяСтрока = ТаблицаАдресов.Индекс(НоваяСтрока);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ТаблицаАдресов.Видимость = ТаблицаАдресов.Количество() > 0;
	// -- VOG Солодов В.В. 26.11.2020 CRM-1071
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОграничитьПоискСтранойРФ = Истина;                    
	Если СтрокаПоискаАдреса<>"" тогда
		НайтиАдрес();
		Если СписокНайденныхАдресов.Количество()>0 тогда
			Широта = СписокНайденныхАдресов[0].Широта; 
			Долгота = СписокНайденныхАдресов[0].Долгота; 
		КонецЕсли;
		//ПодключитьОбработчикОжидания("УстановитьРежимПросмотра",1,Ложь);
		ПодключитьОбработчикОжидания("СоздатьМаркерНаКарте",1,Истина);
	КонецЕсли;
	
	Если Объект.Полигоны.Количество() Тогда
		ПодключитьОбработчикОжидания("ДобавитьПолигоныНаКарту",1,Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПолигоныНаКарту()
	
	текущийПолигон = 0;
	текущийКонтур = 0;
	строкаВHTML = "";
	Для каждого Строка из Объект.Полигоны цикл
		Если Строка.НомерПолигона<>текущийПолигон тогда
			строкаВHTML = строкаВHTML+?(текущийПолигон<>0,":","");
			текущийПолигон = Строка.НомерПолигона;
			текущийКонтур = 0;
		ИначеЕсли Строка.Контур <> текущийКонтур тогда
			строкаВHTML = строкаВHTML+?(текущийКонтур<>0,";","");
			текущийКонтур = Строка.Контур;
		КонецЕсли;
		строкаВHTML = строкаВHTML+Формат(Строка.Долгота,"ЧРД=.; ЧГ=0")+","+Формат(Строка.Широта,"ЧРД=.; ЧГ=0")+" ";
	КонецЦикла;
	Eval = Элементы.Карта.Документ.getElementById("eval");
	Eval.innerHTML = СокрЛП(строкаВHTML);
	Eval.setAttribute("function_name", "drawPolygonsFrom1C");
	Eval.click();
	Eval.setAttribute("function_name", "");
	Eval.innerHTML = "";
	
КонецПроцедуры

&НаКлиенте
Процедура КартаПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Попытка
		РежимПоискаОбъектов = Истина;
		ЭлементКоординат = Элементы.Карта.Документ.getElementById("markerposition");
		Если ЭлементКоординат.innerHTML<>"" тогда
			ШиротаДолгота=СтрРазделить(ЭлементКоординат.innerHTML,",");
			ЭлементКоординат.innerHTML = "";
			СтрокаПоискаАдреса = ШиротаДолгота[1] + "," + ШиротаДолгота[0];
			Широта = ШиротаДолгота[1];
			Долгота = ШиротаДолгота[0]; 
			НайтиАдрес(ИСТИНА);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Попытка
		ЭлементКоординаты = Элементы.Карта.Документ.getElementById("returnValue");
		Если ЭлементКоординаты.innerHTML<>"" тогда
			массивПолигонов = СтрРазделить(ЭлементКоординаты.innerHTML,":",Ложь);
			НомерПолигона = 1;
			Полигоны.Очистить();
			Для каждого строкаПолигон из массивПолигонов цикл
				массивПутей = СтрРазделить(строкаПолигон,";",Ложь);	
				НомерКонтура = 1;
				Для каждого строкаПуть из массивПутей цикл
					массивТочек = СтрРазделить(строкаПуть," ",ЛОЖЬ);	
					Для Каждого Точка из массивТочек цикл
						массивКоординаты = СтрРазделить(Точка,",",Ложь);	
						ТочкаДолгота = Число(массивКоординаты[0]);
						ТочкаШирота = число(массивКоординаты[1]);
						строкаПолигон = Объект.Полигоны.Добавить();	
						строкаПолигон.НомерПолигона = НомерПолигона;
						строкаПолигон.Контур = НомерКонтура;
						строкаПолигон.Широта = ТочкаШирота;
						строкаПолигон.Долгота = ТочкаДолгота;
					КонецЦикла;
					НомерКонтура = НомерКонтура+1;	
				КонецЦикла;
				НомерПолигона = НомерПолигона + 1;	
			КонецЦикла;
			сообщить("Данные получены");
			ЭлементКоординаты.innerHTML = "";
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМаркерНаКарте()
	Попытка
		
		УстановитьРежимПросмотра();
		
		Eval = Элементы.Карта.Документ.getElementById("eval");
		Eval.innerHTML = ""+Формат(Долгота,"ЧРД=.; ЧВН=; ЧГ=0")+","+Формат(Широта,"ЧРД=.; ЧВН=; ЧГ=0")+"";
		Если ПоставщикКарты = 2 Тогда
			Eval.setAttribute("function_name", "clickSetPlacemark");
			СтрокаЭлемента = Новый Структура;
			СтрокаЭлемента.Вставить("x"			,Долгота);
			СтрокаЭлемента.Вставить("y"			,Широта);
			
			Eval.innerHTML = вогГеокодированиеСервер.ПолучитьСтрокуJSON(СтрокаЭлемента);
		Иначе
			Eval.setAttribute("function_name", "setNewMarker");
		КонецЕсли;
		Eval.click();
		Eval.setAttribute("function_name", "");
		Eval.innerHTML = "";
		
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте 
Процедура УстановитьРежимПросмотра()
	
	// +++ VOG Кулаков П.Л. 08.12.2020 CRM-1110
	Если ПоставщикКарты = 2 Тогда
		Если Элементы.Карта.Документ <> Неопределено И Элементы.Карта.Документ.readyState = "complete" Тогда
			Eval = Элементы.Карта.Документ.getElementById("eval");
			Eval.innerHTML = вогГеокодированиеСервер.ПолучитьСтрокуJSON(Новый Структура("mode", "biz"));
			Eval.setAttribute("function_name", "set_map_mode");
			Eval.click();
			Eval.setAttribute("function_name", "");
			Eval.innerHTML = "";
			ОтключитьОбработчикОжидания("УстановитьРежимПросмотра");
		КонецЕсли;
	Иначе
		ОтключитьОбработчикОжидания("УстановитьРежимПросмотра");
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьМаркер(Команда)
	
	
	СоздатьМаркерНаКарте();
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиАдресКоманда(Команда)
	
	РежимПоискаОбъектов = Ложь;
	НайтиАдрес();
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиАдрес(УстановитьКоординаты = Ложь)
	
	СоответствиеТочностьПоиска = Новый Соответствие;
	СоответствиеТочностьПоиска.Вставить("house","дом");
	СоответствиеТочностьПоиска.Вставить("street","улица");
	СоответствиеТочностьПоиска.Вставить("district","район");
	СоответствиеТочностьПоиска.Вставить("locality","Населенный пункт");
	СоответствиеТочностьПоиска.Вставить("province","Округ");
	СоответствиеТочностьПоиска.Вставить("country","Страна");
	Попытка
		ДолготаШирота=СтрРазделить(СтрокаПоискаАдреса,",",Ложь);
		Д = Число(ДолготаШирота[1]);
		Ш= Число(ДолготаШирота[0]);
		ВключатьСтрану = Ложь;
	Исключение
		ВключатьСтрану = Истина;
	КонецПопытки;
	// ++ VOG Солодов В.В. 17.12.2020 CRM-1071
	ТекстАдреса = ?(ВключатьСтрану И ОграничитьПоискСтранойРФ, "Россия,", "") + СокрЛП(СтрокаПоискаАдреса);
	ТекстЗапроса = "/1.x/?format=json&apikey=%1&geocode=%2";
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, вогГеокодированиеСерверПовтИсп.ПолучитьКлючЯндекс(), ТекстАдреса);
	
	Запрос = Новый HTTPЗапрос(ТекстЗапроса);
	// До изменения
	//Запрос = Новый HTTPЗапрос("/1.x/?format=json&apikey=9269d3fb-b762-4397-aeab-02365cc80205&geocode="+
	////Запрос = Новый HTTPЗапрос("/1.x/?format=json&apikey=811c9840-7435-4a52-8f46-f1247610d1ed&geocode="+
	//?(ВключатьСтрану и ОграничитьПоискСтранойРФ,"Россия,","")+СокрЛП(СтрокаПоискаАдреса));
	// -- VOG Солодов В.В. 17.12.2020 CRM-1071
	ssl1 = Новый ЗащищенноеСоединениеOpenSSL(
	Новый СертификатКлиентаWindows(СпособВыбораСертификатаWindows.Авто),
	Новый СертификатыУдостоверяющихЦентровWindows());	
	АдресOutput = КаталогВременныхФайлов() + "geores.xml";			
	Соед = Новый HTTPСоединение("geocode-maps.yandex.ru",,,,,,ssl1,Истина);
	Ответ = Соед.Получить(Запрос,АдресOutput);
	// ++ VOG Солодов В.В. 17.12.2020 CRM-1071
	Если Не Ответ.КодСостояния = 200 Тогда
		Возврат;
	КонецЕсли;
	// -- VOG Солодов В.В. 17.12.2020 CRM-1071
	Чтение = Новый ЧтениеJSON;
	Чтение.ОткрытьФайл(АдресOutput);
	тДанные = ПрочитатьJSON(Чтение,Ложь);
	Данные = тДанные.response.GeoObjectCollection.featureMember;
	СписокНайденныхАдресов.Очистить();
	Для каждого КомпонентыАдр из Данные цикл
		Если СписокНайденныхАдресов.Количество()=КоличествоОтветов тогда
			Прервать;
		КонецЕсли;
		Если КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.kind="province" или
			КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.kind="country" тогда
			Продолжить;	
		КонецЕсли;
		КомпонентыАдреса = КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.Address.Components;
		НовыйАдрес = СписокНайденныхАдресов.Добавить();
		Попытка
			НовыйАдрес.ПочтовыйИндекс = КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.AddressDetails.Country.AdministrativeArea.SubAdministrativeArea.Locality.Thoroughfare.Premise.PostalCode.PostalCodeNumber;
		Исключение
			А=2;
		КонецПопытки;
		НовыйАдрес.Представление = ?(НовыйАдрес.ПочтовыйИндекс<>"",НовыйАдрес.ПочтовыйИндекс+",","")+КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.text;
		НовыйАдрес.Комментарий = СоответствиеТочностьПоиска[КомпонентыАдр.GeoObject.metaDataProperty.GeocoderMetaData.kind]; 
		ДолготаШирота=КомпонентыАдр.GeoObject.Point.pos;
		МассивДолготаШирота = СтрРазделить(ДолготаШирота," ",Ложь);
		Если Не РежимПоискаОбъектов тогда
			НовыйАдрес.Долгота = Число(МассивДолготаШирота[1]);
			НовыйАдрес.Широта = Число(МассивДолготаШирота[0]);
		Иначе
			НовыйАдрес.Долгота = Долгота;
			НовыйАдрес.Широта = Широта;
		КонецЕсли;
		Для каждого СоставляющаяАдреса из КомпонентыАдреса цикл
			Если СоставляющаяАдреса.kind = "province" тогда
				Если НовыйАдрес.ФедеральныйОкруг="" тогда
					НовыйАдрес.ФедеральныйОкруг = СоставляющаяАдреса.name;	
				Иначе
					НовыйАдрес.Регион = СоставляющаяАдреса.name;	
				КонецЕсли;
			ИначеЕсли СоставляющаяАдреса.kind = "country" тогда
				НовыйАдрес.Страна = СоставляющаяАдреса.name;	
			ИначеЕсли СоставляющаяАдреса.kind = "area" тогда
				НовыйАдрес.ГородскойОкруг = СоставляющаяАдреса.name;	
			ИначеЕсли СоставляющаяАдреса.kind = "locality" тогда
				НовыйАдрес.НаселенныйПункт = СоставляющаяАдреса.name;	
			ИначеЕсли СоставляющаяАдреса.kind = "street" тогда
				НовыйАдрес.Улица = СоставляющаяАдреса.name;	
			ИначеЕсли СоставляющаяАдреса.kind = "house" тогда
				НовыйАдрес.Дом = СоставляющаяАдреса.name;	
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	Чтение.Закрыть();
	
	
КонецПроцедуры


&НаКлиенте
Процедура СписокНайденныхАдресовПриАктивизацииСтроки(Элемент)
	
	Если Элементы.СписокНайденныхАдресов.ТекущиеДанные<>Неопределено тогда
		Широта = Элементы.СписокНайденныхАдресов.ТекущиеДанные.Широта; 
		Долгота = Элементы.СписокНайденныхАдресов.ТекущиеДанные.Долгота; 
		СоздатьМаркер(Истина);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СписокНайденныхАдресовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элементы.СписокНайденныхАдресов.ТекущиеДанные<>Неопределено тогда
		текДанные = Элементы.СписокНайденныхАдресов.ТекущиеДанные; 
		Если ФормаВвода3в1 Тогда
			Если ЗначениеЗаполнено(ПараметрыФормыВвода3в1) Тогда
				ПараметрыФормы = вогОбщегоНазначенияВызовСервера.ПолучитьЗначениеИзСтрокиВнутр(ПараметрыФормыВвода3в1);
				ПараметрыФормы.Вставить("Месторасположение",ТекДанные.Представление);
				
				ПараметрыФормы.Вставить("Широта",ТекДанные.Широта);
				ПараметрыФормы.Вставить("Долгота",ТекДанные.Долгота);
				
				ОткрытьФорму("Справочник.вогТорговыеТочки.Форма.вогФормаБыстрогоВвода",ПараметрыФормы);
				Закрыть();
				Возврат;
			КонецЕсли;
		ИначеЕсли ФормаБыстрогоВвода Тогда
			Закрыть(Новый Структура("ПредставлениеАдреса",ТекДанные.Представление));
			Возврат;
		ИначеЕсли ФормаПоручения Тогда // ++ VOG Солодов В.В. 21.12.2020 CRM-1071
			
			СтруктураВозврата = Новый Структура;
			СтруктураВозврата.Вставить("Адрес", ТекДанные.Представление);
			Закрыть(СтруктураВозврата);
			// -- VOG Солодов В.В. 21.12.2020 CRM-1071
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ВыбратьЭлемент(Команда)
	
	Если РаботаСПолигонами Тогда
		
		Закрыть(ПолучитьСоответствиеПолигонов());
		
	Иначе 
		
		Если Элементы.СписокНайденныхАдресов.ТекущаяСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ТекДанные = СписокНайденныхАдресов.НайтиПоИдентификатору(Элементы.СписокНайденныхАдресов.ТекущаяСтрока);
		
		Если ФормаВвода3в1 Тогда
			Если ЗначениеЗаполнено(ПараметрыФормыВвода3в1) Тогда
				ПараметрыФормы = вогОбщегоНазначенияВызовСервера.ПолучитьЗначениеИзСтрокиВнутр(ПараметрыФормыВвода3в1);
				ПараметрыФормы.Вставить("Месторасположение",ТекДанные.Представление);
				
				ПараметрыФормы.Вставить("Широта",ТекДанные.Широта);
				ПараметрыФормы.Вставить("Долгота",ТекДанные.Долгота);
				
				ОткрытьФорму("Справочник.вогТорговыеТочки.Форма.вогФормаБыстрогоВвода",ПараметрыФормы);
				Закрыть();
				Возврат;
			КонецЕсли;
		ИначеЕсли ФормаБыстрогоВвода Тогда
			Закрыть(Новый Структура("ПредставлениеАдреса",ТекДанные.Представление));
			Возврат;
		КонецЕсли;
		
		СтруктураВозврата = Новый Структура;
		
		СтруктураВозврата.Вставить("Адрес", 	ТекДанные.Представление);
		СтруктураВозврата.Вставить("Широта", 	ТекДанные.Широта);
		СтруктураВозврата.Вставить("Долгота", 	ТекДанные.Долгота);
		СтруктураВозврата.Вставить("Индекс", 	ТекДанные.ПочтовыйИндекс);
		
		СтруктураВозврата.Вставить("Город", 	ТекДанные.НаселенныйПункт);
		СтруктураВозврата.Вставить("Область", 	ТекДанные.Регион);
		СтруктураВозврата.Вставить("Улица", 	ТекДанные.Улица);
		СтруктураВозврата.Вставить("Округ", 	ТекДанные.ГородскойОкруг);
		СтруктураВозврата.Вставить("Дом", 		ТекДанные.Дом);
		СтруктураВозврата.Вставить("Район", 	"");
		
		Закрыть(СтруктураВозврата);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Функция ПолучитьСоответствиеПолигонов()

	Возврат ПолучитьСоответствиеПолигоновСервер();
	
КонецФункции // ПолучитьДанныеПолигонов()

Функция ПолучитьСоответствиеПолигоновСервер()

	Возврат вогГеокодированиеСервер.ПолучитьСоответствиеПолигонов(Объект.Полигоны.Выгрузить());
	
КонецФункции // ПолучитьДанныеПолигонов()


&НаКлиенте
Процедура ПоставщикКартыПриИзменении(Элемент)
	
	НачальноеЗаполнение();
	
	Если Широта<>0 или РежимПоискаОбъектов тогда
		ПодключитьОбработчикОжидания("СоздатьМаркерНаКарте",1.1,Истина);
	КонецЕсли;
	
	// +++ VOG Кулаков П.Л. 08.12.2020 CRM-1110
	ПодключитьОбработчикОжидания("УстановитьРежимПросмотра",1,Ложь);
	// --- VOG Кулаков П.Л.
	
КонецПроцедуры

#Область ОбработчикиСобытийТаблицыФормы_ТаблицаАдресов

// ++ VOG Солодов В.В. 26.11.2020 CRM-1071
&НаКлиенте
Процедура ТаблицаАдресовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаАдресов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаПоискаАдреса = ТекущиеДанные.Адрес;
	
	РежимПоискаОбъектов = Ложь;
	НайтиАдрес();
	
	Если Элементы.СписокНайденныхАдресов.ВыделенныеСтроки.Количество() = 0
		И СписокНайденныхАдресов.Количество() > 0 Тогда
		Элементы.СписокНайденныхАдресов.ВыделенныеСтроки.Добавить(0);
		Элементы.СписокНайденныхАдресов.ТекущаяСтрока = 0;
		Элементы.СписокНайденныхАдресов.Обновить();
	КонецЕсли;
	
КонецПроцедуры // -- VOG Солодов В.В. 26.11.2020 CRM-1071

&НаКлиенте
Процедура ТаблицаАдресовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаАдресов.ТекущиеДанные;
	
	Если Поле.Имя = "ТаблицаАдресовАдрес" Тогда
		СтруктураВозврата = Новый Структура;
		СтруктураВозврата.Вставить("Адрес", ТекущиеДанные.Адрес);
		Закрыть(СтруктураВозврата);
	ИначеЕсли Не ТипЗнч(ТекущиеДанные.Наименование) = Тип("Строка") Тогда
		ПоказатьЗначение(Неопределено, ТекущиеДанные.Наименование);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти