
Перем ОбщиеПараметры Экспорт;

Перем ПараметрыОбработки Экспорт;

//+++ Терпогосян Д.Б. [20.09.2021 15:06:54] № CRM-1219
Перем ПодразделениеЮГ_КМВ Экспорт; 
Перем ПодразделениеЮГ_Ростов Экспорт; 
Перем соТТГ_Подразделение Экспорт; 
//--- Терпогосян Д.Б. [20.09.2021 15:06:58] № CRM-1219 


Функция ВыполнитьОбмен(ПараметрыОбработчика) Экспорт
	
	ПараметрыДействия 			= ПараметрыОбработчика.ХранилищеПараметры.Получить();
	
	//СхемаКомпоновкиДанных 		= ПараметрыОбработчика.ХранилищеСхемаИсточникаДанных.Получить();
	//		
	//НастройкиКомпоновкиДанных	= ПараметрыОбработчика.ХранилищеКомпоновщикНастроек.Получить();
	
	ИдентификаторНастройки = ПараметрыОбработчика.НастройкаДействий.ИдентификаторНастройки;
	
	ИмяОчереди	= ПараметрыДействия.ИмяОчереди;	
	
	
	НачатьТранзакцию();
	
	Попытка
		
		НаборЗаписей = РегистрыСведений.desОчередьВходящихСообщений.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ИдентификаторНастройки.Установить(ИдентификаторНастройки);
		НаборЗаписей.Отбор.ИмяОчереди.Установить(ИмяОчереди);
		
		Если ПараметрыДействия.Свойство("ИдентификаторСообщения") Тогда
			НаборЗаписей.Отбор.Идентификатор.Установить(ПараметрыДействия.ИдентификаторСообщения);	
		КонецЕсли; 
		
		НаборЗаписей.Прочитать();
		
		ТаблицаОбластиБлокировки = НаборЗаписей.Выгрузить();
		
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.desОчередьВходящихСообщений");
		
		ЭлементБлокировки.ИсточникДанных = ТаблицаОбластиБлокировки;
		
		ЭлементБлокировки.УстановитьЗначение("ИдентификаторНастройки",ИдентификаторНастройки);
		ЭлементБлокировки.УстановитьЗначение("ИмяОчереди",ИмяОчереди);
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Идентификатор","Идентификатор");
		
		Блокировка.Заблокировать();
		
		Для каждого Сообщения Из ТаблицаОбластиБлокировки Цикл
			
			СтрокаСообщение = Сообщения.Хранилище.Получить();	
			
			ЧтениеJSON = Новый ЧтениеJSON;
			
			ЧтениеJSON.УстановитьСтроку(СтрокаСообщение);
			
			СтруктураСообщения	= ПрочитатьJSON(ЧтениеJSON);
			
			ЧтениеJSON.Закрыть();
			
			МенеджерСообщения = РегистрыСведений.desОчередьВходящихСообщений.СоздатьМенеджерЗаписи();
			
			ЗаполнитьЗначенияСвойств(МенеджерСообщения,Сообщения,"ИдентификаторНастройки,ИмяОчереди,Идентификатор");
			
			МенеджерСообщения.Прочитать();
			
			ТекстОшибки = "";
			
			ОбработатьСообщениеОчереди(СтруктураСообщения,ТекстОшибки);
			
			Если ПустаяСтрока(ТекстОшибки) Тогда
				МенеджерСообщения.Удалить();
			Иначе 
				МенеджерСообщения.ТекстСообщенияОбОшибке	= ТекстОшибки;
				МенеджерСообщения.Записать();
			КонецЕсли; 
			
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
		
	Исключение    
		
		ОтменитьТранзакцию();
		
		МенеджерСообщения.ТекстСообщенияОбОшибке	= ТекстОшибки;
		МенеджерСообщения.Записать();

	КонецПопытки;
	
	
КонецФункции

Процедура ОбработатьСообщениеОчереди(СтруктураСообщения,ТекстОшибки)
	
	Период = ПрочитатьДатуJSON(СтруктураСообщения.period,ФорматДатыJSON.ISO); 
	
	Организация  	= Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(СтруктураСообщения.org_id));
	
	Подразделение 	= вогИнтеграцияСУчетнойСистемой.ПолучитьПодразделениеПоОрганизации(Организация); 
	
	Если Не ОбщегоНазначения.СсылкаСуществует(Подразделение) Тогда
		
		ТекстОшибки = ТекстОшибки + Символы.ПС + +"Не найдено подразделение по ID " + СтруктураСообщения.org_id; 
		
	КонецЕсли;
	
	ТТГ = Справочники.вогТорговыеТочки.ПолучитьСсылку(Новый УникальныйИдентификатор(СтруктураСообщения.ttg_id));
	
	Если Не ОбщегоНазначения.СсылкаСуществует(ТТГ) И СтруктураСообщения.sales.Количество() Тогда
		
		ТекстОшибки = ТекстОшибки + Символы.ПС + "Не найдена ТТГ " + СтруктураСообщения.ttg_name +  "(" + СтруктураСообщения.ttg_id + ")"; 
		
	КонецЕсли;
	
	//+++ Терпогосян Д.Б. [20.09.2021 14:37:38] № CRM-1219
	Если ПустаяСтрока(ТекстОшибки) и Подразделение = ПодразделениеЮГ_КМВ Тогда 
		Подразделение = ПолучитьПодразделениеПоТорговойТочке(ТТГ);
		Если Подразделение = Неопределено Тогда 
			ТекстОшибки = ТекстОшибки + Символы.ПС + "Не найдено подразделение по ТТГ " + СтруктураСообщения.ttg_name +  "(" + СтруктураСообщения.ttg_id + ")"; 
		КонецЕсли; 	 
	КонецЕсли; 
	//--- Терпогосян Д.Б. [20.09.2021 14:37:38] № CRM-1219 
	
	Регистратор = Документы.вогДвиженияУС.ПустаяСсылка();
	
	Если ПустаяСтрока(ТекстОшибки) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПродажиПоЭкспозиции.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ПродажиПоЭкспозиции КАК ПродажиПоЭкспозиции
		|ГДЕ
		|	ПродажиПоЭкспозиции.Период = &Период
		|	И ПродажиПоЭкспозиции.Подразделение = &Подразделение
		|	И ПродажиПоЭкспозиции.ТорговаяТочка = &ТорговаяТочка";
		
		Запрос.УстановитьПараметр("Период",Период);
		Запрос.УстановитьПараметр("Подразделение",Подразделение);
		Запрос.УстановитьПараметр("ТорговаяТочка",ТТГ);
		
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Регистратор = Выборка.Регистратор;
			
		Иначе 
			
			Если СтруктураСообщения.sales.Количество() Тогда
				
				вогДвиженияУСОбъект = Документы.вогДвиженияУС.СоздатьДокумент();
				вогДвиженияУСОбъект.Источник	= "Продажи по экспозиции " + Формат(Период,"ДФ=MM.yy");
				вогДвиженияУСОбъект.Комментарий = " " + Подразделение + ";" + ТТГ;
				вогДвиженияУСОбъект.Дата		= Период;
				вогДвиженияУСОбъект.Записать();
				
				Регистратор = вогДвиженияУСОбъект.Ссылка;
				
			КонецЕсли; 
			
		КонецЕсли;
		
		
		Если ЗначениеЗаполнено(Регистратор) Тогда
			
			НаборЗаписей = РегистрыНакопления.ПродажиПоЭкспозиции.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
			
			НаборЗаписей.Прочитать();
			
			НаборЗаписей.Очистить();
			
			Для каждого СтрокаПродажи  Из СтруктураСообщения.sales Цикл
				
				ПанельСсылка = Справочники.вогПанели.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаПродажи.panel.id));
				
				Если Не ОбщегоНазначения.СсылкаСуществует(ПанельСсылка) Тогда
					
					ПанельОбъект = Справочники.вогПанели.СоздатьЭлемент();
					ПанельОбъект.УстановитьСсылкуНового(ПанельСсылка);
					ПанельОбъект.Наименование	= СтрокаПродажи.panel.name;
					Попытка
						ПанельОбъект.Записать();
					Исключение				
						ТекстОшибки = ТекстОшибки + Символы.ПС + ОписаниеОшибки();				
					КонецПопытки;
					
					
					ПанельСсылка = ПанельОбъект.Ссылка;
					
				КонецЕсли; 
				
				НоваяСтрока =  НаборЗаписей.Добавить();
				НоваяСтрока.Период			= Период;
				НоваяСтрока.Подразделение	= Подразделение;
				НоваяСтрока.ТорговаяТочка	= ТТГ;
				НоваяСтрока.Панель			= ПанельСсылка;
				НоваяСтрока.Количество		= СтрокаПродажи.quantity;
				
				
			КонецЦикла;
			
			НаборЗаписей.Записать();
			
		КонецЕсли; 
		
		
		
	КонецЕсли; 
	
	
КонецПроцедуры
 
Функция  ПолучитьСоставПараметров() Экспорт
	
	СтруктураПараметров = Новый Структура();
	
	СтруктураПараметров.Вставить("ПараметрыОбработки",ПараметрыОбработки);
	
	
	Возврат СтруктураПараметров;

КонецФункции

//+++ Терпогосян Д.Б. [20.09.2021 15:06:07] № CRM-1219
Функция ПолучитьПодразделениеПоТорговойТочке(ТТГ) Экспорт
	Если соТТГ_Подразделение = Неопределено Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПодразделенияТорговыхТочек.ТорговаяТочка КАК ТорговаяТочка,
		|	ПодразделенияТорговыхТочек.Подразделение КАК Подразделение
		|ИЗ
		|	РегистрСведений.ПодразделенияТорговыхТочек КАК ПодразделенияТорговыхТочек
		|ГДЕ
		|	ПодразделенияТорговыхТочек.Направление = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Плитка)
		|	И ПодразделенияТорговыхТочек.Подразделение В(&Подразделения)";
		
		Подразделения = Новый Массив; 
		Подразделения.Добавить(ПодразделениеЮГ_КМВ); 
		Подразделения.Добавить(ПодразделениеЮГ_Ростов); 
		Запрос.УстановитьПараметр("Подразделения", Подразделения);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		соТТГ_Подразделение = Новый Соответствие; 
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			соТТГ_Подразделение.Вставить(ВыборкаДетальныеЗаписи.ТорговаяТочка, ВыборкаДетальныеЗаписи.Подразделение); 
		КонецЦикла;
	КонецЕсли; 
	Возврат соТТГ_Подразделение.Получить(ТТГ)
КонецФункции 

ПодразделениеЮГ_КМВ = Справочники.СтруктураПредприятия.ПолучитьСсылку(Новый УникальныйИдентификатор("3000815c-66e6-11e3-9235-00155d66c603")); 
ПодразделениеЮГ_Ростов = Справочники.СтруктураПредприятия.ПолучитьСсылку(Новый УникальныйИдентификатор("9f82aafb-3b61-11e9-b0ca-005056bcd3e3")); 
//--- Терпогосян Д.Б. [20.09.2021 15:06:08] № CRM-1219 

 ПараметрыОбработки = Новый Структура; 
 
 ПараметрыОбработки.Вставить("ИмяОчереди","");
 
 