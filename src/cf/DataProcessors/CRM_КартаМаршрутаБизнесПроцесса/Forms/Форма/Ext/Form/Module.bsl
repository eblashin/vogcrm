
&НаСервере
Функция ПолучитьСтрокуИсполнителей(ТочкаМаршрута, ТипДействия)
	
	Запрос = Новый Запрос;
	
	Если ТипДействия = 2 Тогда // Данные берем из регистра сведений исполнители.
		ТекстЗапроса ="ВЫБРАТЬ
		|	CRM_ИсполнителиЭтаповБизнесПроцессов.Исполнитель,
		|	"""" КАК РольИсполнителя
		|ИЗ
		|	РегистрСведений.CRM_ИсполнителиЭтаповБизнесПроцессов КАК CRM_ИсполнителиЭтаповБизнесПроцессов
		|ГДЕ
		|	CRM_ИсполнителиЭтаповБизнесПроцессов.Объект = &БизнесПроцесс
		|	И CRM_ИсполнителиЭтаповБизнесПроцессов.ТочкаМаршрута = &CRM_ТочкаМаршрута";
	Иначе
		ТекстЗапроса ="ВЫБРАТЬ
		|	ЗадачаИсполнителя.Исполнитель,
		|	ЗадачаИсполнителя.РольИсполнителя
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс
		|	И ЗадачаИсполнителя.CRM_ТочкаМаршрута = &CRM_ТочкаМаршрута";
		Если ТипДействия = 0 Тогда
			ТекстЗапроса = ТекстЗапроса +"
			|	И НЕ ЗадачаИсполнителя.Выполнена";
		Иначе
			ТекстЗапроса = ТекстЗапроса +"
			|	И ЗадачаИсполнителя.Выполнена";
		КонецЕсли;
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("БизнесПроцесс"		,БизнесПроцесс);
	Запрос.УстановитьПараметр("CRM_ТочкаМаршрута"	,ТочкаМаршрута);
	
	Выборка = Запрос.Выполнить().Выбрать();
	СтрокаИсполнителей = "";
	
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Исполнитель) Тогда
			СтрокаИсполнителей = СтрокаИсполнителей + ?(СтрокаИсполнителей ="","",";") + Строка(Выборка.Исполнитель);
		Иначе
			СтрокаИсполнителей = СтрокаИсполнителей + ?(СтрокаИсполнителей ="","",";") + Строка(Выборка.РольИсполнителя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокаИсполнителей;
	
КонецФункции

&НаСервере
Процедура ОбновитьКартуМаршрута()
	
	// ++ VOG Ульянов И.В. 24.10.2019 bugs 763
	УстановитьПривилегированныйРежим(Истина);
	// -- VOG Ульянов И.В. 24.10.2019 bugs 763
	
	Если ЗначениеЗаполнено(БизнесПроцесс) Тогда
		
		СтрокаСхемыМаршрута = БизнесПроцесс.КартаМаршрута.ВерсииКартыМаршрута.Найти(БизнесПроцесс.НомерВерсииКартыМаршрута, "НомерВерсии");
		КартаМаршрута = СтрокаСхемыМаршрута.КартаМаршрута.Получить();
		
	Иначе
		КартаМаршрута = Новый ГрафическаяСхема;
	КонецЕсли;
	
	МассивВидов = Новый Массив;
	МассивВидов.Добавить(Перечисления.CRM_ВидыТочекМаршрута.ВложенныйБизнесПроцесс);
	МассивВидов.Добавить(Перечисления.CRM_ВидыТочекМаршрута.Действие);
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Ссылка
	               |ПОМЕСТИТЬ Точки
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		CRM_ТочкиМаршрутовВходящиеТочки.Ссылка КАК Ссылка
	               |	ИЗ
	               |		Справочник.CRM_ТочкиМаршрутов.ВходящиеТочки КАК CRM_ТочкиМаршрутовВходящиеТочки
	               |	ГДЕ
	               |		CRM_ТочкиМаршрутовВходящиеТочки.Ссылка.Владелец = &Владелец
	               |		И CRM_ТочкиМаршрутовВходящиеТочки.НомерВерсии = &НомерВерсии
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		CRM_ТочкиМаршрутовИсходящиеТочки.Ссылка
	               |	ИЗ
	               |		Справочник.CRM_ТочкиМаршрутов.ИсходящиеТочки КАК CRM_ТочкиМаршрутовИсходящиеТочки
	               |	ГДЕ
	               |		CRM_ТочкиМаршрутовИсходящиеТочки.Ссылка.Владелец = &Владелец
	               |		И CRM_ТочкиМаршрутовИсходящиеТочки.НомерВерсии = &НомерВерсии) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Точки.Ссылка,
	               |	CRM_ТочкиМаршрутов.Имя
	               |ПОМЕСТИТЬ ТочкиИмя
	               |ИЗ
	               |	Точки КАК Точки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.CRM_ТочкиМаршрутов КАК CRM_ТочкиМаршрутов
	               |		ПО Точки.Ссылка = CRM_ТочкиМаршрутов.Ссылка
	               |ГДЕ
	               |	CRM_ТочкиМаршрутов.Владелец = &Владелец
	               |	И CRM_ТочкиМаршрутов.Вид В(&МассивВидов)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ  Разрешенные
	               |	ТочкиИмя.Ссылка КАК Точка,
	               |	ТочкиИмя.Имя,
	               |	ЕСТЬNULL(ВыполненныеЗадачи.Количество, 0) КАК ВыполненоКоличество,
	               |	ЕСТЬNULL(НеВыполненныеЗадачи.Количество, 0) КАК НеВыполненоКоличество,
	               |	ВложенныйЗапрос.Используется
	               |ИЗ
	               |	ТочкиИмя КАК ТочкиИмя
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗадачаИсполнителя.Ссылка) КАК Количество,
	               |			ЗадачаИсполнителя.CRM_ТочкаМаршрута КАК CRM_ТочкаМаршрута
	               |		ИЗ
	               |			Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	               |		ГДЕ
	               |			ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс
	               |			И ЗадачаИсполнителя.Выполнена
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ЗадачаИсполнителя.CRM_ТочкаМаршрута) КАК ВыполненныеЗадачи
	               |		ПО ТочкиИмя.Ссылка = ВыполненныеЗадачи.CRM_ТочкаМаршрута
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗадачаИсполнителя.Ссылка) КАК Количество,
	               |			ЗадачаИсполнителя.CRM_ТочкаМаршрута КАК CRM_ТочкаМаршрута
	               |		ИЗ
	               |			Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	               |		ГДЕ
	               |			ЗадачаИсполнителя.БизнесПроцесс = &БизнесПроцесс
	               |			И НЕ ЗадачаИсполнителя.Выполнена
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ЗадачаИсполнителя.CRM_ТочкаМаршрута) КАК НеВыполненныеЗадачи
	               |		ПО ТочкиИмя.Ссылка = НеВыполненныеЗадачи.CRM_ТочкаМаршрута
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			CRM_НастройкиЭтаповБизнесПроцессов.ТочкаМаршрута КАК ТочкаМаршрута,
	               |			CRM_НастройкиЭтаповБизнесПроцессов.Используется КАК Используется
	               |		ИЗ
	               |			РегистрСведений.CRM_НастройкиЭтаповБизнесПроцессов КАК CRM_НастройкиЭтаповБизнесПроцессов
	               |		ГДЕ
	               |			CRM_НастройкиЭтаповБизнесПроцессов.Объект = &БизнесПроцесс) КАК ВложенныйЗапрос
	               |		ПО ТочкиИмя.Ссылка = ВложенныйЗапрос.ТочкаМаршрута";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Владелец"		,БизнесПроцесс.КартаМаршрута);
	Запрос.УстановитьПараметр("НомерВерсии"		,БизнесПроцесс.НомерВерсииКартыМаршрута);
	Запрос.УстановитьПараметр("БизнесПроцесс"	,БизнесПроцесс);
	Запрос.УстановитьПараметр("МассивВидов"		,МассивВидов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЭлементСхемы = КартаМаршрута.ЭлементыГрафическойСхемы.Найти(Выборка.Имя);
		Если ЭлементСхемы = Неопределено Тогда Продолжить; КонецЕсли;
		
		Если Выборка.ВыполненоКоличество > 0 Тогда
			ЭлементСхемы.ЦветФона = Новый Цвет(192, 192, 192); // дымчато-белый
		КонецЕсли;
		
		Если Выборка.НеВыполненоКоличество > 0 Тогда
			ЭлементСхемы.ЦветРамки	= Новый Цвет(255, 0, 0); // красный
			ЭлементСхемы.рамка		= Новый Линия(ТипСоединительнойЛинии.Пунктир);
		КонецЕсли;
		
		ЭлементСхемы.ПрозрачныйФон = НЕ Выборка.Используется;
		
		Если Выборка.Точка.Вид = Перечисления.CRM_ВидыТочекМаршрута.Действие Тогда
			Если Выборка.НеВыполненоКоличество > 0 Тогда
				ЭлементСхемы.Пояснение = ПолучитьСтрокуИсполнителей(Выборка.Точка, 0);
			ИначеЕсли Выборка.ВыполненоКоличество > 0 Тогда
				ЭлементСхемы.Пояснение = ПолучитьСтрокуИсполнителей(Выборка.Точка, 1);
			ИначеЕсли Выборка.ВыполненоКоличество = 0 Тогда
				ЭлементСхемы.Пояснение = ПолучитьСтрокуИсполнителей(Выборка.Точка, 2);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	// ++ VOG Ульянов И.В. 24.10.2019 bugs 763
	УстановитьПривилегированныйРежим(Ложь);
	// -- VOG Ульянов И.В. 24.10.2019 bugs 763
		
КонецПроцедуры

&НаСервере
Функция ПолучитьТочкуМаршрута(ИмяЭлемента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	CRM_ТочкиМаршрутов.Ссылка
	               |ИЗ
	               |	Справочник.CRM_ТочкиМаршрутов КАК CRM_ТочкиМаршрутов
	               |ГДЕ
	               |	CRM_ТочкиМаршрутов.Владелец = &Владелец
	               |	И CRM_ТочкиМаршрутов.Имя = &Имя";
	Запрос.УстановитьПараметр("Владелец",БизнесПроцесс.КартаМаршрута);
	Запрос.УстановитьПараметр("Имя",ИмяЭлемента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьСписокЗадачТочкиМаршрута()

#Если ВебКлиент Тогда
	ПоказатьПредупреждение(, НСтр("ru = 'В Веб-клиенте данная операция недоступна.'"));
	Возврат;
#КонецЕсли
	ОчиститьСообщения();
	ТекЭлемент = Элементы.КартаМаршрута.ТекущийЭлемент;
	
	Если Не ЗначениеЗаполнено(БизнесПроцесс) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Необходимо указать бизнес-процесс.'"),,
			"БизнесПроцесс");
		Возврат;
	КонецЕсли;
	
	Если ТекЭлемент = Неопределено ИЛИ
		НЕ (ТипЗнч(ТекЭлемент) = Тип("ЭлементГрафическойСхемыДействие")
		ИЛИ ТипЗнч(ТекЭлемент) = Тип("ЭлементГрафическойСхемыВложенныйБизнесПроцесс")) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Необходимо выбрать точку действия или вложенный бизнес-процесс карты маршрута.'"),,
			"КартаМаршрута");
		Возврат;
	КонецЕсли;
	
	ТекТочкаМаршрута = ПолучитьТочкуМаршрута(ТекЭлемент.Имя);
	
	ЗаголовокФормы = НСтр("ru = 'Задачи по точке маршрута бизнес-процесса'");
	
	ОткрытьФорму("Задача.ЗадачаИсполнителя.Форма.CRM_ЗадачиПоБизнесПроцессу", 
		Новый Структура("Отбор,ЗаголовокФормы,ПоказыватьЗадачи,ВидимостьОтборов,БлокировкаОкнаВладельца,Задача,БизнесПроцесс", 
			Новый Структура("БизнесПроцесс,ТочкаМаршрута", БизнесПроцесс, ТекТочкаМаршрута),
			ЗаголовокФормы,0,Ложь,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца,Строка(ТекТочкаМаршрута),Строка(БизнесПроцесс)),
		ЭтотОбъект, БизнесПроцесс);

КонецПроцедуры

&НаСервере
Процедура ОбработатьОповещение(Массив)
	
	Если ТипЗнч(Массив) = Тип("ЗадачаСсылка.ЗадачаИсполнителя") Тогда
		Если БизнесПроцесс = Массив.БизнесПроцесс Тогда
			ОбновитьКартуМаршрута();
		КонецЕсли;
	ИначеЕсли ТипЗнч(Массив) = Тип("Массив") Тогда
		Для Каждого ЭлементМассива Из Массив Цикл
			Если БизнесПроцесс = ЭлементМассива.БизнесПроцесс Тогда
				ОбновитьКартуМаршрута();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.БизнесПроцесс) Тогда
		БизнесПроцесс = Параметры.БизнесПроцесс;
		Заголовок = НСтр("ru = 'Карта маршрута бизнес-процесса:'") + " " + CRM_БизнесПроцессыСервер.СформироватьПредставлениеБизнесПроцесса(БизнесПроцесс);
		Элементы.БизнесПроцесс.Видимость = Ложь;
	Иначе
		Элементы.БизнесПроцесс.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьКартуМаршрута();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыполнить()
	ОбновитьКартуМаршрута();
КонецПроцедуры

&НаКлиенте
Процедура БизнесПроцессПриИзменении(Элемент)
	ОбновитьКартуМаршрута();
КонецПроцедуры

&НаКлиенте
Процедура ЗадачиВыполнить()
	ОткрытьСписокЗадачТочкиМаршрута();
КонецПроцедуры

&НаКлиенте
Процедура КартаМаршрутаВыбор(Элемент)
	ОткрытьСписокЗадачТочкиМаршрута();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗадачаВыполнена" Тогда
		Если ЗначениеЗаполнено(БизнесПроцесс) Тогда
			ОбработатьОповещение(Параметр);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
