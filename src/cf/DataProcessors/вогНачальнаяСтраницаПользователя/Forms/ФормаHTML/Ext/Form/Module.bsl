
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	// +++ VOG Кулаков П.Л. 28.12.2020 DEV-48
	вогНачальнаяСтраницаПользователяКлиетСервер.НачальнаяСтраницаПользователяПриСозданииНаСервере(ЭтаФорма, Истина);
	// --- VOG Кулаков П.Л.
	
	НастройкиОбработки = ХранилищеНастроекДанныхФорм.Загрузить("вогНачальнаяСтраницаПользователя","НеПоказыватьФормуОбновления");
	
	Если НастройкиОбработки <> Неопределено Тогда 
		НеПоказыватьФормуОбновления = НастройкиОбработки;
	КонецЕсли;
	
	ЗаполнитьПриветственнуюИнформацию(Отказ);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПриветственнуюИнформацию(Отказ = Ложь) Экспорт
	   
	НачалоБлокаВиджета 			= Символы.ПС + "<div class=""flex"">";
	КонецБлокаВиджета 			= Символы.ПС + "</div>";
	ТекстВыводаВиджетов 		= "<div class=""flex"">";
	ТекстДополнительныхСтилей 	= "";
	
	ВиджетФона = Справочники.вогВиджетыРабочегоСтола.ГлавнаяСтраница;
	НастройкиВиджетаФона = ВиджетФона.НастройкиВиджета.Получить();
	
	Если НастройкиВиджетаФона = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ПриветственнаяИнформация = НастройкиВиджетаФона.КодЭлемента;
	КодФормированияГлавнойСтраницы = НастройкиВиджетаФона.КодФормирования;
	Попытка
		Выполнить(КодФормированияГлавнойСтраницы);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;	
	ПриветственнаяИнформация = СтрЗаменить(ПриветственнаяИнформация, "<!--БлокНастроекФона-->","");
	
	СписокВиджетов = Обработки.вогНачальнаяСтраницаПользователя.ОтображаемыеВиджеты();
	
	Если СписокВиджетов.Пустой() Тогда
		Виджет = Справочники.вогВиджетыРабочегоСтола.ПустойВиджет;
		НастройкиВиджета = Виджет.НастройкиВиджета.Получить();
		Если Не НастройкиВиджета = Неопределено Тогда
			ТекстВыводаВиджетов	= ТекстВыводаВиджетов + Символы.ПС + НастройкиВиджета.КодЭлемента;
		КонецЕсли;
	КонецЕсли;
	
	ИспользуемыеВиджеты = Обработки.вогНачальнаяСтраницаПользователя.ИспользуемыеВиджеты();
	
	ДействияВиджетов.Загрузить(ИспользуемыеВиджеты[1].Выгрузить());
	
	Виджет = ИспользуемыеВиджеты[0].Выбрать();
	
	Пока Виджет.Следующий() Цикл
		
		Если НЕ Виджет.Отображать Тогда
			Продолжить;
		КонецЕсли;
			
		НастройкиВиджета = Виджет.НастройкиВиджета.Получить();
		
		Если Не НастройкиВиджета = Неопределено Тогда
			
			ТекстВыводаВиджетов 		= ТекстВыводаВиджетов + Символы.ПС + НастройкиВиджета.КодЭлемента;						
			ТекстДополнительныхСтилей 	= ТекстДополнительныхСтилей + Символы.ПС + НастройкиВиджета.КодСтиля;
			ТекстКартинки 				= "<img height=""40"" align=""bottom"" src='data:image/png;base64," + Base64Строка(НастройкиВиджета.Изображение) + "'/>"; //VOG Ульянов И.В. 22.05.2020 b2b-13

			ТекстВыводаВиджетов 		= СтрЗаменить(ТекстВыводаВиджетов, "<!--Изображение-->", ТекстКартинки);	
			
			ТекстКартинкиКнопка			= "<img height=""40"" align=""left"" src='data:image/png;base64," + Base64Строка(НастройкиВиджета.Изображение) + "'/>"; //VOG Ульянов И.В. 22.05.2020 b2b-13
			ТекстВыводаВиджетов 		= СтрЗаменить(ТекстВыводаВиджетов, "<!--ИзображениеКнопка-->", ТекстКартинкиКнопка);	
			
			Если Не ПустаяСтрока(НастройкиВиджета.КодФормирования) Тогда
				Выполнить(НастройкиВиджета.КодФормирования);	
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЦикла;	
	
	ТекстВыводаВиджетов = ТекстВыводаВиджетов + КонецБлокаВиджета;
	
	ПриветственнаяИнформация = СтрЗаменить(ПриветственнаяИнформация, "<!--БлокВиджетов-->", ТекстВыводаВиджетов);
	ПриветственнаяИнформация = СтрЗаменить(ПриветственнаяИнформация, "<!--БлокДополнительныхСтилей-->", ТекстДополнительныхСтилей);
	
КонецПроцедуры

// +++ VOG Кулаков П.Л. 28.12.2020 DEV-48
&НаКлиенте
Процедура Подключаемый_МенюHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Если ДанныеСобытия.Element <> Неопределено Тогда
		вогНачальнаяСтраницаПользователяКлиетСервер.МенюHTMLПриНажатии(ЭтаФорма,"главное");
	КонецЕсли;
		
КонецПроцедуры // --- VOG Кулаков П.Л.

// +++ VOG Кулаков П.Л. 22.01.2021 DEV-79
&НаСервере
Процедура ЗаписатьОтображениеВиджета(Виджет,Отображение);
	
	// +++ VOG Кулаков П.Л. 17.02.2021 DEV-
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОжидание;
	// --- VOG Кулаков П.Л.
	
	МенеджерЗаписи = РегистрыСведений.вогНастройкиНачальнойСтраницы.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Пользователь = Пользователи.ТекущийПользователь();
	МенеджерЗаписи.Виджет = Виджет;
	// +++ VOG Кулаков П.Л. 28.05.2021 DEV-578
	МенеджерЗаписи.Прочитать();
	Если НЕ МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи = РегистрыСведений.вогНастройкиНачальнойСтраницы.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Пользователь = Пользователи.ТекущийПользователь();
		МенеджерЗаписи.Виджет = Виджет;
		МенеджерЗаписи.Порядок = Виджет.Порядок;
	КонецЕсли;	
	МенеджерЗаписи.Отображать = Отображение;
	МенеджерЗаписи.Записать();
	// --- VOG Кулаков П.Л.
	
	//СписокВиджетов = Обработки.вогНачальнаяСтраницаПользователя.ОтображаемыеВиджеты();
	//Если СписокВиджетов.Пустой() Тогда
	//	ЗаполнитьПриветственнуюИнформацию();
	//КонецЕсли;
	
КонецПроцедуры
// --- VOG Кулаков П.Л.

&НаКлиенте
Процедура ПриветственнаяИнформацияПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если СтрЧислоВхождений(ДанныеСобытия.Href, "Open_Form") > 0 Тогда	
		
		НайденноеДействие = ДействиеПоСобытию(ДанныеСобытия.Href);
		
		Если Не НайденноеДействие.Количество() = 0 Тогда		
			
			ПараметрыОткрытия = ВыполнитьПроизвольныйКодНаСервере(НайденноеДействие[0].ВыполняемыйКод, ДанныеСобытия.Href);
			
			Если ПараметрыОткрытия = Неопределено Тогда Возврат КонецЕсли;
			
			ОписаниеОповещения = Неопределено;
			Если Не ПараметрыОткрытия.ОписаниеОповещения = Неопределено Тогда
				ОписаниеОповещения = Новый ОписаниеОповещения(ПараметрыОткрытия.ОписаниеОповещения, ЭтотОбъект, ПараметрыОткрытия.ПараметрыОповещения)	
			КонецЕсли;
			
			ОткрытьФорму(ПараметрыОткрытия.НазваниеФормы, ПараметрыОткрытия.Параметры, ЭтаФорма, УникальныйИдентификатор,,, ОписаниеОповещения);
			
		КонецЕсли;	
		
	ИначеЕсли СтрЧислоВхождений(ДанныеСобытия.Href, "Change") > 0 Тогда	
		
		НайденноеДействие = ДействиеПоСобытию(ДанныеСобытия.Href);
		
		Если Не НайденноеДействие.Количество() = 0 Тогда		
			
			ДанныеВыбора = ВыполнитьПроизвольныйКодНаСервере(НайденноеДействие[0].ВыполняемыйКод, ДанныеСобытия.Href);
			
			Если ДанныеВыбора <> Неопределено Тогда
				
				ОписаниеОповещения = Неопределено;
				Если Не ДанныеВыбора.ОписаниеОповещения = Неопределено Тогда
					ОписаниеОповещения = Новый ОписаниеОповещения(ДанныеВыбора.ОписаниеОповещения, ЭтотОбъект, ДанныеВыбора.ПараметрыОповещения)	
				КонецЕсли;
			
				ПоказатьВыборИзСписка(ОписаниеОповещения, ДанныеВыбора.СписокДанных,Элемент);
							
			КонецЕсли;
			
		КонецЕсли;
		          
	ИначеЕсли СтрЧислоВхождений(ДанныеСобытия.Href, "Execute_Client") > 0 Тогда
		
		НайденноеДействие = ДействиеПоСобытию(ДанныеСобытия.Href);
		
		Если Не НайденноеДействие.Количество() = 0 Тогда		
			
			РезультатВыполнения = ВыполнитьПроизвольныйКодНаКлиенте(НайденноеДействие[0].ВыполняемыйКод, ДанныеСобытия.Href);
			
			Если НЕ РезультатВыполнения Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось выполнить запрос. Обратитесь к администратору");
			КонецЕсли;
			
		КонецЕсли;
	ИначеЕсли СтрЧислоВхождений(ДанныеСобытия.Href, "Execute_Server") > 0 Тогда
		
		НайденноеДействие = ДействиеПоСобытию(ДанныеСобытия.Href);
		
		Если Не НайденноеДействие.Количество() = 0 Тогда		
			
			РезультатВыполнения = ВыполнитьПроизвольныйКодНаСервере(НайденноеДействие[0].ВыполняемыйКод, ДанныеСобытия.Href);
			
			Если НЕ РезультатВыполнения Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось выполнить запрос. Обратитесь к администратору");
			КонецЕсли;
			
		КонецЕсли;
	ИначеЕсли СтрЧислоВхождений(ДанныеСобытия.Href, "View_Option") > 0 Тогда
		
		НайденноеДействие = ДействиеПоСобытию(ДанныеСобытия.Href);
		
		Если Не НайденноеДействие.Количество() = 0 Тогда		
			
			РезультатВыполнения = ВыполнитьПроизвольныйКодНаСервере(НайденноеДействие[0].ВыполняемыйКод, ДанныеСобытия.Href);
			
			Если НЕ РезультатВыполнения Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось выполнить запрос. Обратитесь к администратору");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// +++ VOG Кулаков П.Л. 30.04.2021 DEV-276
	//Если ДанныеСобытия.Element.id = "script" Тогда
	//	СценарийНаВиджете = ДанныеСобытия.Element.value;
	//	ОбновитьВиджетПродажи();
	//КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	// +++ VOG Кулаков П.Л. 28.05.2021 DEV-578
	Если ДанныеСобытия.Element.parentElement <> Неопределено И ДанныеСобытия.Element.parentElement.id = "droprating" Тогда
		ВыбранныйРейтинг = ДанныеСобытия.Element.id;
		ОбновитьВиджетРейтинги();
	Иначе
		Рейтинг = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("droprating");
		Если Рейтинг <> Неопределено И Рейтинг.style.display = "block" Тогда
				НазваниеРейтинга = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("ratinglable");
				Если НазваниеРейтинга <> Неопределено Тогда
					НазваниеРейтинга.click();
				КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
КонецПроцедуры

// +++ VOG Кулаков П.Л. 07.06.2021 DEV-578
&НаСервереБезКонтекста
Функция ПолучитьРейтингПоКоду(КодРейтинга)
	
	Возврат Справочники.вогРейтинги.НайтиПоКоду(КодРейтинга);
	
КонецФункции // --- VOG Кулаков П.Л.

// +++ VOG Кулаков П.Л. 07.06.2021 DEV-578
&НаСервереБезКонтекста
Функция ПолучитьПользовательскиеНастройкиОтчета(Рейтинг)
	
	КомпоновщикНастроек = Отчеты.вогРезультатыРейтингов.Создать().КомпоновщикНастроек;
	ПользовательскиеНастройки = КомпоновщикНастроек.ПользовательскиеНастройки;
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных("Рейтинг");
	ИдентификаторНастройки = "";
	Для Каждого Элемент Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если Элемент.ЛевоеЗначение = ПолеКомпоновки Тогда
			ИдентификаторНастройки = Элемент.ИдентификаторПользовательскойНастройки;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Элемент ИЗ ПользовательскиеНастройки.Элементы Цикл
		Если Элемент.ИдентификаторПользовательскойНастройки = ИдентификаторНастройки Тогда
			Элемент.ПравоеЗначение = Рейтинг;
			Элемент.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат ПользовательскиеНастройки;
	
КонецФункции // --- VOG Кулаков П.Л.

// +++ VOG Кулаков П.Л. 28.05.2021 DEV-578
&НаКлиенте
Процедура ОбновитьВиджетРейтинги()
	
	ВиджетРейтинги = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("rating");
	Если ВиджетРейтинги = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ВиджетРейтинги.outerHTML = ПолучитьТекстФормированияВиджета("Рейтинги");
	
КонецПроцедуры // --- VOG Кулаков П.Л.

&НаКлиенте
Функция ДействиеПоСобытию(ИмяСобытия)
	
	Если СтрНайти(ИмяСобытия, "Open_Form_Credit_Control") Тогда
		
		Действие = "Open_Form_Credit_Control";
		
	Иначе
		
		НомерСимвола = СтрНайти(ИмяСобытия, "/", НаправлениеПоиска.СКонца);
			
		Действие = Сред(ИмяСобытия, НомерСимвола + 1, СтрДлина(ИмяСобытия));	
		
		Если СтрНайти(Действие, "_ID_") Тогда		
			Действие = Сред(Действие, 0, СтрНайти(Действие, "_", НаправлениеПоиска.СКонца) - 1)	
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат ДействияВиджетов.НайтиСтроки(Новый Структура("Действие", Действие));
	
КонецФункции

&НаКлиенте
Процедура ПослеВводаДаты(Дата, Параметры) Экспорт
	
	Если НЕ Дата = Неопределено Тогда
		Сообщить(Дата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ВыполнитьПроизвольныйКодНаКлиенте(ВыполняемыйКод, ИмяСобытия)
	
	Результат = Неопределено;
	
	Выполнить(ВыполняемыйКод);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция ВыполнитьПроизвольныйКодНаСервере(ВыполняемыйКод, ИмяСобытия)
	
	Результат = Неопределено;
	
	Выполнить(ВыполняемыйКод);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДобавитьНапоминание(Объект, ТекстНапоминания, ДатаНапоминания)
	
	Попытка
		Менеджер = РегистрыСведений.CRM_Напоминания.СоздатьМенеджерЗаписи();
		
		Менеджер.Пользователь = Пользователи.ТекущийПользователь();	
		
		Менеджер.Предмет			= Объект;
		Менеджер.ДатаНачала			= ТекущаяДатаСеанса();
		Менеджер.ДатаОповещения		= ?(ДатаНапоминания <> Неопределено, ДатаНапоминания, ТекущаяДатаСеанса());
		Менеджер.Содержание			= ТекстНапоминания;
		Менеджер.Важность			= Перечисления.ВариантыВажностиВзаимодействия.Обычная;
		Менеджер.ВидОповещения 		= Справочники.CRM_ВидыОповещений.вогОповещениеПользователя;
		Менеджер.Записать();
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьВиджетНапоминания()
	
	ВиджетНапоминания = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("remindlist");
	Если ВиджетНапоминания <> Неопределено Тогда 
		ВиджетНапоминания.outerHTML = ПолучитьТекстФормированияВиджета("Напоминания");
		Элементы.ПриветственнаяИнформация.Документ.defaultView.todayonload();
		Элементы.ПриветственнаяИнформация.Документ.document.getElementById("NewRemind").click();
	КонецЕсли;
	
КонецПроцедуры

// +++ VOG Кулаков П.Л. 18.02.2021
&НаКлиенте
Процедура ОбновитьВиджетПродажи()
	
	// +++ VOG Кулаков П.Л. 26.02.2021 DEV-179
	
	ВиджетМоиПродажи = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("sales");
	Если ВиджетМоиПродажи = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ИДАктивнойКнопки = "sale_count";
	СписокКнопок = Элементы.ПриветственнаяИнформация.Документ.document.getElementsByClassName("type_sale");
	Для Каждого Кнопка Из СписокКнопок Цикл
		Если СтрНайти(Кнопка.className," active") > 0 Тогда
			ИДАктивнойКнопки = Кнопка.id;
		КонецЕсли;
	КонецЦикла;
	
	ИДАктивнойКнопкиНаправление = "direction_wallpaper";
	СписокКнопок = Элементы.ПриветственнаяИнформация.Документ.document.getElementsByClassName("direction");
	Для Каждого Кнопка Из СписокКнопок Цикл
		Если СтрНайти(Кнопка.className," active") > 0 Тогда
			ИДАктивнойКнопкиНаправление = Кнопка.id;
		КонецЕсли;
	КонецЦикла;
	
	ВиджетМоиПродажи.outerHTML = ПолучитьТекстФормированияВиджета("МоиПродажи");
	
	Элементы.ПриветственнаяИнформация.Документ.document.getElementById(ИДАктивнойКнопки).click();
	КнопкаНаправление = Элементы.ПриветственнаяИнформация.Документ.document.getElementById(ИДАктивнойКнопкиНаправление);
	
	Если КнопкаНаправление <> Неопределено Тогда
		КнопкаНаправление.click();
	КонецЕсли;
	
	// +++ VOG Кулаков П.Л. 05.05.2021
	ВиджетМоиПродажи = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("sales_quarter");
	Если ВиджетМоиПродажи = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ИДАктивнойКнопки = "sale_count_quarter";
	СписокКнопок = Элементы.ПриветственнаяИнформация.Документ.document.getElementsByClassName("type_sale_quarter");
	Для Каждого Кнопка Из СписокКнопок Цикл
		Если СтрНайти(Кнопка.className," active") > 0 Тогда
			ИДАктивнойКнопки = Кнопка.id;
		КонецЕсли;
	КонецЦикла;
	
	ИДАктивнойКнопкиНаправление = "direction_wallpaper_quarter";
	СписокКнопок = Элементы.ПриветственнаяИнформация.Документ.document.getElementsByClassName("direction_quarter");
	Для Каждого Кнопка Из СписокКнопок Цикл
		Если СтрНайти(Кнопка.className," active") > 0 Тогда
			ИДАктивнойКнопкиНаправление = Кнопка.id;
		КонецЕсли;
	КонецЦикла;
	
	ВиджетМоиПродажи.outerHTML = ПолучитьТекстФормированияВиджета("МоиПродажиКвартал");
	
	Элементы.ПриветственнаяИнформация.Документ.document.getElementById(ИДАктивнойКнопки).click();
	КнопкаНаправление = Элементы.ПриветственнаяИнформация.Документ.document.getElementById(ИДАктивнойКнопкиНаправление);
	
	Если КнопкаНаправление <> Неопределено Тогда
		КнопкаНаправление.click();
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	//ВиджетМоиПродажи = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("sales");
	//Если ВиджетМоиПродажи <> Неопределено Тогда 
	//	ВиджетМоиПродажи.outerHTML = ПолучитьТекстФормированияВиджета("МоиПродажи");
	//КонецЕсли;
	//
	//ВиджетSales = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("scriptSales");
	//Если ВиджетSales <> Неопределено Тогда 
	//	ВиджетSales.outerHTML = ПолучитьТекстФормированияВиджета("2b609e45-24bb-11eb-872a-005056bc3fe8");
	//	Элементы.ПриветственнаяИнформация.Документ.document.getElementById("sale_count").click();
	//	КнопкаНаправлениеОбои = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("direction_wallpaper");
	//	Если КнопкаНаправлениеОбои <> Неопределено Тогда
	//		КнопкаНаправлениеОбои.click();
	//	Иначе
	//		КнопкаНаправлениеПлитка = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("direction_tile");
	//		Если КнопкаНаправлениеПлитка <> Неопределено Тогда
	//			КнопкаНаправлениеПлитка.click();
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	
	// --- VOG Кулаков П.Л.
	
КонецПроцедуры // --- VOG Кулаков П.Л.

&НаКлиенте
Процедура ОбновитьВиджетМоиЗадачи()
	
	ВиджетМоиЗадачи = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("myTask");
	
	Если ВиджетМоиЗадачи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИДАктивнойСтраницы = "newTask";
	СписокСтраниц = Элементы.ПриветственнаяИнформация.Документ.document.getElementsByClassName("tablinks");
	Для Каждого ПунктМеню Из СписокСтраниц Цикл
		Если СтрНайти(ПунктМеню.className," active") > 0 Тогда
			ИДАктивнойСтраницы = ПунктМеню.id;
		КонецЕсли;
	КонецЦикла;
	
	ВиджетМоиЗадачи.outerHTML = ПолучитьТекстФормированияВиджета("МоиЗадачи");
	Элементы.ПриветственнаяИнформация.Документ.document.getElementById(ИДАктивнойСтраницы).click();
	
КонецПроцедуры

&НаСервере
Функция НачатьОбновлениеВиджетов()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ПарметрыПроцедуры = Новый Структура;
	ПарметрыПроцедуры.Вставить("ВходящиеСогласования",РеквизитФормыВЗначение("ВходящиеСогласования"));
	ПарметрыПроцедуры.Вставить("ДействияВиджетов",РеквизитФормыВЗначение("ДействияВиджетов"));
	ПарметрыПроцедуры.Вставить("ЗадачиМне",РеквизитФормыВЗначение("ЗадачиМне"));
	ПарметрыПроцедуры.Вставить("История",РеквизитФормыВЗначение("История"));
	ПарметрыПроцедуры.Вставить("ИсходящиеПоручения",РеквизитФормыВЗначение("ИсходящиеПоручения"));
	ПарметрыПроцедуры.Вставить("ИсходящиеСогласования",РеквизитФормыВЗначение("ИсходящиеСогласования"));
	ПарметрыПроцедуры.Вставить("Командировки",РеквизитФормыВЗначение("Командировки"));
	ПарметрыПроцедуры.Вставить("Напоминания",РеквизитФормыВЗначение("Напоминания"));
	ПарметрыПроцедуры.Вставить("ПланируемыеПоездки",РеквизитФормыВЗначение("ПланируемыеПоездки"));
	ПарметрыПроцедуры.Вставить("Почта",РеквизитФормыВЗначение("Почта"));
	ПарметрыПроцедуры.Вставить("ПредстоящиеСобытия",РеквизитФормыВЗначение("ПредстоящиеСобытия"));
	// +++ VOG Кулаков П.Л. 28.05.2021 DEV-578
	ПарметрыПроцедуры.Вставить("ВыбранныйРейтинг",ВыбранныйРейтинг);
	// --- VOG Кулаков П.Л.
 	Возврат ДлительныеОперации.ВыполнитьВФоне("Обработки.вогНачальнаяСтраницаПользователя.ЗаполнитьПриветственнуюИнформацию",ПарметрыПроцедуры,ПараметрыВыполнения);
	
КонецФункции

&НаСервере
Функция ПолучитьТекстФормированияВиджета(ИмяВиджета) 
	
	// +++ VOG Кулаков П.Л. 18.02.2021
	МассивПредопределнныхЭлементов = Метаданные.Справочники.вогВиджетыРабочегоСтола.ПолучитьИменаПредопределенных();
	
	Если МассивПредопределнныхЭлементов.Найти(ИмяВиджета) <> Неопределено Тогда
		Виджет = Справочники.вогВиджетыРабочегоСтола[ИмяВиджета];
	Иначе
		Виджет = Справочники.вогВиджетыРабочегоСтола.ПолучитьСсылку(Новый УникальныйИдентификатор(ИмяВиджета));
	КонецЕсли;
	
	ТекстВыводаВиджетов = "";
	
	Если Виджет.Пустая() Тогда
		Возврат ТекстВыводаВиджетов;
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	НастройкиВиджета = Виджет.НастройкиВиджета.Получить();
	ТекстВыводаВиджетов = НастройкиВиджета.КодЭлемента;
	Если Не ПустаяСтрока(НастройкиВиджета.КодФормирования) Тогда
		Выполнить(НастройкиВиджета.КодФормирования);	
	КонецЕсли;
	
	// +++ VOG Кулаков П.Л. 18.02.2021
	Если ИмяВиджета = "МоиПродажи" Тогда
		Виджет = Справочники.вогВиджетыРабочегоСтола.ПолучитьСсылку(Новый УникальныйИдентификатор("2b609e45-24bb-11eb-872a-005056bc3fe8"));
		Если Не Виджет.Пустая() Тогда
			НастройкиВиджета = Виджет.НастройкиВиджета.Получить();
			Если Не ПустаяСтрока(НастройкиВиджета.КодФормирования) Тогда
				Выполнить(НастройкиВиджета.КодФормирования);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	// +++ VOG Кулаков П.Л. 05.05.2021
	Если ИмяВиджета = "МоиПродажиКвартал" Тогда
		Виджет = Справочники.вогВиджетыРабочегоСтола.ПолучитьСсылку(Новый УникальныйИдентификатор("976cdc77-ad6f-11eb-b97d-005056bc3fe8"));
		Если Не Виджет.Пустая() Тогда
			НастройкиВиджета = Виджет.НастройкиВиджета.Получить();
			Если Не ПустаяСтрока(НастройкиВиджета.КодФормирования) Тогда
				Выполнить(НастройкиВиджета.КодФормирования);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	СтрокаКартинкиНастройки = Base64Строка(БиблиотекаКартинок.sms4bНастройка.ПолучитьДвоичныеДанные());
	ТекстВыводаВиджетов = СтрЗаменить(ТекстВыводаВиджетов, "<!--КартинкаНастройки-->", СтрокаКартинкиНастройки);
	
	Возврат ТекстВыводаВиджетов;
	
КонецФункции

&НаКлиенте
Процедура ПриЗавершенииОбновленияВиджетов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		Сообщить(Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
	МассивИДСтраниц = Новый Массив;
	
	СписокСтраниц = Элементы.ПриветственнаяИнформация.Документ.document.getElementsByClassName("tablinksagree");
	Для Каждого ПунктМеню Из СписокСтраниц Цикл
		Если СтрНайти(ПунктМеню.className," active") > 0 Тогда
			МассивИДСтраниц.Добавить(ПунктМеню.id);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СписокСтраниц = Элементы.ПриветственнаяИнформация.Документ.document.getElementsByClassName("tablinksassign");
	Для Каждого ПунктМеню Из СписокСтраниц Цикл
		Если СтрНайти(ПунктМеню.className," active") > 0 Тогда
			МассивИДСтраниц.Добавить(ПунктМеню.id);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СписокСтраниц = Элементы.ПриветственнаяИнформация.Документ.document.getElementsByClassName("tablinkstrip");
	Для Каждого ПунктМеню Из СписокСтраниц Цикл
		Если СтрНайти(ПунктМеню.className," active") > 0 Тогда
			МассивИДСтраниц.Добавить(ПунктМеню.id);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СписокСтраниц = Элементы.ПриветственнаяИнформация.Документ.document.getElementsByClassName("tablinks");
	Для Каждого ПунктМеню Из СписокСтраниц Цикл
		Если СтрНайти(ПунктМеню.className," active") > 0 Тогда
			МассивИДСтраниц.Добавить(ПунктМеню.id);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СоответствиеТекстов = ОбработатьРезультатОбновленияВиджетовНаСервере(Результат.АдресРезультата);
	
	// +++ VOG Кулаков П.Л. 28.05.2021 DEV-578
	// Если на рабочем столе нет автоматических обновляемых виджетов, выдавалась ошибка
	Если СоответствиеТекстов = "" Тогда
		Возврат;
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	Для Каждого Элемент Из СоответствиеТекстов Цикл
		ВиджетЭлемент = Элементы.ПриветственнаяИнформация.Документ.document.getElementById(Элемент.Ключ);
		Если ВиджетЭлемент <> Неопределено Тогда
			ВиджетЭлемент.outerHTML = Элемент.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ИД Из МассивИДСтраниц Цикл
		Элементы.ПриветственнаяИнформация.Документ.document.getElementById(ИД).click();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьРезультатОбновленияВиджетовНаСервере(АдресТаблицыЗадач)
	
	СтруктураВыполнения = ПолучитьИзВременногоХранилища(АдресТаблицыЗадач);
	УдалитьИзВременногоХранилища(АдресТаблицыЗадач);
	
	Если СтруктураВыполнения = Неопределено Тогда 
		Возврат "";
	КонецЕсли;
	
	СоответствиеТекстов = Новый Соответствие;
	
	Если СтруктураВыполнения.Свойство("ПриветственнаяИнформация") Тогда
		ПриветственнаяИнформация = СтруктураВыполнения.ПриветственнаяИнформация;
	КонецЕсли;
	
	Если СтруктураВыполнения.Свойство("ВходящиеСогласования") Тогда
		ВходящиеСогласования.Загрузить(СтруктураВыполнения.ВходящиеСогласования.Таблица);
		СоответствиеТекстов.Вставить("agree",СтруктураВыполнения.ВходящиеСогласования.ТекстHTML);
	КонецЕсли;
	
	Если СтруктураВыполнения.Свойство("ДействияВиджетов") Тогда
		ДействияВиджетов.Загрузить(СтруктураВыполнения.ДействияВиджетов);
	КонецЕсли;
	
	Если СтруктураВыполнения.Свойство("ЗадачиМне") Тогда
		ЗадачиМне.Загрузить(СтруктураВыполнения.ЗадачиМне.Таблица);
		СоответствиеТекстов.Вставить("myTask",СтруктураВыполнения.ЗадачиМне.ТекстHTML);
	КонецЕсли;
	
	Если СтруктураВыполнения.Свойство("История") Тогда
		История.Загрузить(СтруктураВыполнения.История.Таблица);
		СоответствиеТекстов.Вставить("historylist",СтруктураВыполнения.История.ТекстHTML);
	КонецЕсли;
	
	Если СтруктураВыполнения.Свойство("ИсходящиеПоручения") Тогда
		ИсходящиеПоручения.Загрузить(СтруктураВыполнения.ИсходящиеПоручения.Таблица);
		СоответствиеТекстов.Вставить("widgetAssignment",СтруктураВыполнения.ИсходящиеПоручения.ТекстHTML);
	КонецЕсли;
	
	Если СтруктураВыполнения.Свойство("ИсходящиеСогласования") Тогда
		ИсходящиеСогласования.Загрузить(СтруктураВыполнения.ИсходящиеСогласования);
	КонецЕсли;
	
	Если СтруктураВыполнения.Свойство("Командировки") Тогда
		Командировки.Загрузить(СтруктураВыполнения.Командировки.Таблица);
		СоответствиеТекстов.Вставить("businessTrip",СтруктураВыполнения.Командировки.ТекстHTML);
	КонецЕсли;
	
	Если СтруктураВыполнения.Свойство("Напоминания") Тогда
		Напоминания.Загрузить(СтруктураВыполнения.Напоминания);
	КонецЕсли;
	
	Если СтруктураВыполнения.Свойство("ПланируемыеПоездки") Тогда
		ПланируемыеПоездки.Загрузить(СтруктураВыполнения.ПланируемыеПоездки);
	КонецЕсли;
	
	Если СтруктураВыполнения.Свойство("Почта") Тогда
		Почта.Загрузить(СтруктураВыполнения.Почта.Таблица);
		СоответствиеТекстов.Вставить("mail",СтруктураВыполнения.Почта.ТекстHTML);
	КонецЕсли;

	Если СтруктураВыполнения.Свойство("ПредстоящиеСобытия") Тогда
		ПредстоящиеСобытия.Загрузить(СтруктураВыполнения.ПредстоящиеСобытия.Таблица);
		СоответствиеТекстов.Вставить("event",СтруктураВыполнения.ПредстоящиеСобытия.ТекстHTML);
	КонецЕсли;
	
	// +++ VOG Кулаков П.Л. 28.05.2021 DEV-578
	Если СтруктураВыполнения.Свойство("Рейтинги") Тогда
		СоответствиеТекстов.Вставить("rating",СтруктураВыполнения.Рейтинги.ТекстHTML);
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	Возврат СоответствиеТекстов;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьВиджетСобытия()
	
	ВиджетСобытия = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("event");
	Если ВиджетСобытия <> Неопределено Тогда
		ВиджетСобытия.outerHTML = ПолучитьТекстФормированияВиджета("ПредстоящиеСобытия");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВиджеты()
	
	ДлительнаяОперация = НачатьОбновлениеВиджетов();
    
    Если ДлительнаяОперация = Неопределено Тогда 
    	Возврат;
    КонецЕсли;
 
 	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
    ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
    
 	Оповещение = Новый ОписаниеОповещения("ПриЗавершенииОбновленияВиджетов", ЭтотОбъект);
 	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНапоминаниеНаСервере(СтруктураНапоминания)
	
	МенеджерЗаписи = РегистрыСведений.CRM_Напоминания.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи,СтруктураНапоминания);
	МенеджерЗаписи.Пользователь = Пользователи.ТекущийПользователь();
	МенеджерЗаписи.Прочитать();
	Если МенеджерЗаписи.Выбран() Тогда
		МенеджерЗаписи.Удалить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТексВыполненияВиджета(КодВиджета)
	
	Виджет = Справочники.вогВиджетыРабочегоСтола.НайтиПоКоду(КодВиджета);
	НастройкиВиджета = Виджет.НастройкиВиджета.Получить();
	ТекстВыполнения = НастройкиВиджета.КодФормирования;	
	Возврат ТекстВыполнения;
	
КонецФункции

#Область Поручения

&НаКлиенте
Процедура СоздатьПоручение(Форма, Шаблон = Неопределено, ПараметрыПоручения = Неопределено) Экспорт
	
	ТекущийПользователь = ПользователиКлиентСервер.ТекущийПользователь();	
	
	СтруктураОснования = Новый Структура;
	СтруктураОснования.Вставить("КартаМаршрута");
	
	Если ТипЗнч(ПараметрыПоручения) = Тип("Структура")
		И ПараметрыПоручения.Свойство("КартаМаршрута") Тогда
		СтруктураОснования.КартаМаршрута = ПараметрыПоручения.КартаМаршрута;
		ИмяФормыПоручения = ПараметрыПоручения.ИмяФормы;
	Иначе
		СтруктураОснования.КартаМаршрута = ПредопределенноеЗначение("Справочник.CRM_КартыМаршрутов.Поручение");
		ИмяФормыПоручения = "БизнесПроцесс.CRM_БизнесПроцесс.Форма.ФормаПоручения_Старая";
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Основание",СтруктураОснования);
	
	Если Не Шаблон = Неопределено Тогда
		ПараметрыФормы.Вставить("Шаблон", Шаблон);
	КонецЕсли;	
	
	ОткрытьФорму(ИмяФормыПоручения,
	ПараметрыФормы,
	Форма,
	"Уникум");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНапоминаниеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьВиджетНапоминания();
	// +++ VOG Кулаков П.Л. 25.12.2020 DEV-46
	НапоминанияПользователяКлиент.вогСброситьТаймерПроверкиТекущихОповещений();
	// --- VOG Кулаков П.Л.

КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораШаблонаДляЗаполненияПоручения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат = Неопределено Тогда
		
		СоздатьПоручение(Результат);
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте                                                                
Процедура ПоказатьВиджеты()
	
	Если Элементы.ПриветственнаяИнформация.Документ <> Неопределено Тогда
		Если Элементы.ПриветственнаяИнформация.Документ.readyState = "complete" Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПриветственнаяИнформация;
			ОтключитьОбработчикОжидания("ПоказатьВиджеты");
			
			Если Не НеПоказыватьФормуОбновления Тогда
				ОткрытьФорму("Обработка.вогНачальнаяСтраницаПользователя.Форма.ФормаОбновления",,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// +++ VOG Кулаков П.Л. 28.12.2020 DEV-48
&НаКлиенте
Процедура УстановитьПунктМеню()
	Если Элементы.МенюHTML.Документ <> Неопределено Тогда
		Если Элементы.МенюHTML.Документ.readyState = "complete" Тогда
			вогНачальнаяСтраницаПользователяКлиетСервер.НачальнаяСтраницаПользователяПриОткрытии(ЭтаФорма,"главное");
			//ОтключитьОбработчикОжидания("УстановитьПунктМеню");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // --- VOG Кулаков П.Л.

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ОбновитьВиджеты", 600, Ложь);
	// +++ VOG Кулаков П.Л. 17.02.2021
	ПодключитьОбработчикОжидания("ОбновитьВиджетПродажи", 1800, Ложь);
	// --- VOG Кулаков П.Л.
	
	// +++ VOG Кулаков П.Л. 28.12.2020 DEV-48
	ПодключитьОбработчикОжидания("УстановитьПунктМеню",0.1,Истина);
	Если вог_глСтекФормНачальнойСтраницы = Неопределено Тогда 
		вог_глСтекФормНачальнойСтраницы = Новый Соответствие;
		вог_глСтекФормНачальнойСтраницы.Вставить("главное",ЭтаФорма);
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	// +++ VOG Кулаков П.Л. 17.02.2021 DEV-179
	Если Не НеПоказыватьФормуОбновления Тогда
		ОткрытьФорму("Обработка.вогНачальнаяСтраницаПользователя.Форма.ФормаОбновления",,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменениеНапоминаний" Тогда
		ОбновитьВиджетНапоминания();
	КонецЕсли;
	
	Если ИмяСобытия = "ОбновитьПланировщик" Тогда
		ОбновитьВиджетСобытия();
	КонецЕсли;
	
	Если ИмяСобытия = "ЗадачаВыполнена" Тогда
		ОбновитьВиджеты();
	КонецЕсли;
	
	Если ИмяСобытия = "ОбновитьПриветственнуюИнформацию" Тогда
		// +++ VOG Кулаков П.Л. 17.02.2021 DEV-179
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОжидание;
		// --- VOG Кулаков П.Л.
		ЗаполнитьПриветственнуюИнформацию();
		// +++ VOG Кулаков П.Л. 30.04.2021 DEV-276
		//ЗаполнитьСценарийНаВиджетеПродажи();
		// --- VOG Кулаков П.Л.
	КонецЕсли;
	
	Если ИмяСобытия = "ОбновитьНастройкиОтображенияФормыОбновления" Тогда 
		ОбновитьНастройкиОтображенияФормыОбновления(Параметр);
	КонецЕсли;
	
КонецПроцедуры

// +++ VOG Кулаков П.Л. 29.04.2021 DEV-276
&НаКлиенте
Процедура ЗаполнитьСценарийНаВиджетеПродажи()
	
	Если СценарийНаВиджете <> "month" Тогда
		СписокСценариев = Элементы.ПриветственнаяИнформация.Документ.document.getElementById("script");
		Если СписокСценариев <> Неопределено Тогда
			СписокСценариев.value = СценарийНаВиджете;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // --- VOG Кулаков П.Л.

&НаСервере
Процедура ОбновитьНастройкиОтображенияФормыОбновления(ПараметрОповещения)
	
	Если ПараметрОповещения.Свойство("НеПоказыватьФормуОбновления") Тогда
		НеПоказыватьФормуОбновления = ПараметрОповещения.НеПоказыватьФормуОбновления;
		ХранилищеНастроекДанныхФорм.Сохранить("вогНачальнаяСтраницаПользователя","НеПоказыватьФормуОбновления",ПараметрОповещения.НеПоказыватьФормуОбновления);
	КонецЕсли;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗакрытьБезусловно Или ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	СписокВариантов = Новый СписокЗначений;
	СписокВариантов.Добавить(Истина, НСтр("ru = 'Завершить работу'"));
	СписокВариантов.Добавить(Ложь, НСтр("ru = 'Продолжить работу'"));
	
	Отказ = Истина;
	Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	Попытка 
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Завершить работу с программой?'"), СписокВариантов);
	Исключение 
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Конекст) Экспорт
	
	Если Результат = Истина Тогда
		ЗакрытьБезусловно = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытиемЗавершение()

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	вог_глСтекФормНачальнойСтраницы = Новый Соответствие;
	
	ЗавершитьРаботуСистемы(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Отладка(Команда)
	
	ОбновитьВиджеты();
	
КонецПроцедуры

// +++ VOG Кулаков П.Л. 17.02.2021 DEV-179
&НаКлиенте
Процедура ПриветственнаяИнформацияДокументСформирован(Элемент)
	
	Если Элементы.ПриветственнаяИнформация.Документ <> Неопределено Тогда
		Если Элементы.ПриветственнаяИнформация.Документ.readyState = "complete" Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПриветственнаяИнформация;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // --- VOG Кулаков П.Л.

#КонецОбласти