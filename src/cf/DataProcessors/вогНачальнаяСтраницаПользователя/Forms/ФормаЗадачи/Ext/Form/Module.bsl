
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьОтборыДинамическогоСписка();
	
	вогУправлениеИнтерфейсомСервер.ПодключитьДополнительныеКоманды(ЭтаФорма, Элементы.СписокЗадачКоманднаяПанель);
	Для Каждого Элемент Из Элементы.СписокЗадачКоманднаяПанель.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("КнопкаФормы") Тогда
			Элемент.ПоложениеВКоманднойПанели = ПоложениеКнопкиВКоманднойПанели.ВДополнительномПодменю;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыДинамическогоСписка()
	
	ТекущийПользователь = Пользователи.ТекущийПользователь();
	
	МассивПользователей = вогНастраиваемоеДелегированиеПрав.ПолучитьМассивПользователейДелегата(
		"ПроцессыИЗадачи",
		Истина,
		ТекущийПользователь);
		
	РолиПользователя = CRM_БизнесПроцессыСервер.ПолучитьРолиПоПользователю(ПараметрыСеанса.ТекущийПользователь);
		
	ТекущееПодразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "Подразделение");
	
	ОбъектыАдресации = CRM_МетодыМодулейМенеджеровСправочников.ПолучитьВсеПодразделенияРодители(ТекущийПользователь.Подразделение,Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЗадач, "Пользователь", ТекущийПользователь, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЗадач, "ОсновнойОбъектАдресации", ОбъектыАдресации, Истина);
	
	ОтборВРаботе = Ложь;
	Если Параметры.Свойство("ОтборВРаботе") Тогда		
		ОтборВРаботе = Параметры.ОтборВРаботе;
	КонецЕсли;
	
	ОтборНовые = Ложь;
	Если Параметры.Свойство("ОтборНовые") Тогда		
		ОтборНовые = Параметры.ОтборНовые;
	КонецЕсли;
	
	ОтборПросроченные = Ложь;
	Если Параметры.Свойство("ОтборПросроченные") Тогда		
		ОтборПросроченные = Параметры.ОтборПросроченные;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокЗадач,
			"Измерение",
			"Завершенные",
			ВидСравненияКомпоновкиДанных.НеРавно,, ОтборВРаботе ИЛИ ОтборНовые ИЛИ ОтборПросроченные
			,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ); 
			
	Если ОтборНовые Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокЗадач,
			"ПринятаКИсполнению",
			Ложь,
			ВидСравненияКомпоновкиДанных.Равно,, ОтборНовые
			,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	ИначеЕсли ОтборВРаботе Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокЗадач,
			"ПринятаКИсполнению",
			Истина,
			ВидСравненияКомпоновкиДанных.Равно,, ОтборВРаботе
			,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	КонецЕсли;
				
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			СписокЗадач,
			"Просрочено",
			Истина,
			ВидСравненияКомпоновкиДанных.Равно,, ОтборПросроченные
			,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
			
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЗадач, "ПериодПросроченных", НачалоДня(ТекущаяДатаСеанса()), Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЗадач, "ПустаяДата", Дата('00010101'), Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокЗадач, "РолиПользователя", РолиПользователя, Истина);
	
		
КонецПроцедуры

&НаКлиенте
Процедура СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ВыбраннаяСтрока <> Неопределено Тогда
		ПоказатьЗначение(, ВыбраннаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВыборкиПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие;
	Параметрыотбора.Вставить("ПериодВыборки", ПериодВыборки);
	
	УстановитьОтборСписка(СписокЗадач, ПараметрыОтбора);
	
	вогОбщегоНазначенияКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, ПериодВыборки);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	ПериодВыборки = ПараметрыОтбора.Получить("ПериодВыборки");
	Если ПериодВыборки <> Неопределено Тогда 
		
		ЭлементыОтбора = Список.Отбор.Элементы;
		
		ЭлементОтбораДанных = Неопределено;
		Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ЭлементОтбора.Представление = "ОтборПериод" Тогда
				ЭлементОтбораДанных = ЭлементОтбора;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ПериодВыборки) Тогда 
			
			Если ЭлементОтбораДанных = Неопределено Тогда
				ГруппаОтборПериод = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
				ГруппаОтборПериод.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли; 
				ГруппаОтборПериод.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
				ГруппаОтборПериод.Использование = Истина;
				ГруппаОтборПериод.Представление = "ОтборПериод";
			Иначе
				ГруппаОтборПериод = ЭлементОтбораДанных;
				ГруппаОтборПериод.Элементы.Очистить();
				ГруппаОтборПериод.Использование = Истина;
			КонецЕсли;	
			
			ГруппаСрок = ГруппаОтборПериод.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаСрок.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ; 
			ГруппаСрок.Использование = Истина;
			
			Если ЗначениеЗаполнено(ПериодВыборки.ДатаНачала) Тогда 
				ЭлементОтбораДанных = ГруппаСрок.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КрайнийСрок");
				ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
				ЭлементОтбораДанных.ПравоеЗначение = ПериодВыборки.ДатаНачала;
				ЭлементОтбораДанных.Использование = Истина;
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(ПериодВыборки.ДатаОкончания) Тогда 
				ЭлементОтбораДанных = ГруппаСрок.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КрайнийСрок");
				ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
				ЭлементОтбораДанных.ПравоеЗначение = ПериодВыборки.ДатаОкончания;
				ЭлементОтбораДанных.Использование = Истина;
			КонецЕсли;
						
			Если ГруппаСрок.Элементы.Количество() = 0 Тогда 
				ГруппаОтборПериод.Элементы.Удалить(ГруппаСрок);
			КонецЕсли;
			
		Иначе
			
			Если ЭлементОтбораДанных <> Неопределено Тогда
				ГруппаОтборПериод = ЭлементОтбораДанных;
				ГруппаОтборПериод.Элементы.Очистить();
				ГруппаОтборПериод.Использование = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;	
		
КонецПроцедуры

#Область ПодключемыеДополнительныеКоманды

&НаКлиенте
Процедура Подключаемый_ОбработчикДополнительнойКоманды(Команда) Экспорт 
	
	вогУправлениеИнтерфейсомКлиент.ОбработчикКомандыФормы(Команда, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистрДатыЗапретаИзменений(Команда)
	//+++ Терпогосян Д.Б. [09.08.2021 17:58:47] № DEV-743
	ОткрытьФорму("РегистрСведений.ДатыЗапретаИзменения.Форма.ДатыЗапретаИзменения");
	//--- Терпогосян Д.Б. [09.08.2021 17:58:52] № DEV-743 
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписокЗадач

// ++ VOG Солодов В.В. 06.09.2021 CRM-1161
&НаСервере
Процедура СписокЗадачПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки, ИспользуютсяСтандартныеНастройки)
	
	ТекущиеНастройки = СписокЗадач.КомпоновщикНастроек.ПолучитьНастройки();
	
	Для Каждого ЭлементНастроек Из Настройки.Элементы Цикл
		
		Если ТипЗнч(ЭлементНастроек) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			
			Использование = Ложь;
			
			Для Каждого ЭлементОтбора Из ТекущиеНастройки.Отбор.Элементы Цикл
				
				Если ЭлементНастроек.ИдентификаторПользовательскойНастройки = ЭлементОтбора.ИдентификаторПользовательскойНастройки Тогда
					Использование = ЭлементОтбора.Использование;
					ЭлементНастроек.ВидСравнения 	= ЭлементОтбора.ВидСравнения;
					ЭлементНастроек.ПравоеЗначение 	= ЭлементОтбора.ПравоеЗначение;
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			ЭлементНастроек.Использование = Использование;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // -- VOG Солодов В.В. 06.09.2021 CRM-1161

#КонецОбласти