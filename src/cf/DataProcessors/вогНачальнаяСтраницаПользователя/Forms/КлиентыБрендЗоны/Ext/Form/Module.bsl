&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	вогНачальнаяСтраницаПользователяКлиетСервер.НачальнаяСтраницаПользователяПриСозданииНаСервере(ЭтаФорма);
	// ++ VOG Солодов В.В. 17.02.2021 TRG-277
	ЗаполнитьТаблицуОтборов();
	// -- VOG Солодов В.В. 17.02.2021 TRG-277
	// ++ VOG Солодов В.В. 15.09.2021 CRM-1214
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		СписокБрендЗоны,
		"ТекущаяДата",
		ТекущаяДатаСеанса());
	// -- VOG Солодов В.В. 15.09.2021 CRM-1214
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("УстановитьПунктМеню",0.1,Истина);
	// ++ VOG Солодов В.В. 17.02.2021 TRG-277
	ПриИзмененииПоляОтбораНаКлиенте();
	// -- VOG Солодов В.В. 17.02.2021 TRG-277
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПунктМеню()
	Если Элементы.МенюHTML.Документ <> Неопределено Тогда
		Если Элементы.МенюHTML.Документ.readyState = "complete" Тогда
			вогНачальнаяСтраницаПользователяКлиетСервер.НачальнаяСтраницаПользователяПриОткрытии(ЭтаФорма,"бренд-зоны");
			//ОтключитьОбработчикОжидания("УстановитьПунктМеню");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_МенюHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	Если ДанныеСобытия.Element <> Неопределено Тогда
		вогНачальнаяСтраницаПользователяКлиетСервер.МенюHTMLПриНажатии(ЭтаФорма,"бренд-зоны");
	КонецЕсли;
		
КонецПроцедуры

// ++ VOG Солодов В.В. 17.02.2021 TRG-277
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПриИзмененииПоляОтбора(Элемент)
	
	ПриИзмененииПоляОтбораНаКлиенте(Элемент.Имя);
	
	вогОбщегоНазначенияКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, ЭтотОбъект[Элемент.Имя]);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МассивЗначений = ПолучитьСтруктуруОтбора("Подразделение").Подразделение;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Ссылка", МассивЗначений);
	СтруктураОтбора.Вставить("ОбособленноеПодразделение", Истина);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	
	Если ЗначениеЗаполнено(ОтборПодразделение) И Не МассивЗначений.Найти(ОтборПодразделение) = Неопределено Тогда
		ПараметрыФормы.Вставить("ТекущаяСтрока", ОтборПодразделение);
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолеОтбораВыборЗавершение",
		ЭтотОбъект,
		Элемент.Имя);
	
	ОткрытьФорму(
		"Справочник.СтруктураПредприятия.Форма.CRM_ФормаВыбора",
		ПараметрыФормы,
		ЭтотОбъект,
		,
		,
		,
		ОповещениеОЗавершении,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМенеджерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", 			Истина);
	ПараметрыФормы.Вставить("СписокПользователей", 	ПолучитьСтруктуруОтбора("Менеджер").Менеджер);
	ПараметрыФормы.Вставить("СписокПодразделений", 	ПолучитьСтруктуруОтбора("Подразделение", Ложь).Подразделение);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолеОтбораВыборЗавершение",
		ЭтотОбъект,
		Элемент.Имя);
	
	ОткрытьФорму(
		"Справочник.Пользователи.Форма.CRM_ФормаСписка",
		ПараметрыФормы,
		ЭтотОбъект,
		,
		,
		,
		ОповещениеОЗавершении,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРегионНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	МассивЗначений = ПолучитьСтруктуруОтбора("Регион").Регион;
	
	СтруктураОтбора = Новый Структура("Ссылка", МассивЗначений);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", СтруктураОтбора);
	
	Если ЗначениеЗаполнено(ОтборРегион) И Не МассивЗначений.Найти(ОтборРегион) = Неопределено Тогда
		ПараметрыФормы.Вставить("ТекущаяСтрока", ОтборРегион);
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолеОтбораВыборЗавершение",
		ЭтотОбъект,
		Элемент.Имя);
	
	ОткрытьФорму(
		"Справочник.вогНаселенныеПункты.ФормаВыбора",
		ПараметрыФормы,
		ЭтотОбъект,
		,
		,
		,
		ОповещениеОЗавершении,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПартнерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВариантКлассификации", "Партнеры");
	
	НовыйОтбор = Новый ОтборКомпоновкиДанных;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
		НовыйОтбор,
		"Ссылка",
		ПолучитьСтруктуруОтбора("Партнер").Партнер,
		ВидСравненияКомпоновкиДанных.ВСписке);
	
	ПараметрыФормы.Вставить("ОтборКомпоновкиДанных", НовыйОтбор);
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ПолеОтбораВыборЗавершение",
		ЭтотОбъект,
		Элемент.Имя);
	
	ОткрытьФорму(
		"ОбщаяФорма.вогПодборКлиентскаяБазаДинамический",
		ПараметрыФормы,
		ЭтотОбъект,
		,
		,
		,
		ОповещениеОЗавершении,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОтбораВыборЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект[ДополнительныеПараметры] = Результат;
	ПриИзмененииПоляОтбораНаКлиенте(ДополнительныеПараметры);
	вогОбщегоНазначенияКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(
		Элементы[ДополнительныеПараметры], ДополнительныеПараметры);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииПоляОтбораНаКлиенте(Знач ИмяПоляОтбора = "", Знач СтруктураОтбора = Неопределено)
	
	Если СтруктураОтбора = Неопределено Тогда
		СтруктураОтбора = ПолучитьСтруктуруОтбора();
	КонецЕсли;
	
	СписокПолейОтбора = Новый Массив;
	СписокПолейОтбора.Добавить("Подразделение");
	СписокПолейОтбора.Добавить("Менеджер");
	СписокПолейОтбора.Добавить("Регион");
	СписокПолейОтбора.Добавить("Партнер");
	
	Для Каждого ИмяПоля Из СписокПолейОтбора Цикл
		
		ИмяЭлемента = СтрШаблон("Отбор%1", ИмяПоля);
		
		Если ИмяЭлемента = ИмяПоляОтбора
			И ЗначениеЗаполнено(ЭтотОбъект[ИмяЭлемента]) Тогда
			Продолжить;
		КонецЕсли;
		
		МассивЗначений = СтруктураОтбора[ИмяПоля];
		
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", Новый ФиксированныйМассив(МассивЗначений));
		
		МассивПараметров = Новый Массив();
		МассивПараметров.Добавить(НовыйПараметр);
		
		Если ИмяПоля = "Подразделение" Тогда
			
			НовыйПараметр = Новый ПараметрВыбора("Отбор.ОбособленноеПодразделение", Истина);
			МассивПараметров.Добавить(НовыйПараметр);
			Если ЗначениеЗаполнено(ОтборПодразделение) И Не МассивЗначений.Найти(ОтборПодразделение) = Неопределено Тогда
				НовыйПараметр = Новый ПараметрВыбора("ТекущаяСтрока", ОтборПодразделение);
				МассивПараметров.Добавить(НовыйПараметр);
			КонецЕсли;
			
		ИначеЕсли ИмяПоля = "Менеджер" Тогда
			
			НовыйПараметр = Новый ПараметрВыбора("СписокПользователей", МассивЗначений);
			МассивПараметров.Добавить(НовыйПараметр);
			
			МассивЗначений = СтруктураОтбора.Подразделение;
			
			НовыйПараметр = Новый ПараметрВыбора("СписокПодразделений", МассивЗначений);
			МассивПараметров.Добавить(НовыйПараметр);
			
			//НовыйПараметр = Новый ПараметрВыбора("ТолькоДоступные", Истина);
			//МассивПараметров.Добавить(НовыйПараметр);
			
		ИначеЕсли ИмяПоля = "Регион"
			И ЗначениеЗаполнено(ОтборРегион)
			И Не МассивЗначений.Найти(ОтборРегион) = Неопределено Тогда
			
			НовыйПараметр = Новый ПараметрВыбора("ТекущаяСтрока", ОтборРегион);
			МассивПараметров.Добавить(НовыйПараметр);
			
		КонецЕсли;
			
		Элементы[ИмяЭлемента].ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);
		
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокБрендЗоны,
		"ТорговаяТочка",
		СтруктураОтбора.ТорговаяТочка,
		ВидСравненияКомпоновкиДанных.ВСписке,
		,
		Истина);
		
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруОтбора(ИмяПоля = "", ДобавитьДополнительноеЗначение = Истина)
	
	ПараметрыОтбораСтрок = Новый Структура;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ТорговаяТочка", Новый Массив);
	СтруктураОтбора.Вставить("Подразделение", Новый Массив);
	СтруктураОтбора.Вставить("Менеджер", Новый Массив);
	СтруктураОтбора.Вставить("Партнер", Новый Массив);
	СтруктураОтбора.Вставить("Регион", Новый Массив);
	СтруктураОтбора.Вставить("РегионРодитель", Новый Массив);
	
	Если ЗначениеЗаполнено(ОтборПодразделение) И Не ИмяПоля = "Подразделение" Тогда
		ПараметрыОтбораСтрок.Вставить("Подразделение", ОтборПодразделение);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборМенеджер) И Не ИмяПоля = "Менеджер" Тогда
		ПараметрыОтбораСтрок.Вставить("Менеджер", ОтборМенеджер);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборРегион) И Не ИмяПоля = "Регион" Тогда
		ПараметрыОтбораСтрок.Вставить("Регион", ОтборРегион);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборПартнер) И Не ИмяПоля = "Партнер" Тогда
		ПараметрыОтбораСтрок.Вставить("Партнер", ОтборПартнер);
	КонецЕсли;
	
	НайденныеСтроки = ТаблицаОтборов.НайтиСтроки(ПараметрыОтбораСтрок);
	
	Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
		
		Для Каждого КлючИЗначение Из СтруктураОтбора Цикл
			
			ДобавляемоеЗначение = СтрокаТабличнойЧасти[КлючИЗначение.Ключ];
			
			Если КлючИЗначение.Значение.Найти(ДобавляемоеЗначение) = Неопределено Тогда
				КлючИЗначение.Значение.Добавить(ДобавляемоеЗначение);
			КонецЕсли;
			
			Если ДобавитьДополнительноеЗначение Тогда
				
				ДополнительноеЗначение = Неопределено;
				
				Если КлючИЗначение.Ключ = "Регион" Тогда
					ДополнительноеЗначение = СтрокаТабличнойЧасти.РегионРодитель;
				ИначеЕсли КлючИЗначение.Ключ = "Подразделение" Тогда
					// +++ VOG Кулаков П.Л. 29.04.2021 DEV-235
					//ДополнительноеЗначение = ПредопределенноеЗначение("Справочник.СтруктураПредприятия.ОсновноеПодразделение");
					// --- VOG Кулаков П.Л.
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ДополнительноеЗначение)
					И КлючИЗначение.Значение.Найти(ДополнительноеЗначение) = Неопределено Тогда
					КлючИЗначение.Значение.Добавить(ДополнительноеЗначение);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат СтруктураОтбора;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуОтборов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СпрТорговыеТочки.Ссылка КАК ТорговаяТочка,
		|	СпрТорговыеТочки.Партнер КАК Партнер,
		|	СпрТорговыеТочки.НаселенныйПунктРегион КАК Регион
		|ПОМЕСТИТЬ ВТ_ТорговыеТочки
		|ИЗ
		|	Справочник.вогТорговыеТочки КАК СпрТорговыеТочки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БрендЗона КАК БрендЗоны
		|		ПО СпрТорговыеТочки.Ссылка = БрендЗоны.ТорговаяТочка
		|ГДЕ
		|	НЕ БрендЗоны.ПометкаУдаления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВТ_ТорговыеТочки.ТорговаяТочка КАК ТорговаяТочка,
		|	ВТ_ТорговыеТочки.Партнер КАК Партнер,
		|	ВТ_ТорговыеТочки.Регион КАК Регион,
		|	ЕСТЬNULL(МенеджерыОбъектов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
		|	ЕСТЬNULL(МенеджерыОбъектов.Менеджер, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК Менеджер
		|ПОМЕСТИТЬ ВТ_Подготовленная
		|ИЗ
		|	ВТ_ТорговыеТочки КАК ВТ_ТорговыеТочки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.вогМенеджерыОбъектов КАК МенеджерыОбъектов
		|		ПО ВТ_ТорговыеТочки.ТорговаяТочка = МенеджерыОбъектов.Владелец
		|			И (МенеджерыОбъектов.НаправлениеДеятельности = &НаправлениеДеятельности)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Подготовленная.ТорговаяТочка КАК ТорговаяТочка,
		|	ВТ_Подготовленная.Партнер КАК Партнер,
		|	ВТ_Подготовленная.Регион КАК Регион,
		|	ВТ_Подготовленная.Регион.Родитель КАК РегионРодитель,
		|	ВТ_Подготовленная.Подразделение КАК Подразделение,
		|	ВТ_Подготовленная.Менеджер КАК Менеджер
		|ИЗ
		|	ВТ_Подготовленная КАК ВТ_Подготовленная";
	
	Запрос.УстановитьПараметр("НаправлениеДеятельности", Справочники.НаправленияДеятельности.Обои);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НоваяСтрока = ТаблицаОтборов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
		
		// Заполнение иерархии регионов
		Если ЗначениеЗаполнено(НоваяСтрока.РегионРодитель) Тогда
			
			Родитель = НоваяСтрока.РегионРодитель;
			
			Пока ЗначениеЗаполнено(Родитель) Цикл
				
				НоваяСтрока = ТаблицаОтборов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
				НоваяСтрока.РегионРодитель = Родитель;
				
				Родитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Родитель, "Родитель", Истина);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
// -- VOG Солодов В.В. 17.02.2021 TRG-277