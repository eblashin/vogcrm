
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОтборПринадлежность") Тогда		
		ОтборПринадлежность = Параметры.ОтборПринадлежность;
	КонецЕсли;
	
	Если ОтборПринадлежность = "ПорученоМной" Тогда
		ЭтаФорма.Заголовок = "Выданные поручения";
	ИначеЕсли ОтборПринадлежность = "ИсходящиеСогласования" Тогда
		ЭтаФорма.Заголовок = "Исходящие согласования";
	ИначеЕсли ОтборПринадлежность = "ВходящиеСогласования" Тогда
		ЭтаФорма.Заголовок = "Входящие согласования";
	КонецЕсли;
		
	Попытка
		ТекущийПользователь = Пользователи.АвторизованныйПользователь();
		вогОбщегоНазначенияКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элементы.Пользователь, ТекущийПользователь);
	Исключение
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	Если Параметры.Свойство("ОтборДата") Тогда
		ОтборДата = Параметры.ОтборДата;
	КонецЕсли;
	
	Если Параметры.Свойство("ОтборПросрочено") Тогда
		ОтборПросроченные = Параметры.ОтборПросрочено;
	КонецЕсли;
	
	// +++ VOG Кулаков П.Л. 18.02.2021
	Если Параметры.Свойство("ОтборВсе") Тогда
		ОтборВсе = Истина;
	КонецЕсли;
	// --- VOG Кулаков П.Л.
	
	РуководительПользователя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "вогРуководитель", Истина);
	
	// +++ VOG Кулаков П.Л. 17.02.2021 DEV-188
	//МассивПользователей = вогНастраиваемоеДелегированиеПрав.ПолучитьМассивПользователейДелегата("ПроцессыИЗадачи", Истина, ТекущийПользователь);
	//СписокПользователей.ЗагрузитьЗначения(МассивПользователей);
	
	СписокПользователей.Очистить();
	СписокПользователей.Добавить(ТекущийПользователь);
	// --- VOG Кулаков П.Л.
	
	СписокПоручений.Параметры.УстановитьЗначениеПараметра("ПарамТекущаяДата", КонецДня(ТекущаяДатаСеанса()));
	СписокПоручений.Параметры.УстановитьЗначениеПараметра("ПарамПустаяДата" , Дата("00010101"));
	СписокПоручений.Параметры.УстановитьЗначениеПараметра("вогДолжностныеПозиции" , ПараметрыСеанса.вогДолжностныеПозиции);
	
	УстановитьОтборыДинамическогоСписка();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыДинамическогоСписка()
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекущаяДата = ТекущаяДата();
	Если ОтборДата = "Сегодня" Тогда
		ПериодВыборки.Вариант =ВариантСтандартногоПериода.ПроизвольныйПериод;
		ПериодВыборки.ДатаНачала = НачалоДня(ТекущаяДата);
		ПериодВыборки.ДатаОкончания = КонецДня(ТекущаяДата);
	ИначеЕсли ОтборДата = "Неделя" Тогда
		ПериодВыборки.Вариант =ВариантСтандартногоПериода.ПроизвольныйПериод;
		ПериодВыборки.ДатаНачала = НачалоНедели(ТекущаяДата);
		ПериодВыборки.ДатаОкончания = КонецНедели(ТекущаяДата);
	КонецЕсли;
	
	ПараметрыОтбора = Новый Соответствие;
	Параметрыотбора.Вставить("ПериодВыборки", ПериодВыборки);
	
	УстановитьОтборСписка(СписокПоручений, ПараметрыОтбора);
	
	вогОбщегоНазначенияКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элементы.ПериодВыборки, ПериодВыборки);
	
	Если ОтборПросроченные Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПоручений,
			"Просрочена", ОтборПросроченные,,, ОтборПросроченные,РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПоручений,
		"ТекущийПользователь", СписокПользователей, СписокПользователей.Количество() > 0);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПоручений,
		"вогПодчиненныеСотрудники", ПараметрыСеанса.вогПодчиненныеСотрудники);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПоручений,
		"вогРолиИсполнителя", ПараметрыСеанса.вогРолиИсполнителя);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПоручений,
		"вогОсновныеОбъектыАдресации", ПараметрыСеанса.вогОсновныеОбъектыАдресации);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокПоручений,"БизнесПроцессАвтор");
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(СписокПоручений, "Исполнитель");
	
	РолиПользователя = CRM_БизнесПроцессыСервер.ПолучитьРолиПоПользователю(ПараметрыСеанса.ТекущийПользователь);
	
	// +++ VOG Кулаков П.Л. 18.02.2021
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПоручений,
		"Выполнена", Ложь,,, НЕ ОтборВсе);
	// --- VOG Кулаков П.Л.
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПоручений,
		"ЯвляетсяСогласованием", (ОтборПринадлежность = "ВходящиеСогласования" ИЛИ ОтборПринадлежность = "ИсходящиеСогласования"));
	
	ГруппаИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(СписокПоручений.Отбор.Элементы, 
		"ОтборПринадлежность", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	Если ОтборПринадлежность = "ВходящиеСогласования" ИЛИ ОтборПринадлежность = "ИсходящиеСогласования" Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПоручений,"ТипЗадачи",Перечисления.вогТипЗадачиИсполнителя.Согласование);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПоручений,"Направление",ОтборПринадлежность);
		
		Если ОтборПринадлежность = "ИсходящиеСогласования" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПоручений, "БизнесПроцессАвтор",
					СписокПользователей, ВидСравненияКомпоновкиДанных.ВСписке,, Истина);
		КонецЕсли;

	Иначе
		
		Если ОтборПринадлежность = "ПорученоМной" Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокПоручений,"ТипЗадачи",Перечисления.вогТипЗадачиИсполнителя.Поручение);
		КонецЕсли;

		Если ОтборПринадлежность = "ПорученоМной"
			И ЗначениеЗаполнено(РуководительПользователя) Тогда
			
			СписокАвторов = Новый СписокЗначений;
			СписокАвторов.ЗагрузитьЗначения(СписокПользователей.ВыгрузитьЗначения());
			СписокАвторов.Добавить(РуководительПользователя);
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПоручений, "БизнесПроцессАвтор",
				СписокАвторов, ВидСравненияКомпоновкиДанных.ВСписке,, Истина);
				
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПоручений, "БизнесПроцессОтветственный",
				ТекущийПользователь, ВидСравненияКомпоновкиДанных.Равно,, Истина);
							
		Иначе
		
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(СписокПоручений, "БизнесПроцессАвтор",
				СписокПользователей, ВидСравненияКомпоновкиДанных.ВСписке,, Истина);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие;
	ПараметрыОтбора.Вставить("ОтборПользователь", ТекущийПользователь);
	ПараметрыОтбора.Вставить("ОтборПринадлежность", ОтборПринадлежность);
	
	// +++ VOG Кулаков П.Л. 17.02.2021 DEV-188
	//МассивПользователей = вогНастраиваемоеДелегированиеПрав.ПолучитьМассивПользователейДелегата("ПроцессыИЗадачи", Истина, ТекущийПользователь);
	//СписокПользователей.ЗагрузитьЗначения(МассивПользователей);
	
	СписокПользователей.Очистить();
	СписокПользователей.Добавить(ТекущийПользователь);
	// --- VOG Кулаков П.Л.
	
	РуководительПользователя = ОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(ТекущийПользователь, "вогРуководитель", Истина);
	
	УстановитьОтборыДинамическогоСписка();
	
	вогОбщегоНазначенияКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, ТекущийПользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВыборкиПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие;
	Параметрыотбора.Вставить("ПериодВыборки", ПериодВыборки);
	
	УстановитьОтборСписка(СписокПоручений, ПараметрыОтбора);
	
	вогОбщегоНазначенияКлиентСервер.ПоказатьСкрытьКнопкуОчисткиОтбора(Элемент, ПериодВыборки);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	ОтборПользователь = ПараметрыОтбора.Получить("ОтборПользователь");
	Если ОтборПользователь <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(ОтборПользователь) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,"Участники");
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,"Сотрудник");
		Иначе
			ГруппаИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(
					Список.Отбор.Элементы,
					"ОтборУчастников",
					ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИли,
					"Участники", ОтборПользователь, ВидСравненияКомпоновкиДанных.Содержит);
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИли,
					"Сотрудник", ОтборПользователь, ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;
	КонецЕсли;
		
	ПериодВыборки = ПараметрыОтбора.Получить("ПериодВыборки");
	Если ПериодВыборки <> Неопределено Тогда 
		
		ЭлементыОтбора = Список.Отбор.Элементы;
		
		ЭлементОтбораДанных = Неопределено;
		Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ЭлементОтбора.Представление = "ОтборПериод" Тогда
				ЭлементОтбораДанных = ЭлементОтбора;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ПериодВыборки) Тогда 
			
			Если ЭлементОтбораДанных = Неопределено Тогда
				ГруппаОтборПериод = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
				ГруппаОтборПериод.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли; 
				ГруппаОтборПериод.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
				ГруппаОтборПериод.Использование = Истина;
				ГруппаОтборПериод.Представление = "ОтборПериод";
			Иначе
				ГруппаОтборПериод = ЭлементОтбораДанных;
				ГруппаОтборПериод.Элементы.Очистить();
				ГруппаОтборПериод.Использование = Истина;
			КонецЕсли;	
			
			ГруппаСрок = ГруппаОтборПериод.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
			ГруппаСрок.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ; 
			ГруппаСрок.Использование = Истина;
			
			Если ЗначениеЗаполнено(ПериодВыборки.ДатаНачала) Тогда 
				ЭлементОтбораДанных = ГруппаСрок.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СрокИсполнения");
				ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
				ЭлементОтбораДанных.ПравоеЗначение = ПериодВыборки.ДатаНачала;
				ЭлементОтбораДанных.Использование = Истина;
			КонецЕсли;	
			
			Если ЗначениеЗаполнено(ПериодВыборки.ДатаОкончания) Тогда 
				ЭлементОтбораДанных = ГруппаСрок.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СрокИсполнения");
				ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
				ЭлементОтбораДанных.ПравоеЗначение = ПериодВыборки.ДатаОкончания;
				ЭлементОтбораДанных.Использование = Истина;
			КонецЕсли;
						
			Если ГруппаСрок.Элементы.Количество() = 0 Тогда 
				ГруппаОтборПериод.Элементы.Удалить(ГруппаСрок);
			КонецЕсли;
			
		Иначе
			
			Если ЭлементОтбораДанных <> Неопределено Тогда
				ГруппаОтборПериод = ЭлементОтбораДанных;
				ГруппаОтборПериод.Элементы.Очистить();
				ГруппаОтборПериод.Использование = Ложь;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;	
		
КонецПроцедуры
