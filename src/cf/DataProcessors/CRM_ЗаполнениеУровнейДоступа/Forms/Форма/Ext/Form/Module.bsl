
///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьПартнераПользователя(Форма, ПартнерПользователь)
	Если ТипЗнч(ПартнерПользователь) = Тип("СправочникСсылка.Партнеры") Тогда
		НайденныеСтроки = Форма.ТаблицаПартнеры.НайтиСтроки(Новый Структура("Партнер", ПартнерПользователь));
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Форма.ТаблицаПартнеры.Добавить();
			НоваяСтрока.Партнер = ПартнерПользователь;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ПартнерПользователь) = Тип("СправочникСсылка.Пользователи") Тогда
		НайденныеСтроки = Форма.ТаблицаПользователи.НайтиСтроки(Новый Структура("Пользователь", ПартнерПользователь));
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Форма.ТаблицаПользователи.Добавить();
			НоваяСтрока.Пользователь = ПартнерПользователь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьПартнеровГруппы(ПартнерГруппа)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель", ПартнерГруппа);
	Запрос.Текст =  "ВЫБРАТЬ
	                |	Партнеры.Ссылка КАК Ссылка
	                |ИЗ
	                |	Справочник.Партнеры КАК Партнеры
	                |ГДЕ
	                |	НЕ Партнеры.ПометкаУдаления
	                |	И НЕ Партнеры.ЭтоГруппа";
	Если ПартнерГруппа.ЭтоГруппа Тогда
		Запрос.Текст =  Запрос.Текст + "
    |	И Партнеры.Родитель В ИЕРАРХИИ(&Родитель)";
	Иначе	
		Запрос.Текст =  Запрос.Текст + "
	|	И Партнеры.Родитель = &Родитель";
	КонецЕсли;					
	Запрос.Текст =  Запрос.Текст + "
    |
    |УПОРЯДОЧИТЬ ПО
    |	Партнеры.Наименование";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

&НаСервере
Процедура ОбработкаВыбораНаСервере(ВыбранноеЗначение)

	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Партнеры") Тогда
	
		Если ВыбранноеЗначение.ЭтоГруппа ИЛИ (ВыбранноеЗначение = Справочники.Партнеры.ПустаяСсылка()) Тогда
			мПартнеры = ПолучитьПартнеровГруппы(ВыбранноеЗначение);
			Для Каждого эПартнер Из мПартнеры Цикл
				ДобавитьПартнераПользователя(ЭтотОбъект, эПартнер);
			КонецЦикла;
		Иначе
			ДобавитьПартнераПользователя(ЭтотОбъект, ВыбранноеЗначение);
		КонецЕсли;
		
	ИначеЕсли		ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи")
				Или	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ГруппыПользователей")
				Или	ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		//
		
		Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
			МассивПользователейГрупп = ВыбранноеЗначение;
		Иначе
			МассивПользователейГрупп = Новый Массив();
			МассивПользователейГрупп.Добавить(ВыбранноеЗначение);
		КонецЕсли;
		
		Для Каждого ВыбранныйПользовательГруппа Из МассивПользователейГрупп Цикл
			Если ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.Пользователи") Тогда
				ДобавитьПартнераПользователя(ЭтотОбъект, ВыбранныйПользовательГруппа);
			ИначеЕсли ТипЗнч(ВыбранныйПользовательГруппа) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
				МассивПользователиГруппы = CRM_ОбщегоНазначенияСервер.ПолучитьПользователейГруппы(ВыбранныйПользовательГруппа, Истина);
				Для Каждого ПользовательСсылка Из МассивПользователиГруппы Цикл
					ДобавитьПартнераПользователя(ЭтотОбъект, ПользовательСсылка);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧПоСегменту(Сегмент)
	Запрос = Новый Запрос;
	Если Сегмент.СпособФормирования = Перечисления.СпособыФормированияСегментов.ФормироватьДинамически Тогда
		РеквизитыСКДСегмента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Сегмент,
			"СхемаКомпоновкиДанных,ХранилищеНастроекКомпоновкиДанных,ИмяШаблонаСКД");
			
		НастройкиСегмента = РеквизитыСКДСегмента.ХранилищеНастроекКомпоновкиДанных.Получить();
		Если ПустаяСтрока(РеквизитыСКДСегмента.ИмяШаблонаСКД) Тогда
			СКД = РеквизитыСКДСегмента.СхемаКомпоновкиДанных.Получить();
		Иначе
			СКД_Макета = СегментыСервер.ПолучитьОписаниеИСхемуКомпоновкиДанныхПоИмениМакета(Сегмент, РеквизитыСКДСегмента.ИмяШаблонаСКД);
			СКД = СКД_Макета.СхемаКомпоновкиДанных;
		КонецЕсли;
		
		Если СКД.НаборыДанных.Найти("СписокСегмента") <> Неопределено Тогда
			Поля = СКД.НаборыДанных.СписокСегмента.Поля;
			Для Каждого Поле Из Поля Цикл
				Поле.ОграничениеИспользования.Поле = Ложь;
			КонецЦикла;// Подключить поля запроса списка.
			
			НастройкиСписка = СКД.ВариантыНастроек.Список.Настройки;
			Настройки = СКД.НастройкиПоУмолчанию;
			CRM_СегментыСервер.СкопироватьЭлементы(НастройкиСписка.ПараметрыДанных, Настройки.ПараметрыДанных);
			CRM_СегментыСервер.СкопироватьЭлементы(НастройкиСписка.Отбор, Настройки.Отбор);
		ИначеЕсли  СКД.НаборыДанных.Найти("ФормированиеСегмента") <> Неопределено Тогда
			Если НастройкиСегмента <> Неопределено Тогда
				НастройкиСписка = НастройкиСегмента;
			Иначе
				НастройкиСписка = СКД.ВариантыНастроек.ФормированиеСегмента.Настройки;
			КонецЕсли;
		Иначе
			НастройкиСписка = Неопределено;
		КонецЕсли;
		Если НастройкиСписка = Неопределено Тогда
			МассивПартнеров = Новый Массив();
		Иначе
			КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
			МакетКомпоновки = КомпоновщикМакета.Выполнить(
				СКД,НастройкиСписка,,,
				Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")
			);
			ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
			ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
			ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
			ТаблицаЗначений = Новый ТаблицаЗначений;
			ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
			ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
			МассивПартнеров = ТаблицаЗначений.ВыгрузитьКолонку("Партнер");
		КонецЕсли;
		
		ТекстЗапроса = "ВЫБРАТЬ
           |	Партнеры.Ссылка КАК Партнер
           |ИЗ
           |	Справочник.Партнеры КАК Партнеры
           |ГДЕ
           |	НЕ Партнеры.ПометкаУдаления
		   |	И Партнеры.Ссылка В (&МассивПартнеров)";
		Запрос.УстановитьПараметр("МассивПартнеров", МассивПартнеров);
	Иначе	
		Запрос.УстановитьПараметр("Сегмент", Сегмент);
		ТекстЗапроса = "ВЫБРАТЬ
           |	ПартнерыСегмента.Партнер КАК Партнер
           |ИЗ
           |	РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
           |ГДЕ
           |	ПартнерыСегмента.Сегмент = &Сегмент
           |	И НЕ ПартнерыСегмента.Партнер.ПометкаУдаления";
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	ТабПартнеров = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаТаб Из ТабПартнеров Цикл
		ДобавитьПартнераПользователя(ЭтотОбъект, СтрокаТаб.Партнер);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросТаблицаСодержитЗаписи(ИмяТаблицы, ОписаниеОповещения)
	Если ЭтотОбъект[ИмяТаблицы].Количество() = 0 Тогда
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, Неопределено);
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещенияВопрос = Новый ОписаниеОповещения("ВопросТаблицаСодержитЗаписиЗавершение", ЭтотОбъект,
		Новый Структура("ИмяТаблицы, ОписаниеОповещения", ИмяТаблицы, ОписаниеОповещения));
	ПоказатьВопрос(ОписаниеОповещенияВопрос, НСтр("ru = 'Табличная часть уже содержит записи. 
						|Очистить табличную часть?'"), РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросТаблицаСодержитЗаписиЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЭтотОбъект[ДополнительныеПараметры.ИмяТаблицы].Очистить();
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОписаниеОповещения, Неопределено);
КонецПроцедуры

&НаСервере
Процедура УдалитьПартнеровСЗаполненнымиНеЗаполненнымиУровнямиДоступа(СЗаполненными = Истина)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партнеры.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	Справочник.Партнеры.CRM_УровниДоступа КАК ТаблицаУровниДоступа
	|ПО
	|	ТаблицаУровниДоступа.Ссылка = Партнеры.Ссылка
	|ГДЕ
	|	НЕ Партнеры.ЭтоГруппа
	|	И " + ?(СЗаполненными, " НЕ ", "") + "ТаблицаУровниДоступа.УровеньДоступа ЕСТЬ NULL
	|	
	|");
	МассивПартнеров = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Для Каждого ПартнерСсылка Из МассивПартнеров Цикл
		НайденныеСтроки = ТаблицаПартнеры.НайтиСтроки(Новый Структура("Партнер", ПартнерСсылка));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				ТаблицаПартнеры.Удалить(ТаблицаПартнеры.Индекс(НайденнаяСтрока));
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицу(ИмяТаблицы)
	Если ЭтотОбъект[ИмяТаблицы].Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОчиститьТаблицуЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Очистить таблицу?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицуЗавершение(Ответ, ИмяТаблицы) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЭтотОбъект[ИмяТаблицы].Очистить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПользователейСНезаполненнымиУровнямиДоступа()
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Пользователи
	|ГДЕ
	|	CRM_УровеньДоступа = ЗНАЧЕНИЕ(Справочник.CRM_УровниДоступа.ПустаяСсылка)
	|	И НЕ ПометкаУдаления
	|");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДобавитьПартнераПользователя(ЭтотОбъект, Выборка.Ссылка);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	Если Не ЗначениеЗаполнено(УровеньДоступа) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не выбран уровень доступа!'"));
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаПартнеры Цикл
		ПартнерОбъект = Неопределено;
		
		Если ОчищатьПередЗаполнением Тогда
			ПартнерОбъект = СтрокаТаблицы.Партнер.ПолучитьОбъект();
			ПартнерОбъект.CRM_УровниДоступа.Очистить();
			НоваяСтрока = ПартнерОбъект.CRM_УровниДоступа.Добавить();
			НоваяСтрока.УровеньДоступа = УровеньДоступа;
		Иначе
			НайденныеСтроки = СтрокаТаблицы.Партнер.CRM_УровниДоступа.НайтиСтроки(Новый Структура("УровеньДоступа", УровеньДоступа));
			Если НайденныеСтроки.Количество() = 0 Тогда
				ПартнерОбъект = СтрокаТаблицы.Партнер.ПолучитьОбъект();
				НоваяСтрока = ПартнерОбъект.CRM_УровниДоступа.Добавить();
				НоваяСтрока.УровеньДоступа = УровеньДоступа;
			КонецЕсли;
		КонецЕсли;
		
		Если ПартнерОбъект <> Неопределено Тогда
			ПартнерОбъект.ОбменДанными.Загрузка = Истина;
			ПартнерОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из ТаблицаПользователи Цикл
		Если СтрокаТаблицы.Пользователь.CRM_УровеньДоступа <> УровеньДоступа Тогда
			ПользовательОбъект = СтрокаТаблицы.Пользователь.ПолучитьОбъект();
			ПользовательОбъект.CRM_УровеньДоступа = УровеньДоступа;
			ПользовательОбъект.ОбменДанными.Загрузка = Истина;
			ПользовательОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере()
	Для Каждого СтрокаТаблицы Из ТаблицаПартнеры Цикл
		ПартнерОбъект = Неопределено;
		
		Если СтрокаТаблицы.Партнер.CRM_УровниДоступа.Количество() > 0 Тогда
			ПартнерОбъект = СтрокаТаблицы.Партнер.ПолучитьОбъект();
			ПартнерОбъект.CRM_УровниДоступа.Очистить();
		КонецЕсли;
		
		Если ПартнерОбъект <> Неопределено Тогда
			ПартнерОбъект.ОбменДанными.Загрузка = Истина;
			ПартнерОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из ТаблицаПользователи Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.Пользователь.CRM_УровеньДоступа) Тогда
			ПользовательОбъект = СтрокаТаблицы.Пользователь.ПолучитьОбъект();
			ПользовательОбъект.CRM_УровеньДоступа = Справочники.CRM_УровниДоступа.ПустаяСсылка();
			ПользовательОбъект.ОбменДанными.Загрузка = Истина;
			ПользовательОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеНаКлиенте(ФлагЗаполнить)
	Если ТаблицаПартнеры.Количество() = 0 И ТаблицаПользователи.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не выбрано ни одного клиента или пользователя!'"));
		Возврат Ложь;
	КонецЕсли;
	
	Если ФлагЗаполнить Тогда
		Если Не ЗначениеЗаполнено(УровеньДоступа) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не выбран уровень доступа!'"));
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	Если Не ПроверитьЗаполнениеНаКлиенте(Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаЗаполнитьЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Выбранным клиентам и пользователям будет назначен
						|уровень доступа '") + """" + Строка(УровеньДоступа) + """." + НСтр("ru = '
						|Продолжить?'"), РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Состояние(НСтр("ru = 'Заполняются уровни доступа...'"));
		ЗаполнитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаОчистить(Команда)
	Если Не ПроверитьЗаполнениеНаКлиенте(Ложь) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("КомандаОчиститьЗавершение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'У выбранных клиентов и пользователей будет очищен уровень доступа.
						|Продолжить?'"), РежимДиалогаВопрос.ДаНет);
КонецПроцедуры

&НаКлиенте
Процедура КомандаОчиститьЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Состояние(НСтр("ru = 'Очистка уровней доступа...'"));
		ОчиститьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодборПартнеров(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Ложь);
	ОткрытьФорму("Справочник.Партнеры.ФормаВыбора",ПараметрыФормы,Элементы.ТаблицаПартнеры,,);
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьПартнеровСЗаполненнымиУровнямиДоступа(Команда)
	Если ТаблицаПартнеры.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("КомандаУдалитьПартнеровСНеЗаполненнымиУровнямиДоступаЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Удалить клиентов с заполненными уровнями доступа?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаУдалитьПартнеровСНеЗаполненнымиУровнямиДоступаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УдалитьПартнеровСЗаполненнымиНеЗаполненнымиУровнямиДоступа(Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПартнерыОчистить(Команда)
	ОчиститьТаблицу("ТаблицаПартнеры");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСегменту(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоСегментуПродолжение", ЭтотОбъект);
	ВопросТаблицаСодержитЗаписи("ТаблицаПартнеры", ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСегментуПродолжение(Результат, ДополнительныеПараметры) Экспорт
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоСегментуЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.СегментыПартнеров.ФормаВыбора",, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСегментуЗавершение(Сегмент, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(Сегмент) Тогда
		ЗаполнитьТЧПоСегменту(Сегмент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппе(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоСегментуПродолжение", ЭтотОбъект);
	ВопросТаблицаСодержитЗаписи("ТаблицаПартнеры", ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе", Истина);
	ОткрытьФорму("Справочник.Партнеры.ФормаВыбораГруппы", ПараметрыФормы, ЭтотОбъект, ,);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРезультатамОтчета(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоРезультатамОтчетаПродолжение", ЭтотОбъект);
	ВопросТаблицаСодержитЗаписи("ТаблицаПартнеры", ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРезультатамОтчетаПродолжение(Результат, ДополнительныеПараметры) Экспорт
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоРезультатамОтчетаЗавершение", ЭтотОбъект);
	CRM_ОбщегоНазначенияКлиент.ОткрытьФормуЗаполненияПоРезультатамОтчета(ЭтотОбъект, ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоРезультатамОтчетаЗавершение(НаименованиеСохраненногоСписка, ДополнительныеПараметры) Экспорт
	Если НаименованиеСохраненногоСписка <> Неопределено Тогда
		СохраненныйСписок = CRM_ОбщегоНазначенияСервер.ПолучитьСохраненныйРезультатОтчетаПоНаименованию(НаименованиеСохраненногоСписка);
		Если СохраненныйСписок <> Неопределено Тогда
			ДопустимыеТипы = Новый ОписаниеТипов("СправочникСсылка.Партнеры");
			Для Каждого СтрокаСписка Из СохраненныйСписок Цикл
				Если ДопустимыеТипы.СодержитТип(ТипЗнч(СтрокаСписка.Значение)) Тогда
					ДобавитьПартнераПользователя(ЭтотОбъект, СтрокаСписка.Значение);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПартнерыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПользователиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбработкаВыбораНаСервере(ВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура ПользователиОчистить(Команда)
	ОчиститьТаблицу("ТаблицаПользователи");
КонецПроцедуры

&НаКлиенте
Процедура ПользователиПодбор(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",Ложь);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	Если ИспользоватьГруппыПользователей Тогда
		ПараметрыФормы.Вставить("ВыборГруппПользователей",	Истина);
	КонецЕсли;
	ОткрытьФорму("Справочник.Пользователи.Форма.ФормаСписка", ПараметрыФормы, Элементы.ТаблицаПользователи, , );
КонецПроцедуры

&НаКлиенте
Процедура ПользователиЗаполнитьПоГруппе(Команда)
	Если Не ИспользоватьГруппыПользователей Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отключена настройка ""Использовать группы пользователей""!'"), 10);
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПользователиЗаполнитьПоГруппеЗавершения", ЭтотОбъект);
	ВопросТаблицаСодержитЗаписи("ТаблицаПользователи", ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ПользователиЗаполнитьПоГруппеЗавершения(Результат, ДополнительныеПараметры) Экспорт
	ПараметрыФормы = Новый Структура("РежимВыбора,ЗакрыватьПриВыборе,ВыборГруппПользователей", Истина, Истина, Истина);
	ОткрытьФорму("Справочник.Пользователи.ФормаСписка", ПараметрыФормы, ЭтотОбъект, ,);
КонецПроцедуры

&НаКлиенте
Процедура ПользователиЗаполнитьСНезаполненнымиУровнямиДоступа(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ПользователиЗаполнитьСНезаполненнымиУровнямиДоступаЗавершение", ЭтотОбъект);
	ВопросТаблицаСодержитЗаписи("ТаблицаПользователи", ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ПользователиЗаполнитьСНезаполненнымиУровнямиДоступаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	ЗаполнитьПользователейСНезаполненнымиУровнямиДоступа();
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Партнеры")
		ИЛИ	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Пользователи")
		ИЛИ	ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		//
		ОбработкаВыбораНаСервере(ВыбранноеЗначение);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИспользоватьГруппыПользователей = ПолучитьФункциональнуюОпцию("ИспользоватьГруппыПользователей");
	Если Не ИспользоватьГруппыПользователей Тогда
		Элементы.ТаблицаПользователиПользователиЗаполнитьПоГруппе.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
