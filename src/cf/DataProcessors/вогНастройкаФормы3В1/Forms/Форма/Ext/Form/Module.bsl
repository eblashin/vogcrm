
// + Тищенко В.В.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ВидТорговойТочки = Параметры.ВидТорговойТочки;
	
	// Закрытие формы. Если не заполнен реквизит ВидТорговойТочки
	Отказ = НЕ ЗначениеЗаполнено(ВидТорговойТочки);
	
	//Заполненение таблицы Выбранные классификаоры
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	вогВидыТорговыхТочекКлассификаторы.Классификатор КАК Классификатор
	|ИЗ
	|	РегистрСведений.вогВидыТорговыхТочекКлассификаторы КАК вогВидыТорговыхТочекКлассификаторы
	|ГДЕ
	|	вогВидыТорговыхТочекКлассификаторы.ВидТорговойТочки = &ВидТорговойТочки
	|	И вогВидыТорговыхТочекКлассификаторы.РучноеЗаполнение");
	Запрос.УстановитьПараметр("ВидТорговойТочки",ВидТорговойТочки);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыбранныеКлассификаторы.Очистить();
		ВыбранныеКлассификаторы.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
	
	// Заполнение таблицы Классификаторы при записи
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	вогВидыТорговыхТочекКлассификаторы.Классификатор КАК Классификатор,
	|	вогВидыТорговыхТочекКлассификаторы.ЗначениеКлассификатора КАК ЗначениеКлассификатора,
	|	вогВидыТорговыхТочекКлассификаторы.Принадлежность КАК Принадлежность,
	|	вогВидыТорговыхТочекКлассификаторы.ЗначениеРеквизита КАК ЗначениеРеквизита,
	|	вогВидыТорговыхТочекКлассификаторы.Классификатор.ВидОтображения КАК ВидОтображения
	|ИЗ
	|	РегистрСведений.вогВидыТорговыхТочекКлассификаторы КАК вогВидыТорговыхТочекКлассификаторы
	|ГДЕ
	|	вогВидыТорговыхТочекКлассификаторы.ВидТорговойТочки = &ВидТорговойТочки
	|	И НЕ вогВидыТорговыхТочекКлассификаторы.РучноеЗаполнение");
	Запрос.УстановитьПараметр("ВидТорговойТочки",ВидТорговойТочки);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		КлассификаторыПриЗаписи.Очистить();
		КлассификаторыПриЗаписи.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
		
	//НастройкиФормы 			= Константы.вогНастройкиФормы3в1.Получить();
	//Если ЗначениеЗаполнено(НастройкиФормы) Тогда
	//	ТекущиеНастройки 	= ЗначениеИзСтрокиВнутр(НастройкиФормы);
	//	ОтборГруппСписокЗначенийКлассификаторов.ЗагрузитьЗначения(ТекущиеНастройки.ДоступныеКлассификаторы);
	//	Для каждого Стр Из ОтборГруппСписокЗначенийКлассификаторов Цикл
	//		СтрокаДобавления 				= ВыбранныеКлассификаторы.Добавить();
	//		СтрокаДобавления.Классификатор 	= Стр.Значение;
	//	КонецЦикла;
	//	Если ТекущиеНастройки.Свойство("КлассификаторыПризаписи") Тогда
	//		КлассификаторыПриЗаписи.Загрузить(ТекущиеНастройки.КлассификаторыПриЗаписи);
	//	КонецЕсли;
	//КонецЕсли;
		
	// Заполнение принадлежности
	Элементы.КлассификаторыПриЗаписиПринадлежность.СписокВыбора.Добавить("Справочник.вогТорговыеТочки"	,"Торговые точки",	,БиблиотекаКартинок.Справочник);
	Элементы.КлассификаторыПриЗаписиПринадлежность.СписокВыбора.Добавить("Справочник.Партнеры"			,"Клиенты",			,БиблиотекаКартинок.Справочник);
	
	УсловноеОформлениеФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
//Код процедур и функций
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ВыбранныеКлассификаторы

&НаКлиенте
Процедура ВыбранныеКлассификаторыПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элементы.ВыбранныеКлассификаторы.ТекущиеДанные;
	
	Если ТекДанные <> Неопределено Тогда
		ЭлементСписка = ОтборГруппСписокЗначенийКлассификаторов.НайтиПоЗначению(ТекДанные.Классификатор);
		Если ЭлементСписка <> Неопределено Тогда
			ОтборГруппСписокЗначенийКлассификаторов.Удалить(ЭлементСписка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_КлассификаторыПриЗаписи

&НаКлиенте
Процедура КлассификаторыПриЗаписиКлассификаторНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.КлассификаторыПриЗаписи.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.Принадлежность) Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Принадлежность"	,ТекущиеДанные.Принадлежность);
		ПараметрыФормы.Вставить("ВыбранныеГруппы"	,ОтборГруппСписокЗначенийКлассификаторовПриЗаписи.ВыгрузитьЗначения());
		
		Оповещение = Новый ОписаниеОповещения("НастроитьОтборПоКлассификаторамПриЗаписиЗавершение", ЭтотОбъект, Неопределено);
		ОткрытьФорму("ОбщаяФорма.CRM_ФормаПодбораЗначенийКлассификаторов", 
		ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КлассификаторыПриЗаписиЗначениеКлассификатораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	ТекущиеДанные 			= Элементы.КлассификаторыПриЗаписи.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		СписокВыбора 	= Новый СписокЗначений;
		СписокВыбора.ЗагрузитьЗначения(ПолучитьЗначенияКлассификатора(ТекущиеДанные.Классификатор,ТекущиеДанные.Принадлежность));
		ДанныеВыбора 	= СписокВыбора;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КлассификаторыПриЗаписиПередУдалением(Элемент, Отказ)
	
	ТекДанные = Элементы.КлассификаторыПриЗаписи.ТекущиеДанные;
	
	Если ТекДанные <> Неопределено Тогда
		ЭлементСписка = ОтборГруппСписокЗначенийКлассификаторовПриЗаписи.НайтиПоЗначению(ТекДанные.Классификатор);
		Если ЭлементСписка <> Неопределено Тогда
			ОтборГруппСписокЗначенийКлассификаторовПриЗаписи.Удалить(ЭлементСписка);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КлассификаторыПриЗаписиЗначениеКлассификатораПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.КлассификаторыПриЗаписи.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.ВидОтображения = ПредопределенноеЗначение("Перечисление.CRM_ВидыОтображенияКлассификаторов.ДополнительныйРеквизит") Тогда
			ТекущийТип = ОпределитьТипДополнительногоРеквизита(ТекущиеДанные.ЗначениеКлассификатора);
			Если вогОбщегоНазначенияВызовСервера.ЭтоПримитивныйТип(ТекущийТип) Тогда
				Элементы.КлассификаторыПриЗаписиЗначениеРеквизита.ОграничениеТипа 	= Новый ОписаниеТипов(ТекущийТип);
				Элементы.КлассификаторыПриЗаписиЗначениеРеквизита.ВыбиратьТип 		= Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписатьНастройки(Команда)
	ЗаписатьНастройкиСервер();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбратьКлассификаторы(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Принадлежность"	, "Справочник.вогТорговыеТочки");
	ПараметрыФормы.Вставить("ВыбранныеГруппы"	,ОтборГруппСписокЗначенийКлассификаторов.ВыгрузитьЗначения());
	
	Оповещение = Новый ОписаниеОповещения("НастроитьОтборПоКлассификаторамЗавершение", ЭтотОбъект, Неопределено);
	ОткрытьФорму("ОбщаяФорма.CRM_ФормаПодбораЗначенийКлассификаторов", 
					ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыбратьКлассификаторыПриЗаписи(Команда)
	
	//	ПараметрыФормы = Новый Структура;
	//ПараметрыФормы.Вставить("Принадлежность"	, "Справочник.вогТорговыеТочки");
	//ПараметрыФормы.Вставить("ВыбранныеГруппы"	,ОтборГруппСписокЗначенийКлассификаторовПриЗаписи.ВыгрузитьЗначения());
	//
	//Оповещение = Новый ОписаниеОповещения("НастроитьОтборПоКлассификаторамПриЗаписиЗавершение", ЭтотОбъект, Неопределено);
	//ОткрытьФорму("ОбщаяФорма.CRM_ФормаПодбораЗначенийКлассификаторов", 
	//				ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастроитьОтборПоКлассификаторамЗавершение(СтруктураЗначенийКлассификаторов, ДополнительныеПараметры) Экспорт

	Если СтруктураЗначенийКлассификаторов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтборГруппСписокЗначенийКлассификаторов.ЗагрузитьЗначения(СтруктураЗначенийКлассификаторов.ЗначениеГрупп);
	
	ВыбранныеКлассификаторы.Очистить();
	
	Для каждого Стр Из ОтборГруппСписокЗначенийКлассификаторов Цикл
		СтрокаДобавления = ВыбранныеКлассификаторы.Добавить();
		СтрокаДобавления.Классификатор = Стр.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОтборПоКлассификаторамПриЗаписиЗавершение(СтруктураЗначенийКлассификаторов, ДополнительныеПараметры) Экспорт

	Если СтруктураЗначенийКлассификаторов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтборГруппСписокЗначенийКлассификаторовПриЗаписи.ЗагрузитьЗначения(СтруктураЗначенийКлассификаторов.ЗначениеГрупп);
	
	Для каждого Стр Из ОтборГруппСписокЗначенийКлассификаторовПриЗаписи Цикл
		Если КлассификаторыПриЗаписи.НайтиСтроки(Новый Структура("Классификатор",Стр.Значение)).Количество() = 0 Тогда
			//СтрокаДобавления 				= КлассификаторыПриЗаписи.Добавить();
			//СтрокаДобавления.Классификатор 	= Стр.Значение;
			ТекущиеДанные = Элементы.КлассификаторыПриЗаписи.ТекущиеДанные;
			Если ТекущиеДанные <> Неопределено Тогда
				ТекущиеДанные.Классификатор 	= Стр.Значение;
				ТекущиеДанные.ВидОтображения 	= вогОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Стр.Значение,"ВидОтображения",Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиСервер()

	//НастройкиФормы = Новый Структура;
	//НастройкиФормы.Вставить("ДоступныеКлассификаторы",ОтборГруппСписокЗначенийКлассификаторов.ВыгрузитьЗначения());
	//НастройкиФормы.Вставить("КлассификаторыПриЗаписи",КлассификаторыПриЗаписи.Выгрузить());
	//Константы.вогНастройкиФормы3в1.Установить(ЗначениеВСтрокуВнутр(НастройкиФормы));
	
	НаборЗаписей = РегистрыСведений.вогВидыТорговыхТочекКлассификаторы.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ВидТорговойТочки.Установить(ВидТорговойТочки);
	
	// Добавление в набор записей выбранных классификаторов
	// Ручное указание значений на форме вогФормаБыстрогоВвода (Торговые точки)
	Для каждого Стр Из ВыбранныеКлассификаторы Цикл
		ЭлементНабораЗаписей 					= НаборЗаписей.Добавить();
		ЭлементНабораЗаписей.ВидТорговойТочки 	= ВидТорговойТочки;
		ЭлементНабораЗаписей.Классификатор 		= Стр.Классификатор;
		ЭлементНабораЗаписей.РучноеЗаполнение 	= Истина;
	КонецЦикла;
	
	// Добавление в набор записей выбранных классификаторов
	// Автоматическое добавление значений при создании объектов из формы вогФормаБыстрогоВвода (Торговые точки)
	Для каждого Стр Из КлассификаторыПриЗаписи Цикл
		Если НЕ ЗначениеЗаполнено(Стр.ЗначениеКлассификатора) Тогда Продолжить; КонецЕсли;
		ЭлементНабораЗаписей 							= НаборЗаписей.Добавить();
		ЭлементНабораЗаписей.ВидТорговойТочки 			= ВидТорговойТочки;
		ЭлементНабораЗаписей.Классификатор 				= Стр.Классификатор;
		ЭлементНабораЗаписей.РучноеЗаполнение 			= Ложь;
		ЭлементНабораЗаписей.ЗначениеКлассификатора 	= Стр.ЗначениеКлассификатора;
		ЭлементНабораЗаписей.Принадлежность				= Стр.Принадлежность;
		ЭлементНабораЗаписей.ЗначениеРеквизита			= ?(НЕ ЗначениеЗаполнено(Стр.ЗначениеРеквизита),"",Стр.ЗначениеРеквизита);
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначенияКлассификатора(ТекущийКлассификатор,ИмяТаблицы)

	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	CRM_ЗначенияКлассификаторов.Владелец КАК Классификатор,
	|	CRM_ЗначенияКлассификаторов.Ссылка КАК Значение,
	|	CRM_ЗначенияКлассификаторов.Владелец.ВидОтображения КАК ВидОтображения,
	|	CRM_ЗначенияКлассификаторов.Владелец.СпособФормирования КАК СпособФормирования,
	|	CRM_ЗначенияКлассификаторов.ДополнительныйРеквизит КАК ДополнительныйРеквизит,
	|	CRM_ЗначенияКлассификаторов.Описание КАК Описание
	|ИЗ
	|	Справочник.CRM_ЗначенияКлассификаторов КАК CRM_ЗначенияКлассификаторов
	|ГДЕ
	|	CRM_ЗначенияКлассификаторов.Владелец В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				CRM_КлассификаторыПринадлежность.Ссылка
	|			ИЗ
	|				ПланВидовХарактеристик.CRM_Классификаторы.Принадлежность КАК CRM_КлассификаторыПринадлежность
	|			ГДЕ
	|				CRM_КлассификаторыПринадлежность.ИмяТаблицы В (&Принадлежность))
	|	И CRM_ЗначенияКлассификаторов.Владелец = &Владелец
	|
	|УПОРЯДОЧИТЬ ПО
	|	CRM_ЗначенияКлассификаторов.Владелец.РеквизитДопУпорядочивания,
	|	CRM_ЗначенияКлассификаторов.РеквизитДопУпорядочивания");
	Запрос.УстановитьПараметр("Владелец",ТекущийКлассификатор);
	Запрос.УстановитьПараметр("Принадлежность",ИмяТаблицы);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Значение");
	
КонецФункции

&НаСервере
Процедура УсловноеОформлениеФормы()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНекорректногоКонтрагента);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.АльтернативныйЦветФонаПоля);

	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<Не используется>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	ЭлементыУсловия 				= Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементыУсловия.ВидСравнения 	= ВидСравненияКомпоновкиДанных.НеРавно;
	ЭлементыУсловия.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных ("КлассификаторыПриЗаписи.ВидОтображения");
	ЭлементыУсловия.ПравоеЗначение 	= Перечисления.CRM_ВидыОтображенияКлассификаторов.ДополнительныйРеквизит;
	
	ПолеЭлемента 					= Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле 				= Новый ПолеКомпоновкиДанных("КлассификаторыПриЗаписиЗначениеРеквизита");
	
КонецПроцедуры

&НаСервере
Функция ОпределитьТипДополнительногоРеквизита(ТекущийКлассификатор)

	Возврат ТекущийКлассификатор.ДополнительныйРеквизит.ТипЗначения;

КонецФункции

#КонецОбласти

// - Тищенко В.В.