
///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьСписокЗадачНаСервере(Отбор = Неопределено)
	СхемаКомпоновкиДанных = Обработки.CRM_Календарь.ПолучитьМакет("СписокЗадач");
	КомпоновщикНастроекСписокЗадач = Новый КомпоновщикНастроекКомпоновкиДанных();
	КомпоновщикНастроекСписокЗадач.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	
	НастройкиСКД = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	НастройкиСКД.Отбор.Элементы.Очистить();
	
	Если ТипЗнч(Отбор) = Тип("ОтборКомпоновкиДанных") Тогда
		CRM_ОбщегоНазначенияКлиентСервер.СкопироватьОтборКомпоновкиДанных(НастройкиСКД.Отбор.Элементы, Отбор.Элементы, КомпоновщикНастроекСписокЗадач.Настройки.Отбор.ДоступныеПоляОтбора);
	ИначеЕсли ТипЗнч(Отбор) = Тип("Структура") Тогда
		Для Каждого КлючЗначение Из Отбор Цикл
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(НастройкиСКД.Отбор, КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(НастройкиСКД.Отбор, "Личная", Истина);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиСКД,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки);
	
	РезультатТаблица = Новый ТаблицаЗначений();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(РезультатТаблица);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных, Ложь);
	
	ДеревоЗадачи = РеквизитФормыВЗначение("ДеревоСписокЗадач");
	ДеревоЗадачи.Строки.Очистить();
	Дерево = ДеревоЗадачи.Скопировать();
	
	Обработки.CRM_Календарь.СформироватьДеревоЗадач(РезультатТаблица, ДеревоЗадачи);
	
	НоваяСтрока = Дерево.Строки.Добавить();
	НоваяСтрока.Наименование = НСтр("ru = 'Личные задачи'");
	НоваяСтрока.Ссылка = ПредопределенноеЗначение("Задача.ЗадачаИсполнителя.ПустаяСсылка");
	НоваяСтрока.ПроцентВыполненияЗадачиИндексКартинки = -1;
	Обработки.CRM_Календарь.СкопироватьВеткуДерева(ДеревоЗадачи.Строки, НоваяСтрока.Строки);
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоСписокЗадач");
КонецПроцедуры

&НаКлиенте
Процедура Выбор()
	ТекСтрока = Элементы.СписокЗадач.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда Возврат; КонецЕсли;
	
	ТекДанные = ДеревоСписокЗадач.НайтиПоИдентификатору(ТекСтрока);
	Если ТекДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	ПараметрЗакрытия = Новый Структура();
	ПараметрЗакрытия.Вставить("Ссылка",		ТекДанные.Ссылка);
	ПараметрЗакрытия.Вставить("Партнер",	ТекДанные.Партнер);
	ПараметрЗакрытия.Вставить("Проект",		ТекДанные.Проект);
	Закрыть(ПараметрЗакрытия);
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСписокЗадач()
	Строки = ДеревоСписокЗадач.ПолучитьЭлементы();
	Для Каждого Строка Из Строки Цикл
		Элементы.СписокЗадач.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ

&НаКлиенте
Процедура КомандаВыбрать(Команда)
	Выбор();
КонецПроцедуры

&НаКлиенте
Процедура СписокЗадачВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Выбор();
КонецПроцедуры

&НаКлиенте
Процедура КомандаВключитьОтключитьОтбор(Команда)
	Элементы.ФормаКомандаВключитьОтключитьОтбор.Пометка = Не Элементы.ФормаКомандаВключитьОтключитьОтбор.Пометка;
	
	Отбор = Неопределено;
	Если Элементы.ФормаКомандаВключитьОтключитьОтбор.Пометка Тогда
		Если ЭтоАдресВременногоХранилища(АдресОтбора) Тогда
			Отбор = ПолучитьИзВременногоХранилища(АдресОтбора);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьСписокЗадачНаСервере(Отбор);
	РазвернутьСписокЗадач();
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьБизнесПроцессыИЗадачи") Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Использование бизнес процессов и задач отключено в настройках системы.'"));
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Отбор") Тогда
		АдресОтбора = ПоместитьВоВременноеХранилище(Параметры.Отбор, УникальныйИдентификатор);
		Элементы.ФормаКомандаВключитьОтключитьОтбор.Пометка = Истина;
		
		ОбновитьСписокЗадачНаСервере(Параметры.Отбор);
	Иначе
		Элементы.ФормаКомандаВключитьОтключитьОтбор.Видимость = Ложь;
		
		ОбновитьСписокЗадачНаСервере();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
