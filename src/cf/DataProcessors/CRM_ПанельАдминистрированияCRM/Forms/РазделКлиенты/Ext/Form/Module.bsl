

&НаКлиенте
Перем ОбновитьИнтерфейс;

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// поиск дублей
	Элементы.ГруппаРеквизитыПоискаДублей.Доступность = Константы.CRM_ВыполнятьПоискДублейПриЗаписиПартнера.Получить();
	
	ЗначениеХранилища = Константы.CRM_РеквизитыПоискаДублейПартнеров.Получить();
	РеквизитыПоиска = ЗначениеХранилища.Получить();
	Если РеквизитыПоиска <> Неопределено И (ТипЗнч(РеквизитыПоиска) = Тип("СписокЗначений")) И (НЕ РеквизитыПоиска.Количество() = 0) Тогда
		
		РеквизитыПоискаДублейПартнеров = РеквизитыПоиска;
		
	Иначе
		ЗаполнитьРеквизитыПоиска();
	КонецЕсли;
	
	Элементы.CRM_ИспользоватьМониторПоказателей.Доступность = CRM_ЛицензированиеСервер.ВариантПоставкиКОРП();
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПриЗакрытии".
//
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ОбработкаОповещения".
//
// Параметры:
//	ИмяСобытия - Строка - обрабатывается только событие Запись_НаборКонстант, генерируемое панелями администрирования.
//	Параметр   - Структура - содержит имена констант, подчиненных измененной константе, "вызвавшей" оповещение.
//	Источник   - Строка - имя измененной константы, "вызвавшей" оповещение.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_НаборКонстант" Тогда
		Возврат; // Такие событие не обрабатываются.
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область СлужебныеПроцедурыИФункции

#Область Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
		ОбновитьИнтерфейс = Истина;
		#КонецЕсли
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	#Если НЕ ВебКлиент Тогда
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти // Клиент

#Область ВызовСервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

#КонецОбласти // ВызовСервера

#Область Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

#КонецОбласти // Сервер

#КонецОбласти // СлужебныеПроцедурыИФункции


#Область Клиенты

&НаКлиенте
Процедура ОткрытьВидыКИ(Команда)
	ОткрытьФорму("Справочник.ВидыКонтактнойИнформации.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыСвязейКлиентов(Команда)
	ОткрытьФорму("Справочник.ВидыСвязейМеждуПартнерами.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКЛ(Команда)
	ОткрытьФорму("Справочник.КонтактныеЛицаПартнеров.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРолиКЛ(Команда)
	ОткрытьФорму("Справочник.РолиКонтактныхЛицПартнеров.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДолжности(Команда)
	ОткрытьФорму("Справочник.CRM_Должности.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБизнесРегионы(Команда)
	ОткрытьФорму("Справочник.БизнесРегионы.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтрасли(Команда)
	ОткрытьФорму("Справочник.CRM_Отрасли.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ИспользоватьВидыДеятельностиУПартнеровПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыПоиска()
	
	РеквизитыПоискаДублейПартнеров.Добавить("Наименование;ПОДОБНО","Наименование");
	РеквизитыПоискаДублейПартнеров.Добавить("НаименованиеПолное;ПОДОБНО","Наименование полное");
	РеквизитыПоискаДублейПартнеров.Добавить("CRM_ИНН;=","ИНН");
	РеквизитыПоискаДублейПартнеров.Добавить("Контакт_Адрес;ПОДОБНО","Адрес");
	РеквизитыПоискаДублейПартнеров.Добавить("Контакт_АдресЭлектроннойПочты;ПОДОБНО","Email");
	РеквизитыПоискаДублейПартнеров.Добавить("Контакт_Телефон;ПОДОБНО","Телефон");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьПоискДублейПриЗаписиПартнераПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	Элементы.ГруппаРеквизитыПоискаДублей.Доступность = НаборКонстант.CRM_ВыполнятьПоискДублейПриЗаписиПартнера;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьРеквизитыПоискаДублейПартнеров(РеквизитыПоискаДублейПартнеров)
	Константы.CRM_РеквизитыПоискаДублейПартнеров.Установить(Новый ХранилищеЗначения(РеквизитыПоискаДублейПартнеров));
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыПоискаДублейПартнеровПометкаПриИзменении(Элемент)
	ЗаписатьРеквизитыПоискаДублейПартнеров(РеквизитыПоискаДублейПартнеров);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ВестиИсториюРеквизитовКлиентовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ВестиИсториюРеквизитовКлиентовExtendedTooltipОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если НаборКонстант.CRM_ВестиИсториюРеквизитовКлиентов Тогда
		ОткрытьФорму("РегистрСведений.CRM_НастройкаВерсионированияРеквизитовПартнеров.Форма.НастройкаВерсионирования",, ЭтотОбъект);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ведение истории реквизитов отключено.'"), СтатусСообщения.Важное);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура CRM_ОсновнойВидEmailКонтактаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ОсновнойВидТелефонаКонтактаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти // Клиенты

#Область Продажи

&НаКлиенте
Процедура ОткрытьВоронкиПродаж(Команда)
	ОткрытьФорму("Справочник.CRM_ВоронкиПродаж.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВажностьКлиентов(Команда)
	ОткрытьФорму("Справочник.CRM_ВажностьКлиентов.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСтатусыРаботыСКлиентами(Команда)
	ОткрытьФорму("Справочник.CRM_СтатусыРаботыСКлиентом.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСегментыРынка(Команда)
	ОткрытьФорму("Справочник.CRM_СегментыРынка.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЧисленностьСотрудников(Команда)
	ОткрытьФорму("Справочник.CRM_ЧисленностьСотрудниковКлиента.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЧисленностьРабочихМест(Команда)
	ОткрытьФорму("Справочник.CRM_ЧисленностьРабочихМестКлиента.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТипыУслуг(Команда)
	ОткрытьФорму("Справочник.CRM_ТипУслуги.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПотенциальныеКлиенты(Команда)
	ОткрытьФорму("Справочник.CRM_ПотенциальныеКлиенты.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыВзаимодействий(Команда)
	ОткрытьФорму("Справочник.CRM_ВидыВзаимодействий.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСостоянияИнтересов(Команда)
	ОткрытьФорму("Справочник.CRM_СостоянияИнтересов.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ПечататьНомераДокументовБезПрефиксовПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ИспользоватьКоммерческиеПредложенияПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ПланироватьПродажиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныОтказовПоИнтересам(Команда)
	ОткрытьФорму("Справочник.CRM_ПричиныОтказаПоИнтересам.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТовары(Команда)
	ОткрытьФорму("Справочник.Номенклатура.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРазделители(Команда)
	ОткрытьФорму("Справочник.CRM_Разделители.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура CRM_РазрешатьСозданиеИнтересовПоОдномуТипуУслугиПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти // Продажи

#Область УправлениеПоказателями

&НаКлиенте
Процедура CRM_ИспользоватьМониторПоказателейПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиПортрета(Команда)
	ОткрытьФорму("РегистрСведений.CRM_РасположениеРеквизитовКлиентов.Форма.ФормаНастройки", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ГлубинаПересчетаПоказателейПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти // УправлениеПоказателями
