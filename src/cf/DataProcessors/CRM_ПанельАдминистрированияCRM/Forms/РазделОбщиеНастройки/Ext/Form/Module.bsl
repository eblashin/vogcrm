
&НаКлиенте
Перем ОбновитьИнтерфейс;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОсновнаяОрганизация = CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию();
	УстановитьЗаголовокСсылкиОрганизаций();

	УчетВалютныхОпераций = НаборКонстант.ФункциональнаяУчетВалютныхОпераций;
	Элементы.ВалютаУправленческогоУчета.ТолькоПросмотр				= НЕ УчетВалютныхОпераций;
	Элементы.ВалютаУправленческогоУчета.АвтоВыборНезаполненного	= УчетВалютныхОпераций;
	Элементы.ВалютаУправленческогоУчета.АвтоОтметкаНезаполненного	= УчетВалютныхОпераций;
	
	Элементы.CRM_ИспользоватьПодсистемуУправленияПроектами.Доступность = CRM_ЛицензированиеСервер.ВариантПоставкиКОРП();
	// Обновление состояния элементов.
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Если ОбновлятьИнтерфейс Тогда
		ОбновитьИнтерфейс = Истина;
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 2, Истина);
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбщегоНазначенияКлиент.ОбновитьИнтерфейсПрограммы();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вызов сервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
КонецПроцедуры

#КонецОбласти

#Область CRM_Настройки

&НаКлиенте
Процедура CRM_НачалоРабочегоДняПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_КонецРабочегоДняПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_НачалоОбедаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_КонецОбедаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаСервере
Функция ОтказСнятиеУчетПоНесколькимОрганизациям() 
	
	Отказ = Ложь;
	
	ОсновнаяОрганизация = CRM_ОбщегоНазначенияСервер.ПолучитьПредопределеннуюОрганизацию();
	
	ВыборкаОрганизации = Справочники.Организации.Выбрать();
	Пока ВыборкаОрганизации.Следующий() Цикл
		
		Если ВыборкаОрганизации.Ссылка <> ОсновнаяОрганизация Тогда
			
			МассивСсылок = Новый Массив;
			МассивСсылок.Добавить(ВыборкаОрганизации.Ссылка);
			ТаблицаСсылок = НайтиПоСсылкам(МассивСсылок);
			
			Если ТаблицаСсылок.Количество() > 0 Тогда
				
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = НСтр("ru = 'В базе используются организации, отличные от основной! Снятие опции запрещено!'");	
				Сообщение.Поле = "НаборКонстант.ФункциональнаяОпцияУчетПоНесколькимОрганизациям";
				Сообщение.Сообщить();
				
				Отказ = Истина;
				Прервать;
			
			КонецЕсли;
		
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат Отказ;
	
КонецФункции  // ОтказСнятиеУчетПоНесколькимОрганизациям()

&НаКлиенте
Процедура СправочникОрганизации(Команда)
	
	Если Модифицированность Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Данные еще не записаны! Переход к редактированию справочника ""Организации"" возможен только после записи данных!'");	
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли; 
	
	Если НаборКонстант.ФункциональнаяОпцияУчетПоНесколькимОрганизациям Тогда
		ОткрытьФорму("Справочник.Организации.ФормаСписка");
	Иначе
		
		ПараметрОрганизация = Новый Структура("Ключ", ОсновнаяОрганизация);
		
		Форма = ПолучитьФорму("Справочник.Организации.ФормаОбъекта", ПараметрОрганизация);
		Форма.Открыть();
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция МожноОтключитьКонстантуУчетПоНесколькимОрганизациям()
	
	// Если присутствуют ссылки на организацию, не равную основной организации, то нельзя снять флаг
	// УчетПоНесколькимОрганизациям.
	Если Константы.ФункциональнаяОпцияУчетПоНесколькимОрганизациям.Получить() <> НаборКонстант.ФункциональнаяОпцияУчетПоНесколькимОрганизациям
		И (НЕ НаборКонстант.ФункциональнаяОпцияУчетПоНесколькимОрганизациям) И ОтказСнятиеУчетПоНесколькимОрганизациям() Тогда
		НаборКонстант.ФункциональнаяОпцияУчетПоНесколькимОрганизациям = Истина;
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановитьЗаголовокСсылкиОрганизаций()
	
	Если НаборКонстант.ФункциональнаяОпцияУчетПоНесколькимОрганизациям Тогда
		Элементы.СправочникОрганизации.Заголовок = "Просмотр и редактирование списка организаций";
	Иначе
		Элементы.СправочникОрганизации.Заголовок = "Просмотр и редактирование параметров организации";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФункциональнаяОпцияУчетПоНесколькимОрганизациямПриИзменении(Элемент)
	
	Если МожноОтключитьКонстантуУчетПоНесколькимОрганизациям() Тогда
		Подключаемый_ПриИзмененииРеквизита(Элемент);
	КонецЕсли;
	УстановитьЗаголовокСсылкиОрганизаций();
	
КонецПроцедуры

&НаКлиенте
Процедура CRM_ОсновнойПроизводственныйКалендарьПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура НациональнаяВалютаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ВалютаУчетаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПроизводственныеКалендари(Команда)
	ОткрытьФорму("Справочник.ПроизводственныеКалендари.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВалюты(Команда)
	ОткрытьФорму("Справочник.Валюты.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

#КонецОбласти // CRM_Настройки

//+вог
&НаКлиенте
Процедура ОткрытьНастройкиПараметровКонтроля(Команда)
	//>>Бей(22.05.2019 17:56:10):#335
	//ОткрытьФорму("ОбщаяФорма.вогФормаНастройкиПараметровКонтроляЗаполненностиРеквизитов", , ЭтотОбъект);
	ОткрытьФорму("Справочник.вогПоказателиЗаполнености.ФормаСписка", , ЭтотОбъект);
	//<<Бей(22.05.2019 17:56:14):#335
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРазделыКарточекОбъектов(Команда)
	ОткрытьФорму("Справочник.вогРазделыКарточекОбъектов.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры
//-вог