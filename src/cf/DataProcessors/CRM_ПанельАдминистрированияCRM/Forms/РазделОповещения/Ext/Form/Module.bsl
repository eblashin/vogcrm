&НаКлиенте
Перем ОбновитьИнтерфейс;

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьДоступность();
	
	ЗаполнитьСписокНомеровОповещений();
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПриЗакрытии".
//
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ОбработкаОповещения".
//
// Параметры:
//	ИмяСобытия - Строка - обрабатывается только событие Запись_НаборКонстант, генерируемое панелями администрирования.
//	Параметр   - Структура - содержит имена констант, подчиненных измененной константе, "вызвавшей" оповещение.
//	Источник   - Строка - имя измененной константы, "вызвавшей" оповещение.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_НаборКонстант" Тогда
		Возврат; // Такие событие не обрабатываются.
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура CRM_ИспользоватьНапоминанияПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ПериодВыводаНезавершенныхОповещенийПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ПериодПроверкиНовыхНапоминанийПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ИспользоватьОповещенияЭлектроннаяПочтаПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_УчетнаяЗаписьОповещенийПриИзменении(Элемент)
	Если Не ПроверитьУчетнуюЗаписьОповещений() Тогда Возврат; КонецЕсли;
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_ИспользоватьОповещенияСМСПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_НомерТелефонаОповещенийПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_НомерТелефонаОповещенийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗаполнитьСписокНомеровОповещений();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокНомеровОповещений()
	Элементы.CRM_НомерТелефонаОповещений.СписокВыбора.Очистить();
	ТекПровайдерSMS = Константы.ПровайдерSMS.Получить();
	Если ТекПровайдерSMS = Перечисления.ПровайдерыSMS.SMS4B Тогда
		Элементы.CRM_НомерТелефонаОповещений.Видимость = Истина;	
		НомераОтправителя	= Константы.sms4bНомераОтправителя.Получить();
		МассивНомеров		= ОтправкаSMSЧерезSMS4B.ПолучитьМассивНомеровИзСтроки(НомераОтправителя);
		Для Каждого Номер Из МассивНомеров Цикл
			Если НЕ ПустаяСтрока(Номер) Тогда
				Элементы.CRM_НомерТелефонаОповещений.СписокВыбора.Добавить(Номер);
			КонецЕсли; 
		КонецЦикла; 
		Если Элементы.CRM_НомерТелефонаОповещений.СписокВыбора.НайтиПоЗначению(НаборКонстант.CRM_НомерТелефонаОповещений) = Неопределено Тогда
			НаборКонстант.CRM_НомерТелефонаОповещений = "";
		КонецЕсли;	
	Иначе
		Элементы.CRM_НомерТелефонаОповещений.Видимость = Ложь;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура CRM_ПериодОповещенияОПросроченныхСобытияхПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура CRM_УчетнаяЗаписьОповещенийОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если НЕ ПроверитьЧтоУчетнаяЗаписьИспользуетсяДляОтправки(ВыбранноеЗначение) Тогда
		ПоказатьПредупреждение(,Нстр("ru = 'В данной учётной записи отключена отправка писем!'"));
		СтандартнаяОбработка = Ложь;				
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура CRM_СпособОтправкиОповещенийПоЭлектроннойПочтеПриИзменении(Элемент)
	Если Не ПроверитьУчетнуюЗаписьОповещений() Тогда Возврат; КонецЕсли;
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
		ОбновитьИнтерфейс = Истина;
		#КонецЕсли
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	#Если НЕ ВебКлиент Тогда
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЧтоУчетнаяЗаписьИспользуетсяДляОтправки(УчетнаяЗапись)
	Возврат УчетнаяЗапись.ИспользоватьДляОтправки;
КонецФункции

#КонецОбласти

#Область ВызовСервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	УстановитьДоступность(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

#КонецОбласти

#Область Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	Иначе
		//// Определение имени и запись значения реквизита в соответствующей константе из "НаборКонстант".
		//// Используется для тех реквизитов формы, которые связаны с константами напрямую (в отношении один-к-одному).
		//Если РеквизитПутьКДанным = "ВключитьВерсионированиеУстановкиЦенНоменклатуры" Тогда
		//	НаборКонстант.ИспользоватьВерсионированиеОбъектов = Истина;
		//	КонстантаИмя = "ИспользоватьВерсионированиеОбъектов";
		//КонецЕсли;
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
		//Если ОбщегоНазначенияУТПовтИсп.ЕстьПодчиненныеКонстанты(КонстантаИмя, КонстантаЗначение) Тогда
		//	Прочитать();
		//КонецЕсли;
		
		//СтандартныеПодсистемыКлиентСервер.РезультатВыполненияДобавитьОповещениеОткрытыхФорм(Результат,
		//	"Запись_НаборКонстант", ОбщегоНазначенияУТПовтИсп.ПолучитьСтруктуруПодчиненныхКонстант(КонстантаИмя), КонстантаИмя);
		//// СтандартныеПодсистемы.ВариантыОтчетов
		//ВариантыОтчетов.ДобавитьОповещениеПриИзмененииЗначенияКонстанты(Результат, КонстантаМенеджер);
		//// Конец СтандартныеПодсистемы.ВариантыОтчетов
	КонецЕсли;
	
	//Если РеквизитПутьКДанным = "ВключитьВерсионированиеУстановкиЦенНоменклатуры" Тогда
	//	
	//	ОбъектыДляВерсионирования = Новый Соответствие;
	//	ОбъектыДляВерсионирования.Вставить("Документ.УстановкаЦенНоменклатуры", "ВерсионироватьПриЗаписи");
	//	
	//	Результат.Вставить("ВерсионированиеВключено",
	//		ОбщегоНазначенияУТ.ВключитьВерсионированиеОбъектов(ОбъектыДляВерсионирования));
	//
	//КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

&НаСервере
Процедура УстановитьДоступность(РеквизитПутьКДанным = "")
	
	Если РеквизитПутьКДанным = "НаборКонстант.CRM_ИспользоватьНапоминания" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы.CRM_ПериодПроверкиНовыхНапоминаний.Доступность   = НаборКонстант.CRM_ИспользоватьНапоминания;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.CRM_ИспользоватьОповещенияЭлектроннаяПочта" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы.CRM_УчетнаяЗаписьОповещений.Доступность   = НаборКонстант.CRM_ИспользоватьОповещенияЭлектроннаяПочта;
		Элементы.CRM_СпособОтправкиОповещенийПоЭлектроннойПочте.Доступность   = НаборКонстант.CRM_ИспользоватьОповещенияЭлектроннаяПочта;
	КонецЕсли;
	
	Если РеквизитПутьКДанным = "НаборКонстант.CRM_ИспользоватьОповещенияСМС" ИЛИ РеквизитПутьКДанным = "" Тогда
		Элементы.CRM_НомерТелефонаОповещений.Доступность   = НаборКонстант.CRM_ИспользоватьОповещенияСМС;
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьУчетнуюЗаписьОповещений()
	Если НаборКонстант.CRM_СпособОтправкиОповещенийПоЭлектроннойПочте = Перечисления.CRM_СпособыОтправкиРассылок.UniSender
		И НЕ CRM_ИнтеграцияСUniSenderКлиентСервер.UniSenderПроверитьАдресУчетнойЗаписи(НаборКонстант.CRM_УчетнаяЗаписьОповещений.АдресЭлектроннойПочты) Тогда
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

#КонецОбласти

#КонецОбласти