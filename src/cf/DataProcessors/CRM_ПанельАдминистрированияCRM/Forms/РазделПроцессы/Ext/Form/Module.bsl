&НаКлиенте
Перем ОбновитьИнтерфейс;

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ГруппаНастройкиБП.Доступность = НЕ CRM_ЛицензированиеСервер.ВариантПоставкиСТАРТ();
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПриЗакрытии".
//
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	ОбновитьИнтерфейсПрограммы();
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ОбработкаОповещения".
//
// Параметры:
//	ИмяСобытия - Строка - обрабатывается только событие Запись_НаборКонстант, генерируемое панелями администрирования.
//	Параметр   - Структура - содержит имена констант, подчиненных измененной константе, "вызвавшей" оповещение.
//	Источник   - Строка - имя измененной константы, "вызвавшей" оповещение.
//
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "Запись_НаборКонстант" Тогда
		Возврат; // Такие событие не обрабатываются.
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область СлужебныеПроцедурыИФункции

#Область Клиент

&НаКлиенте
Процедура Подключаемый_ПриИзмененииРеквизита(Элемент, ОбновлятьИнтерфейс = Истина)
	
	КонстантаИмя = ПриИзмененииРеквизитаСервер(Элемент.Имя);
	
	Если ОбновлятьИнтерфейс Тогда
		#Если НЕ ВебКлиент Тогда
		ПодключитьОбработчикОжидания("ОбновитьИнтерфейсПрограммы", 1, Истина);
		ОбновитьИнтерфейс = Истина;
		#КонецЕсли
	КонецЕсли;
	
	Если КонстантаИмя <> "" Тогда
		Оповестить("Запись_НаборКонстант", Новый Структура, КонстантаИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсПрограммы()
	
	#Если НЕ ВебКлиент Тогда
	Если ОбновитьИнтерфейс = Истина Тогда
		ОбновитьИнтерфейс = Ложь;
		ОбновитьИнтерфейс();
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти // Клиент

#Область ВызовСервера

&НаСервере
Функция ПриИзмененииРеквизитаСервер(ИмяЭлемента)
	
	РеквизитПутьКДанным = Элементы[ИмяЭлемента].ПутьКДанным;
	КонстантаИмя = СохранитьЗначениеРеквизита(РеквизитПутьКДанным);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	Возврат КонстантаИмя;
	
КонецФункции

#КонецОбласти // ВызовСервера

#Область Сервер

&НаСервере
Функция СохранитьЗначениеРеквизита(РеквизитПутьКДанным)
	
	// Сохранение значений реквизитов, не связанных с константами напрямую (в отношении один-к-одному).
	Если РеквизитПутьКДанным = "" Тогда
		Возврат "";
	КонецЕсли;
	
	// Определение имени константы.
	КонстантаИмя = "";
	Если НРег(Лев(РеквизитПутьКДанным, 14)) = НРег("НаборКонстант.") Тогда
		// Если путь к данным реквизита указан через "НаборКонстант".
		КонстантаИмя = Сред(РеквизитПутьКДанным, 15);
	КонецЕсли;
	
	// Сохранения значения константы.
	Если КонстантаИмя <> "" Тогда
		КонстантаМенеджер = Константы[КонстантаИмя];
		КонстантаЗначение = НаборКонстант[КонстантаИмя];
		
		Если КонстантаМенеджер.Получить() <> КонстантаЗначение Тогда
			КонстантаМенеджер.Установить(КонстантаЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат КонстантаИмя;
	
КонецФункции

#КонецОбласти // Сервер

#КонецОбласти // СлужебныеПроцедурыИФункции

#Область Процессы

&НаКлиенте
Процедура ИспользоватьПорученияПриИзменении(Элемент)
	
	Элементы.ИзменятьЗаданияЗаднимЧислом.Доступность 		= НаборКонстант.CRM_ИспользоватьБизнесПроцессы;
	Элементы.ИспользоватьДатуИВремяВСрокахЗадач.Доступность = НаборКонстант.CRM_ИспользоватьБизнесПроцессы;
	Подключаемый_ПриИзмененииРеквизита(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменятьЗаданияЗаднимЧисломПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДатуИВремяВСрокахЗадачПриИзменении(Элемент)
	Подключаемый_ПриИзмененииРеквизита(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРолиИсполнителей(Команда)
	ОткрытьФорму("Справочник.РолиИсполнителей.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныОтказов(Команда)
	ОткрытьФорму("Справочник.CRM_ПричиныОтказов.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыОбъекктовБП(Команда)
	ОткрытьФорму("ПланВидовХарактеристик.CRM_ВидыОбъектовБизнесПроцессов.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВариантыЗавершенияБП(Команда)
	ОткрытьФорму("Справочник.CRM_ВариантыЗавершенияБизнесПроцесса.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКартыМаршрутов(Команда)
	ОткрытьФорму("Справочник.CRM_КартыМаршрутов.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПроекты(Команда)
	ОткрытьФорму("Справочник.Проекты.ФормаСписка", , ЭтотОбъект);
КонецПроцедуры

#КонецОбласти // Процессы

