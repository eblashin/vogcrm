
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - МЕХАНИЗМЫ ЗАПОЛНЕНИЯ ТАБЛИЦЫ СЕРВЕР

&НаСервере
Процедура ЗаполнитьЦеныНоменлатурыВпервые(Период, ПараметрВидЦен, ПараметрЦеноваяГруппа, ПараметрНоменклатура)
	
	Если ЗначениеЗаполнено(ПараметрВидЦен) Тогда
	
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЦеныНоменклатурыСрезПоследних.Номенклатура,
		               |	ЦеныНоменклатурыСрезПоследних.Характеристика,
		               |	ЦеныНоменклатурыСрезПоследних.Цена,
		               |	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения,
		               |	ИСТИНА КАК Пометка
		               |ИЗ
		               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		               |			&Период,
		               |			ВидЦен = &ВидЦен
		               |				И ВЫБОР
		               |					КОГДА &Номенклатура = НЕОПРЕДЕЛЕНО
		               |							ИЛИ Номенклатура = &Номенклатура
		               |						ТОГДА ИСТИНА
		               |					ИНАЧЕ ЛОЖЬ
		               |				КОНЕЦ
		               |				И ВЫБОР
		               |					КОГДА &ЦеноваяГруппа = НЕОПРЕДЕЛЕНО
		               |							ИЛИ Номенклатура.ЦеноваяГруппа = &ЦеноваяГруппа
		               |						ТОГДА ИСТИНА
		               |					ИНАЧЕ ЛОЖЬ
		               |				КОНЕЦ) КАК ЦеныНоменклатурыСрезПоследних
		               |ГДЕ
		               |	ЦеныНоменклатурыСрезПоследних.Актуальность
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ЦеныНоменклатурыСрезПоследних.Номенклатура.Наименование";
			
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.УстановитьПараметр("ВидЦен", ПараметрВидЦен);
		Запрос.УстановитьПараметр("Номенклатура", ПараметрНоменклатура);
		Запрос.УстановитьПараметр("ЦеноваяГруппа", ПараметрЦеноваяГруппа);
		ЦеныНоменлатуры.Загрузить(Запрос.Выполнить().Выгрузить());	
	
	Иначе
	
		Если ЗначениеЗаполнено(ПараметрНоменклатура) ИЛИ ЗначениеЗаполнено(ПараметрЦеноваяГруппа) Тогда
		
			Запрос = Новый Запрос();
			Запрос.Текст = "ВЫБРАТЬ
			               |	СправочникНоменклатура.Ссылка КАК Номенклатура,
			               |	ИСТИНА КАК Пометка,
			               |	СправочникНоменклатура.ЕдиницаИзмерения
			               |ИЗ
			               |	Справочник.Номенклатура КАК СправочникНоменклатура
			               |ГДЕ
			               |	ВЫБОР
			               |			КОГДА &ЦеноваяГруппа = НЕОПРЕДЕЛЕНО
			               |					ИЛИ СправочникНоменклатура.ЦеноваяГруппа = &ЦеноваяГруппа
			               |				ТОГДА ИСТИНА
			               |			ИНАЧЕ ЛОЖЬ
			               |		КОНЕЦ
			               |	И ВЫБОР
			               |			КОГДА &Номенклатура = НЕОПРЕДЕЛЕНО
			               |					ИЛИ СправочникНоменклатура.Ссылка = &Номенклатура
			               |				ТОГДА ИСТИНА
			               |			ИНАЧЕ ЛОЖЬ
			               |		КОНЕЦ
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	СправочникНоменклатура.Наименование";
				
			Запрос.УстановитьПараметр("Номенклатура", ПараметрНоменклатура);
			Запрос.УстановитьПараметр("ЦеноваяГруппа", ПараметрЦеноваяГруппа);
			ЦеныНоменлатуры.Загрузить(Запрос.Выполнить().Выгрузить());		
		
		КонецЕсли; 	
	
	КонецЕсли;		
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуНоменклатуры(Кратко = Ложь)

	ТаблицаНоменклатуры = Новый ТаблицаЗначений;
       
    Массив = Новый Массив;
	
	Массив.Добавить(Тип("СправочникСсылка.Номенклатура"));
	ОписаниеТипов = Новый ОписаниеТипов(Массив, ,);
	Массив.Очистить();

	ТаблицаНоменклатуры.Колонки.Добавить("Номенклатура", ОписаниеТипов);
	
	Массив.Добавить(Тип("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ОписаниеТипов = Новый ОписаниеТипов(Массив, ,);
	Массив.Очистить();

	ТаблицаНоменклатуры.Колонки.Добавить("Характеристика", ОписаниеТипов);
	
	Если НЕ Кратко Тогда
	
		Массив.Добавить(Тип("Булево"));
		ОписаниеТипов = Новый ОписаниеТипов(Массив, ,);
		Массив.Очистить();

		ТаблицаНоменклатуры.Колонки.Добавить("Пометка", ОписаниеТипов);
		
		Массив.Добавить(Тип("СправочникСсылка.ЕдиницыИзмерения"));
		Массив.Добавить(Тип("СправочникСсылка.КлассификаторЕдиницИзмерения"));
		ОписаниеТипов = Новый ОписаниеТипов(Массив, ,);
		Массив.Очистить();

		ТаблицаНоменклатуры.Колонки.Добавить("ЕдиницаИзмерения", ОписаниеТипов);
		
		КЧ = Новый КвалификаторыЧисла(15,2);
		Массив.Добавить(Тип("Число"));
		ОписаниеТипов = Новый ОписаниеТипов(Массив, , , КЧ);

		ТаблицаНоменклатуры.Колонки.Добавить("Цена", ОписаниеТипов);
		
		Массив.Добавить(Тип("Число"));
		ОписаниеТипов = Новый ОписаниеТипов(Массив, , );

		ТаблицаНоменклатуры.Колонки.Добавить("Коэффициент", ОписаниеТипов);	
	
	КонецЕсли; 
	
	Для каждого СтрокаТЧ Из ЦеныНоменлатуры Цикл
		Если Не ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
			Продолжить;		
		КонецЕсли; 
		НоваяСтрока = ТаблицаНоменклатуры.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
		Если НЕ Кратко Тогда
			Если ТипЗнч(СтрокаТЧ.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
				НоваяСтрока.Коэффициент = 1;
			Иначе
				НоваяСтрока.Коэффициент = СтрокаТЧ.ЕдиницаИзмерения.Коэффициент;
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат ТаблицаНоменклатуры;

КонецФункции // ПолучитьТаблицуНоменклатуры()

&НаСервере
Процедура ДобавитьНоменклатуру(ТаблицаНоменклатуры)

	Для каждого СтрокаТаблицы Из ТаблицаНоменклатуры Цикл
	
		НоваяСтрока = ЦеныНоменлатуры.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	
	КонецЦикла; 	

КонецПроцедуры // ДобавитьНоменклатуру()

&НаСервере
Процедура ЗаполнитьПоЦеновымГруппамНаСервере(ВыбранноеЗначение)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СправочникНоменклатура.Ссылка КАК Номенклатура,
	               |	ИСТИНА КАК Пометка,
	               |	СправочникНоменклатура.ЕдиницаИзмерения
	               |ИЗ
	               |	Справочник.Номенклатура КАК СправочникНоменклатура
	               |ГДЕ
	               |	СправочникНоменклатура.ЦеноваяГруппа В(&ЦеновыеГруппы)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СправочникНоменклатура.ЦеноваяГруппа";
		
	Запрос.УстановитьПараметр("ЦеновыеГруппы", ВыбранноеЗначение);
	ЦеныНоменлатуры.Загрузить(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПоЦеновымГруппамНаСервере(ВыбранноеЗначение)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ТаблицаНоменклатуры
	               |ИЗ
	               |	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СправочникНоменклатура.Ссылка КАК Номенклатура,
	               |	ИСТИНА КАК Пометка,
	               |	СправочникНоменклатура.ЕдиницаИзмерения
	               |ИЗ
	               |	Справочник.Номенклатура КАК СправочникНоменклатура
	               |ГДЕ
	               |	СправочникНоменклатура.ЦеноваяГруппа В(&ЦеновыеГруппы)
	               |	И (НЕ СправочникНоменклатура.Ссылка В
	               |				(ВЫБРАТЬ
	               |					Таблица.Номенклатура
	               |				ИЗ
	               |					ТаблицаНоменклатуры КАК Таблица))
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СправочникНоменклатура.ЦеноваяГруппа";
		
	Запрос.УстановитьПараметр("ЦеновыеГруппы", ВыбранноеЗначение);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", ПолучитьТаблицуНоменклатуры(Истина));
	ДобавитьНоменклатуру(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоГруппамНоменклатурыНаСервере(ВыбранноеЗначение)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	ИСТИНА КАК Пометка,
	|	СправочникНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО СправочникНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	СправочникНоменклатура.Ссылка В ИЕРАРХИИ(&ГруппыНоменклатуры)
	|	И НЕ СправочникНоменклатура.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	СправочникНоменклатура.Родитель";
		
	Запрос.УстановитьПараметр("ГруппыНоменклатуры", ВыбранноеЗначение);
	ЦеныНоменлатуры.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПоГруппамНоменклатурыНаСервере(ВыбранноеЗначение)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	ИСТИНА КАК Пометка,
	|	СправочникНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО СправочникНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	СправочникНоменклатура.Ссылка В ИЕРАРХИИ(&ГруппыНоменклатуры)
	|	И НЕ СправочникНоменклатура.Ссылка В
	|				(ВЫБРАТЬ
	|					Таблица.Номенклатура
	|				ИЗ
	|					ТаблицаНоменклатуры КАК Таблица)
	|	И НЕ СправочникНоменклатура.ЭтоГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	СправочникНоменклатура.Родитель";
		
	Запрос.УстановитьПараметр("ГруппыНоменклатуры", ВыбранноеЗначение);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", ПолучитьТаблицуНоменклатуры(Истина));
	ДобавитьНоменклатуру(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатуруПоВидуЦенНаСервере(ПараметрыЗаполнения)
	
	ДинамическийВидЦен = ПараметрыЗаполнения.ВидЦен.РассчитываетсяДинамически;
	Если ДинамическийВидЦен Тогда
		ПараметрВидЦен = ПараметрыЗаполнения.ВидЦен.БазовыйВидЦен;		
	Иначе	
	    ПараметрВидЦен = ПараметрыЗаполнения.ВидЦен;
	КонецЕсли; 
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ИСТИНА КАК Пометка,
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Характеристика,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&НаДату, ВидЦен = &ВидЦен) КАК ЦеныНоменклатурыСрезПоследних
	|ГДЕ
	|	ЦеныНоменклатурыСрезПоследних.Актуальность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("ВидЦен", ПараметрВидЦен);
	Запрос.УстановитьПараметр("НаДату", ПараметрыЗаполнения.НаДату);
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	Если ДинамическийВидЦен И ТаблицаРезультат.Количество() > 0 Тогда
		
		Наценка = ПараметрыЗаполнения.ВидЦен.Процент;
		ПорядокОкругления = ПараметрыЗаполнения.ВидЦен.ПорядокОкругления;
		ОкруглятьВБольшуюСторону = ПараметрыЗаполнения.ВидЦен.ОкруглятьВБольшуюСторону;
	
		Для каждого СтрокаТаблицы Из ТаблицаРезультат Цикл
			
			Цена = СтрокаТаблицы.Цена;
			СтрокаТаблицы.Цена = Цена * (1 + Наценка / 100);	
		
		КонецЦикла; 
	
	КонецЕсли; 
	
	ЦеныНоменлатуры.Загрузить(ТаблицаРезультат);	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - МЕХАНИЗМЫ ЗАПОЛНЕНИЯ ЦЕН

&НаСервере
Процедура ПодставитьЦены(ТаблицаЦен)

	Для каждого СтрокаТабЧасти Из ЦеныНоменлатуры Цикл
		
		Если НЕ СтрокаТабЧасти.Пометка Тогда
			Продолжить;		
		КонецЕсли; 
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура",	 СтрокаТабЧасти.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика",	 СтрокаТабЧасти.Характеристика);
		СтруктураПоиска.Вставить("ЕдиницаИзмерения", СтрокаТабЧасти.ЕдиницаИзмерения);
		
		РезультатПоиска = ТаблицаЦен.НайтиСтроки(СтруктураПоиска);
		Если РезультатПоиска.Количество() > 0 Тогда			
			СтрокаТабЧасти.Цена = РезультатПоиска[0].Цена;
		КонецЕсли;
		
	КонецЦикла;	

КонецПроцедуры // ПодставитьЦены()

&НаСервере
Процедура ЗаполнитьЦеныПоВидуЦенНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	               |	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	               |	ТаблицаНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ТаблицаНоменклатуры.Коэффициент КАК Коэффициент,
	               |	ТаблицаНоменклатуры.Пометка КАК Пометка
	               |ПОМЕСТИТЬ ТаблицаНоменклатуры
	               |ИЗ
	               |	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |ГДЕ
	               |	ТаблицаНоменклатуры.Пометка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	               |	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	               |	ВЫБОР
	               |		КОГДА ЦеныНоменклатурыСрезПоследних.Актуальность
	               |			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * КурсВалютыВидЦен.Курс * КурсВалютыВидаЦенУстановки.Кратность / (КурсВалютыВидаЦенУстановки.Курс * КурсВалютыВидЦен.Кратность) * ЕСТЬNULL(ТаблицаНоменклатуры.Коэффициент, 1) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Цена,
	               |	ТаблицаНоменклатуры.ЕдиницаИзмерения
	               |ИЗ
	               |	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&НаДату,
	               |				ВидЦен = &ВидЦен
	               |					И (Номенклатура, Характеристика) В
	               |						(ВЫБРАТЬ
	               |							Таблица.Номенклатура,
	               |							Таблица.Характеристика
	               |						ИЗ
	               |							ТаблицаНоменклатуры КАК Таблица)) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО ТаблицаНоменклатуры.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |			И ТаблицаНоменклатуры.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&НаДату, ) КАК КурсВалютыВидЦен
	               |		ПО (ЦеныНоменклатурыСрезПоследних.ВидЦен.ВалютаЦены = КурсВалютыВидЦен.Валюта),
	               |	РегистрСведений.КурсыВалют.СрезПоследних(&НаДату, Валюта = &Валюта) КАК КурсВалютыВидаЦенУстановки";
		
	Запрос.УстановитьПараметр("НаДату", Период);
	Запрос.УстановитьПараметр("ВидЦен", ВидЦен);
	Запрос.УстановитьПараметр("Валюта", ВидЦенУстановки.ВалютаЦены);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", ПолучитьТаблицуНоменклатуры());
	ПодставитьЦены(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры


&НаСервере
Процедура РассчитатьПоБазовомуВидуЦенНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	               |	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	               |	ТаблицаНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ТаблицаНоменклатуры.Коэффициент КАК Коэффициент,
	               |	ТаблицаНоменклатуры.Пометка КАК Пометка
	               |ПОМЕСТИТЬ ТаблицаНоменклатуры
	               |ИЗ
	               |	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |ГДЕ
	               |	ТаблицаНоменклатуры.Пометка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	               |	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	               |	ВЫБОР
	               |		КОГДА ЦеныНоменклатурыСрезПоследних.Актуальность
	               |			ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена * (1 + &Наценка / 100) * КурсВалютыВидЦен.Курс * КурсВалютыВидаЦенУстановки.Кратность / (КурсВалютыВидаЦенУстановки.Курс * КурсВалютыВидЦен.Кратность) * ЕСТЬNULL(ТаблицаНоменклатуры.Коэффициент, 1) / ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1), 0)
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Цена,
	               |	ТаблицаНоменклатуры.ЕдиницаИзмерения
	               |ИЗ
	               |	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&НаДату,
	               |				ВидЦен = &ВидЦен
	               |					И (Номенклатура, Характеристика) В
	               |						(ВЫБРАТЬ
	               |							Таблица.Номенклатура,
	               |							Таблица.Характеристика
	               |						ИЗ
	               |							ТаблицаНоменклатуры КАК Таблица)) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО ТаблицаНоменклатуры.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |			И ТаблицаНоменклатуры.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&НаДату, ) КАК КурсВалютыВидЦен
	               |		ПО (ЦеныНоменклатурыСрезПоследних.ВидЦен.ВалютаЦены = КурсВалютыВидЦен.Валюта),
	               |	РегистрСведений.КурсыВалют.СрезПоследних(&НаДату, Валюта = &Валюта) КАК КурсВалютыВидаЦенУстановки";
		
	Запрос.УстановитьПараметр("НаДату", Период);
	Запрос.УстановитьПараметр("ВидЦен", БазовыйВидЦен);
	Запрос.УстановитьПараметр("Валюта", ВидЦенУстановки.ВалютаЦены);
	Запрос.УстановитьПараметр("Наценка", Наценка);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", ПолучитьТаблицуНоменклатуры());
	ПодставитьЦены(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНаПроцентНаКлиенте()
	
	Для каждого СтрокаТЧ Из ЦеныНоменлатуры Цикл
		
		Если СтрокаТЧ.Пометка Тогда
			
			Если ПлюсМинус = "+" Тогда
				Цена = СтрокаТЧ.Цена * (1 + Процент / 100);	
		    Иначе
				Цена = СтрокаТЧ.Цена * (1 - Процент / 100);
			КонецЕсли;
			
			СтрокаТЧ.Цена = Цена;
			
		КонецЕсли;		
	
	КонецЦикла; 	
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНаСуммуНаКлиенте()
	
	Для каждого СтрокаТЧ Из ЦеныНоменлатуры Цикл
		
		Если СтрокаТЧ.Пометка Тогда
			
			Если ПлюсМинус = "+" Тогда
				Цена = СтрокаТЧ.Цена + Сумма;	
		    Иначе
				Цена = СтрокаТЧ.Цена - Сумма;
			КонецЕсли;
			
			СтрокаТЧ.Цена = Цена;
			
		КонецЕсли;		
	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОкруглитьНаКлиенте()
	
	Для каждого СтрокаТЧ Из ЦеныНоменлатуры Цикл
		
		СтрокаТЧ.Цена = ОкруглитьЦену(СтрокаТЧ.Цена, ПорядокОкругления, ОкруглятьВБольшуюСторону, ПорядокОкругления0_01);
			
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура СнятьАктуальностьНаСервере()
	
	УстановитьНаСервере(Истина);	
	
КонецПроцедуры

&НаСервере
Процедура УдалитьЗаписиПрайсЛистаНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	               |	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	               |	ТаблицаНоменклатуры.Пометка КАК Пометка
	               |ПОМЕСТИТЬ ТаблицаНоменклатуры
	               |ИЗ
	               |	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |ГДЕ
	               |	ТаблицаНоменклатуры.Пометка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	               |	ЦеныНоменклатурыСрезПоследних.Характеристика КАК Характеристика,
	               |	ЦеныНоменклатурыСрезПоследних.Период
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |			&НаДату,
	               |			ВидЦен = &ВидЦен
	               |				И (Номенклатура, Характеристика) В
	               |					(ВЫБРАТЬ
	               |						Таблица.Номенклатура,
	               |						Таблица.Характеристика
	               |					ИЗ
	               |						ТаблицаНоменклатуры КАК Таблица)) КАК ЦеныНоменклатурыСрезПоследних";
		
	Запрос.УстановитьПараметр("ВидЦен", ВидЦенУстановки);
	Запрос.УстановитьПараметр("НаДату", ПериодУстановки);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", ПолучитьТаблицуНоменклатуры());
	
	Выборка = Запрос.Выполнить().Выбрать();
    	
	Пока Выборка.Следующий() Цикл
	
		НаборЗаписей = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.ВидЦен.Установить(ВидЦенУстановки);
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
		НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
		
		НаборЗаписей.Записать();
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Номенклатура", Выборка.Номенклатура);
		СтруктураОтбора.Вставить("Характеристика", Выборка.Характеристика);
		СтруктураОтбора.Вставить("Пометка", Истина);
		МассивСтрок = ЦеныНоменлатуры.НайтиСтроки(СтруктураОтбора);
		
		Для каждого НайденнаяСтрока Из МассивСтрок Цикл			
			НайденнаяСтрока.Картинка = 1;
		КонецЦикла;
			
	КонецЦикла;	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - УСТАНОВКИ ЦЕН

&НаСервере
Процедура УстановитьНаСервере(СнимаемАктуальность = Ложь)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	               |	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	               |	ТаблицаНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ТаблицаНоменклатуры.Цена КАК Цена,
	               |	ТаблицаНоменклатуры.Пометка КАК Пометка
	               |ПОМЕСТИТЬ ТаблицаНоменклатуры
	               |ИЗ
	               |	&ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	               |	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	               |	ТаблицаНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	ТаблицаНоменклатуры.Цена КАК Цена,
	               |	ВЫБОР
	               |		КОГДА ЦеныНоменклатуры.ВидЦен ЕСТЬ NULL 
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК Дубль
	               |ИЗ
	               |	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |		ПО ТаблицаНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	               |			И ТаблицаНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
	               |			И (ЦеныНоменклатуры.ВидЦен = &ВидЦен)
	               |			И (ЦеныНоменклатуры.Период = &НаДату)
	               |ГДЕ
	               |	ТаблицаНоменклатуры.Пометка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВложенныйЗапрос.Номенклатура,
	               |	ВложенныйЗапрос.Характеристика,
	               |	ВложенныйЗапрос.Счетчик
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	               |		ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	               |		СУММА(1) КАК Счетчик
	               |	ИЗ
	               |		ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	               |	ГДЕ
	               |		ТаблицаНоменклатуры.Пометка
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ТаблицаНоменклатуры.Характеристика,
	               |		ТаблицаНоменклатуры.Номенклатура) КАК ВложенныйЗапрос
	               |ГДЕ
	               |	ВложенныйЗапрос.Счетчик > 1";
		
	Запрос.УстановитьПараметр("ВидЦен", ВидЦенУстановки);
	Запрос.УстановитьПараметр("НаДату", ПериодУстановки);
	Запрос.УстановитьПараметр("ТаблицаНоменклатуры", ПолучитьТаблицуНоменклатуры());
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Проверка на дубли. При наличии дублей - отказ!	
	Выборка = МассивРезультатов[2].Выбрать();
	Отказ = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Дублируется строка: %Номенклатура%%Характеристика%!'");
		Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%Номенклатура%", Выборка.Номенклатура);
		Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%Характеристика%", ?(ЗначениеЗаполнено(Выборка.Характеристика), 
										(" (" + Выборка.Характеристика + ")"), ""));
		Сообщение.Сообщить();
		Отказ = Истина;
		
	КонецЦикла;
	
	Если Отказ Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Установка цен отменена!'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	// Установка цен	
	Выборка = МассивРезультатов[1].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Дубль Тогда
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Для номенклатуры %Номенклатура%%Характеристика% на %НаДату% уже установлена цена! Новая цена не записана!'");
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%НаДату%", Формат(ПериодУстановки, "ДФ=dd.MM.yy"));
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%Номенклатура%", Выборка.Номенклатура);
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%Характеристика%", ?(ЗначениеЗаполнено(Выборка.Характеристика), 
										 (" (" + Выборка.Характеристика + ")"), ""));
			Сообщение.Сообщить();
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Номенклатура", Выборка.Номенклатура);
			СтруктураОтбора.Вставить("Характеристика", Выборка.Характеристика);
			СтруктураОтбора.Вставить("Пометка", Истина);
			МассивСтрок = ЦеныНоменлатуры.НайтиСтроки(СтруктураОтбора);
			
			Для каждого НайденнаяСтрока Из МассивСтрок Цикл			
				НайденнаяСтрока.Картинка = 2;	
			КонецЦикла;
		
		ИначеЕсли НЕ ЗначениеЗаполнено(Выборка.Цена) И (НЕ СнимаемАктуальность) Тогда
			
			Сообщение = Новый СообщениеПользователю();
			Сообщение.Текст = НСтр("ru = 'Для номенклатуры %Номенклатура%%Характеристика% не указана цена!'");
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%Номенклатура%", Выборка.Номенклатура);
			Сообщение.Текст = СтрЗаменить(Сообщение.Текст, "%Характеристика%", ?(ЗначениеЗаполнено(Выборка.Характеристика), 
										 (" (" + Выборка.Характеристика + ")"), ""));
			Сообщение.Сообщить();
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Номенклатура", Выборка.Номенклатура);
			СтруктураОтбора.Вставить("Характеристика", Выборка.Характеристика);
			СтруктураОтбора.Вставить("Пометка", Истина);
			МассивСтрок = ЦеныНоменлатуры.НайтиСтроки(СтруктураОтбора);
			
			Для каждого НайденнаяСтрока Из МассивСтрок Цикл			
				НайденнаяСтрока.Картинка = 2;	
			КонецЦикла;
		
		Иначе
		
			НаборЗаписей = РегистрыСведений.ЦеныНоменклатуры.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Период.Установить(ПериодУстановки);
			НаборЗаписей.Отбор.ВидЦен.Установить(ВидЦенУстановки);
			НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура);
			НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.Период = ПериодУстановки;
			НоваяЗапись.ВидЦен = ВидЦенУстановки;
			Если СнимаемАктуальность Тогда			
				НоваяЗапись.Актуальность = Ложь;
				НоваяЗапись.Цена = 0;
			Иначе
				НоваяЗапись.Актуальность = Истина;
				НоваяЗапись.Цена = ОкруглитьЦену(НоваяЗапись.Цена, ПорядокОкругленияУстановки, ОкруглятьВБольшуюСторонуУстановки, ПорядокОкругления0_01);
			КонецЕсли; 
			НоваяЗапись.Автор = Автор;
			НаборЗаписей.Записать();	
			
			СтруктураОтбора = Новый Структура;
			СтруктураОтбора.Вставить("Номенклатура", Выборка.Номенклатура);
			СтруктураОтбора.Вставить("Характеристика", Выборка.Характеристика);
			СтруктураОтбора.Вставить("Пометка", Истина);
			МассивСтрок = ЦеныНоменлатуры.НайтиСтроки(СтруктураОтбора);
			
			Для каждого НайденнаяСтрока Из МассивСтрок Цикл			
				НайденнаяСтрока.Картинка = 1;
				НайденнаяСтрока.Цена = НоваяЗапись.Цена;
			КонецЦикла; 
			
		КонецЕсли;		
	
	КонецЦикла; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ДРУГИЕ ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОчиститьТабличнуюЧасть(ОписаниеОповещенияОЗавершении)
	
	Если ЦеныНоменлатуры.Количество() = 0 Тогда
		ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Истина);
		Возврат;
	КонецЕсли; 
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОчиститьТабличнуюЧастьЗавершение", ЭтотОбъект, ОписаниеОповещенияОЗавершении);
	ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Табличная часть будет очищена! Продолжить выполнение операции?'"), РежимДиалогаВопрос.ДаНет, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТабличнуюЧастьЗавершение(Ответ, ОписаниеОповещенияОЗавершении) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЦеныНоменлатуры.Очистить();
		ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Истина);	
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗавершении, Ложь);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОкруглитьЦену(Число, ПравилоОкругления, ОкруглятьВБольшуюСторону, ПорядокОкругления0_01)
	
	Перем Результат; // Возвращаемый результат.
	
	// Преобразуем порядок округления числа.
	// Если передали пустое значение порядка, то округлим до копеек. 
	Если НЕ ЗначениеЗаполнено(ПравилоОкругления) Тогда
		ПорядокОкругления = ПорядокОкругления0_01; 
	Иначе
		ПорядокОкругления = ПравилоОкругления;
	КонецЕсли;
	Порядок = Число(Строка(ПорядокОкругления));
	
	// Вычислим количество интервалов, входящих в число.
	КоличествоИнтервал	= Число / Порядок;
	
	// Вычислим целое количество интервалов.
	КоличествоЦелыхИнтервалов = Цел(КоличествоИнтервал);
	
	Если КоличествоИнтервал = КоличествоЦелыхИнтервалов Тогда
		
		// Числа поделились нацело. Округлять не нужно.
		Результат	= Число;
	Иначе
		Если ОкруглятьВБольшуюСторону Тогда
			
			// При порядке округления "0.05" 0.371 должно округлиться до 0.4.
			Результат = Порядок * (КоличествоЦелыхИнтервалов + 1);
		Иначе
			
			// При порядке округления "0.05" 0.371 должно округлиться до 0.35,
			// а 0.376 до 0.4
			Результат = Порядок * Окр(КоличествоИнтервал, 0, РежимОкругления.Окр15как20);
		КонецЕсли; 
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ОкруглитьЦену()

&НаСервереБезКонтекста
// Получает набор данных с сервера для процедуры НоменклатураПриИзменении.
//
Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	СтруктураДанные.Вставить("ЕдиницаИзмерения", СтруктураДанные.Номенклатура.ЕдиницаИзмерения);
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

&НаСервереБезКонтекста
// Получает набор данных с сервера для процедуры ЕдиницаИзмеренияНачалоВыбораИзСписка.
//
Функция ПолучитьДанныеЕдиницаИзмеренияНачалоВыбораИзСписка(Номенклатура)
	
	СписокЕдиницаИзмерения = Новый СписокЗначений();
	СтруктураДанные = Новый Структура;
	
	СтруктураДанные.Вставить("СписокЕдиницаИзмерения", СписокЕдиницаИзмерения);
	
	СписокЕдиницаИзмерения.Добавить(Номенклатура.ЕдиницаИзмерения, Номенклатура.ЕдиницаИзмерения.Наименование + " (ед. хранения)");
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить(Номенклатура);
	МассивОтбора.Добавить(Номенклатура.НоменклатурнаяГруппа);
	
	Родитель = Номенклатура.НоменклатурнаяГруппа.Родитель;
	
	Пока Истина Цикл
		Если НЕ ЗначениеЗаполнено(Родитель) Тогда
			Прервать;
		Иначе
			МассивОтбора.Добавить(Родитель);
		КонецЕсли;
		Родитель = Родитель.Родитель;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Владелец В(&Номенклатура)";
	
	Запрос.УстановитьПараметр("Номенклатура", МассивОтбора);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокЕдиницаИзмерения.Добавить(Выборка.ЕдиницаИзмерения);
	КонецЦикла;
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеЕдиницаИзмеренияНачалоВыбораИзСписка()

&НаСервереБезКонтекста
// Получает набор данных с сервера для процедуры ЕдиницаИзмеренияПриИзменении.
//
Функция ПолучитьДанныеЕдиницаИзмеренияПриИзменении(ТекущаяЕдиницаИзмерения = Неопределено, ЕдиницаИзмерения = Неопределено)
	
	СтруктураДанные = Новый Структура;
	
	Если ТекущаяЕдиницаИзмерения = Неопределено Тогда
		СтруктураДанные.Вставить("ТекущийКоэффициент", 1);
	Иначе
		СтруктураДанные.Вставить("ТекущийКоэффициент", ТекущаяЕдиницаИзмерения.Коэффициент);
	КонецЕсли;
	
	Если ЕдиницаИзмерения = Неопределено Тогда
		СтруктураДанные.Вставить("Коэффициент", 1);
	Иначе
		СтруктураДанные.Вставить("Коэффициент", ЕдиницаИзмерения.Коэффициент);
	КонецЕсли;
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеЕдиницаИзмеренияПриИзменении()

&НаСервереБезКонтекста
Процедура ПолучитьРеквизитыВидаЦенНаСервере(СтруктураВидЦен)
	
    СтруктураВидЦен.Вставить("ОкруглятьВБольшуюСторону", СтруктураВидЦен.ВидЦен.ОкруглятьВБольшуюСторону);
	СтруктураВидЦен.Вставить("ПорядокОкругления", СтруктураВидЦен.ВидЦен.ПорядокОкругления);
	СтруктураВидЦен.Вставить("БазовыйВидЦен", СтруктураВидЦен.ВидЦен.БазовыйВидЦен);
	СтруктураВидЦен.Вставить("Наценка", СтруктураВидЦен.ВидЦен.Процент);  	

КонецПроцедуры // ПолучитьРеквизитыВидаЦенНаСервере()
 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ И КОМАНД

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("НаДату") И ЗначениеЗаполнено(Параметры.НаДату) Тогда		
		Период = Параметры.НаДату;
		ПериодУстановки = Параметры.НаДату;
	Иначе		
		Период = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
		ПериодУстановки = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	КонецЕсли; 
	Если Параметры.Свойство("ВидЦен") И ЗначениеЗаполнено(Параметры.ВидЦен) Тогда
		
		ПараметрВидЦен = Параметры.ВидЦен;
		
		Если ПараметрВидЦен.РассчитываетсяДинамически Тогда
			
			Сообщение 		= Новый СообщениеПользователю;
			Сообщение.Текст = "Нельзя формировать динамические виды цен!";
			Сообщение.Сообщить();
			
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
		
		ВидЦенУстановки = Параметры.ВидЦен;
		ПорядокОкругленияУстановки = Параметры.ВидЦен.ПорядокОкругления;
		ОкруглятьВБольшуюСторонуУстановки = Параметры.ВидЦен.ОкруглятьВБольшуюСторону;
		ПорядокОкругления = Параметры.ВидЦен.ПорядокОкругления;
		ОкруглятьВБольшуюСторону = Параметры.ВидЦен.ОкруглятьВБольшуюСторону;
		БазовыйВидЦен = Параметры.ВидЦен.БазовыйВидЦен;
		Наценка = Параметры.ВидЦен.Процент;	
	Иначе
		ПараметрВидЦен = Неопределено;
		ВидЦенУстановки = Справочники.ВидыЦен.Оптовая;
		ПорядокОкругленияУстановки = Справочники.ВидыЦен.Оптовая.ПорядокОкругления;
		ОкруглятьВБольшуюСторонуУстановки = Справочники.ВидыЦен.Оптовая.ОкруглятьВБольшуюСторону;
		ПорядокОкругления = Справочники.ВидыЦен.Оптовая.ПорядокОкругления;
		ОкруглятьВБольшуюСторону = Справочники.ВидыЦен.Оптовая.ОкруглятьВБольшуюСторону;
		БазовыйВидЦен = Справочники.ВидыЦен.Оптовая.БазовыйВидЦен;
		Наценка = Справочники.ВидыЦен.Оптовая.Процент;
	КонецЕсли;
	Если Параметры.Свойство("ЦеноваяГруппа") И ЗначениеЗаполнено(Параметры.ЦеноваяГруппа) Тогда		
		ПараметрЦеноваяГруппа = Параметры.ЦеноваяГруппа;
	Иначе
		ПараметрЦеноваяГруппа = Неопределено;
	КонецЕсли; 
	Если Параметры.Свойство("Номенклатура") И ЗначениеЗаполнено(Параметры.Номенклатура) Тогда		
		ПараметрНоменклатура = Параметры.Номенклатура;
	Иначе
		ПараметрНоменклатура = Неопределено;
	КонецЕсли;
	
	ЗаполнитьЦеныНоменлатурыВпервые(Период, ПараметрВидЦен, ПараметрЦеноваяГруппа, ПараметрНоменклатура);
	
	ТекущееДействие = "";
	ТекущееДействиеЗаполнения = "";
	ПорядокОкругления0_01 = Перечисления.ПорядкиОкругления.Окр0_01;
	Автор = ПараметрыСеанса.ТекущийПользователь;
	
	Элементы.ПараметрыСтраницы.ТекущаяСтраница = Элементы.Страница0; 
	
КонецПроцедуры

// +CRM
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Скроем кнопку закрытия, если форма открыта из панели нафигации.
	Если Окно <> Неопределено Тогда
		Элементы.ФормаЗакрыть.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры
// -CRM

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТекущееДействиеЗаполнения = "ЗаполнитьПоЦеновымГруппам" Тогда
		ЗаполнитьПоЦеновымГруппамНаСервере(ВыбранноеЗначение);	
	ИначеЕсли ТекущееДействиеЗаполнения = "ДобавитьПоЦеновымГруппам" Тогда
		ДобавитьПоЦеновымГруппамНаСервере(ВыбранноеЗначение);	
	ИначеЕсли ТекущееДействиеЗаполнения = "ЗаполнитьПоГруппамНоменклатуры" Тогда
		ЗаполнитьПоГруппамНоменклатурыНаСервере(ВыбранноеЗначение);	
	ИначеЕсли ТекущееДействиеЗаполнения = "ДобавитьПоГруппамНоменклатуры" Тогда
		ДобавитьПоГруппамНоменклатурыНаСервере(ВыбранноеЗначение);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействия(Команда)
	
	Если ТекущееДействие = "ЗаполнитьЦеныПоВидуЦен" Тогда		
		ЗаполнитьЦеныПоВидуЦенНаСервере();
	ИначеЕсли ТекущееДействие = "РассчитатьПоБазовомуВидуЦен" Тогда		
		РассчитатьПоБазовомуВидуЦенНаСервере()
	ИначеЕсли ТекущееДействие = "ИзменитьНаПроцент" Тогда		
		ИзменитьНаПроцентНаКлиенте();
	ИначеЕсли ТекущееДействие = "ИзменитьНаСумму" Тогда		
		ИзменитьНаСуммуНаКлиенте();
	ИначеЕсли ТекущееДействие = "Округлить" Тогда		
		ОкруглитьНаКлиенте();
	ИначеЕсли ТекущееДействие = "СнятьАктуальность" Тогда		
		СнятьАктуальностьНаСервере();
	ИначеЕсли ТекущееДействие = "УдалитьЗаписиПрайсЛиста" Тогда		
		УдалитьЗаписиПрайсЛистаНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Установить(Команда)
	
	Если НЕ ЗначениеЗаполнено(ВидЦенУстановки) Тогда
	
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Шаг 1: Не выбран Вид цен!'");
        Сообщение.Поле = "ВидЦенУстановки";
		Сообщение.Сообщить();
		Возврат;	
	
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ПериодУстановки) Тогда
	
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Шаг 4: Не выбрана дата установки цен!'");
        Сообщение.Поле = "ПериодУстановки";
		Сообщение.Сообщить();
		Возврат;	
	
	КонецЕсли; 
	
	УстановитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	Закрыть(Истина);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - МЕХАНИЗМЫ ЗАПОЛНЕНИЯ ТАБЛИЦЫ

&НаКлиенте
Процедура ЗаполнитьПоЦеновымГруппам(Команда)
	
	Описаниеоповещения = Новый ОписаниеОповещения("ЗаполнитьПоЦеновымГруппамЗавершение", ЭтотОбъект);
	ОчиститьТабличнуюЧасть(Описаниеоповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоЦеновымГруппамЗавершение(ТЧОчищена, ДополнительныеПараметры) Экспорт
	
	Если ТЧОчищена Тогда
		ТекущееДействиеЗаполнения = "ЗаполнитьПоЦеновымГруппам";
		ОткрытьФорму("Справочник.ЦеновыеГруппы.ФормаВыбора", Новый Структура("МножественныйВыбор", Истина), ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоЦеновымГруппам(Команда)
	
	ТекущееДействиеЗаполнения = "ДобавитьПоЦеновымГруппам";
	ОткрытьФорму("Справочник.ЦеновыеГруппы.ФормаВыбора", Новый Структура("МножественныйВыбор", Истина), ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппамНоменклатуры(Команда)
	
	Описаниеоповещения = Новый ОписаниеОповещения("ЗаполнитьПоГруппамНоменклатурыЗавершение", ЭтотОбъект);
	ОчиститьТабличнуюЧасть(Описаниеоповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппамНоменклатурыЗавершение(ТЧОчищена, ДополнительныеПараметры) Экспорт
	
	Если ТЧОчищена Тогда
		ТекущееДействиеЗаполнения = "ЗаполнитьПоГруппамНоменклатуры";
		ОткрытьФорму("Справочник.Номенклатура.ФормаВыбораГруппы", Новый Структура("МножественныйВыбор", Истина), ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоГруппамНоменклатуры(Команда)
	
	ТекущееДействиеЗаполнения = "ДобавитьПоГруппамНоменклатуры";
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбораГруппы", Новый Структура("МножественныйВыбор", Истина), ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНоменклатуруПоВидуЦен(Команда)
	
	Описаниеоповещения = Новый ОписаниеОповещения("ЗаполнитьНоменклатуруПоВидуЦенПродолжение", ЭтотОбъект);
	ОчиститьТабличнуюЧасть(Описаниеоповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНоменклатуруПоВидуЦенПродолжение(ТЧОчищена, ДополнительныеПараметры) Экспорт
	
	Если ТЧОчищена Тогда
		ТекущееДействиеЗаполнения = "ЗаполнитьНоменклатуруПоВидуЦен";
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьНоменклатуруПоВидуЦенЗавершение", ЭтотОбъект);
		ОткрытьФорму("Обработка.ФормированиеЦен.Форма.ФормаВыбораПараметров", Новый Структура("ВидЦен", ВидЦенУстановки), ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНоменклатуруПоВидуЦенЗавершение(ПараметрыЗаполнения, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ПараметрыЗаполнения) = Тип("Структура") И ЗначениеЗаполнено(ПараметрыЗаполнения.ВидЦен) Тогда	
		ВидЦен = ПараметрыЗаполнения.ВидЦен;
		ВидЦенУстановки = ПараметрыЗаполнения.ВидЦен;	
		ЗаполнитьНоменклатуруПоВидуЦенНаСервере(ПараметрыЗаполнения);	
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ПЕРЕКЛЮЧЕНИЕ СТРАНИЦ И ОБРАБОТКИ ДЕЙСТВИЙ РЕКВИЗИТОВ

// ЗаполнитьЦеныПоВидуЦен

&НаКлиенте
Процедура ЗаполнитьЦеныПоВидуЦен(Команда)
	
	Если ТекущееДействие = "ЗаполнитьЦеныПоВидуЦен" Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПараметрыСтраницы.ТекущаяСтраница = Элементы.Страница1;
	Элементы.ЗаполнитьЦеныПоВидуЦен.Пометка = Истина;
	Если ТекущееДействие <> "" Тогда
		Элементы[ТекущееДействие].Пометка = Ложь;
	КонецЕсли;
	ТекущееДействие = "ЗаполнитьЦеныПоВидуЦен";
	ВидЦен = ВидЦенУстановки;
	Период = ТекущаяДата();
	Элементы.Шаг4.Доступность = Истина;
	
КонецПроцедуры

// РассчитатьПоБазовомуВидуЦен

&НаКлиенте
Процедура РассчитатьПоБазовомуВидуЦен(Команда)
	
	Если ТекущееДействие = "РассчитатьПоБазовомуВидуЦен" Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПараметрыСтраницы.ТекущаяСтраница = Элементы.Страница3;
	Элементы.РассчитатьПоБазовомуВидуЦен.Пометка = Истина;
	Если ТекущееДействие <> "" Тогда
		Элементы[ТекущееДействие].Пометка = Ложь;
	КонецЕсли;
	ТекущееДействие = "РассчитатьПоБазовомуВидуЦен";
	Элементы.Шаг4.Доступность = Истина;
	
КонецПроцедуры

// ИзменитьНаПроцент

&НаКлиенте
Процедура ИзменитьНаПроцент(Команда)
	
	Если ТекущееДействие = "ИзменитьНаПроцент" Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПараметрыСтраницы.ТекущаяСтраница = Элементы.Страница4;
	Элементы.ИзменитьНаПроцент.Пометка = Истина;
	Если ТекущееДействие <> "" Тогда
		Элементы[ТекущееДействие].Пометка = Ложь;
	КонецЕсли;
	ТекущееДействие = "ИзменитьНаПроцент";
	ПлюсМинус = "+";
	Элементы.Шаг4.Доступность = Истина;
	
КонецПроцедуры

// ИзменитьНаСумму

&НаКлиенте
Процедура ИзменитьНаСумму(Команда)
	
	Если ТекущееДействие = "ИзменитьНаСумму" Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПараметрыСтраницы.ТекущаяСтраница = Элементы.Страница5;
	Элементы.ИзменитьНаСумму.Пометка = Истина;
	Если ТекущееДействие <> "" Тогда
		Элементы[ТекущееДействие].Пометка = Ложь;
	КонецЕсли;
	ТекущееДействие = "ИзменитьНаСумму";
	ПлюсМинус = "+";
	Элементы.Шаг4.Доступность = Истина;
	
КонецПроцедуры

// Округлить

&НаКлиенте
Процедура Округлить(Команда)
	
	Если ТекущееДействие = "Округлить" Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПараметрыСтраницы.ТекущаяСтраница = Элементы.Страница6;
	Элементы.Округлить.Пометка = Истина;
	Если ТекущееДействие <> "" Тогда
		Элементы[ТекущееДействие].Пометка = Ложь;
	КонецЕсли;
	ТекущееДействие = "Округлить";
	Элементы.Шаг4.Доступность = Истина;
	
КонецПроцедуры


// СнятьАктуальность

&НаКлиенте
Процедура СнятьАктуальность(Команда)
	
	Если ТекущееДействие = "СнятьАктуальность" Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПараметрыСтраницы.ТекущаяСтраница = Элементы.Страница8;
	Элементы.СнятьАктуальность.Пометка = Истина;
	Если ТекущееДействие <> "" Тогда
		Элементы[ТекущееДействие].Пометка = Ложь;
	КонецЕсли;
	ТекущееДействие = "СнятьАктуальность";
	Элементы.Шаг4.Доступность = Ложь;
	
КонецПроцедуры

// УдалитьЗаписиПрайсЛиста

&НаКлиенте
Процедура УдалитьЗаписиПрайсЛиста(Команда)
	
	Если ТекущееДействие = "УдалитьЗаписиПрайсЛиста" Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПараметрыСтраницы.ТекущаяСтраница = Элементы.Страница9;
	Элементы.УдалитьЗаписиПрайсЛиста.Пометка = Истина;
	Если ТекущееДействие <> "" Тогда
		Элементы[ТекущееДействие].Пометка = Ложь;
	КонецЕсли;
	ТекущееДействие = "УдалитьЗаписиПрайсЛиста";
	Элементы.Шаг4.Доступность = Ложь;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ДРУГИЕ ПРОЦЕДУРЫ

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	Для каждого СтрокаТаблицы Из ЦеныНоменлатуры Цикл
		СтрокаТаблицы.Пометка = Истина;
	КонецЦикла;  
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	Для каждого СтрокаТаблицы Из ЦеныНоменлатуры Цикл
		СтрокаТаблицы.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события ПриИзменении поля ввода Номенклатура.
//
Процедура ЦеныНоменлатурыНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ЦеныНоменлатуры.ТекущиеДанные;
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
		
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтруктураДанные.ЕдиницаИзмерения;
	СтрокаТабличнойЧасти.Пометка = Истина;
		
КонецПроцедуры // ЗапасыНоменклатураПриИзменении()

&НаКлиенте
// Процедура - обработчик события НачалоВыбораИзСписка поля ввода ЕдиницаИзмерения.
//
Процедура ЦеныНоменлатурыЕдиницаИзмеренияНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = Элементы.ЦеныНоменлатуры.ТекущиеДанные;
	
	Элемент.СписокВыбора.Очистить();
	Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанные = ПолучитьДанныеЕдиницаИзмеренияНачалоВыбораИзСписка(СтрокаТабличнойЧасти.Номенклатура);
		
	Для каждого ЭлСписка Из СтруктураДанные.СписокЕдиницаИзмерения Цикл
		Элемент.СписокВыбора.Добавить(ЭлСписка.Значение, ЭлСписка.Представление);
	КонецЦикла;
	
КонецПроцедуры // ЗапасыЕдиницаИзмеренияНачалоВыбораИзСписка()

&НаКлиенте
// Процедура - обработчик события ОбработкаВыбора поля ввода ЕдиницаИзмерения.
//
Процедура ЦеныНоменлатурыЕдиницаИзмеренияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = Элементы.ЦеныНоменлатуры.ТекущиеДанные;
	
	Если СтрокаТабличнойЧасти.ЕдиницаИзмерения = ВыбранноеЗначение 
	 ИЛИ СтрокаТабличнойЧасти.Цена = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийКоэффициент = 0;
	Если ТипЗнч(СтрокаТабличнойЧасти.ЕдиницаИзмерения) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
		ТекущийКоэффициент = 1;
	КонецЕсли;
	
	Коэффициент = 0;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения") Тогда
		Коэффициент = 1;
	КонецЕсли;
	
	Если ТекущийКоэффициент = 0 И Коэффициент = 0 Тогда
		СтруктураДанные = ПолучитьДанныеЕдиницаИзмеренияПриИзменении(СтрокаТабличнойЧасти.ЕдиницаИзмерения, ВыбранноеЗначение);
	ИначеЕсли ТекущийКоэффициент = 0 Тогда
		СтруктураДанные = ПолучитьДанныеЕдиницаИзмеренияПриИзменении(СтрокаТабличнойЧасти.ЕдиницаИзмерения);
	ИначеЕсли Коэффициент = 0 Тогда
		СтруктураДанные = ПолучитьДанныеЕдиницаИзмеренияПриИзменении(,ВыбранноеЗначение);
	КонецЕсли;
	
	Если СтруктураДанные.ТекущийКоэффициент <> 0 Тогда
		СтрокаТабличнойЧасти.Цена = СтрокаТабличнойЧасти.Цена * СтруктураДанные.Коэффициент / СтруктураДанные.ТекущийКоэффициент;
	КонецЕсли;
		
КонецПроцедуры // ЗапасыЕдиницаИзмеренияОбработкаВыбора()

&НаКлиенте
Процедура ВидЦенУстановкиПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ВидЦенУстановки) Тогда
		Возврат;	
	КонецЕсли; 
	
	СтруктураВидЦен = Новый Структура("ВидЦен", ВидЦенУстановки);
	
	ПолучитьРеквизитыВидаЦенНаСервере(СтруктураВидЦен);
	
	ОкруглятьВБольшуюСторонуУстановки = СтруктураВидЦен.ОкруглятьВБольшуюСторону;
	ОкруглятьВБольшуюСторону = СтруктураВидЦен.ОкруглятьВБольшуюСторону;
	ПорядокОкругленияУстановки = СтруктураВидЦен.ПорядокОкругления;
	ПорядокОкругления = СтруктураВидЦен.ПорядокОкругления;
	БазовыйВидЦен = СтруктураВидЦен.БазовыйВидЦен;
	Наценка = СтруктураВидЦен.Наценка;
	
КонецПроцедуры

&НаСервере
Функция ЕстьТоварУслуга(Наименование)
	
	СсылкаСправочника =  Справочники.Номенклатура.НайтиПоНаименованию(Наименование);
	
	Если НЕ СсылкаСправочника = Справочники.Номенклатура.ПустаяСсылка() И НЕ СсылкаСправочника.ЭтоГруппа Тогда
		Возврат СсылкаСправочника;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьИзФайла(Команда)
	
	Описаниеоповещения = Новый ОписаниеОповещения("ЗаполнитьИзФайлаПродолжение", ЭтотОбъект);
	ОчиститьТабличнуюЧасть(Описаниеоповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзФайлаПродолжение(ТЧОчищена, ДополнительныеПараметры) Экспорт
	
	Если ТЧОчищена Тогда
		ПараметрыФормы = Новый Структура("ВидСправочника, ТипДействия, ВидЦены", "Номенклатура", "ЗагрузкаЦен", ВидЦенУстановки);
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьИзФайлаЗавершение", ЭтотОбъект);
		ОткрытьФорму("Обработка.CRM_ЗагрузкаСправочниковИзФайла.Форма", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзФайлаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат = Неопределено Тогда
		
		Для Каждого ЗначениеМассива Из Результат Цикл
			
			СсылкаНаТоварУслугу = ЕстьТоварУслуга(СокрЛП(ЗначениеМассива.Наименование));
			Если СсылкаНаТоварУслугу = Неопределено Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Товар/услуга с наименованием: '") + СокрЛП(ЗначениеМассива.Наименование) + НСтр("ru = ' не найден'"));
				
			Иначе	
				
				Если ТипЗнч(ЗначениеМассива.Цена_1) = Тип("Строка") Тогда
					
					ЗначениеЦены = СокрЛП(ЗначениеМассива.Цена_1);
					ЗначениеЦены = СтрЗаменить(ЗначениеЦены, " ", "");
					Попытка
						ЗначениеЦены = Число(ЗначениеЦены);
					Исключение
						ЗначениеЦены = 0;
					КонецПопытки;
					
				ИначеЕсли ТипЗнч(ЗначениеМассива.Цена_1) = Тип("Число") Тогда
					ЗначениеЦены = ЗначениеМассива.Цена_1;
				Иначе
					ЗначениеЦены = 0;
				КонецЕсли;
				
				СтруктураДанные = Новый Структура;
				СтруктураДанные.Вставить("Номенклатура", СсылкаНаТоварУслугу);
					
				СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
				
				НоваяСтрока = ЦеныНоменлатуры.Добавить();
				НоваяСтрока.Пометка				= Истина;
				НоваяСтрока.Номенклатура		= СсылкаНаТоварУслугу;
				НоваяСтрока.ЕдиницаИзмерения	= СтруктураДанные.ЕдиницаИзмерения; 
				НоваяСтрока.Цена				= ЗначениеЦены;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

