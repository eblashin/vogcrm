&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.СостояниеИнтересаУстановить.СписокВыбора.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	CRM_СостоянияИнтересов.Ссылка,
	|	CRM_СостоянияИнтересов.Наименование,
	|	CRM_СостоянияИнтересов.ВероятностьСделки
	|ИЗ
	|	Справочник.CRM_СостоянияИнтересов КАК CRM_СостоянияИнтересов
	|
	|УПОРЯДОЧИТЬ ПО
	|	CRM_СостоянияИнтересов.РеквизитДопУпорядочивания";
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Элементы.СостояниеИнтересаУстановить.СписокВыбора.Добавить(Выборка.Ссылка, Выборка.Наименование + " (" + Выборка.ВероятностьСделки + "%)");
	КонецЦикла;
	
	Если Параметры.Свойство("Взаимодействие") Тогда
		Взаимодействие = Параметры.Взаимодействие;
		Интерес = Параметры.Взаимодействие.ДокументОснование;
		ОжидаемаяВыручкаУстановить = Интерес.ОжидаемаяВыручка;
		СостояниеИнтересаУстановить = Интерес.СостояниеИнтереса;
		ЗаполнитьСписокВыбораВидВзаимодействий();
		Элементы.ГруппаЗапланироватьВзаимодействие.Доступность = НЕ СостояниеИнтересаУстановить.Завершено;
		Элементы.ГруппаЗапланироватьВзаимодействие.Видимость = (СостояниеИнтересаУстановить <> ПредопределенноеЗначение("Справочник.CRM_СостоянияИнтересов.ИнтересПотерян"));
		Элементы.ПричинаОтказа.Видимость = НЕ Элементы.ГруппаЗапланироватьВзаимодействие.Видимость;
	КонецЕсли;
	
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	Если ТипЗнч(НовыйОбъект) = Тип("СправочникСсылка.CRM_ВидыВзаимодействий") И Источник.ВладелецФормы = ЭтотОбъект Тогда
		ЗаполнитьСписокВыбораВидВзаимодействий();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если НЕ Элементы.ГруппаЗапланироватьВзаимодействие.Доступность Тогда
		Если ПроверяемыеРеквизиты.Найти("ВидНовогоВзаимодействия") <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ВидНовогоВзаимодействия"));
		КонецЕсли;
		Если ПроверяемыеРеквизиты.Найти("СодержаниеНовогоВзаимодействия") <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("СодержаниеНовогоВзаимодействия"));
		КонецЕсли;
		Если ПроверяемыеРеквизиты.Найти("ДатаНовогоВзаимодействия") <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ДатаНовогоВзаимодействия"));
		КонецЕсли;
	Иначе
		Если ПроверяемыеРеквизиты.Найти("ВидНовогоВзаимодействия") = Неопределено Тогда
			ПроверяемыеРеквизиты.Добавить("ВидНовогоВзаимодействия");
		КонецЕсли;
		Если ПроверяемыеРеквизиты.Найти("СодержаниеНовогоВзаимодействия") = Неопределено Тогда
			ПроверяемыеРеквизиты.Добавить("СодержаниеНовогоВзаимодействия");
		КонецЕсли;
		Если ПроверяемыеРеквизиты.Найти("ДатаНовогоВзаимодействия") = Неопределено Тогда
			ПроверяемыеРеквизиты.Добавить("ДатаНовогоВзаимодействия");
		КонецЕсли;
	КонецЕсли;
	Если Элементы.ПричинаОтказа.Видимость Тогда 
		Если ПроверяемыеРеквизиты.Найти("ПричинаОтказа") = Неопределено Тогда
			ПроверяемыеРеквизиты.Добавить("ПричинаОтказа");
		КонецЕсли;
	Иначе
		Если ПроверяемыеРеквизиты.Найти("ПричинаОтказа") <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("ПричинаОтказа"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораВидВзаимодействий()
	Элементы.ВидНовогоВзаимодействия.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	CRM_ВидыВзаимодействий.Ссылка,
	|	CRM_ВидыВзаимодействий.Наименование КАК Наименование,
	|	CRM_ВидыВзаимодействий.ВидСобытия,
	|	CRM_ВидыВзаимодействий.Баллы
	|ИЗ
	|	Справочник.CRM_ВидыВзаимодействий КАК CRM_ВидыВзаимодействий
	|ГДЕ
	|	НЕ CRM_ВидыВзаимодействий.ПометкаУдаления
	|	И CRM_ВидыВзаимодействий.СостояниеИнтереса = &СостояниеИнтереса
	|	И CRM_ВидыВзаимодействий.Направление = ЗНАЧЕНИЕ(Перечисление.CRM_ВходящееИсходящееСобытие.Исходящее)
	|	И CRM_ВидыВзаимодействий.ВидДела = ЗНАЧЕНИЕ(Справочник.CRM_ВидыДелВзаимодействий.Интерес)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	Запрос.УстановитьПараметр("СостояниеИнтереса", СостояниеИнтересаУстановить);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Элементы.ВидНовогоВзаимодействия.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Ссылка, "[" + ВыборкаДетальныеЗаписи.ВидСобытия + "] " + ВыборкаДетальныеЗаписи.Наименование);
	КонецЦикла;
	Если НЕ ЗначениеЗаполнено(ВидНовогоВзаимодействия) И Элементы.ВидНовогоВзаимодействия.СписокВыбора.Количество() <> 0 Тогда
		ВидНовогоВзаимодействия = Элементы.ВидНовогоВзаимодействия.СписокВыбора[0].Значение;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ОбработатьИнтересНаСервере()
	
	Результат = Новый Структура("Успех, Сообщение, Взаимодействие");
	ПлановаяДата = ДатаНовогоВзаимодействия + Час(ВремяНовогоВзаимодействия)*3600 + Минута(ВремяНовогоВзаимодействия)*60 + Секунда(ВремяНовогоВзаимодействия);
	
	Если ЗначениеЗаполнено(Интерес) Тогда
		// Обработка интереса
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	CRM_Взаимодействие.Ссылка
		|ИЗ
		|	Документ.CRM_Взаимодействие КАК CRM_Взаимодействие
		|ГДЕ
		|	CRM_Взаимодействие.ДокументОснование = &Интерес
		|	И CRM_Взаимодействие.СтатусВзаимодействия <> ЗНАЧЕНИЕ(Справочник.CRM_СостоянияСобытий.Отменено)
		|	И CRM_Взаимодействие.СтатусВзаимодействия <> ЗНАЧЕНИЕ(Справочник.CRM_СостоянияСобытий.Завершено)
		|
		|УПОРЯДОЧИТЬ ПО
		|	CRM_Взаимодействие.ПлановаяДата УБЫВ";
		Запрос.УстановитьПараметр("Интерес", Интерес);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Первое = Истина;
		
		Попытка
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ВзаимодействиеОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
				Если Первое Тогда
					ВзаимодействиеОбъект.Результат = РезультатТекущегоВзаимодействия;
					ВзаимодействиеОбъект.СостояниеИнтереса = СостояниеИнтересаУстановить;
					ВзаимодействиеОбъект.ДатаЗавершенияВзаимодействия = ТекущаяДатаСеанса();
					ВзаимодействиеОбъект.ОжидаемаяВыручка = ОжидаемаяВыручкаУстановить;
					ВзаимодействиеОбъект.СтатусВзаимодействия = Справочники.CRM_СостоянияСобытий.Завершено;
					ВзаимодействиеОбъект.Записать();
				Иначе
					ВзаимодействиеОбъект.СтатусВзаимодействия = Справочники.CRM_СостоянияСобытий.Отменено;
					ВзаимодействиеОбъект.Записать();
				КонецЕсли;
				Первое = Ложь;
			КонецЦикла;
			
			Если НЕ СостояниеИнтересаУстановить.Завершено Тогда
				НовоеВзаимодействие = Документы.CRM_Взаимодействие.СоздатьДокумент();
				НовоеВзаимодействие.Дата					= ТекущаяДатаСеанса();
				НовоеВзаимодействие.Автор					= ТекущийПользователь;
				НовоеВзаимодействие.Баллы					= ВидНовогоВзаимодействия.Баллы;
				НовоеВзаимодействие.ВидВзаимодействия		= ВидНовогоВзаимодействия;
				НовоеВзаимодействие.ДокументОснование		= Интерес;
				НовоеВзаимодействие.КонтактноеЛицо			= Интерес.КонтактноеЛицо;
				НовоеВзаимодействие.ОжидаемаяВыручка		= ОжидаемаяВыручкаУстановить;
				НовоеВзаимодействие.Ответственный			= Интерес.Ответственный;
				НовоеВзаимодействие.Партнер					= Интерес.Партнер;
				НовоеВзаимодействие.ПлановаяДата			= ПлановаяДата;
				НовоеВзаимодействие.ПотенциальныйКлиент		= Интерес.ПотенциальныйКлиент;
				НовоеВзаимодействие.Содержание				= СодержаниеНовогоВзаимодействия;
				НовоеВзаимодействие.СостояниеИнтереса		= СостояниеИнтересаУстановить;
				НовоеВзаимодействие.СтатусВзаимодействия	= Справочники.CRM_СостоянияСобытий.Запланировано;
				НовоеВзаимодействие.Организация				= Интерес.Организация;
				НовоеВзаимодействие.Записать();
			КонецЕсли;
			
			ИнтересОбъект = Интерес.ПолучитьОбъект();
			ИнтересОбъект.ОжидаемаяВыручка = ОжидаемаяВыручкаУстановить;
			ИнтересОбъект.СостояниеИнтереса = СостояниеИнтересаУстановить;
			Если СостояниеИнтересаУстановить = ПредопределенноеЗначение("Справочник.CRM_СостоянияИнтересов.ИнтересПотерян") Тогда
				ИнтересОбъект.ПричинаОтказа = ПричинаОтказа;
			КонецЕсли;
			ИнтересОбъект.ДатаСледующегоДействия = ПлановаяДата;
			ИнтересОбъект.Записать();
			
			Результат.Взаимодействие = Взаимодействие;
			Результат.Успех = Истина;
		Исключение
			Результат.Взаимодействие = Неопределено;
			Результат.Успех = Ложь;
			Результат.Сообщение = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		КонецПопытки;
		
	//ИначеЕсли ЗначениеЗаполнено(Задача) Тогда
	//	// Обработка задачи
	//	ЗадачаОбъект = Задача.ПолучитьОбъект();
	//	ЗадачаОбъект.СрокИсполнения = ПлановаяДата;
	//	Попытка
	//		ЗадачаОбъект.Записать();
	//		Результат.Успех = Истина;
	//	Исключение
	//		Результат.Успех = Ложь;
	//		Результат.Сообщение = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
	//	КонецПопытки;
		
	Иначе
		Возврат Неопределено;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
// Функция формирует список рабочих часов с учетом настроек пользователя от начала рабочего дня 
// до окончания с интервалом в полчаса.
//
// Параметры:
// 	Время - Дата
//
// Возвращаемое значение:
//	СписокЧасов - СписокЗначений
Функция ВыбратьВремяИзСписка(Знач СтароеЗначениеВСписке)
	
	Возврат CRM_ОбщегоНазначенияСервер.ПолучитьСписокРабочегоВремениПользователя(ТекущийПользователь);
	
КонецФункции

&НаКлиенте
Процедура Обработать(Команда)
	Если НЕ ПроверитьЗаполнение() Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо заполнить все обязательные реквизиты формы'"));
		Возврат;
	КонецЕсли;
	Результат = ОбработатьИнтересНаСервере();
	Закрыть(Результат);
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СостояниеИнтересаУстановитьПриИзменении(Элемент)
	ВидНовогоВзаимодействия = Неопределено;
	ЗаполнитьСписокВыбораВидВзаимодействий();
	Элементы.ГруппаЗапланироватьВзаимодействие.Доступность = НЕ CRM_ОбщегоНазначенияСервер.ЗначениеРеквизитаОбъекта(СостояниеИнтересаУстановить, "Завершено");
	Элементы.ГруппаЗапланироватьВзаимодействие.Видимость = (СостояниеИнтересаУстановить <> ПредопределенноеЗначение("Справочник.CRM_СостоянияИнтересов.ИнтересПотерян"));
	Элементы.ПричинаОтказа.Видимость = НЕ Элементы.ГруппаЗапланироватьВзаимодействие.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура ВидНовогоВзаимодействияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элементы.ВидНовогоВзаимодействия.СписокВыбора.Количество() = 0 Тогда
		СтандартнаяОбработка = Ложь;
		ВидНовогоВзаимодействияСоздание(Элемент, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидНовогоВзаимодействияСоздание(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Направление", ПредопределенноеЗначение("Перечисление.CRM_ВходящееИсходящееСобытие.Исходящее"));
	ЗначенияЗаполнения.Вставить("ВидДела", ПредопределенноеЗначение("Справочник.CRM_ВидыДелВзаимодействий.Интерес"));
	ЗначенияЗаполнения.Вставить("СостояниеИнтереса", СостояниеИнтересаУстановить);
	
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Справочник.CRM_ВидыВзаимодействий.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ДатаНовогоВзаимодействияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураПараметров = Новый Структура("ДатаПоУмолчанию", ТекущаяДата());
	
	СтруктураПараметров.Вставить("РежимВыбора", Истина);
	ОповещенияВыбранногоВремени = Новый ОписаниеОповещения("ОбработкаОповещенияВыбранногоВремени", ЭтотОбъект);
	ФормаВыбора = ОткрытьФорму("Обработка.CRM_КалендарьМенеджера.Форма.Форма", СтруктураПараметров, ЭтотОбъект, УникальныйИдентификатор,,,ОповещенияВыбранногоВремени,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВремяНовогоВзаимодействияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СписокЧасов = ВыбратьВремяИзСписка(ВремяНовогоВзаимодействия);
	ОП = Новый ОписаниеОповещения("ОбработкаОповещенияВыбранногоВремени", ЭтотОбъект);
	ПоказатьВыборИзСписка(Оп, СписокЧасов, Элемент);
КонецПроцедуры

&НаКлиенте
// Процедура обработки выбора времени из списка.
//
Процедура ОбработкаОповещенияВыбранногоВремени(Параметры, Дополнительно) Экспорт
	Если Параметры <> Неопределено Тогда
		Если ТипЗнч(Параметры) = Тип("Дата") Тогда
			ДатаНовогоВзаимодействия = Параметры;
		Иначе	
			ВремяНовогоВзаимодействия = Параметры.Значение;
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДатаНовогоВзаимодействияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтруктураПараметров = Новый Структура();
	CRM_ВзаимодействияКлиент.ДатаВзаимодействияОбработкаВыбора(Объект, Элемент, ВыбранноеЗначение, СтандартнаяОбработка, СтруктураПараметров);
КонецПроцедуры
