
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Если Не Параметры.Свойство("Корзина") Тогда
		ВызватьИсключение НСтр("ru = 'Обработка не предназначена для непосредственного использования.'");
	КонецЕсли;
	
	Для каждого СтрокаКорзины Из Параметры.Корзина Цикл
		ЗаполнитьЗначенияСвойств(Объект.Корзина.Добавить(), СтрокаКорзины);
		
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не Модифицированность
	  ИЛИ ЗакрытьБезусловно Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	Оповещение = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Данные были изменены. Сохранить изменения?'"), РежимДиалогаВопрос.ДаНетОтмена);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Конекст) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ЗакрытьБезусловно = Истина;
		Закрыть();
		
	Иначе
		ЗакрытьБезусловно = Истина;
		Закрыть(СформироватьРезультат());
		
	КонецЕсли;
	
КонецПроцедуры // ПередЗакрытиемЗавершение()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрименитьЗакрыть(Команда)
	
	ЗакрытьБезусловно = Истина;
	Закрыть(СформироватьРезультат());
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	Если Объект.Корзина.Количество() > 0 Тогда
		Объект.Корзина.Очистить();
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КорзинаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КорзинаПослеУдаления(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

&НаКлиенте
Функция СформироватьРезультат()
	
	Корзина = Новый Массив;
	Для каждого СтрокаКорзины Из Объект.Корзина Цикл
		СтруктураСтроки = Новый Структура("Ссылка, ИмяСписка");
		ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаКорзины);
		
		Корзина.Добавить(СтруктураСтроки);		
	
	КонецЦикла;
	
	Возврат Корзина;
	
КонецФункции // СформироватьРезультат()

#КонецОбласти
