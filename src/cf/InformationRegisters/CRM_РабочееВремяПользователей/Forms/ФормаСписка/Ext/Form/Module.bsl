
&НаСервере
Процедура ТекущийПользовательПриИзмененииНаСервере()
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "Пользователь", ТекущийПользователь, ВидСравненияКомпоновкиДанных.Равно);
КонецПроцедуры

&НаКлиенте
Процедура ТекущийПользовательПриИзменении(Элемент)
	ОбновитьОтборы();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ CRM_ЛицензированиеСервер.ПодсистемаCRMИспользуется() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Невозможно открыть ""Мои трудозатраты"". Подсистема 1С:CRM не используется!'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Попытка
		CRM_ЛицензированиеСервер.ПолучитьЗащищеннуюОбработку().ПриСозданиеНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
		Если Отказ Тогда Возврат конецЕсли;
	Исключение
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	Если CRM_ЛицензированиеСервер.ВариантПоставкиСТАРТ() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Функция доступна только для ""ПРОФ"" и ""КОРП"" поставки конфигурации!'");
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Попытка
		ТекущийПользователь = Пользователи.АвторизованныйПользователь();
	Исключение
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	БезОтбораПоПериоду = Ложь;
	Если Параметры.Свойство("Отбор") Тогда
		Если Параметры.Отбор.Свойство("Клиент") Тогда
			Контрагент = Параметры.Отбор.Клиент;
			ТекущийПользователь = Справочники.Пользователи.ПустаяСсылка();
			БезОтбораПоПериоду = Истина;
		КонецЕсли;	
		Если Параметры.Отбор.Свойство("Источник") Тогда
			Источник = Параметры.Отбор.Источник;
			ТекущийПользователь = Справочники.Пользователи.ПустаяСсылка();
			БезОтбораПоПериоду = Истина;
		КонецЕсли;
		
	КонецЕсли;	
	//ТекущийПользовательПриИзмененииНаСервере();
	CRM_Теги.ОбновитьЗначенияОтбораПериодов(ЭтотОбъект, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ПанельЗначенийОтбора.Видимость			= Истина;
	Элементы.ПанельЗначенийОтбора.ТекущаяСтраница	= Элементы.ЗначенияОтбораБыстрыеОтборы;	
	БыстрыеОтборы(Элементы.БыстрыеОтборы);
	Если НЕ ЗначениеЗаполнено(ВариантПериода) Тогда
		ВариантПериода = "Неделя"
	КонецЕсли;
	Если БезОтбораПоПериоду Тогда
		ВариантПериода = "";
		
		
		Для Индекс = 0 По ЭтаФорма.ОтборСозданы.Количество()-1 Цикл
			
			ЭлементСпискаПериодов = ЭтаФорма.ОтборСозданы[Индекс];
			ЭлементСпискаПериодов.Пометка = Ложь;
			
			Если Индекс = 0 Тогда
				ЭлементОтображенияПериода = ЭтаФорма.Элементы.ОтборСозданыПроизвольныйПериод;
				ЭлементСпискаПериодов.Значение = Новый СтандартныйПериод;
			ИначеЕсли Индекс = 1 Тогда
				ЭлементОтображенияПериода = ЭтаФорма.Элементы.ОтборСозданыСегодня;
			ИначеЕсли Индекс = 2 Тогда
				ЭлементОтображенияПериода = ЭтаФорма.Элементы.ОтборСозданыЗа3Дня;
			ИначеЕсли Индекс = 3 Тогда
				ЭлементОтображенияПериода = ЭтаФорма.Элементы.ОтборСозданыЗаНеделю;
			ИначеЕсли Индекс = 4 Тогда
				ЭлементОтображенияПериода = ЭтаФорма.Элементы.ОтборСозданыЗаМесяц;
			Иначе
				Продолжить;
			КонецЕсли;
			
			Если ЭлементСпискаПериодов.Пометка Тогда
				//ЭлементОтображенияПериода.ЦветФона = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ФонАктивногоЗначенияОтбора");
				ЭлементОтображенияПериода.ЦветФона = Новый Цвет(220, 220, 220); //Новый Цвет(255, 215, 40);
				
			Иначе
				ЭлементОтображенияПериода.ЦветФона = Новый Цвет;
			КонецЕсли;
			
		КонецЦикла;
		Период = ОтборСозданы[0];
		ПериодОтбора = ОтборСозданы[0].Значение;
		ПредставлениеПериода = ПредставлениеПериода(ПериодОтбора.ДатаНачала, ПериодОтбора.ДатаОкончания, );
	Иначе	
		ОбработатьСменуПериодаОтбора(ВариантПериода, 1);
	КонецЕсли;	
	
	CRM_ТегиКлиент.ПрочиеОтборыИзменение(ЭтотОбъект, Ложь);
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСменуПериодаОтбора(ВариантПериода, Элемент)
	
	Результат = Ложь;
	
	Если ВариантПериода = "ПроизвольныйПериод" Тогда
		НомерПериода = 0;
	ИначеЕсли ВариантПериода = "Сегодня" Тогда
		НомерПериода = 1;
	ИначеЕсли ВариантПериода = "3 дня" Тогда
		НомерПериода = 2;
	ИначеЕсли ВариантПериода = "Неделя" Тогда
		НомерПериода = 3;
	ИначеЕсли ВариантПериода = "Месяц" Тогда
		НомерПериода = 4;
	КонецЕсли;
	
	Период = ОтборСозданы[НомерПериода];
	ПериодОтбора = ОтборСозданы[НомерПериода].Значение;
	Если Элемент<>Неопределено Тогда
		Если НомерПериода = 0 Тогда
			Если ЗначениеЗаполнено(Период.Значение.ДатаНачала) Или ЗначениеЗаполнено(Период.Значение.ДатаОкончания) Тогда
				Период.Пометка = Истина;
			Иначе
				Период.Пометка = Ложь;
			КонецЕсли;
		Иначе
			Период.Пометка = Не Период.Пометка;
		КонецЕсли;
		
		// Вариант периода может быть выбран только один.
		Для Индекс = 0 По ОтборСозданы.Количество()-1 Цикл
			
			ЭлементСпискаПериодов = ОтборСозданы[Индекс];
			Если ЭлементСпискаПериодов <> Период Тогда
				ЭлементСпискаПериодов.Пометка = Ложь;
			КонецЕсли;
			
			Если Индекс = 0 Тогда
				ЭлементОтображенияПериода = Элементы.ОтборСозданыПроизвольныйПериод;
				Если НЕ ЭлементСпискаПериодов.Пометка Тогда
					ЭлементСпискаПериодов.Значение = Новый СтандартныйПериод;
				КонецЕсли;
			ИначеЕсли Индекс = 1 Тогда
				ЭлементОтображенияПериода = Элементы.ОтборСозданыСегодня;
			ИначеЕсли Индекс = 2 Тогда
				ЭлементОтображенияПериода = Элементы.ОтборСозданыЗа3Дня;
			ИначеЕсли Индекс = 3 Тогда
				ЭлементОтображенияПериода = Элементы.ОтборСозданыЗаНеделю;
			ИначеЕсли Индекс = 4 Тогда
				ЭлементОтображенияПериода = Элементы.ОтборСозданыЗаМесяц;
			Иначе
				Продолжить;
			КонецЕсли;
			
			Если ЭлементСпискаПериодов.Пометка Тогда
				Если ТипЗнч(ЭлементОтображенияПериода) <> Тип("ПолеФормы") Тогда
					ЭлементОтображенияПериода.ЦветФона = Новый Цвет(220, 220, 220); //Новый Цвет(255, 215, 40);
				КонецЕсли;
			Иначе
				ЭлементОтображенияПериода.ЦветФона = Новый Цвет;
			КонецЕсли;
			
		КонецЦикла;
		
		CRM_ТегиКлиент.СформироватьЗаголовокВариантаОтбора(Элементы.ОтборПериод, ОбщегоНазначенияКлиентСервер.ОтмеченныеЭлементы(ОтборСозданы).Количество());
		
	КонецЕсли;
	ПредставлениеПериода = ВариантПериода;  //КрайнийСрок
	ОбновитьОтборы();
	

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицы()
	МассивТаблиц = Новый Массив;
	
	МассивТаблиц.Добавить("Список");
	
	Для Каждого ИмяТаблицы Из МассивТаблиц Цикл
		Элементы[ИмяТаблицы].Обновить();
	КонецЦикла;
	СформироватьЗаголовок();
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтборыНаСервере()
	МассивТаблиц = Новый Массив;
	МассивТаблиц.Добавить("Список");
	Период = ОтборСозданы.НайтиПоЗначению(ПериодОтбора);
	Для Каждого ИмяТаблицы Из МассивТаблиц Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяТаблицы], "Пользователь", ТекущийПользователь, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(ТекущийПользователь), РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяТаблицы], "ДатаРаботОтборОкончание", Период.Значение.ДатаОкончания, ВидСравненияКомпоновкиДанных.МеньшеИлиРавно, , Период.Пометка, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяТаблицы], "ДатаРаботОтборНачало", Период.Значение.ДатаНачала, ВидСравненияКомпоновкиДанных.БольшеИлиРавно, , Период.Пометка, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяТаблицы], "Клиент", Контрагент, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(Контрагент), РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);	
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтаФорма[ИмяТаблицы], "Источник", Источник, ВидСравненияКомпоновкиДанных.Равно, , ЗначениеЗаполнено(Источник), РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);	
		ГруппаОтборСтрокаПоиска = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ЭтотОбъект[ИмяТаблицы].Отбор.Элементы, "ОтборСтрокаПоиска", ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
		ЭлементОтбора = ГруппаОтборСтрокаПоиска.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОписаниеРаботы");
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ЭтотОбъект[ИмяТаблицы], "ОписаниеРаботы", "%"+СтрокаПоискаОтбор+"%", ВидСравненияКомпоновкиДанных.Подобно, ,  ЗначениеЗаполнено(СтрокаПоискаОтбор), РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);	  
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтборы()
	ОбновитьОтборыНаСервере();
	
	ОбновитьТаблицы();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗаголовок()
	
	ЭтотОбъект.Заголовок = НСтр("ru = 'Трудозатраты'")+?(ТекущийПользователь.Пустая(), "", " / "+ ТекущийПользователь) +?(ЗначениеЗаполнено(ПредставлениеПериода), " / " + ПредставлениеПериода, "");
	
КонецПроцедуры


&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	ВариантПериода = Настройки.Получить("ВариантПериода");
	ПериодОтбора =  Настройки.Получить("ПериодОтбора");
	ОтборСозданы[0].Значение = ПериодОтбора;
	
КонецПроцедуры

&НаКлиенте
Процедура БыстрыеОтборы(Элемент)
	
	CRM_ТегиКлиент.ВыборВариантаОтбора(ЭтотОбъект, Элемент);
КонецПроцедуры


&НаКлиенте
Процедура ОсновныеОтборы(Элемент)
	
	CRM_ТегиКлиент.ВыборВариантаОтбора(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте                                                      
Процедура ОтборПериод(Элемент)
	
	CRM_ТегиКлиент.ВыборВариантаОтбора(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыСегодняНажатие(Элемент)
	ВариантПериода = "Сегодня";
	ОбработатьСменуПериодаОтбора(ВариантПериода, Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыЗа3ДняНажатие(Элемент)
	ВариантПериода = "3 дня";
	ОбработатьСменуПериодаОтбора(ВариантПериода, Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыЗаНеделюНажатие(Элемент)
	
	ВариантПериода = "Неделя";
	ОбработатьСменуПериодаОтбора(ВариантПериода, Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыЗаМесяцНажатие(Элемент)

	ВариантПериода = "Месяц";
	ОбработатьСменуПериодаОтбора(ВариантПериода, Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ОтборСозданыПроизвольныйПериодПриИзменении(Элемент)
	
	ВариантПериода = "ПроизвольныйПериод";
	ОбработатьСменуПериодаОтбора(ВариантПериода, Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ОтборПериодОчиститьНажатие(Элемент)
	ВариантПериода = "";
	
	
	Для Индекс = 0 По ЭтаФорма.ОтборСозданы.Количество()-1 Цикл
		
		ЭлементСпискаПериодов = ЭтаФорма.ОтборСозданы[Индекс];
		ЭлементСпискаПериодов.Пометка = Ложь;
		
		Если Индекс = 0 Тогда
			ЭлементОтображенияПериода = ЭтаФорма.Элементы.ОтборСозданыПроизвольныйПериод;
			ЭлементСпискаПериодов.Значение = Новый СтандартныйПериод;
		ИначеЕсли Индекс = 1 Тогда
			ЭлементОтображенияПериода = ЭтаФорма.Элементы.ОтборСозданыСегодня;
		ИначеЕсли Индекс = 2 Тогда
			ЭлементОтображенияПериода = ЭтаФорма.Элементы.ОтборСозданыЗа3Дня;
		ИначеЕсли Индекс = 3 Тогда
			ЭлементОтображенияПериода = ЭтаФорма.Элементы.ОтборСозданыЗаНеделю;
		ИначеЕсли Индекс = 4 Тогда
			ЭлементОтображенияПериода = ЭтаФорма.Элементы.ОтборСозданыЗаМесяц;
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если ЭлементСпискаПериодов.Пометка Тогда
			//ЭлементОтображенияПериода.ЦветФона = ОбщегоНазначенияКлиентПовтИсп.ЦветСтиля("ФонАктивногоЗначенияОтбора");
			ЭлементОтображенияПериода.ЦветФона = Новый Цвет(220, 220, 220); //Новый Цвет(255, 215, 40);
			
		Иначе
			ЭлементОтображенияПериода.ЦветФона = Новый Цвет;
		КонецЕсли;
		
	КонецЦикла;
	Период = ОтборСозданы[0];
	ПериодОтбора = ОтборСозданы[0].Значение;
	ПредставлениеПериода = ПредставлениеПериода(ПериодОтбора.ДатаНачала, ПериодОтбора.ДатаОкончания, );
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СтрокаПоискаПриИзменении(Элемент)
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ОбновитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура Источник1ПриИзменении(Элемент)
	ОбновитьОтборы();
КонецПроцедуры

&НаСервере
Функция ПроверитьДоступностьУдаления(Пользователь)
	
	Возврат (Пользователь <> Пользователи.АвторизованныйПользователь()) И (НЕ РольДоступна("ПолныеПрава")) И (НЕ Пользователь.Подразделение.ТекущийРуководитель = Пользователи.АвторизованныйПользователь());
КонецФункции

&НаКлиенте
Процедура СписокПередУдалением(Элемент, Отказ)
	ТекСтрока = Элементы.Список.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Отказ = ПроверитьДоступностьУдаления(ТекСтрока.Пользователь); 
	КонецЕсли;	
КонецПроцедуры


