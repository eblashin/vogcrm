
#Область ОбработчикиСобытийЭлементовФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
// Процедура - обработчик события "Выбор" элемента формы "Список"
//
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТД = Элементы.Список.ТекущиеДанные;
	Если ТД = Неопределено Тогда Возврат; КонецЕсли;
	Если Поле.Имя = "ЕстьЗапись" Тогда
		// Прежде, чем искать запись мы должны выяснить, есть ли права на прослушку у данного пользователя
		ТекПользователь = сфпСофтФонПроСервер.сфпТекущийПользователь();
		МассивПрослушиваемыхПользователей = сфпСофтФонПроСервер.сфпПолучитьМассивПрослушиваемыхПользователей(ТекПользователь);
		Если МассивПрослушиваемыхПользователей.Количество() > 0 Тогда
			Если МассивПрослушиваемыхПользователей.Найти(ТД.Ответственный) = Неопределено Тогда
				ТекстПредупреждения = Нстр("ru = 'У данного пользователя нет прав на прослушивание разговора пользователя '") + """" + Строка(ТД.Ответственный) + """" + ".";
				ПоказатьПредупреждение(,ТекстПредупреждения);
				Возврат;
			КонецЕсли;					
		Иначе				
			ТекстПредупреждения = Нстр("ru = 'У данного пользователя нет прав на прослушивание разговора пользователя '") + """" + Строка(ТД.Ответственный) + """" + ".";
			ПоказатьПредупреждение(,ТекстПредупреждения);
			Возврат;
		КонецЕсли;	
		Если ПустаяСтрока(ТД.ИдентификаторЗаписи) Тогда
			Если сфпСофтФонПроСервер.сфпИспользоватьCLON() Тогда
				Если ТД.Входящий Тогда
					ТелефонА	= ТД.НомерТелефона;
					ТелефонБ	= ТД.ВнутреннийНомер;
				Иначе
					ТелефонА	= ТД.ВнутреннийНомер;
					ТелефонБ	= ТД.НомерТелефона;						
				КонецЕсли;
				// Выполняем поиск записи разговора
				НайденнаяЗапись = сфпСофтФонПроКлиент.сфпНайтиЗаписьРазговораCLON(ТелефонА, ТелефонБ,  ТД.ДатаНачала, ТД.ДатаОкончания, ТД.Входящий); 
				Если НЕ (НайденнаяЗапись = Неопределено) Тогда
					// Запускаем запись на прослушивание
					сфпСофтФонПроКлиент.сфпПолучитьФайлРазговора(НайденнаяЗапись.file);
					// Записываем в регистр идентификатор записи
					сфпСофтФонПроСервер.сфпЗаписатьИдентификаторЗаписиВРегистр(ТД.Звонок, ТД.ИдентификаторЗвонка, НайденнаяЗапись.file);
					// Обновляем историю звонка
					ОбновитьОтображениеДанных();
				КонецЕсли;
			КонецЕсли;	
		Иначе
			сфпСофтФонПроКлиент.сфпПолучитьФайлРазговора(ТД.ИдентификаторЗаписи)
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры // СписокВыбор()

&НаКлиенте
// Процедура - обработчик события "ПередНачаломДобавления" элемента формы "Список"
//
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры // СписокПередНачаломДобавления()

&НаКлиенте
// Процедура - обработчик события "ПередУдалением" элемента формы "Список"
//
Процедура СписокПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры // СписокПередУдалением()

#КонецОбласти

#Область ОбработчикиСобытийФормы

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере"
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Звонок") Тогда
		ЭлементыСпискаОтбора = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы;
		Для Каждого ТекущийОтбор Из ЭлементыСпискаОтбора Цикл
			Если ТекущийОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный Тогда
				Если ТекущийОтбор.Представление = "ОтборПоЗвонку" Тогда
					ТекущийОтбор.ПравоеЗначение	= Параметры.Звонок;	
					ТекущийОтбор.Использование	= Истина;
					ТолькоПросмотр				= Истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;       
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти
