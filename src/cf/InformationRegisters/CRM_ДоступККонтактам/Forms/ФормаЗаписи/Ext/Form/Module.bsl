
///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
// Функция возвращает массив всех остальных пользователей подразделения ответственного менеджера.
//
// Параметры:
//	Ответственный	- СправочникСсылка	- Ответственный менеджер.
//
// Возвращаемое значение:
//	Массив	- Массив всех остальных пользователей подразделения ответственного менеджера.
//
Функция ПолучитьМассивПользователейСвоегоПодразделения(Ответственный)
	МассивПользователей = Новый Массив;
	Если ЗначениеЗаполнено(Ответственный) И ЗначениеЗаполнено(Ответственный.Подразделение) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ответственный",	Ответственный);
		Запрос.УстановитьПараметр("Подразделение",	Ответственный.Подразделение);
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	Пользователи.Ссылка КАК Пользователь
		               |ИЗ
		               |	Справочник.Пользователи КАК Пользователи
		               |ГДЕ
		               |	НЕ Пользователи.ПометкаУдаления
		               |	И НЕ Пользователи.Ссылка = &Ответственный
		               |	И Пользователи.Подразделение = &Подразделение";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивПользователей.Добавить(Выборка.Пользователь);
		КонецЦикла;	
	КонецЕсли;
	Возврат МассивПользователей;
КонецФункции // ПолучитьМассивПользователейСвоегоПодраздеделения()	

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "ОтветственныйМенеджер".
//
Процедура ОтветственныйМенеджерПриИзменении(Элемент)
	НовоеПодразделение = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(Запись.ОтветственныйМенеджер, "Подразделение");
	Если ЕстьДоступУровняАккаунтМенеджера Тогда
		Запись.Подразделение = НовоеПодразделение;
	ИначеЕсли ЗначениеЗаполнено(Запись.Подразделение) Тогда
		Запись.Подразделение = НовоеПодразделение;
	КонецЕсли;
	Запись.Офис = CRM_ОбщегоНазначенияСервер.ПолучитьЗначениеРеквизита(НовоеПодразделение, "CRM_Офис");
КонецПроцедуры // ОтветственныйМенеджерПриИзменении()

&НаКлиенте
// Процедура - обработчик события "НачалоВыбора" элемента формы "ОтветственныйМенеджер".
//
Процедура ОтветственныйМенеджерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если НЕ ЕстьДоступУровняАккаунтМенеджера Тогда
		// Накладываем ограничение на выбор пользователей только из своего подразделения.
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора.ЗагрузитьЗначения(ПолучитьМассивПользователейСвоегоПодразделения(Запись.ОтветственныйМенеджер));
	КонецЕсли;	
КонецПроцедуры // ОтветственныйМенеджерНачалоВыбора()

#Область ОбработчикиСобытийФормы

&НаСервере
// Процедура - обработчик события формы "ПриСозданииНаСервере".
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Клиент") Тогда
		Запись.Клиент = Параметры.Клиент;
	КонецЕсли;
	Если Параметры.Свойство("Контакт") Тогда
		Запись.Контакт = Параметры.Контакт;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Запись.ОтветственныйМенеджер) Тогда
		Запись.ОтветственныйМенеджер	= Пользователи.АвторизованныйПользователь();
		Запись.Подразделение			= Запись.ОтветственныйМенеджер.Подразделение;
		Запись.Офис						= Запись.ОтветственныйМенеджер.Подразделение.CRM_офис;
	КонецЕсли;	
	Если НЕ ЗначениеЗаполнено(Запись.Клиент) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнен клиент'"));
		Отказ					= Истина;
		СтандартнаяОбработка	= Ложь;
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(Запись.Контакт) Тогда	
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнен контакт'"));
		Отказ					= Истина;
		СтандартнаяОбработка	= Ложь;
		Возврат;
	КонецЕсли;	
	ЕстьДоступУровняАккаунтМенеджера = CRM_УправлениеДоступомВызовСервера.ЕстьДоступУровняАккаунтМенеджера(Запись.Клиент);
	Если ЕстьДоступУровняАккаунтМенеджера Тогда
		Элементы.ОтветственныйМенеджер.ТолькоПросмотр	= Ложь;
		Элементы.Подразделение.КнопкаОчистки			= Истина;
	Иначе
		ЕстьДоступККонтакту	= CRM_УправлениеДоступомВызовСервера.ЕстьПраваДоступаККонтакту(Запись.Клиент, Запись.Контакт);
		Элементы.ОтветственныйМенеджер.ТолькоПросмотр	= НЕ ЕстьДоступККонтакту;
		Элементы.Подразделение.КнопкаОчистки			= Ложь;
	КонецЕсли;	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	УжеЕстьОсновнаяЗапись = CRM_УправлениеДоступомВызовСервера.ЕстьЗаписьСОсновнымМенеджером(Запись.Клиент, Запись.Контакт);
	Если Запись.Основной И УжеЕстьОсновнаяЗапись И ЗначениеЗаполнено(Запись.Контакт) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗаписьюЗавершение", ЭтотОбъект, ПараметрыЗаписи);
		ПоказатьВопрос(ОписаниеОповещения, "Для контактного лица <" + Запись.Контакт + "> уже есть основной ответственный менеджер. Заменить текущего основного ответственного?", РежимДиалогаВопрос.ОКОтмена);
		Отказ = Истина;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписьюЗавершение(Ответ, ПараметрыЗаписи) Экспорт
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		CRM_УправлениеДоступомВызовСервера.УбратьПризнакОсновнойУСтарыхЗаписей(Запись.Клиент, Запись.Контакт);
		Записать();
		Если НЕ ПараметрыЗаписи.Свойство("НеЗакрывать") Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьКоманда(Команда)
	Записать(Новый Структура("НеЗакрывать", Ложь));
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Записать();
КонецПроцедуры

#КонецОбласти
