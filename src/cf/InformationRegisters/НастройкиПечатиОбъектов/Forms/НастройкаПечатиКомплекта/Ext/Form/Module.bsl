#Область ОписаниеПеременных

&НаКлиенте
Перем ВыполняетсяЗакрытие;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ДополнительныеПараметры")
		И ТипЗнч(Параметры.ДополнительныеПараметры) = Тип("Структура") Тогда
		
		Для Каждого КлючИЗначение Из Параметры.ДополнительныеПараметры Цикл
			
			НоваяСтрока = ДополнительныеПараметрыПечати.Добавить();
			НоваяСтрока.Параметр = КлючИЗначение.Ключ;
			НоваяСтрока.Значение = КлючИЗначение.Значение;
			
		КонецЦикла;
		
	КонецЕсли;

	СоответствиеТипов = вогОбщегоНазначения.СоответствиеМассивовПоТипамОбъектов(Параметры.Объекты);
	Если СоответствиеТипов.Количество() > 1 Тогда
		ВызватьИсключение НСтр("ru = 'Запрещено печатать комплект документов различного вида.'");
	Иначе
		
		Для Каждого ТекТипОбъекта Из СоответствиеТипов Цикл
			ТипОбъекта = ТекТипОбъекта.Ключ;
			Прервать;
		КонецЦикла;
		
		ТаблицаОбъектов = РегистрыСведений.НастройкиПечатиОбъектов.ТаблицаОбъектовДляПечатиКомплектно();
		Если ТаблицаОбъектов.Найти(ТипОбъекта, "ТипОбъекта") = Неопределено Тогда
			ТекстСообщения = НСтр("ru = 'Печать комплектов для документов ""%Документ%"" не поддерживается.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Метаданные.НайтиПоПолномуИмени(ТипОбъекта).Синоним);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
	КонецЕсли;
	
	Объекты.ЗагрузитьЗначения(Параметры.Объекты);
	
	Если Объекты.Количество() = 1 Тогда
		
		ПараметрыОбъекта 			= РегистрыСведений.НастройкиПечатиОбъектов.ПараметрыОбъектаДляПечатиКомплектно(ТипОбъекта);
		ЕстьОрганизация 			= ПараметрыОбъекта.ЕстьОрганизация;
		ЕстьНаправлениеДеятельности = ПараметрыОбъекта.ЕстьНаправлениеДеятельности;
		
		Если ЕстьОрганизация И ЕстьНаправлениеДеятельности Тогда
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Объекты[0], "НаправлениеДеятельности, Организация");
			Организация = Реквизиты.Организация;
			НаправлениеДеятельности = Реквизиты.НаправлениеДеятельности;
		ИначеЕсли ПараметрыОбъекта.ЕстьОрганизация Тогда
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Объекты[0], "Организация");
			Организация = Реквизиты.Организация;
		ИначеЕсли ПараметрыОбъекта.ЕстьНаправлениеДеятельности Тогда
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Объекты[0], "НаправлениеДеятельности");
			НаправлениеДеятельности = Реквизиты.НаправлениеДеятельности;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипОбъекта = "Справочник.ДоговорыКонтрагентов" Тогда
		
		НаправлениеДеятельностиПользователя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Пользователи.ТекущийПользователь(),
			"CRM_НаправлениеДеятельности",
			Истина);
		
		Если Не ЗначениеЗаполнено(НаправлениеДеятельностиПользователя) Тогда
			НаправлениеДеятельностиПользователя = Справочники.НаправленияДеятельности.Обои;
		КонецЕсли;
		
		НовыйПараметр = ДополнительныеПараметрыПечати.Добавить();
		НовыйПараметр.Параметр = "НаправлениеДеятельности";
		НовыйПараметр.Значение = НаправлениеДеятельностиПользователя;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НаправлениеДеятельностиПользователя) Тогда
		ДополнительныеПараметры = НаправлениеДеятельностиПользователя;
	Иначе
		ДополнительныеПараметры = Неопределено;
	КонецЕсли;
	
	КоллекцияПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
		ТипОбъекта,
		?(Объекты.Количество() = 1, Объекты[0].Значение, Неопределено),
		ВариантИспользования,
		ДополнительныеПараметры);
	
	УстановитьВидимостьПоляНаправлениеДеятельности();
	
	СформироватьВариантыСохраненияНастроек();
	ОбновитьТекстВариантаИспользования();
	ОбновитьКомандуУдаленияНастроек();
	
	Если КоллекцияПечатныхФорм <> Неопределено Тогда
	
		Для Каждого ТекСтрока Из КоллекцияПечатныхФорм Цикл
			
			НоваяСтрока = КомплектПечатныхФорм.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Печать
	ЗапрашиватьПодтверждение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ОбщиеНастройкиПользователя", "ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов");
	Если ЗапрашиватьПодтверждение <> Неопределено Тогда
		ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов = ЗапрашиватьПодтверждение;
	Иначе
		ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов = Истина;
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ОбщиеНастройкиПользователя", "ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов", Истина);
	КонецЕсли;
	
	// ++ VOG Солодов В.В. 25.06.2021 DEV-69
	Если ТипОбъекта = "Справочник.ДоговорыКонтрагентов" Тогда
		ЗаполнитьТаблицуКоммерческихСоглашений();
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"КоммерческоеСоглашение",
			"Видимость",
			Ложь);
		
	КонецЕсли;
	// -- VOG Солодов В.В. 25.06.2021 DEV-69
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ВыполняетсяЗакрытие Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность И Не СохранитьПараметры И НЕ ЗавершениеРаботы Тогда
		
		СписокКнопок = Новый СписокЗначений();
		СписокКнопок.Добавить("Закрыть", НСтр("ru = 'Закрыть'"));
		СписокКнопок.Добавить("НеЗакрывать", НСтр("ru = 'Не закрывать'"));
		
		Отказ = Истина;
		ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект), НСтр("ru = 'Комплект печатных форм был изменен. Закрыть форму без сохранения настроек?'"), СписокКнопок);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ОтветНаВопрос = РезультатВопроса;
	
	Если ОтветНаВопрос = "Закрыть" Тогда
		ВыполняетсяЗакрытие = Истина;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НаправлениеДеятельностиПользователяПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Параметр", "НаправлениеДеятельности");
	
	СтрокиПараметров = ДополнительныеПараметрыПечати.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого СтрокаТЧ Из СтрокиПараметров Цикл
		СтрокаТЧ.Значение = НаправлениеДеятельностиПользователя;
	КонецЦикла;
	
	УстановитьСтандартныеНастройкиСервер();
	
	// ++ VOG Солодов В.В. 25.06.2021 DEV-69
	Если Не ЗначениеЗаполнено(НаправлениеДеятельностиПользователя) Тогда
		КоммерческоеСоглашение = ПредопределенноеЗначение("Справочник.вогКоммерческиеСоглашения.ПустаяСсылка");
	Иначе
		КоммерческоеСоглашение = ОтборСоглашенийПоНаправлениюДеятельности(
			НаправлениеДеятельностиПользователя, КоммерческиеСоглашения);
	КонецЕсли;
	// -- VOG Солодов В.В. 25.06.2021 DEV-69
	
КонецПроцедуры

// ++ VOG Солодов В.В. 25.06.2021 DEV-69
&НаКлиенте
Процедура КоммерческоеСоглашениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка 	= Ложь;
	МассивСоглашений 		= Новый Массив;
	
	ПараметрыОтбораСтрок = Новый Структура;
	ПараметрыОтбораСтрок.Вставить("НаправлениеДеятельности", НаправлениеДеятельностиПользователя);
	
	ТаблицаСоглашений = КоммерческиеСоглашения.НайтиСтроки(ПараметрыОтбораСтрок);
	
	Для Каждого СтрокаТабличнойЧасти Из ТаблицаСоглашений Цикл
		МассивСоглашений.Добавить(СтрокаТабличнойЧасти.КоммерческоеСоглашение);
	КонецЦикла;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Ссылка", МассивСоглашений);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", 				Отбор);
	ПараметрыФормы.Вставить("РежимВыбора", 			Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор", 	Ложь);
	
	ОповещениеОВыборе = Новый ОписаниеОповещения("ВыборКоммерческогоСоглашенияЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		"Справочник.вогКоммерческиеСоглашения.ФормаВыбора",
		ПараметрыФормы,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		ОповещениеОВыборе);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборКоммерческогоСоглашенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоммерческоеСоглашение = Результат;
	
КонецПроцедуры

&НаКлиенте
Процедура КоммерческоеСоглашениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	МассивСсылок 			= Новый Массив;
	
	ПараметрыОтбораСтрок 	= Новый Структура;
	ПараметрыОтбораСтрок.Вставить("Основное", 					Истина);
	ПараметрыОтбораСтрок.Вставить("НаправлениеДеятельности", 	НаправлениеДеятельностиПользователя);
	
	НайденныеСтроки 		= КоммерческиеСоглашения.НайтиСтроки(ПараметрыОтбораСтрок);
	
	Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
		МассивСсылок.Добавить(СтрокаТабличнойЧасти.КоммерческоеСоглашение);
	КонецЦикла;
	
	ПараметрыПолученияДанных.Очистить(); 
	ПараметрыПолученияДанных.Вставить("Отбор", 			Новый Структура("Ссылка", МассивСсылок));
	ПараметрыПолученияДанных.Вставить("СтрокаПоиска", 	Текст);
	
	ПараметрыПолученияДанных.Вставить("РежимПолученияДанныхВыбора", РежимПолученияДанныхВыбораПриВводеПоСтроке.Непосредственно);
	ПараметрыПолученияДанных.Вставить("ВыборГруппИЭлементов", 		ИспользованиеГруппИЭлементов.Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеДеятельностиПользователяОчистка(Элемент, СтандартнаяОбработка)
	
	КоммерческоеСоглашение = ПредопределенноеЗначение("Справочник.вогКоммерческиеСоглашения.ПустаяСсылка");
	
КонецПроцедуры
// -- VOG Солодов В.В. 25.06.2021 DEV-69

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Печать(Команда)
	
	// ++ VOG Солодов В.В. 25.06.2021 DEV-69
	Если ЗначениеЗаполнено(КоммерческоеСоглашение) Тогда
		
		ДанныеКоммерческогоСоглашения = Новый Структура;
		ДанныеКоммерческогоСоглашения.Вставить("Ссылка", 	КоммерческоеСоглашение);
		ДанныеКоммерческогоСоглашения.Вставить("Версия", 	0);
		ДанныеКоммерческогоСоглашения.Вставить("Договор");
		
		ПараметрыОтбораСтрок = Новый Структура;
		ПараметрыОтбораСтрок.Вставить("КоммерческоеСоглашение", КоммерческоеСоглашение);
		
		НайденныеСтроки = КоммерческиеСоглашения.НайтиСтроки(ПараметрыОтбораСтрок);
		
		Для Каждого СтрокаТабличнойЧасти Из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(ДанныеКоммерческогоСоглашения, СтрокаТабличнойЧасти);
		КонецЦикла;
		
		НовыйПараметр = ДополнительныеПараметрыПечати.Добавить();
		НовыйПараметр.Параметр = "ДанныеКоммерческогоСоглашения";
		НовыйПараметр.Значение = ДанныеКоммерческогоСоглашения;
		
	КонецЕсли;
	// -- VOG Солодов В.В. 25.06.2021 DEV-69
	
	Если КомплектПечатныхФорм.НайтиСтроки(Новый Структура("Печатать", Истина)).Количество() > 0 Тогда
		
		АдресКомплектаПечатныхФорм = ПоместитьКомплектПечатныхФормВоВременноеХранилищеСервер();
		
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("ПереопределитьПользовательскиеНастройкиКоличества", 	Истина);
		ПараметрыПечати.Вставить("АдресКомплектаПечатныхФорм", 							АдресКомплектаПечатныхФорм);
		ПараметрыПечати.Вставить("ФиксированныйКомплект", 								Истина);
		ПараметрыПечати.Вставить("ОбъектыПечати", 										Объекты.ВыгрузитьЗначения());
		
		Для Каждого СтрокаТЧ Из ДополнительныеПараметрыПечати Цикл
			ПараметрыПечати.Вставить(СтрокаТЧ.Параметр, СтрокаТЧ.Значение);
		КонецЦикла;
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			ТипОбъекта,
			"КомплектДокументов",
			Объекты.ВыгрузитьЗначения(),
			Неопределено,
			ПараметрыПечати);
		
		СохранитьПараметры = Истина;
		Закрыть();
		
	Иначе 
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Выберите хотя бы одну печатную форму для печати.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КомплектПечатныхФорм");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьНаПринтер(Команда)
	
	Если КомплектПечатныхФорм.НайтиСтроки(Новый Структура("Печатать", Истина)).Количество() > 0 Тогда
		
		АдресКомплектаПечатныхФорм = ПоместитьКомплектПечатныхФормВоВременноеХранилищеСервер();
		
		ПараметрыПечати 		= Новый Структура;
		ПараметрыПечати.Вставить("ПереопределитьПользовательскиеНастройкиКоличества", 	Истина);
		ПараметрыПечати.Вставить("АдресКомплектаПечатныхФорм", 							АдресКомплектаПечатныхФорм);
		ПараметрыПечати.Вставить("ОбъектыПечати", 										Объекты);
		
		Для Каждого СтрокаТЧ Из ДополнительныеПараметрыПечати Цикл
			ПараметрыПечати.Вставить(СтрокаТЧ.Параметр, СтрокаТЧ.Значение);
		КонецЦикла;
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер(
			ТипОбъекта,
			"КомплектДокументов",
			Объекты.ВыгрузитьЗначения(),
			ПараметрыПечати);
		
	Иначе
		ОчиститьСообщения();
		ТекстСообщения = НСтр("ru = 'Выберите хотя бы одну печатную форму для печати.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "КомплектПечатныхФорм");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого ТекСтрока Из КомплектПечатныхФорм Цикл
		ТекСтрока.Печатать = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого ТекСтрока Из КомплектПечатныхФорм Цикл
		ТекСтрока.Печатать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтандартныеНастройки(Команда)
	
	УстановитьСтандартныеНастройкиСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	
	СохранитьНастройкиКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиПоОрганизации(Команда)
	
	СохранитьНастройкиКлиент(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиПоОрганизацииНаправлениюДеятельности(Команда)
	
	СохранитьНастройкиКлиент(Истина, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройки(Команда)
	
	УдалитьНастройкиСервер();
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Настройки печати удалены'"),
		,
		,
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументовПриИзменении(Элемент)
	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("ОбщиеНастройкиПользователя", "ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов", ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КомплектПечатныхФормЭкземпляров.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КомплектПечатныхФорм.Печатать");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КомплектПечатныхФормПредставление.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.КомплектПечатныхФормЭкземпляров.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КомплектПечатныхФорм.Печатать");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);

КонецПроцедуры

&НаСервере
Функция ПоместитьКомплектПечатныхФормВоВременноеХранилищеСервер()
	
	 Возврат ПоместитьВоВременноеХранилище(КомплектПечатныхФорм.Выгрузить());
	
КонецФункции

&НаСервере
Процедура СформироватьВариантыСохраненияНастроек()
	
	ТекстТипОбъекта = НСтр("ru = 'Сохранить настройки для документов ""%ТипОбъекта%""'");
	ТекстТипОбъекта = СтрЗаменить(ТекстТипОбъекта, "%ТипОбъекта%", Метаданные.НайтиПоПолномуИмени(ТипОбъекта).Представление());
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СохранитьНастройки", "Заголовок", ТекстТипОбъекта);
	// +++ VOG Кулаков П.Л. 18.12.2020 CRM-1134
	// Уберем кнопку Сохранить настройки по типу объекта.
	//ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СохранитьНастройки", "Видимость", ПраваПользователяПовтИсп.СохранениеНастроекПечатиОбъектовПоУмолчанию());
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СохранитьНастройки", "Видимость", Ложь);
	// --- VOG Кулаков П.Л.
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СохранитьНастройкиПоОрганизации", "Видимость", Ложь);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СохранитьНастройкиПоОрганизацииНаправлениюДеятельности", "Видимость", Ложь);
	
	Если ЕстьОрганизация И ПраваПользователяПовтИсп.СохранениеНастроекПечатиОбъектовПоУмолчанию() Тогда
		ТекстТипОбъекта = ТекстТипОбъекта + " " + НСтр("ru = 'по организации ""%Организация%""'");
		ТекстТипОбъекта = СтрЗаменить(ТекстТипОбъекта, "%Организация%", Организация);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СохранитьНастройкиПоОрганизации", "Заголовок", ТекстТипОбъекта);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СохранитьНастройкиПоОрганизации", "Видимость", Истина);
	КонецЕсли;
	
	Если ЕстьНаправлениеДеятельности И ПраваПользователяПовтИсп.ДобавлениеИзменениеНастройкиПечатиОбъектов() И
	 (НЕ ЕстьОрганизация ИЛИ ПраваПользователяПовтИсп.СохранениеНастроекПечатиОбъектовПоУмолчанию()) Тогда
		ТекстТипОбъекта = ТекстТипОбъекта + " " + НСтр("ru = 'по направлению деятельности ""%НаправлениеДеятельности%""'");
		ТекстТипОбъекта = СтрЗаменить(ТекстТипОбъекта, "%НаправлениеДеятельности%", НаправлениеДеятельности);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СохранитьНастройкиПоОрганизацииНаправлениюДеятельности", "Заголовок", ТекстТипОбъекта);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "СохранитьНастройкиПоОрганизацииНаправлениюДеятельности", "Видимость", Истина);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьКомандуУдаленияНастроек()
	
	Если ВариантИспользования > 0 Тогда
	
		ТекстТипОбъекта = НСтр("ru = 'Удалить настройки для документов ""%ТипОбъекта%""'");
		ТекстТипОбъекта = СтрЗаменить(ТекстТипОбъекта, "%ТипОбъекта%", Метаданные.НайтиПоПолномуИмени(ТипОбъекта).Представление());
		
		Если ВариантИспользования > 1 Тогда
			ТекстТипОбъекта = ТекстТипОбъекта + " " + НСтр("ru = 'по организации ""%Организация%""'");
			ТекстТипОбъекта = СтрЗаменить(ТекстТипОбъекта, "%Организация%", Организация);
		КонецЕсли;
		
		Если ВариантИспользования > 2 Тогда
			ТекстТипОбъекта = ТекстТипОбъекта + " " + НСтр("ru = 'по направлению деятельности ""%НаправлениеДеятельности%""'");
			ТекстТипОбъекта = СтрЗаменить(ТекстТипОбъекта, "%НаправлениеДеятельности%", НаправлениеДеятельности);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УдалитьНастройки", "Заголовок", ТекстТипОбъекта);
		
		Если Пользователи.ЭтоПолноправныйПользователь() Или
			((ВариантИспользования = 2 ИЛИ (ВариантИспользования = 3 И ПраваПользователяПовтИсп.ДобавлениеИзменениеНастройкиПечатиОбъектов()))
				И ПраваПользователяПовтИсп.СохранениеНастроекПечатиОбъектовПоУмолчанию()) Тогда
			
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УдалитьНастройки", "Видимость", Истина);
			
		КонецЕсли;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "УдалитьНастройки", "Видимость", Ложь);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьТекстВариантаИспользования()
	
	Если ВариантИспользования > 0 Тогда
		ТекстТипОбъекта = НСтр("ru = 'Применяется настройка для документов ""%ТипОбъекта%""'");
		ТекстТипОбъекта = СтрЗаменить(ТекстТипОбъекта, "%ТипОбъекта%", Метаданные.НайтиПоПолномуИмени(ТипОбъекта).Представление());
		
		Если ВариантИспользования = 2 Или ВариантИспользования = 3 Тогда
			ТекстТипОбъекта = ТекстТипОбъекта + " " + НСтр("ru = 'по организации ""%Организация%""'");
			ТекстТипОбъекта = СтрЗаменить(ТекстТипОбъекта, "%Организация%", Организация);
		КонецЕсли;
		
		Если ВариантИспользования = 3 Тогда
			ТекстТипОбъекта = ТекстТипОбъекта + " " + НСтр("ru = 'по направлению деятельности ""%НаправлениеДеятельности%""'");
			ТекстТипОбъекта = СтрЗаменить(ТекстТипОбъекта, "%НаправлениеДеятельности%", НаправлениеДеятельности);
		КонецЕсли;
	Иначе
		ТекстТипОбъекта = НСтр("ru = 'Применяется настройка по умолчанию для документов ""%ТипОбъекта%""'");
		ТекстТипОбъекта = СтрЗаменить(ТекстТипОбъекта, "%ТипОбъекта%", Метаданные.НайтиПоПолномуИмени(ТипОбъекта).Представление());
	КонецЕсли;
	
	ВариантИспользованияТекст = ТекстТипОбъекта;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиКлиент(ЗаписыватьОрганизацию = Ложь, ЗаписыватьНаправлениеДеятельности = Ложь)
	
	ЗаписатьНастройкиПечатиСервер(ЗаписыватьОрганизацию, ЗаписыватьНаправлениеДеятельности);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Настройки печати сохранены'"),
		,
		,
		БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНастройкиСервер()
	
	Если ВариантИспользования = 1 Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.УдалитьНастройкиПечатиОбъекта(ТипОбъекта, Справочники.Организации.ПустаяСсылка(), Справочники.НаправленияДеятельности.ПустаяСсылка());
	ИначеЕсли ВариантИспользования = 2 Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.УдалитьНастройкиПечатиОбъекта(ТипОбъекта, Организация, Справочники.НаправленияДеятельности.ПустаяСсылка());
	ИначеЕсли ВариантИспользования = 3 Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.УдалитьНастройкиПечатиОбъекта(ТипОбъекта, Организация, НаправлениеДеятельности);
	КонецЕсли;
	
	РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
		ТипОбъекта,
		?(Объекты.Количество() = 1, Объекты[0].Значение, Неопределено),
		ВариантИспользования);
	
	ОбновитьКомандуУдаленияНастроек();
	ОбновитьТекстВариантаИспользования();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройкиПечатиСервер(ЗаписыватьОрганизацию = Ложь, ЗаписыватьНаправлениеДеятельности = Ложь)
	
	Модифицированность = Ложь;
	РегистрыСведений.НастройкиПечатиОбъектов.ЗаписатьНастройкиПечатиОбъекта(
		ТипОбъекта,
		КомплектПечатныхФорм.Выгрузить(),
		ЗаписыватьОрганизацию,
		ЗаписыватьНаправлениеДеятельности,
		?(Объекты.Количество() = 1, Объекты[0].Значение, Неопределено));
	
	РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
		ТипОбъекта,
		?(Объекты.Количество() = 1, Объекты[0].Значение, Неопределено),
		ВариантИспользования);
	
	ОбновитьТекстВариантаИспользования();
	ОбновитьКомандуУдаленияНастроек();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтандартныеНастройкиСервер()
	
	ВариантИспользования = 0;
	КомплектПечатныхФорм.Очистить();
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ТипОбъекта);
	
	Если ЗначениеЗаполнено(НаправлениеДеятельностиПользователя) Тогда
		ДополнительныеПараметры = НаправлениеДеятельностиПользователя;
	Иначе
		ДополнительныеПараметры = Неопределено;
	КонецЕсли;
	
	КоллекцияПечатныхФорм = МенеджерОбъекта.КомплектПечатныхФорм(ДополнительныеПараметры);
	РегистрыСведений.НастройкиПечатиОбъектов.ДополнитьКомплектВнешнимиПечатнымиФормами(ТипОбъекта, КоллекцияПечатныхФорм);
	ОбновитьТекстВариантаИспользования();
	
	Для Каждого ТекСтрока Из КоллекцияПечатныхФорм Цикл
		
		НоваяСтрока = КомплектПечатныхФорм.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПоляНаправлениеДеятельности()
	
	ВидимостьПоля = ТипОбъекта = "Справочник.ДоговорыКонтрагентов"
		И (РольДоступна("ПолныеПрава") Или РольДоступна("вогПечатьОригиналаДоговора")
			// ++ VOG Солодов В.В. 24.06.2021 DEV-550
			Или РольДоступна("ДоступКНаправлениюДеятельностиВДоговорах"));
			// -- VOG Солодов В.В. 24.06.2021 DEV-550
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"НаправлениеДеятельностиПользователя",
		"Видимость",
		ВидимостьПоля);
	
КонецПроцедуры

// ++ VOG Солодов В.В. 25.06.2021 DEV-69
&НаСервере
Процедура ЗаполнитьТаблицуКоммерческихСоглашений()
	
	КоммерческиеСоглашения.Очистить();
	
	Если Объекты.Количество() > 0 И ТипЗнч(Объекты[0].Значение) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		ДействующиеСоглашения = Справочники.вогКоммерческиеСоглашения.ПолучитьДействующиеСоглашения(
			Объекты[0].Значение, Неопределено);
		
		Для Каждого СтрокаТабличнойЧасти Из ДействующиеСоглашения Цикл
			
			НоваяСтрока = КоммерческиеСоглашения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТабличнойЧасти);
			
		КонецЦикла;
		
	КонецЕсли;
	
	КоммерческоеСоглашение = ОтборСоглашенийПоНаправлениюДеятельности(
		НаправлениеДеятельностиПользователя, КоммерческиеСоглашения);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОтборСоглашенийПоНаправлениюДеятельности(Знач НаправлениеДеятельности, Знач КоммерческиеСоглашения)
	
	ПараметрыОтбораСтрок = Новый Структура;
	ПараметрыОтбораСтрок.Вставить("Основное", Истина);
	
	Если ЗначениеЗаполнено(НаправлениеДеятельности) Тогда
		ПараметрыОтбораСтрок.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	КонецЕсли;
	
	НайденныеСтроки = КоммерческиеСоглашения.НайтиСтроки(ПараметрыОтбораСтрок);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		КоммерческоеСоглашение 	= НайденныеСтроки[0].КоммерческоеСоглашение;
	Иначе
		КоммерческоеСоглашение 	= ПредопределенноеЗначение("Справочник.вогКоммерческиеСоглашения.ПустаяСсылка");
	КонецЕсли;
	
	Возврат КоммерческоеСоглашение;
	
КонецФункции
// -- VOG Солодов В.В. 25.06.2021 DEV-69

#КонецОбласти

#Область Инициализация

ВыполняетсяЗакрытие = Ложь;

#КонецОбласти
