#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ЗаполнитьВремяОкончанияДляВзаимодействий(Параметры) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1000
	                      |	CRM_СобытияКалендаря.ПериодНачало КАК ПериодНачало,
	                      |	CRM_СобытияКалендаря.ПериодОкончание,
	                      |	CRM_СобытияКалендаря.Пользователь,
	                      |	CRM_СобытияКалендаря.Объект,
	                      |	CRM_СобытияКалендаря.Партнер
	                      |ИЗ
	                      |	РегистрСведений.CRM_СобытияКалендаря КАК CRM_СобытияКалендаря
	                      |ГДЕ
	                      |	CRM_СобытияКалендаря.ПериодОкончание = ДАТАВРЕМЯ(1, 1, 1)
	                      |	И CRM_СобытияКалендаря.Объект ССЫЛКА Документ.CRM_Взаимодействие
	                      |	И CRM_СобытияКалендаря.ПериодНачало <> НАЧАЛОПЕРИОДА(CRM_СобытияКалендаря.ПериодНачало, ДЕНЬ)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ПериодНачало УБЫВ");
						  
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		Параметры.ОбработкаЗавершена = Ложь;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.CRM_СобытияКалендаря.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
		НаборЗаписей.Прочитать();
		
		Для каждого Запись из НаборЗаписей Цикл
			Если Запись.ПериодНачало <> НачалоДня(Запись.ПериодНачало) И НЕ ЗначениеЗаполнено(Запись.ПериодОкончание) Тогда
				Запись.ПериодОкончание = Запись.ПериодНачало + 30*60;
			КонецЕсли;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей,, Ложь, Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли