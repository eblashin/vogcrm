
// + Тищенко В.В.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Идентификатор 	= Параметры.Идентификатор;
	ТипОтображения	= Параметры.ТипОтображения;
	
	Если ЭтоАдресВременногоХранилища(Параметры.Адрес) Тогда
		ВходящаяСтруктура 			= ПолучитьИзВременногоХранилища(Параметры.Адрес);
		ИмяГиперссылки 				= ВходящаяСтруктура.Имя;
		ТекстОбработкчика 			= ВходящаяСтруктура.ТекстОбработчика;
		Шаблон						= ВходящаяСтруктура.Шаблон;
		ОтображатьКоличество		= ВходящаяСтруктура.ОтображатьКоличество;
		ТекстОбработчикаКоличество.УстановитьТекст(ВходящаяСтруктура.ТекстОбработчикаКоличество);
	КонецЕсли;
	
	// Видимость количество гипперссылок
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ГруппаНастройкиКоличествоГипперссылок","Видимость",ОтображатьКоличество);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОткрытиеФормыПриИзменении(Элемент)
	ТекстОбработкчика = "";
	ОпределитьРежимРедактирования();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектБазыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//СтандартнаяОбработка 	= Ложь;
	//СписокВыбора 			= Новый СписокЗначений;
	//ЗаполнитьСписокОбъектыМетаданных(СписокВыбора);
	//
	//Для каждого ТекЭлемент Из СписокВыбора Цикл
	//	Если СтрНайти(ТекЭлемент.Значение,"(Документ)") = 0 Тогда
	//		ТекЭлемент.Картинка = БиблиотекаКартинок.Справочник;
	//	Иначе
	//		ТекЭлемент.Картинка = БиблиотекаКартинок.Документ;
	//	КонецЕсли;
	//КонецЦикла;
	//
	//ДанныеВыбора 			= СписокВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент)
	ПолучитьТекстОбработчика();
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьКоличествоПриИзменении(Элемент)		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ГруппаНастройкиКоличествоГипперссылок","Видимость",ОтображатьКоличество);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если ЗначениеЗаполнено(ИмяГиперссылки) Тогда
		Закрыть(СериализоватьДанные());
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru= 'Укажите имя гипрессылки'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонструкторЗапроса(Команда)
		
	ТекстЗапросаВФорме 	= СокрЛП(ТекстОбработчикаКоличество.ПолучитьТекст());
	
	КонструкторЗапроса 	= Новый КонструкторЗапроса(ТекстЗапросаВФорме);
	Оповещение 			= Новый ОписаниеОповещения("ПослеЗакрытияКонструктораЗапроса", ЭтотОбъект, Неопределено);
	КонструкторЗапроса.Показать(Оповещение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОпределитьРежимРедактирования()
	//ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ГруппаОткрытиеФормы","Видимость",ОткрытиеФормы);
	//ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,"ГруппаПроизвольныйКод","Видимость",НЕ ОткрытиеФормы);
КонецПроцедуры

&НаСервере
Функция СериализоватьДанные()
	Возврат	 Новый Структура("Имя,ТекстОбработчика,Шаблон,ОтображатьКоличество,ТекстОбработчикаКоличество"
							,ИмяГиперссылки,ТекстОбработкчика,Шаблон,ОтображатьКоличество,ТекстОбработчикаКоличество.ПолучитьТекст());
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокОбъектыМетаданных(ДанныеВыбора)
	
	ИдентификаторСправочники 	= Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоНаименованию("Справочники");
	ИдентификаторДокументы 		= Справочники.ИдентификаторыОбъектовМетаданных.НайтиПоНаименованию("Документы");
	
	МассивИдентификаторов 		= Новый Массив;
	МассивИдентификаторов.Добавить(ИдентификаторСправочники);
	МассивИдентификаторов.Добавить(ИдентификаторДокументы);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Спр.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ИдентификаторыОбъектовМетаданных КАК Спр
	|ГДЕ
	|	Спр.Родитель В (&Родитель)
	|	И НЕ Спр.ПометкаУдаления");
	Запрос.УстановитьПараметр("Родитель",МассивИдентификаторов);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
		Пока ВыборкаИзРезультатаЗапроса.Следующий() Цикл
			ДанныеВыбора.Добавить(ВыборкаИзРезультатаЗапроса.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьТекстОбработчика()
	
	Если ЗначениеЗаполнено(Шаблон) Тогда
		ТекстОбработкчика = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Шаблон,"ПроизвольныйКод",Истина);
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПослеЗакрытияКонструктораЗапроса(ТекстЗапросаВФорме, ДополнительныеПараметры) Экспорт
	Если ТекстЗапросаВФорме <> Неопределено Тогда
		ТекстОбработчикаКоличество.Очистить();
		ТекстОбработчикаКоличество.УстановитьТекст(ТекстЗапросаВФорме);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

// - Тищенко В.В.