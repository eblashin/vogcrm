
#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнениеИсточниковЛидовПриОбновлении() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_УчетныеЗаписиМессенджеров.Ссылка
	                      |ИЗ
	                      |	Справочник.CRM_УчетныеЗаписиМессенджеров КАК CRM_УчетныеЗаписиМессенджеров
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	УчетныеЗаписиЭлектроннойПочты.Ссылка
	                      |ИЗ
	                      |	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		УчетнаяЗапись = Выборка.Ссылка.ПолучитьОбъект();
		УчетнаяЗапись.CRM_ИсточникЛидов = Истина;
		УчетнаяЗапись.Записать();
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнениеСостоянийЛидовПриОбновлении(Параметры) Экспорт
	
	Параметры.ОбработкаЗавершена = Истина;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
	                      |	ЭлектронноеПисьмоВходящее.Ссылка
	                      |ИЗ
	                      |	Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	                      |		ПО CRM_СостоянияЛидов.Лид = ЭлектронноеПисьмоВходящее.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
	                      |		ПО ЭлектронноеПисьмоВходящее.Ссылка = CRM_ЖурналДокументов.Объект
	                      |ГДЕ
	                      |	CRM_ЖурналДокументов.CRM_Интерес <> ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
	                      |	И CRM_ЖурналДокументов.CRM_Интерес.Дата < CRM_ЖурналДокументов.Дата
	                      |	И CRM_СостоянияЛидов.Лид ЕСТЬ NULL");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.CRM_СостоянияЛидов.ЗаписатьСостояниеЛида(Выборка.Ссылка, Справочники.CRM_СостоянияЛидов.Сконвертирован);
	КонецЦикла;
	Параметры.ОбработкаЗавершена = ?(Параметры.ОбработкаЗавершена, Выборка.Количество()=0, ЛОЖЬ);
		
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
	                      |	ЭлектронноеПисьмоВходящее.Ссылка
	                      |ИЗ
	                      |	Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.CRM_ОбъектыАРМ КАК CRM_ОбъектыАРМ
	                      |		ПО ЭлектронноеПисьмоВходящее.Ссылка = CRM_ОбъектыАРМ.Объект
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	                      |		ПО CRM_СостоянияЛидов.Лид = ЭлектронноеПисьмоВходящее.Ссылка
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
	                      |		ПО ЭлектронноеПисьмоВходящее.Ссылка = CRM_ЖурналДокументов.Объект
	                      |ГДЕ
	                      |	CRM_ЖурналДокументов.CRM_Интерес = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
	                      |	И CRM_СостоянияЛидов.Лид ЕСТЬ NULL");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.CRM_СостоянияЛидов.ЗаписатьСостояниеЛида(Выборка.Ссылка, Справочники.CRM_СостоянияЛидов.Новый);
	КонецЦикла;
	Параметры.ОбработкаЗавершена = ?(Параметры.ОбработкаЗавершена, Выборка.Количество()=0, ЛОЖЬ);
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 500
	                      |	ЭлектронноеПисьмоВходящее.Ссылка
	                      |ИЗ
	                      |	Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
	                      |		ПО ЭлектронноеПисьмоВходящее.Ссылка = CRM_ЖурналДокументов.Объект
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	                      |		ПО CRM_СостоянияЛидов.Лид = ЭлектронноеПисьмоВходящее.Ссылка
	                      |ГДЕ
	                      |	ЭлектронноеПисьмоВходящее.CRM_СкрытьВАРМ
	                      |	И CRM_ЖурналДокументов.CRM_Интерес = ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)
	                      |	И CRM_СостоянияЛидов.Лид ЕСТЬ NULL");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.CRM_СостоянияЛидов.ЗаписатьСостояниеЛида(Выборка.Ссылка, Справочники.CRM_СостоянияЛидов.Отклонен);
	КонецЦикла;
	Параметры.ОбработкаЗавершена = ?(Параметры.ОбработкаЗавершена, Выборка.Количество()=0, ЛОЖЬ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаписатьСостояниеЛида(Лид, Состояние = Неопределено, ПричинаОтклонения = Неопределено, Комментарий="") Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_ЖурналДокументов.CRM_Интерес
	                      |ИЗ
	                      |	РегистрСведений.CRM_ЖурналДокументов КАК CRM_ЖурналДокументов
	                      |ГДЕ
	                      |	CRM_ЖурналДокументов.Объект = &Объект
	                      |	И CRM_ЖурналДокументов.CRM_Интерес <> ЗНАЧЕНИЕ(Документ.CRM_Интерес.ПустаяСсылка)");
	
	Запрос.УстановитьПараметр("Объект", Лид);
	Если НЕ Запрос.Выполнить().Пустой() И (Состояние = Неопределено ИЛИ Состояние = Справочники.CRM_СостоянияЛидов.Новый) Тогда
		Возврат;
	КонецЕсли;
	МенеджерЗаписи = РегистрыСведений.CRM_СостоянияЛидов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Лид = Лид;
	МенеджерЗаписи.Состояние = ?(ЗначениеЗаполнено(Состояние), Состояние, Справочники.CRM_СостоянияЛидов.Новый);
	МенеджерЗаписи.ПричинаОтклонения = ПричинаОтклонения;
	МенеджерЗаписи.Комментарий = Комментарий;
	МенеджерЗаписи.Записать();
КонецПроцедуры
	
Процедура УдалитьСостояниеЛида(Лид) Экспорт
	НаборЗаписей = РегистрыСведений.CRM_СостоянияЛидов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Лид.Установить(Лид);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество()>0 Тогда
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЕсли;
КонецПроцедуры
	
Функция СсылкаЯвляетсяЛидом(Ссылка, СУказаниемПричиныОтклонения = Ложь) Экспорт
	ЭтоЛид = Ложь;
	Если Метаданные.РегистрыСведений.CRM_СостоянияЛидов.Измерения.Лид.Тип.СодержитТип(ТипЗнч(Ссылка)) Тогда
		МетаданныеОбъекта = Ссылка.Метаданные();
		Если CRM_ОбщегоНазначенияСервер.ЕстьРеквизитДокумента("УчетнаяЗапись", МетаданныеОбъекта) Тогда
			Если Ссылка.УчетнаяЗапись.CRM_ИсточникЛидов Тогда
				Если СУказаниемПричиныОтклонения Тогда
					ЭтоЛид = Ссылка.УчетнаяЗапись.CRM_ИсточникЛидов И Ссылка.УчетнаяЗапись.CRM_УказыватьПричинуОтклонения;
				Иначе	
					ЭтоЛид = Ссылка.УчетнаяЗапись.CRM_ИсточникЛидов;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ЭтоЛид = Истина;
		КонецЕсли;
	КонецЕсли;
	Возврат ЭтоЛид;
КонецФункции

Функция ЕстьЛидыВМассивеСсылок(МассивСсылок, СУказаниемПричиныОтклонения) Экспорт
	Для каждого Ссылка из МассивСсылок Цикл
		Если СсылкаЯвляетсяЛидом(Ссылка, СУказаниемПричиныОтклонения) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

Функция ЭтоТекущийЛид(Ссылка) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияЛидов.Состояние
	                      |ИЗ
	                      |	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	                      |ГДЕ
	                      |	CRM_СостоянияЛидов.Лид = &Лид
	                      |	И CRM_СостоянияЛидов.Состояние В (&СостоянияТекущихЛидов)");
	Запрос.УстановитьПараметр("Лид", Ссылка);
	СостоянияТекущихЛидов = Новый СписокЗначений;
	СостоянияТекущихЛидов.Добавить(Справочники.CRM_СостоянияЛидов.Новый);
	Запрос.УстановитьПараметр("СостоянияТекущихЛидов", СостоянияТекущихЛидов);
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ПолучитьТекущееСостояниеЛида(Ссылка) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	CRM_СостоянияЛидов.Состояние,
	                      |	CRM_СостоянияЛидов.Комментарий,
	                      |	CRM_СостоянияЛидов.ПричинаОтклонения
	                      |ИЗ
	                      |	РегистрСведений.CRM_СостоянияЛидов КАК CRM_СостоянияЛидов
	                      |ГДЕ
	                      |	CRM_СостоянияЛидов.Лид = &Лид");
	Запрос.УстановитьПараметр("Лид", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Состояние = Новый Структура;
		Состояние.Вставить("Состояние", Выборка.Состояние);
		Состояние.Вставить("Комментарий", Выборка.Комментарий);
		Состояние.Вставить("ПричинаОтклонения", Выборка.ПричинаОтклонения);
		Возврат Состояние;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

#КонецОбласти
