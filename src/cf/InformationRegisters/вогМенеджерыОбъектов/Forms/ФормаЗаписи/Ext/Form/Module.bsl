
// + Тищенко В.В.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого КлючЗначение Из  Параметры.ЗначенияЗаполнения Цикл
		Элемент = Элементы.Найти(КлючЗначение.Ключ);
		Если Элемент = Неопределено Тогда
			Продолжить;
			
		КонецЕсли;
		
		Элемент.Видимость = Не ЗначениеЗаполнено(КлючЗначение.Значение);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ ПроверитьДоступностьзаписи() И НЕ ОтключитьПроверку Тогда
		Отказ = Истина;
		ОП = Новый ОписаниеОповещения("ПроверитьДоступностьЗавершение",ЭтаФорма,Неопределено);
		ТекстВопроса = НСтр("ru = 'Уже есть сотрудник  в вашем подразделении  по вашему направлению, работающий с данной ТТ. При внесении изменении текущий сотрудник не сможет работать с объектом. Продолжить?'");
		ПоказатьВопрос(ОП,ТекстВопроса,РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_МенеджерОбъекта", Запись.Менеджер)
КонецПроцедуры

&НаКлиенте
Процедура МенеджерПриИзменении(Элемент)
	
	ЗаполнитьИнформацию();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнформацию()
	
	Подразделение  					= Справочники.СтруктураПредприятия.ПолучитьОбособленноеПодразделение(Запись.Менеджер.Подразделение);
	Запись.Подразделение 			= Подразделение;
	Запись.Роль						= Запись.Менеджер.CRM_ДолжностнаяПозиция.Роль;
	Запись.НаправлениеДеятельности 	= Запись.Менеджер.CRM_НаправлениеДеятельности;
	Запись.ДатаНачала				= ТекущаяДата();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПроверитьДоступностьЗаписи()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	РС.Менеджер КАК Менеджер,
	                      |	РС.Владелец КАК Владелец,
	                      |	РС.Подразделение КАК Подразделение,
	                      |	РС.Роль КАК Роль,
	                      |	РС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	                      |	РС.ДатаНачала КАК ДатаНачала,
	                      |	РС.ДатаОкончания КАК ДатаОкончания
	                      |ИЗ
	                      |	РегистрСведений.вогМенеджерыОбъектов КАК РС
	                      |ГДЕ
	                      |	РС.Владелец = &Владелец
	                      |	И РС.Подразделение = &Подразделение
	                      |	И РС.Роль = &Роль
	                      |	И РС.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
						  // ++ VOG Солодов В.В. 20.01.2020 
						  |И РС.НаправлениеДеятельности = &НаправлениеДеятельности");
						  // -- VOG Солодов В.В. 20.01.2020
	Запрос.УстановитьПараметр("Владелец"		,Запись.Владелец);
	Запрос.УстановитьПараметр("Подразделение"	,Справочники.СтруктураПредприятия.ПолучитьОбособленноеПодразделение(Запись.Менеджер.Подразделение));
	Запрос.УстановитьПараметр("Роль"			,Запись.Роль);
	Запрос.УстановитьПараметр("ДатаПроверки"	,КонецДня(ТекущаяДата()));
	// ++ VOG Солодов В.В. 20.01.2020 
	Запрос.УстановитьПараметр("НаправлениеДеятельности",Запись.НаправлениеДеятельности);
	// -- VOG Солодов В.В. 20.01.2020
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Пустой();
	
КонецФункции

&НаКлиенте
Процедура ПроверитьДоступностьЗавершение(РезультатОтвета,ДополнительныеПараметры) Экспорт
	
	Если РезультатОтвета <> Неопределено И РезультатОтвета = КодВозвратаДиалога.Да Тогда
		ОбновитьДанные();
		ОтключитьПроверку = Истина;
		Записать();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанные()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	РС.Владелец КАК Владелец,
	                      |	РС.Менеджер КАК Менеджер,
	                      |	РС.Подразделение КАК Подразделение,
	                      |	РС.Роль КАК Роль,
	                      |	РС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	                      |	РС.ДатаНачала КАК ДатаНачала,
	                      |	РС.ДатаОкончания КАК ДатаОкончания
	                      |ИЗ
	                      |	РегистрСведений.вогМенеджерыОбъектов КАК РС
	                      |ГДЕ
	                      |	РС.Владелец = &Владелец
	                      |	И РС.Подразделение = &Подразделение
	                      |	И РС.Роль = &Роль
	                      |	И РС.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
						  // ++ VOG Солодов В.В. 20.01.2020 
						  |И РС.НаправлениеДеятельности = &НаправлениеДеятельности");
						  // -- VOG Солодов В.В. 20.01.2020
	Запрос.УстановитьПараметр("Владелец"		,Запись.Владелец);
	Запрос.УстановитьПараметр("Подразделение"	,Справочники.СтруктураПредприятия.ПолучитьОбособленноеПодразделение(Пользователи.ТекущийПользователь().Подразделение));
	Запрос.УстановитьПараметр("Роль"			,Запись.Роль);
	Запрос.УстановитьПараметр("ДатаПроверки"	,КонецДня(ТекущаяДата()));
	// ++ VOG Солодов В.В. 20.01.2020 
	Запрос.УстановитьПараметр("НаправлениеДеятельности",Запись.НаправлениеДеятельности);
	// -- VOG Солодов В.В. 20.01.2020
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл	
			МенеджерЗаписи			 		= РегистрыСведений.вогМенеджерыОбъектов.СоздатьМенеджерЗаписи();
			//МенеджерЗаписи.Период 			= ТекущаяДата();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи,Выборка);
			МенеджерЗаписи.ДатаОкончания 	= ТекущаяДата();
			МенеджерЗаписи.Записать();	
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// - Тищенко В.В.