Функция ПолучитьНеобходимыеЭтапыСогласования(Сотрудник) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураВозврата = Новый Структура("СогласованиеРРО, СогласованиеРТН, СогласованиеГД, ПроверкаРРО, ПроверкаРТН, ПроверкаГД", Ложь, Ложь, Ложь, Ложь, Ложь, Ложь);
	
	Ответственные = ПолучитьСогласующихПоПользователю(Сотрудник);
	
	Если Ответственные.ЭталоннаяПозиция.Код = "000000109" 			//генеральный директор подразделения
 		ИЛИ Ответственные.ЭталоннаяПозиция.Код = "000000265" 		//++ VOG Ульянов И.В. 27.04.2020 CRM-584 Директор по мерчендайзингу и розничным продажам	
		ИЛИ Ответственные.ЭталоннаяПозиция.Код = "000000100" 		//директор по развитию
		// ++ VOG Солодов В.В. 23.08.2021 DEV-892
		Или Ответственные.ЭталоннаяПозиция.Код = "000000286" Тогда // зам. дтн
		// -- VOG Солодов В.В. 23.08.2021 DEV-892
		СтруктураВозврата.СогласованиеРРО = Ложь;
		СтруктураВозврата.СогласованиеРТН = Ложь;
		СтруктураВозврата.СогласованиеГД  = Ложь;
		СтруктураВозврата.ПроверкаРРО = Ложь;
		СтруктураВозврата.ПроверкаРТН = Ложь;
		СтруктураВозврата.ПроверкаГД  = Ложь;
	ИначеЕсли Сотрудник = Ответственные.РТН тогда
	    СтруктураВозврата.СогласованиеРРО = Ложь;
		СтруктураВозврата.СогласованиеРТН = Ложь;
		СтруктураВозврата.СогласованиеГД  = Истина;	
	    СтруктураВозврата.ПроверкаРРО = Ложь;
		СтруктураВозврата.ПроверкаРТН = Ложь;
		СтруктураВозврата.ПроверкаГД  = Истина;	
	ИначеЕсли ЗначениеЗаполнено(Ответственные.РРО) = ЛОЖЬ ИЛИ (Сотрудник = Ответственные.РРО) ИЛИ (Ответственные.РРО = Ответственные.РТН) тогда
	    СтруктураВозврата.СогласованиеРРО = Ложь;
		СтруктураВозврата.СогласованиеРТН = Истина;
		СтруктураВозврата.СогласованиеГД  = Истина;
	    СтруктураВозврата.ПроверкаРРО = Ложь;
		Если Ответственные.ГД = Ответственные.РТН тогда
			СтруктураВозврата.ПроверкаРТН = Ложь;
		Иначе	
			СтруктураВозврата.ПроверкаРТН = Истина;
		КонецЕсли;	
		СтруктураВозврата.ПроверкаГД  = Истина;		
	Иначе
	    СтруктураВозврата.СогласованиеРРО = Истина;
		СтруктураВозврата.СогласованиеРТН = Истина;
		СтруктураВозврата.СогласованиеГД  = Истина;	
	    СтруктураВозврата.ПроверкаРРО = Истина;
		Если Ответственные.ГД = Ответственные.РТН тогда
			СтруктураВозврата.ПроверкаРТН = Ложь;
		Иначе	
			СтруктураВозврата.ПроверкаРТН = Истина;
		КонецЕсли;
		СтруктураВозврата.ПроверкаГД  = Истина;	
	КонецЕсли;	
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ПолучитьСогласующихПоПользователю(Сотрудник) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Сотрудник,
		|	РРО.Исполнитель КАК РРО,
		|	РТН.Исполнитель КАК РТН,
		|	ГД.Исполнитель КАК ГД,
		|	Пользователи.CRM_ДолжностнаяПозиция.ЭталоннаяПозиция КАК ЭталоннаяПозиция
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсполнителиЗадач КАК РРО
		|		ПО (РРО.ОсновнойОбъектАдресации = Пользователи.Подразделение)
		|			И (РРО.РольИсполнителя = &РольРРО)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсполнителиЗадач КАК РТН
		|		ПО (РТН.ОсновнойОбъектАдресации = Пользователи.Подразделение
		|				ИЛИ РТН.ОсновнойОбъектАдресации = Пользователи.Подразделение.Родитель)
		|			И (РТН.РольИсполнителя = &РольРТН)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсполнителиЗадач КАК ГД
		|		ПО (ГД.ОсновнойОбъектАдресации = Пользователи.Подразделение
		|				ИЛИ ГД.ОсновнойОбъектАдресации = Пользователи.Подразделение.Родитель
		|				ИЛИ ГД.ОсновнойОбъектАдресации = Пользователи.Подразделение.Родитель.Родитель)
		|			И (ГД.РольИсполнителя = &РольГД)
		|ГДЕ
		|	Пользователи.Ссылка = &Пользователь";
	
	РольРРО = Справочники.РолиИсполнителей.НайтиПоКоду("000000031");
	РольРТН = Справочники.РолиИсполнителей.НайтиПоКоду("000000015");
	РольГД = Справочники.РолиИсполнителей.НайтиПоКоду("000000014");
	
	СтруктураВозврата = Новый Структура("Сотрудник, РРО, РТН, ГД, ЭталоннаяПозиция");
	
	Запрос.УстановитьПараметр("Пользователь", Сотрудник);
	Запрос.УстановитьПараметр("РольГД", РольГД);
	Запрос.УстановитьПараметр("РольРРО", РольРРО);
	Запрос.УстановитьПараметр("РольРТН", РольРТН);
	
	РезультатЗапроса = Запрос.Выполнить();	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, Выборка);
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции	

Процедура УстановитьЭтапСогласования(Сотрудник, Командировка, Этап, ТребуетсяСогласовать = Ложь) Экспорт
	
	НаборЗаписейЭтапыСогласования = РегистрыСведений.вогЭтапыСогласованияКомандировок.СоздатьНаборЗаписей();
	НаборЗаписейЭтапыСогласования.Отбор.Командировка.Установить(Командировка);
	НаборЗаписейЭтапыСогласования.Отбор.Сотрудник.Установить(Сотрудник);
	ЗаписьЭтапыСогласования = НаборЗаписейЭтапыСогласования.Добавить();
	ЗаписьЭтапыСогласования.Командировка = Командировка;
	ЗаписьЭтапыСогласования.Сотрудник = Сотрудник;
	ЗаписьЭтапыСогласования.Этап = Этап;
	// +++ VOG Кулаков П.Л. 29.07.2020 CRM-806
	ЗаписьЭтапыСогласования.ТребуетсяСогласоватьЗадачи = ТребуетсяСогласовать;
	// --- VOG Кулаков П.Л.
	НаборЗаписейЭтапыСогласования.Записать(Истина);
	
КонецПроцедуры	
	