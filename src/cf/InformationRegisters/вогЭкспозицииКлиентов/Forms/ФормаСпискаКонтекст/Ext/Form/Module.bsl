
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВладелецЭкспозиции = Параметры.ВладелецЭкспозиции;
	Если Параметры.ВладелецЭкспозиции = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Список экспозиций можно посмотреть
                                |только в форме объекта-владельца.'");
	КонецЕсли;
	
	времНастройки = CRM_ХранилищеНастроек.Загрузить(ЭтотОбъект.ИмяФормы, "Настройки");
	Настройки = ?(времНастройки = Неопределено, ПолучитьНастройкиПоУмолчанию(), времНастройки);
	Если Не Настройки.Свойство("ОтображатьКоллекции") Тогда
		Настройки.Вставить("ОтображатьКоллекции", Ложь);	
	
	КонецЕсли;
	
	Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	РежимОтображения 	= Настройки.РежимОтображения;
	ОтображатьКоллекции = Настройки.ОтображатьКоллекции;
	
	Заголовок = Строка(ВладелецЭкспозиции);
	
	ИнициализироватьДанныеЭкспозциции();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;	
	СохранитьНастройки();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Развернуть(Команда)
	РазвернутьСтрокиДерева(Элементы.ДеревоЭкспозиций, "ДеревоЭкспозиций");	
КонецПроцедуры

&НаКлиенте
Процедура Свернуть(Команда)
	РазвернутьСтрокиДерева(Элементы.ДеревоЭкспозиций, "ДеревоЭкспозиций", Ложь);	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточку(Команда)
	
	ТекущиеДанные = Элементы.ДеревоЭкспозиций.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено
	  И ЗначениеЗаполнено(ТекущиеДанные.Группировка) Тогда
		ПоказатьЗначение(, ТекущиеДанные.Группировка);	
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РежимОтображенияПриИзменении(Элемент)
	
	Настройки.РежимОтображения = РежимОтображения;
	ПодключитьОбработчикОжидания("Подключаемый_ИнициализироватьДанныеЭкспозциции", 0.1, Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьКоллекцииПриИзменении(Элемент)
	
	Настройки.ОтображатьКоллекции = ОтображатьКоллекции;
	ПодключитьОбработчикОжидания("Подключаемый_ИнициализироватьДанныеЭкспозциции", 0.1, Истина);	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеПроцедурыФункции

&НаКлиенте
Процедура Подключаемый_ИнициализироватьДанныеЭкспозциции()
	
	ИнициализироватьДанныеЭкспозциции();	
	РазвернутьСтрокиДерева(Элементы.ДеревоЭкспозиций, "ДеревоЭкспозиций");
	
КонецПроцедуры // Подключаемый_ИнициализироватьДанныеЭкспозциции()

&НаКлиенте
Процедура Подключаемый_ФайлКартинкиАдресНажатие(Элемент, СтандартнаяОбработка)
	ФайлКартинкиАдресНажатиеСервер(Элемент.Имя, СтандартнаяОбработка);	
КонецПроцедуры // Подключаемый_ФайлКартинкиАдресНажатие()

&НаСервере
Процедура ФайлКартинкиАдресНажатиеСервер(ИмяЭлемента, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	СтрокаОписания = НайтиСтрокуОписания(ЭтаФорма, ИмяЭлемента);
	Если СтрокаОписания = Неопределено Тогда
		Возврат;
		
	КонецЕсли;
	
	СтрокаКэша = НайтиСтрокуКэшаРеспондента(ЭтотОбъект, СтрокаОписания.Параметры);
	Если СтрокаКэша = Неопределено Тогда
		Возврат;
		
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(СтрокаКэша.ФайлКартинкиАдрес) Тогда
		ТекущийАдрес = ЭтотОбъект[ИмяЭлемента];
		
		ЭтотОбъект[ИмяЭлемента]		 = СтрокаКэша.ФайлКартинкиАдрес;
		СтрокаКэша.ФайлКартинкиАдрес = ТекущийАдрес;
		
	КонецЕсли;
	
КонецПроцедуры // ФайлКартинкиАдресНажатиеСервер()

#КонецОбласти

#Область ВспомогательныеПроцедурыФункции

&НаСервере
Процедура ИнициализироватьДанныеЭкспозциции()
			
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВладелецЭкспозиции", ВладелецЭкспозиции);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	вогЭкспозицииКлиентов.Стенд КАК Стенд,
		|	вогЭкспозицииКлиентов.Панель КАК Панель
		|ПОМЕСТИТЬ ВТ_Экспозиции
		|ИЗ
		|	РегистрСведений.вогЭкспозицииКлиентов КАК вогЭкспозицииКлиентов
		|ГДЕ
		|	вогЭкспозицииКлиентов.ТорговаяТочка = &ВладелецЭкспозиции";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РежимОтображения = "Дерево" Тогда		
		ЭлементыДерева = ДеревоЭкспозиций.ПолучитьЭлементы();
		ЭлементыДерева.Очистить();
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВТ_Экспозиции.Стенд КАК Стенд,
			|	ВТ_Экспозиции.Стенд.КоличествоМестНаСтенде КАК КоличествоМестНаСтенде,
			|	ВТ_Экспозиции.Панель КАК Панель,
			|	СтороныПанели.Сторона КАК Сторона,
			|	СтороныПанели.Коллекция КАК Коллекция
			|ИЗ
			|	ВТ_Экспозиции КАК ВТ_Экспозиции
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.вогПанели.СтороныПанели КАК СтороныПанели
			|		ПО ВТ_Экспозиции.Панель = СтороныПанели.Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	СтороныПанели.Сторона.Порядок
			|ИТОГИ ПО
			|	Стенд,
			|	Панель,
			|	Сторона";
		
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаСтенд = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСтенд.Следующий() Цикл
			СтрокаСтенд = ЭлементыДерева.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСтенд, ВыборкаСтенд);
			
			ВыборкаПанель = ВыборкаСтенд.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПанель.Следующий() Цикл
				СтрокаПанель = СтрокаСтенд.ПолучитьЭлементы().Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаПанель, ВыборкаПанель);
				
				СтрокаПанель.Группировка    = ВыборкаПанель.Панель;
				СтрокаПанель.Представление  = ВыборкаПанель.Панель;
				СтрокаПанель.ИндексКартинки = 2;
				
				ВыборкаСторона = ВыборкаПанель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаСторона.Следующий() Цикл 
					
					Если ВыборкаСторона.Количество() > 1 Тогда
						СтрокаСторона = СтрокаПанель.ПолучитьЭлементы().Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаСторона, ВыборкаСторона);
						
						СтрокаСторона.Группировка   = ВыборкаСторона.Сторона;
						СтрокаСторона.Представление = ВыборкаСторона.Сторона;
						
					Иначе	
						СтрокаСторона = СтрокаПанель;
						
					КонецЕсли;
					
					Если ОтображатьКоллекции Тогда
						ВыборкаЗаписи = ВыборкаСторона.Выбрать();
						Пока ВыборкаЗаписи.Следующий() Цикл
							Строка = СтрокаСторона.ПолучитьЭлементы().Добавить();
							ЗаполнитьЗначенияСвойств(Строка, ВыборкаЗаписи);
							
							Строка.Группировка   = ВыборкаЗаписи.Коллекция;
							Строка.Представление = ВыборкаЗаписи.Коллекция;
							
						КонецЦикла;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
			СтрокаСтенд.КоличествоПанелейНаСтенде = ВыборкаПанель.Количество();
			СтрокаСтенд.КоличествоМестНаСтенде    = ВыборкаСтенд.КоличествоМестНаСтенде;
			 
			СтрокаСтенд.Группировка   = ВыборкаСтенд.Стенд;
			СтрокаСтенд.Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1 (%2/%3)'"), 
				СтрокаСтенд.Группировка, СтрокаСтенд.КоличествоПанелейНаСтенде, СтрокаСтенд.КоличествоМестНаСтенде);
				
			СтрокаСтенд.ИндексКартинки = 1;
				
		КонецЦикла;
		
	Иначе
		
		Ключ = "Экспозиций";
		Если ТаблицаОписания.Количество() > 0 Тогда
			ВыполнитьОбработкуДанныхФормы(Ключ);	
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВТ_Экспозиции.Стенд КАК Стенд,
			|	ВТ_Экспозиции.Стенд.Представление КАК СтендПредставление,
			|	ВЫБОР
			|		КОГДА ЕСТЬNULL(ВТ_Экспозиции.Стенд.ТипСтенда.КоличествоСтрокВизуализации, 0) = 0
			|			ТОГДА 1
			|		ИНАЧЕ ВТ_Экспозиции.Стенд.ТипСтенда.КоличествоСтрокВизуализации
			|	КОНЕЦ КАК КоличествоСтрокВизуализации,
			|	ВТ_Экспозиции.Панель КАК Панель,
			|	ВТ_Экспозиции.Панель.Представление КАК ПанельПредставление,
			|	ИзображенияСторон.Сторона КАК Сторона,
			|	ИзображенияСторон.ФайлКартинки КАК ФайлКартинки
			|ИЗ
			|	ВТ_Экспозиции КАК ВТ_Экспозиции
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.вогПанели.ИзображенияСторон КАК ИзображенияСторон
			|		ПО ВТ_Экспозиции.Панель = ИзображенияСторон.Ссылка
			|
			|УПОРЯДОЧИТЬ ПО
			|	ИзображенияСторон.Сторона.Порядок
			|ИТОГИ ПО
			|	Стенд,
			|	Панель,
			|	Сторона";
		
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаСтенд = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСтенд.Следующий() Цикл
			ГруппаСтенд = СоздатьНайтиОбычнуюГруппу("ГруппаСтенд_" + ИдентификаторЭлемента(ВыборкаСтенд.Стенд), 
				Элементы.СтраницаСписок,
				ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная,
				ОтображениеОбычнойГруппы.СильноеВыделение,,,
				ВыборкаСтенд.СтендПредставление
			);
			ГруппаСтенд.Поведение 			  = ПоведениеОбычнойГруппы.Свертываемая;
			ГруппаСтенд.ОтображениеУправления = ОтображениеУправленияОбычнойГруппы.Картинка;
			
			ДобавитьОписание(ГруппаСтенд.Имя,,, ВыборкаСтенд.Стенд, Ключ);
			
			Сч = 1;
			ФормироватьГруппу = Истина;
			
			ВыборкаПанель = ВыборкаСтенд.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПанель.Следующий() Цикл
				ИдентификаторЭлемента = ИдентификаторЭлемента(ВыборкаПанель.Стенд) + "__" +  
					ИдентификаторЭлемента(ВыборкаПанель.Панель);
					
				ГруппаПанель = СоздатьНайтиОбычнуюГруппу("ГруппаПанель_" + ИдентификаторЭлемента, 
					ГруппаСтенд,
					ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная,
					ОтображениеОбычнойГруппы.ОбычноеВыделение
				);
				ДобавитьОписание(ГруппаПанель.Имя,,, ВыборкаПанель.Панель, Ключ);
								
				ВыборкаСторона = ВыборкаПанель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаСторона.Следующий() Цикл
					ИдентификаторЭлемента = ИдентификаторЭлемента(ВыборкаСторона.Стенд) + "__" + 
						ИдентификаторЭлемента(ВыборкаСторона.Панель) + "__" +
						XMLСтрока(ВыборкаСторона.Сторона);
						
					ГруппаСторона = СоздатьНайтиОбычнуюГруппу("ГруппаСторона_" + ИдентификаторЭлемента, 
						ГруппаПанель,
						ГруппировкаПодчиненныхЭлементовФормы.Горизонтальная,
						ОтображениеОбычнойГруппы.Нет
					);
					ДобавитьОписание(ГруппаСторона.Имя,,, ВыборкаСторона.Сторона, Ключ);
										
					ВыборкаЗаписи = ВыборкаСторона.Выбрать();
					Если ВыборкаЗаписи.Следующий() Тогда
						ИдентификаторЭлемента = ИдентификаторЭлемента(ВыборкаЗаписи.Стенд) + "__" +
							ИдентификаторЭлемента(ВыборкаЗаписи.Панель) + "__" +
							XMLСтрока(ВыборкаСторона.Сторона) + "__" +
							ИдентификаторЭлемента(ВыборкаЗаписи.ФайлКартинки);
						
						МассивДобавляемыхРеквизитов = Новый Массив;
						МассивДобавляемыхРеквизитов.Добавить(
							Новый РеквизитФормы("ФайлКартинкиАдрес__" + ИдентификаторЭлемента, Новый ОписаниеТипов("Строка")));																				
						ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
						
						Если ВыборкаСтенд.КоличествоСтрокВизуализации > 1 Тогда
							Если ФормироватьГруппу Тогда
								ГруппаФайлы = СоздатьНайтиОбычнуюГруппу("ГруппаФайлы_" + ИдентификаторЭлемента, 
									ГруппаСторона,
									ГруппировкаПодчиненныхЭлементовФормы.Вертикальная,
									ОтображениеОбычнойГруппы.Нет
								);
								ДобавитьОписание(ГруппаФайлы.Имя,,,, Ключ);
								
								ФормироватьГруппу = Ложь;
								
							КонецЕсли;
							
						Иначе
							ГруппаФайлы = ГруппаСторона;		
							
						КонецЕсли;
						
						ЭлементФайлКартинки 				   = Элементы.Добавить("ФайлКартинкиАдрес__" + ИдентификаторЭлемента, Тип("ПолеФормы"), ГруппаФайлы);
						ЭлементФайлКартинки.Вид				   = ВидПоляФормы.ПолеКартинки;
						ЭлементФайлКартинки.ПутьКДанным 	   = "ФайлКартинкиАдрес__" + ИдентификаторЭлемента;
						ЭлементФайлКартинки.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
						ЭлементФайлКартинки.РазмерКартинки	   = РазмерКартинки.Пропорционально;
						ЭлементФайлКартинки.Гиперссылка		   = Истина;
						ЭлементФайлКартинки.Рамка              = Новый Рамка(ТипРамкиЭлементаУправления.БезРамки);
						ЭлементФайлКартинки.Подсказка 		   = ВыборкаЗаписи.ПанельПредставление;
						ЭлементФайлКартинки.ТекстНевыбраннойКартинки = НСтр("ru = 'нет изображения'");

						ЭлементФайлКартинки.РастягиватьПоГоризонтали = Истина;
						ЭлементФайлКартинки.РастягиватьПоВертикали   = Ложь;
						ЭлементФайлКартинки.Ширина					 = 10;
						ЭлементФайлКартинки.Высота					 = 5;
						
						ЭлементФайлКартинки.УстановитьДействие("Нажатие", "Подключаемый_ФайлКартинкиАдресНажатие");
						
						СтрокаОписания = ДобавитьОписание(ЭлементФайлКартинки.Имя, ЭлементФайлКартинки.ПутьКДанным,, ВыборкаЗаписи.Панель, Ключ);
						СтрокаОписания.Параметры = Новый Структура("Стенд, Панель, Сторона",
							ВыборкаЗаписи.Стенд, ВыборкаЗаписи.Панель, ВыборкаЗаписи.Сторона);
							
						Если ВыборкаСтенд.КоличествоСтрокВизуализации > 1 Тогда
							Если Сч % (ВыборкаСтенд.КоличествоСтрокВизуализации) = 0 Тогда
								ФормироватьГруппу = Истина;
								
							КонецЕсли;
							
						КонецЕсли;
							
						Сч = Сч + 1;	
							
						Если ЗначениеЗаполнено(ВыборкаЗаписи.ФайлКартинки) Тогда
							ДанныеФайлаКартинки = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ВыборкаЗаписи.ФайлКартинки, УникальныйИдентификатор);
							Если ЭтоАдресВременногоХранилища(ДанныеФайлаКартинки.СсылкаНаДвоичныеДанныеФайла) Тогда
								ЭтотОбъект["ФайлКартинкиАдрес__" + ИдентификаторЭлемента] = ДанныеФайлаКартинки.СсылкаНаДвоичныеДанныеФайла;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		КэшИзображенийРеспондента.Очистить();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ВладелецЭкспозиции", ВладелецЭкспозиции);
		
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ИзображенияСторонПанелейРеспондентовСрезПоследних.Стенд,
			|	ИзображенияСторонПанелейРеспондентовСрезПоследних.Панель,
			|	ИзображенияСторонПанелейРеспондентовСрезПоследних.Сторона,
			|	ИзображенияСторонПанелейРеспондентовСрезПоследних.ФайлКартинки
			|ИЗ
			|	РегистрСведений.вогИзображенияСторонПанелейРеспондентов.СрезПоследних(, Респондент = &ВладелецЭкспозиции) КАК ИзображенияСторонПанелейРеспондентовСрезПоследних";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = КэшИзображенийРеспондента.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);	
			
			Если ЗначениеЗаполнено(НоваяСтрока.ФайлКартинки) Тогда
				ДанныеФайлаКартинки = ПрисоединенныеФайлы.ПолучитьДанныеФайла(НоваяСтрока.ФайлКартинки, УникальныйИдентификатор);
				Если ЭтоАдресВременногоХранилища(ДанныеФайлаКартинки.СсылкаНаДвоичныеДанныеФайла) Тогда
					НоваяСтрока.ФайлКартинкиАдрес = ДанныеФайлаКартинки.СсылкаНаДвоичныеДанныеФайла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	МенеджерВременныхТаблиц.Закрыть();
	Элементы.Страницы.ТекущаяСтраница = Элементы["Страница" + РежимОтображения];
	
КонецПроцедуры // ИнициализироватьДанныеЭкспозциции()

#Область Настройки
	
&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьНастройкиПоУмолчанию()

	Настройки = Новый Структура;
	Настройки.Вставить("РежимОтображения"	, "Дерево");
	Настройки.Вставить("ОтображатьКоллекции", Ложь);
	
	Возврат Настройки;

КонецФункции // ПолучитьНастройкиПоУмолчанию()

&НаСервере
Процедура СохранитьНастройки()
	CRM_ХранилищеНастроек.Сохранить(ЭтотОбъект.ИмяФормы, "Настройки", Настройки);	
КонецПроцедуры // СохранитьНастройки()

#КонецОбласти

#Область ОписаниеЭлементов
	
&НаСервере
Процедура ВыполнитьОбработкуДанныхФормы(Ключ)
	
	МассивСтрок 			  = Новый Массив;
	МассивУдаляемыхРеквизитов = Новый Массив;
	СтрокиОписания = ТаблицаОписания.НайтиСтроки(
		Новый Структура("Ключ", Ключ));
	
	Для каждого СтрокаОписания Из СтрокиОписания Цикл
		Элемент = Элементы.Найти(СтрокаОписания.ИмяЭлемента);		
		Если Элемент <> Неопределено Тогда
			Элементы.Удалить(Элемент);				
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаОписания.ПутьКДанным) Тогда
			МассивУдаляемыхРеквизитов.Добавить(СтрокаОписания.ПутьКДанным);	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаОписания.ИмяКоманды) Тогда
			Команда = Команды.Найти(СтрокаОписания.ИмяКоманды);
			Если Команда <> Неопределено Тогда
				Команды.Удалить(Команда);
			
			КонецЕсли;
		
		КонецЕсли;
		
		МассивСтрок.Добавить(СтрокаОписания);
		
	КонецЦикла;
	
	//Удалим реквизиты
	Если МассивУдаляемыхРеквизитов.Количество() > 0 Тогда
		ИзменитьРеквизиты(,МассивУдаляемыхРеквизитов);	
	КонецЕсли;
	
	СтрокиОписания = ТаблицаОписания.НайтиСтроки(
		Новый Структура("Ключ", Ключ));
	Для каждого СтрокаОписания Из СтрокиОписания Цикл
		ТаблицаОписания.Удалить(СтрокаОписания);	
	КонецЦикла;

КонецПроцедуры // ВыполнитьОбработкуДанныхФормы()

&НаСервере
Функция ДобавитьОписание(ИмяЭлемента, 
						   ПутьКДанным = "", 
						   ИмяКоманды = "", 
						   Ссылка = Неопределено, 
						   Ключ = "")

	НоваяСтрока = ТаблицаОписания.Добавить();	
	НоваяСтрока.ИмяЭлемента 			  = ИмяЭлемента;
	НоваяСтрока.ПутьКДанным				  = ПутьКДанным;
	НоваяСтрока.ИмяКоманды  			  = ИмяКоманды;
	НоваяСтрока.Ссылка      			  = Ссылка;
	НоваяСтрока.Ключ	    			  = Ключ;
	
	Возврат НоваяСтрока;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция НайтиСтрокуОписания(Форма, ИмяЭлемента)

	Строки = Форма.ТаблицаОписания.НайтиСтроки(Новый Структура("ИмяЭлемента", ИмяЭлемента));	
	Если Строки.Количество() > 0 Тогда
		Возврат Строки[0]
	Иначе	
		Возврат Неопределено;	
	КонецЕсли;
	
КонецФункции // НайтиСтрокуОписания()

&НаКлиентеНаСервереБезКонтекста
Функция НайтиСтрокуКэшаРеспондента(Форма, СтруктураПоиска)

	Строки = Форма.КэшИзображенийРеспондента.НайтиСтроки(СтруктураПоиска);	
	Если Строки.Количество() > 0 Тогда
		Возврат Строки[0]
	Иначе	
		Возврат Неопределено;	
	КонецЕсли;
	
КонецФункции // НайтиСтрокуКэшаРеспондента()

&НаСервере
Функция СоздатьНайтиОбычнуюГруппу(ИмяГруппы,
						   		Родитель = Неопределено,
						   		Группировка = Неопределено,
						   		Отображение = Неопределено, 
						   		РастягиватьПоГоризонтали = Неопределено,
						   		РастягиватьПоВертикали = Неопределено,
						   		ЗаголовокГруппы = "")
						   	
	Группа = Элементы.Найти(ИмяГруппы);
	Если Группа = Неопределено Тогда
		Группа   		   		  		= Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), ?(Родитель = Неопределено, ЭтаФорма, Родитель));	
		Группа.Вид		   		  		= ВидГруппыФормы.ОбычнаяГруппа;	
		Группа.Группировка 		  		= ?(Группировка = Неопределено, ГруппировкаПодчиненныхЭлементовФормы.Вертикальная, Группировка);
		Группа.Отображение 		   		= ?(Отображение = Неопределено, ОтображениеОбычнойГруппы.Нет, Отображение);
		Группа.ОтображатьЗаголовок 		= ЗначениеЗаполнено(ЗаголовокГруппы);	
		Группа.Заголовок 				= ЗаголовокГруппы;
		Группа.РастягиватьПоГоризонтали = РастягиватьПоГоризонтали;
		Группа.РастягиватьПоВертикали   = РастягиватьПоВертикали;
		
	КонецЕсли;
	
	Возврат Группа;	
	
КонецФункции // СоздатьНайтиГруппу()

&НаСервереБезКонтекста
Функция ИдентификаторЭлемента(Ссылка)

	Возврат СтрЗаменить(Ссылка.УникальныйИдентификатор(), "-", "_");	
	
КонецФункции // ИдентификаторЭлемента()

&НаКлиенте
Процедура РазвернутьСтрокиДерева(ЭлементДерево, ИмяРеквизитаФормы, Развернуть = Истина)
	СтрокиДерева = ЭтотОбъект[ИмяРеквизитаФормы].ПолучитьЭлементы();
	Для Каждого Строка Из СтрокиДерева Цикл
		Если Развернуть Тогда
			ЭлементДерево.Развернуть(Строка.ПолучитьИдентификатор(), Истина);
		Иначе
			ЭлементДерево.Свернуть(Строка.ПолучитьИдентификатор());
		КонецЕсли;
		
	КонецЦикла;
				
КонецПроцедуры

#КонецОбласти

#КонецОбласти
