
///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Функция СохранитьНастройку()
	СтруктураНастройки = Новый Структура("Реквизиты,РеквизитыКонтактногоЛица", Новый Массив(), Новый Массив());
	
	бОтмеченРеквизитСегмент = Ложь;
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизиты Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.Реквизиты.Добавить(СтрокаТаблицы.Имя);
			Если СтрокаТаблицы.Имя = "Сегмент" Тогда
				бОтмеченРеквизитСегмент = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыКонтактногоЛица Цикл
		Если СтрокаТаблицы.Пометка Тогда
			СтруктураНастройки.РеквизитыКонтактногоЛица.Добавить(СтрокаТаблицы.Имя);
		КонецЕсли;
	КонецЦикла;
	РегистрыСведений.CRM_НастройкаВерсионированияРеквизитовПартнеров.СохранитьНастройку(СтруктураНастройки);
	Если бОтмеченРеквизитСегмент Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	СУММА(Подзапрос.КоличествоВИстории) КАК КоличествоВИстории,
		|	СУММА(Подзапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ ПЕРВЫЕ 1
		|		1 КАК КоличествоВИстории,
		|		0 КАК Количество
		|	ИЗ
		|		РегистрСведений.CRM_ИсторияРеквизитовПартнеров
		|	ГДЕ
		|		ПутьКДанным = ""Сегмент""
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		0,
		|		1
		|	ИЗ
		|		РегистрСведений.ПартнерыСегмента) КАК Подзапрос
		|");
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			КоличествоВИстории = ?(ТипЗнч(Выборка.КоличествоВИстории) = Тип("Число"), Выборка.КоличествоВИстории, 0);
			Количество = ?(ТипЗнч(Выборка.Количество) = Тип("Число"), Выборка.Количество, 0);
			Если КоличествоВИстории = 0 И Количество > 0 Тогда
				ЕстьЗаписиПоСегментам = Ложь;
			Иначе
				ЕстьЗаписиПоСегментам = Истина;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ЕстьЗаписиПоСегментам = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	СУММА(Подзапрос.КоличествоВИстории) КАК КоличествоВИстории,
	|	СУММА(Подзапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		1 КАК КоличествоВИстории,
	|		0 КАК Количество
	|	ИЗ
	|		РегистрСведений.CRM_ИсторияРеквизитовПартнеров
	|	ГДЕ
	|		ПутьКДанным = ""ABCКласс"" ИЛИ ПутьКДанным = ""XYZКласс""
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ ПЕРВЫЕ 1
	|		0,
	|		1
	|	ИЗ
	|		РегистрСведений.ABCXYZКлассификацияКлиентов) КАК Подзапрос
	|");
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		КоличествоВИстории = ?(ТипЗнч(Выборка.КоличествоВИстории) = Тип("Число"), Выборка.КоличествоВИстории, 0);
		Количество = ?(ТипЗнч(Выборка.Количество) = Тип("Число"), Выборка.Количество, 0);
		Если КоличествоВИстории = 0 И Количество > 0 Тогда
			ЕстьЗаписиПоABCXYZ = Ложь;
		Иначе
			ЕстьЗаписиПоABCXYZ = Истина;
		КонецЕсли;
	КонецЕсли;
	Модифицированность = Ложь;
	
	Возврат (Не ЕстьЗаписиПоСегментам Или Не ЕстьЗаписиПоABCXYZ);
КонецФункции

&НаСервере
Процедура ВыполнитьПервоначальноеЗаполнениеНаСервере()
	Если Не ЕстьЗаписиПоСегментам Тогда
		Набор = РегистрыСведений.ПартнерыСегмента.СоздатьНаборЗаписей();
		Набор.Прочитать();
		Набор.Записать();
	КонецЕсли;
	Если Не ЕстьЗаписиПоABCXYZ Тогда
		Набор = РегистрыСведений.ABCXYZКлассификацияКлиентов.СоздатьНаборЗаписей();
		Набор.Прочитать();
		Набор.Записать();
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура КомандаОК(Команда)
	ВопросПервоначальноеЗаполнение = СохранитьНастройку();
	Если ВопросПервоначальноеЗаполнение Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("КомандаОКЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'В истории реквизитов клиентов не обнаружено записей по существующим
							|ABC/XYZ классам или сегментам клиентов.
							|Выполнить первоначальное заполнение истории?'"), РежимДиалогаВопрос.ДаНет);
		//
		Возврат;
	КонецЕсли;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОКЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыполнитьПервоначальноеЗаполнениеНаСервере();
		Состояние(НСтр("ru = 'Первоначальное заполнение выполнено'"));
	КонецЕсли;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитыПометкаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьФлажкиТаблицаРеквизиты(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизиты Цикл
		СтрокаТаблицы.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьФлажкиТаблицаРеквизитыКонтактногоЛица(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыКонтактногоЛица Цикл
		СтрокаТаблицы.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьФлажкиТаблицаРеквизиты(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизиты Цикл
		СтрокаТаблицы.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьФлажкиТаблицаРеквизитыКонтактногоЛица(Команда)
	Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыКонтактногоЛица Цикл
		СтрокаТаблицы.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	МассивПропуститьРеквизиты = Новый Массив();
	МассивПропуститьРеквизиты.Добавить("Код");
	МассивПропуститьРеквизиты.Добавить("Предопределенный");
	МассивПропуститьРеквизиты.Добавить("Ссылка");
	МассивПропуститьРеквизиты.Добавить("ЭтоГруппа");
	МассивПропуститьРеквизиты.Добавить("ПометкаУдаления");
	МассивПропуститьРеквизиты.Добавить("Владелец");
	МассивПропуститьРеквизиты.Добавить("ИмяПредопределенныхДанных");
	
	// Реквизиты справочника Партнеры.
	Для Каждого Реквизит Из Метаданные.Справочники.Партнеры.СтандартныеРеквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда Продолжить; КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизиты.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = ?(ЗначениеЗаполнено(Реквизит.Синоним), Реквизит.Синоним, Реквизит.Имя);
	КонецЦикла;
	Для Каждого Реквизит Из Метаданные.Справочники.Партнеры.Реквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда Продолжить; КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизиты.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = Реквизит.Синоним;
	КонецЦикла;
	
	// Реквизиты справочника КонтактныеЛицаПартнеров.
	Для Каждого Реквизит Из Метаданные.Справочники.КонтактныеЛицаПартнеров.СтандартныеРеквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда Продолжить; КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизитыКонтактногоЛица.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = ?(ЗначениеЗаполнено(Реквизит.Синоним), Реквизит.Синоним, Реквизит.Имя);
	КонецЦикла;
	Для Каждого Реквизит Из Метаданные.Справочники.КонтактныеЛицаПартнеров.Реквизиты Цикл
		Если МассивПропуститьРеквизиты.Найти(Реквизит.Имя) <> Неопределено Тогда Продолжить; КонецЕсли;
		
		НоваяСтрока = ТаблицаРеквизитыКонтактногоЛица.Добавить();
		НоваяСтрока.Имя = Реквизит.Имя;
		НоваяСтрока.Представление = Реквизит.Синоним;
	КонецЦикла;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения") Тогда
		// Дополнительные реквизиты справочника Партнеры.
		МассивРеквизитов = Новый Массив();
		Для Каждого СтрокаТаблицы Из Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Общие.ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрокаТаблицы Из Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Компании_CRM.ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого СтрокаТаблицы Из Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_ЧастныеЛица_CRM.ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого ДопРеквизитСсылка Из МассивРеквизитов Цикл
			НоваяСтрока = ТаблицаРеквизиты.Добавить();
			НоваяСтрока.Имя = ДопРеквизитСсылка;
			НоваяСтрока.Представление = Строка(ДопРеквизитСсылка);
		КонецЦикла;
		
		// Дополнительные реквизиты справочника КонтактныеЛицаПартнеров.
		МассивРеквизитов = Новый Массив();
		Для Каждого СтрокаТаблицы Из Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_КонтактныеЛицаПартнеров.ДополнительныеРеквизиты Цикл
			Если МассивРеквизитов.Найти(СтрокаТаблицы.Свойство) = Неопределено Тогда
				МассивРеквизитов.Добавить(СтрокаТаблицы.Свойство);
			КонецЕсли;
		КонецЦикла;
		Для Каждого ДопРеквизитСсылка Из МассивРеквизитов Цикл
			НоваяСтрока = ТаблицаРеквизитыКонтактногоЛица.Добавить();
			НоваяСтрока.Имя = ДопРеквизитСсылка;
			НоваяСтрока.Представление = Строка(ДопРеквизитСсылка);
		КонецЦикла;
		
	КонецЕсли;
	
	// Контактная информация справочника Партнеры.
	МассивРодителей = Новый Массив();
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникПартнеры);
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыЧастноеЛицо);
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.CRM_СправочникПартнерыКомпания);
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации
	|ГДЕ
	|	Родитель В (&МассивРодителей)
	|	И НЕ ПометкаУдаления
	|	И НЕ ЭтоГруппа
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|");
	Запрос.УстановитьПараметр("МассивРодителей", МассивРодителей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаРеквизиты.Добавить();
		НоваяСтрока.Имя = Выборка.Ссылка;
		НоваяСтрока.Представление = Строка(Выборка.Ссылка);
	КонецЦикла;
	
	// Контактная информация справочника КонтактныеЛицаПартнеров.
	МассивРодителей = Новый Массив();
	МассивРодителей.Добавить(Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров);
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации
	|ГДЕ
	|	Родитель В (&МассивРодителей)
	|	И НЕ ПометкаУдаления
	|	И НЕ ЭтоГруппа
	|УПОРЯДОЧИТЬ ПО
	|	Наименование
	|");
	Запрос.УстановитьПараметр("МассивРодителей", МассивРодителей);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаРеквизитыКонтактногоЛица.Добавить();
		НоваяСтрока.Имя = Выборка.Ссылка;
		НоваяСтрока.Представление = Строка(Выборка.Ссылка);
	КонецЦикла;
	НоваяСтрока = ТаблицаРеквизиты.Добавить();
	НоваяСтрока.Имя = "Сегмент";
	НоваяСтрока.Представление = НСтр("ru = 'Сегмент клиента'");
	
	бОтмеченРеквизитСегмент = Ложь;
	СтруктураНастройки = РегистрыСведений.CRM_НастройкаВерсионированияРеквизитовПартнеров.ПолучитьНастройку();
	Если ТипЗнч(СтруктураНастройки) = Тип("Структура") И ТипЗнч(СтруктураНастройки.СтруктураНастройки) = Тип("Структура") Тогда
		Если СтруктураНастройки.СтруктураНастройки.Свойство("Реквизиты") И ТипЗнч(СтруктураНастройки.СтруктураНастройки.Реквизиты) = Тип("Массив") Тогда
			Для Каждого СтрокаТаблицы Из ТаблицаРеквизиты Цикл
				Если СтруктураНастройки.СтруктураНастройки.Реквизиты.Найти(СтрокаТаблицы.Имя) <> Неопределено Тогда
					СтрокаТаблицы.Пометка = Истина;
					Если СтрокаТаблицы.Имя = "Сегмент" Тогда
						бОтмеченРеквизитСегмент = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если СтруктураНастройки.СтруктураНастройки.Свойство("РеквизитыКонтактногоЛица") И ТипЗнч(СтруктураНастройки.СтруктураНастройки.РеквизитыКонтактногоЛица) = Тип("Массив") Тогда
			Для Каждого СтрокаТаблицы Из ТаблицаРеквизитыКонтактногоЛица Цикл
				Если СтруктураНастройки.СтруктураНастройки.РеквизитыКонтактногоЛица.Найти(СтрокаТаблицы.Имя) <> Неопределено Тогда
					СтрокаТаблицы.Пометка = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПередЗакрытием".
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	Если Модифицированность Тогда
		Отказ = Истина;
		ОбратныйВызов = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОбратныйВызов, НСтр("ru = 'Данные были изменены. Сохранить данные?'"), РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;	
КонецПроцедуры // ПередЗакрытием()

&НаКлиенте
// Процедура - обработчик ответа на вопрос перед закрытием формы.
//
// Параметры:
//	Результат				- КодВозвратаДиалога	- Ответ на вопрос.
//	ДополнительныеПараметры	- Структура				- Структура дополнительных параметров.
//
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
    Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьНастройку();
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
    КонецЕсли;
	Модифицированность	= Ложь;
	Закрыть();
КонецПроцедуры // ПередЗакрытиемЗавершение()

#КонецОбласти
