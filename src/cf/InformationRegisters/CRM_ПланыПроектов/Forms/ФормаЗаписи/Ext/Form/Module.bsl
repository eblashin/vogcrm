
///////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервереБезКонтекста
// Функция возвращает значение реквизита, прочитанного из информационной базы по ссылке на объект.
// 
// Параметры:
//  СсылкаНаОбъект	- Ссылка на объект, - элемент справочника, документ, ...
//  ИмяРеквизита	- Строка, например, "Код".
// 
// Возвращаемое значение:
//  Произвольный    - зависит от типа значения прочитанного реквизита.
// 
Функция ПолучитьЗначениеРеквизита(СсылкаНаОбъект, ИмяРеквизита)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаОбъект, ИмяРеквизита);
КонецФункции // ПолучитьЗначениеРеквизита()

&НаСервере
Процедура УправлениеВидимостью()
	
	Если Запись.Проект.CRM_ЭтоПроект Тогда
		Элементы.Проект.Заголовок = НСтр("ru = 'Проект'");
		Элементы.Этап.Видимость = Истина;
	Иначе
		Элементы.Этап.Видимость = Ложь;
		Элементы.Проект.Заголовок = НСтр("ru = 'Процесс'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкорректироватьДатуНачалаДатуКонца(ПриоритетДатыНачала = Истина)
	Если ПриоритетДатыНачала Тогда
		Если Запись.ДатаНачала > Запись.ДатаКонца Тогда
			Запись.ДатаКонца = Запись.ДатаНачала;
		КонецЕсли;
	Иначе
		Если Запись.ДатаКонца < Запись.ДатаНачала Тогда
			Запись.ДатаНачала = Запись.ДатаКонца;
		КонецЕсли;
	КонецЕсли;
	
	Если ПриоритетДатыНачала Тогда
		КоличествоСекундВГоду = КонецГода(Запись.ДатаНачала) - НачалоГода(Запись.ДатаНачала);
	Иначе
		КоличествоСекундВГоду = КонецГода(Запись.ДатаКонца) - НачалоГода(Запись.ДатаКонца);
	КонецЕсли;
	
	Если Запись.ДатаКонца - Запись.ДатаНачала > КоличествоСекундВГоду Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Нельзя указывать период больше 1 года!'"), 5);
		
		Если ПриоритетДатыНачала Тогда
			Запись.ДатаНачала = НачалоГода(Запись.ДатаКонца);
		Иначе
			Запись.ДатаКонца = КонецГода(Запись.ДатаНачала);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьПродолжительность(Форма)
	СекундВДне = 24 * 60 * 60;
	Если НачалоДня(Форма.Запись.ДатаНачала) = НачалоДня(Форма.Запись.ДатаКонца) Тогда
		Форма.Запись.Продолжительность = 1;
	Иначе
		Форма.Запись.Продолжительность = (НачалоДня(Форма.Запись.ДатаКонца) - НачалоДня(Форма.Запись.ДатаНачала)) / СекундВДне + 1;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РассчитатьТрудоемкость()
	ДанныеТрудозатрат = CRM_ОбщегоНазначенияСервер.ПолучитьТрудозатратыЗаПериод(НачалоДня(Запись.ДатаНачала), КонецДня(Запись.ДатаКонца), Запись.Исполнитель);
	
	Запись.Трудоемкость = ДанныеТрудозатрат.ВЧасах * Запись.ПроцентЗагрузки / 100;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборыКонтрольныхТочек(Форма)
	Форма.КонтрольныеТочки.Отбор.Элементы.Очистить();
	
	Если ЗначениеЗаполнено(Форма.Запись.Проект) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Форма.КонтрольныеТочки.Отбор, "Проект", Форма.Запись.Проект, ВидСравненияКомпоновкиДанных.Равно);
		//
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.Запись.Этап) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Форма.КонтрольныеТочки.Отбор, "Этап", Форма.Запись.Этап, ВидСравненияКомпоновкиДанных.Равно);
		//
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.Запись.Подразделение) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Форма.КонтрольныеТочки.Отбор, "Подразделение", Форма.Запись.Подразделение, ВидСравненияКомпоновкиДанных.Равно);
		//
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.Запись.Исполнитель) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Форма.КонтрольныеТочки.Отбор, "ПользователиКТ.Пользователь", Форма.Запись.Исполнитель, ВидСравненияКомпоновкиДанных.Равно);
		//
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.Запись.ДатаНачала) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Форма.КонтрольныеТочки.Отбор, "Дата", НачалоДня(Форма.Запись.ДатаНачала), ВидСравненияКомпоновкиДанных.БольшеИлиРавно);
		//
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.Запись.ДатаКонца) Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Форма.КонтрольныеТочки.Отбор, "ДатаЗакрытия", КонецДня(Форма.Запись.ДатаКонца), ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
		//
	КонецЕсли;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	Запись.Подразделение = ПолучитьЗначениеРеквизита(Запись.Проект, "CRM_Подразделение");
	УстановитьОтборыКонтрольныхТочек(ЭтотОбъект);
	УправлениеВидимостью();
КонецПроцедуры

&НаКлиенте
Процедура ЭтапПриИзменении(Элемент)
	УстановитьОтборыКонтрольныхТочек(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	УстановитьОтборыКонтрольныхТочек(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	УстановитьОтборыКонтрольныхТочек(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	СкорректироватьДатуНачалаДатуКонца(Истина);
	
	РассчитатьПродолжительность(ЭтотОбъект);
	
	РассчитатьТрудоемкость();
	
	УстановитьОтборыКонтрольныхТочек(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ДатаКонцаПриИзменении(Элемент)
	СкорректироватьДатуНачалаДатуКонца(Ложь);
	
	РассчитатьПродолжительность(ЭтотОбъект);
	
	РассчитатьТрудоемкость();
	
	УстановитьОтборыКонтрольныхТочек(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПродолжительностьПриИзменении(Элемент)
	Если Запись.Продолжительность <= 0 Тогда
		Запись.Продолжительность = 1;
	КонецЕсли;
	
	СекундВДне = 24 * 60 * 60;
	Запись.ДатаНачала = НачалоДня(Запись.ДатаНачала);
	Запись.ДатаКонца = Запись.ДатаНачала + СекундВДне * (Запись.Продолжительность - 1);
	
	СкорректироватьДатуНачалаДатуКонца(Ложь);
	
	РассчитатьПродолжительность(ЭтотОбъект);
	
	РассчитатьТрудоемкость();
КонецПроцедуры

&НаКлиенте
Процедура ПроцентЗагрузкиПриИзменении(Элемент)
	Если Запись.ПроцентЗагрузки > 100 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПроцентЗагрузкиПриИзмененииОтвет", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Занятость ресурса > 100%! Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе	
		Если Запись.ПроцентЗагрузки <= 0 Тогда
			Запись.ПроцентЗагрузки = 100;
		КонецЕсли;
		
		РассчитатьТрудоемкость();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроцентЗагрузкиПриИзмененииОтвет(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Запись.ПроцентЗагрузки = 100;
	КонецЕсли;
	
	РассчитатьТрудоемкость();
КонецПроцедуры

&НаКлиенте
Процедура КонтрольныеТочкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Не Копирование Тогда
		Отказ = Истина;
		
		ЗначенияЗаполнения = Новый Структура();
		
		Если ЗначениеЗаполнено(Запись.Проект) Тогда
			ЗначенияЗаполнения.Вставить("Проект", Запись.Проект);
		КонецЕсли;
		Если ЗначениеЗаполнено(Запись.Этап) Тогда
			ЗначенияЗаполнения.Вставить("Этап", Запись.Этап);
		КонецЕсли;
		Если ЗначениеЗаполнено(Запись.Подразделение) Тогда
			ЗначенияЗаполнения.Вставить("Подразделение", Запись.Подразделение);
		КонецЕсли;
		Если ЗначениеЗаполнено(Запись.Исполнитель) Тогда
			ЗначенияЗаполнения.Вставить("Исполнитель", Запись.Исполнитель);
		КонецЕсли;
		
		ЗначенияЗаполнения.Вставить("НаВесьДень", Истина);
		
		СтруктураРабочихВремен = CRM_ОбщегоНазначенияСервер.ПолучитьСтруктуруРабочихВременПользователя();
		
		ЗначенияЗаполнения.Вставить("Дата", НачалоДня(Запись.ДатаКонца) + (СтруктураРабочихВремен.ВремяНачалаРабочегоДня - Дата("00010101")));
		ЗначенияЗаполнения.Вставить("ДатаЗакрытия", НачалоДня(Запись.ДатаКонца) + (СтруктураРабочихВремен.ВремяОкончанияРабочегоДня - Дата("00010101")));
		
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
		Форма = ПолучитьФорму("Документ.CRM_КонтрольнаяТочкаПроекта.ФормаОбъекта", ПараметрыФормы, Элементы.КонтрольныеТочки);
		Если Форма <> Неопределено Тогда
			Форма.Открыть();
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтоНовый = Не РеквизитФормыВЗначение("Запись").Выбран();
	
	Если ЗначениеЗаполнено(Запись.Проект) И НЕ ЗначениеЗаполнено(Запись.Подразделение) Тогда
		Запись.Подразделение = Запись.Проект.CRM_Подразделение;
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаНачалаАРМ") Тогда
		ДатаНачалаАРМ = Параметры.ДатаНачалаАРМ;
	КонецЕсли;
	Если Параметры.Свойство("ДатаКонцаАРМ") Тогда
		ДатаКонцаАРМ = Параметры.ДатаКонцаАРМ;
	КонецЕсли;
	
	ТекДата = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	Если Не ЗначениеЗаполнено(ДатаНачалаАРМ) Тогда
		Если ЗначениеЗаполнено(Запись.ДатаНачала) Тогда
			ДатаНачалаАРМ = НачалоГода(Запись.ДатаНачала);
		Иначе
			ДатаНачалаАРМ = НачалоГода(ТекДата);
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДатаКонцаАРМ) Тогда
		Если ЗначениеЗаполнено(Запись.ДатаКонца) Тогда
			ДатаКонцаАРМ = КонецГода(Запись.ДатаКонца);
		Иначе
			ДатаКонцаАРМ = Макс(КонецГода(ДатаНачалаАРМ));
		КонецЕсли;
	КонецЕсли;
	ДатаНачалаАРМ = НачалоДня(ДатаНачалаАРМ);
	ДатаКонцаАРМ = КонецДня(ДатаКонцаАРМ);
	
	Если ЭтоНовый Тогда
		Запись.ПроцентЗагрузки = 100;
		
		РассчитатьПродолжительность(ЭтотОбъект);
		РассчитатьТрудоемкость();
	КонецЕсли;
	
	Если ЭтоНовый Тогда
		СоздатьКонтрольнуюТочкуНачала		= Истина;
		СоздатьКонтрольнуюТочкуОкончания	= Истина;
	КонецЕсли;
	
	УстановитьОтборыКонтрольныхТочек(ЭтотОбъект);
	
	УправлениеВидимостью();
КонецПроцедуры

&НаКлиенте
// Процедура - обработчик события формы "ПередЗакрытием".
//
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда Возврат; КонецЕсли;
	Если ФлагОтказОтЗакрытияФормы Тогда
		ФлагОтказОтЗакрытияФормы = Ложь;
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	Если ЗначениеЗаполнено(Запись.Проект) И Запись.Проект.CRM_ЭтоПроект Тогда
		ПроверяемыеРеквизиты.Добавить("Этап");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не Запись.Проект.CRM_ЭтоПроект Тогда
		Запись.Этап = Неопределено;
	КонецЕсли;
	ТекущийОбъект.ДатаИзменения = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	ТекущийОбъект.АвторИзменения = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	// Создание контрольных точек - если установлены соответствующие флажки.
	ФлагОтказОтЗакрытияФормы = Ложь;
	
	СтруктураРабочихВремен = Неопределено;
	Если СоздатьКонтрольнуюТочкуНачала Или СоздатьКонтрольнуюТочкуОкончания Тогда
		СтруктураРабочихВремен = CRM_ОбщегоНазначенияСервер.ПолучитьСтруктуруРабочихВременПользователя();
	КонецЕсли;
	
	бОшибкаПриСозданииКонтрольнойТочкиНачала = Ложь;
	Если СоздатьКонтрольнуюТочкуНачала Тогда
		ДатаНачалаКТ	= НачалоДня(Запись.ДатаНачала) + (СтруктураРабочихВремен.ВремяНачалаРабочегоДня - Дата("00010101"));
		ДатаОкончанияКТ = НачалоДня(Запись.ДатаНачала) + (СтруктураРабочихВремен.ВремяОкончанияРабочегоДня - Дата("00010101"));
		
		КТНачала = РегистрыСведений.CRM_ПланыПроектов.СоздатьКонтрольнуюТочку(Запись.Проект, Запись.Этап, Запись.Исполнитель, Запись.Подразделение, ДатаНачалаКТ, ДатаОкончанияКТ, Истина, Истина);
		
		Если ТипЗнч(КТНачала) = Тип("Строка") Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ошибка при создании контрольной точки начала:'") + " """ + КТНачала + """",, "СоздатьКонтрольнуюТочкуНачала");
			
			бОшибкаПриСозданииКонтрольнойТочкиНачала = Истина;
			ФлагОтказОтЗакрытияФормы = Истина;
		Иначе
			СоздатьКонтрольнуюТочкуНачала		= Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если СоздатьКонтрольнуюТочкуОкончания И Не бОшибкаПриСозданииКонтрольнойТочкиНачала Тогда
		ДатаНачалаКТ	= НачалоДня(Запись.ДатаКонца) + (СтруктураРабочихВремен.ВремяНачалаРабочегоДня - Дата("00010101"));
		ДатаОкончанияКТ = НачалоДня(Запись.ДатаКонца) + (СтруктураРабочихВремен.ВремяОкончанияРабочегоДня - Дата("00010101"));
		
		КТОкончания = РегистрыСведений.CRM_ПланыПроектов.СоздатьКонтрольнуюТочку(Запись.Проект, Запись.Этап, Запись.Исполнитель, Запись.Подразделение, ДатаНачалаКТ, ДатаОкончанияКТ, Истина, Ложь);
		
		Если ТипЗнч(КТОкончания) = Тип("Строка") Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Ошибка при создании контрольной точки окончания:'") + " """ + КТОкончания + """",, "СоздатьКонтрольнуюТочкуОкончания");
			
			ФлагОтказОтЗакрытияФормы = Истина;
		Иначе
			СоздатьКонтрольнуюТочкуОкончания	= Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Элементы.КонтрольныеТочки.Обновить();
	
	Оповестить("ОбновитьПланыПроектов",, ЭтотОбъект);
КонецПроцедуры

#КонецОбласти
