
Процедура ПриЗаписи(Отказ, Замещение)
	
	//УстановитьПривилегированныйРежим(Истина);
	//
	//Если ЭтотОбъект.Количество() = 0 Тогда
	//	Возврат;	
	//КонецЕсли;
	//
	//Если ДополнительныеСвойства.Свойство("ТекущиеЗначения") Тогда
	//	ТекущиеЗначения = ДополнительныеСвойства.ТекущиеЗначения;
	//	НовыеЗначения   = ЭтотОбъект.Выгрузить();
	//	
	//	Запрос = Новый Запрос;
	//	
	//	Запрос.УстановитьПараметр("ТекущиеЗначения", ТекущиеЗначения);
	//	Запрос.УстановитьПараметр("НовыеЗначения"  , НовыеЗначения);
	//	
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	НовыеЗначения.Стенд КАК Стенд,
	//		|	НовыеЗначения.Сторона КАК Сторона,
	//		|	НовыеЗначения.Артикул КАК Артикул
	//		|ПОМЕСТИТЬ втНовыеЗначения
	//		|ИЗ
	//		|	&НовыеЗначения КАК НовыеЗначения
	//		|
	//		|ИНДЕКСИРОВАТЬ ПО
	//		|	Стенд,
	//		|	Сторона
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ТекущиеЗначения.Стенд КАК Стенд,
	//		|	ТекущиеЗначения.Сторона КАК Сторона,
	//		|	ТекущиеЗначения.Артикул КАК Артикул
	//		|ПОМЕСТИТЬ втТекущиеЗначения
	//		|ИЗ
	//		|	&ТекущиеЗначения КАК ТекущиеЗначения
	//		|
	//		|ИНДЕКСИРОВАТЬ ПО
	//		|	Стенд,
	//		|	Сторона
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	втНовыеЗначения.Стенд КАК Стенд,
	//		|	втНовыеЗначения.Сторона КАК Сторона,
	//		|	втНовыеЗначения.Артикул КАК Артикул
	//		|ИЗ
	//		|	втНовыеЗначения КАК втНовыеЗначения
	//		|		ЛЕВОЕ СОЕДИНЕНИЕ втТекущиеЗначения КАК втТекущиеЗначения
	//		|		ПО втНовыеЗначения.Стенд = втТекущиеЗначения.Стенд
	//		|			И втНовыеЗначения.Сторона = втТекущиеЗначения.Сторона
	//		|ГДЕ
	//		|	втНовыеЗначения.Артикул <> втТекущиеЗначения.Артикул";
	//	
	//	РезультатЗапроса = Запрос.Выполнить();
	//	
	//	Период = ТекущаяДата();
	//	Выборка = РезультатЗапроса.Выбрать();
	//	Пока Выборка.Следующий() Цикл
	//		ЗаписьИстории = РегистрыСведений.вогИсторияАртикуловНаСтендах.СоздатьМенеджерЗаписи();
	//		ЗаполнитьЗначенияСвойств(ЗаписьИстории, Выборка);
	//		ЗаписьИстории.Период = Период;
	//		ЗаписьИстории.Записать();
	//	КонецЦикла;
	//	
	//КонецЕсли;
	//
	//УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, Замещение)
	
	//УстановитьПривилегированныйРежим(Истина);
	//
	//ТаблицаНабора = ЭтотОбъект.Выгрузить();
	//Если ТаблицаНабора.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ТаблицаНабора", ТаблицаНабора);
	//Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ТаблицаНабора.Стенд КАК Стенд,
	//	|	ТаблицаНабора.Сторона КАК Сторона,
	//	|	ТаблицаНабора.Артикул КАК Артикул
	//	|ПОМЕСТИТЬ втТаблицаНабора
	//	|ИЗ
	//	|	&ТаблицаНабора КАК ТаблицаНабора
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	вогАртикулыНаСтендахСрезПоследних.Период КАК Период,
	//	|	вогАртикулыНаСтендахСрезПоследних.Стенд КАК Стенд,
	//	|	вогАртикулыНаСтендахСрезПоследних.Сторона КАК Сторона,
	//	|	вогАртикулыНаСтендахСрезПоследних.Артикул КАК Артикул
	//	|ИЗ
	//	|	РегистрСведений.вогАртикулыНаСтендах.СрезПоследних(&ТекущаяДата, ) КАК вогАртикулыНаСтендахСрезПоследних
	//	|ГДЕ
	//	|	(вогАртикулыНаСтендахСрезПоследних.Стенд, вогАртикулыНаСтендахСрезПоследних.Сторона, вогАртикулыНаСтендахСрезПоследних.Артикул) В
	//	|			(ВЫБРАТЬ
	//	|				втТаблицаНабора.Стенд КАК Стенд,
	//	|				втТаблицаНабора.Сторона КАК Сторона,
	//	|				втТаблицаНабора.Артикул КАК Артикул
	//	|			ИЗ
	//	|				втТаблицаНабора КАК втТаблицаНабора)";
	//	
	//РезультатЗапроса = Запрос.Выполнить();
	//ДополнительныеСвойства.Вставить("ТекущиеЗначения", РезультатЗапроса.Выгрузить());
	//			
	//УстановитьПривилегированныйРежим(Ложь);
	
	
	УстановитьПривилегированныйРежим(Истина);
	Для каждого Запись из ЭтотОбъект цикл
		Запись.ИД = Строка(Запись.Стенд.УникальныйИдентификатор()) + строка(Запись.Сторона) + Строка(Запись.Артикул.УникальныйИдентификатор())+Строка(Запись.Позиция);
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры
