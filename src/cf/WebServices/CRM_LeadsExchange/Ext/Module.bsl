//http://localhost/WSTest/ws/LeadsExchange.1cws?wsdl


Функция GetLeadStructure(ServiceID, SourceID)
	Источник = Справочники.CRM_ИсточникиПолученияЛидов.НайтиПоРеквизиту("ИдентификаторИсточника", SourceID); 
	Если Источник.Пустая() Тогда
		Возврат "Настройки источника не найдены";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_ИсточникиПолученияЛидовДополнительныеРеквизиты.Свойство.Наименование КАК Наименование,
	|	CRM_ИсточникиПолученияЛидовДополнительныеРеквизиты.Свойство,
	|	CRM_ИсточникиПолученияЛидовДополнительныеРеквизиты.Обязательно
	|ИЗ
	|	Справочник.CRM_ИсточникиПолученияЛидов.ДополнительныеРеквизиты КАК CRM_ИсточникиПолученияЛидовДополнительныеРеквизиты
	|ГДЕ
	|	CRM_ИсточникиПолученияЛидовДополнительныеРеквизиты.Ссылка.ИдентификаторИсточника = &ИДИсточника";
	Запрос.УстановитьПараметр("ИДИсточника", SourceID);
	ТаблицаРеквизитов = Запрос.Выполнить().Выгрузить();
     
	ТекстВыгрузки = Новый ЗаписьXML;
	ТекстВыгрузки.УстановитьСтроку();
	ТекстВыгрузки.ЗаписатьНачалоЭлемента("LeadStructure");
	ТекстВыгрузки.ЗаписатьНачалоЭлемента("Fields");
	ТекстВыгрузки.ЗаписатьНачалоЭлемента("Field");
	ТекстВыгрузки.ЗаписатьАтрибут("Name", "ID события");
	ТекстВыгрузки.ЗаписатьАтрибут("ID", "IDСобытия");           
	ТекстВыгрузки.ЗаписатьАтрибут("Type", "String");
	ТекстВыгрузки.ЗаписатьАтрибут("Required", XMLСтрока(Ложь));
	ТекстВыгрузки.ЗаписатьКонецЭлемента();
	ТекстВыгрузки.ЗаписатьНачалоЭлемента("Field");
	ТекстВыгрузки.ЗаписатьАтрибут("Name", "Тема");
	ТекстВыгрузки.ЗаписатьАтрибут("ID", "Тема");           
	ТекстВыгрузки.ЗаписатьАтрибут("Type", "String");
	ТекстВыгрузки.ЗаписатьАтрибут("Required", XMLСтрока(Ложь));
	ТекстВыгрузки.ЗаписатьКонецЭлемента();
	ТекстВыгрузки.ЗаписатьНачалоЭлемента("Field");
	ТекстВыгрузки.ЗаписатьАтрибут("Name", "Контакт");
	ТекстВыгрузки.ЗаписатьАтрибут("ID", "Контакт");           
	ТекстВыгрузки.ЗаписатьАтрибут("Type", "String");
	ТекстВыгрузки.ЗаписатьАтрибут("Required", XMLСтрока(Источник.НаименованиеОбязательно));
	ТекстВыгрузки.ЗаписатьКонецЭлемента();
	ТекстВыгрузки.ЗаписатьНачалоЭлемента("Field");
	ТекстВыгрузки.ЗаписатьАтрибут("Name", "Организация");
	ТекстВыгрузки.ЗаписатьАтрибут("ID", "Организация");           
	ТекстВыгрузки.ЗаписатьАтрибут("Type", "String");
	ТекстВыгрузки.ЗаписатьАтрибут("Required", XMLСтрока(Источник.НаименованиеОбязательно));
	ТекстВыгрузки.ЗаписатьКонецЭлемента();
	ТекстВыгрузки.ЗаписатьНачалоЭлемента("Field");
	ТекстВыгрузки.ЗаписатьАтрибут("Name", "Телефон");
	ТекстВыгрузки.ЗаписатьАтрибут("ID", "Телефон");           
	ТекстВыгрузки.ЗаписатьАтрибут("Type", "String");
	ТекстВыгрузки.ЗаписатьАтрибут("Required", XMLСтрока(Источник.ТелефонОбязательно));
	ТекстВыгрузки.ЗаписатьКонецЭлемента();
	ТекстВыгрузки.ЗаписатьНачалоЭлемента("Field");
	ТекстВыгрузки.ЗаписатьАтрибут("Name", "Электронная почта");
	ТекстВыгрузки.ЗаписатьАтрибут("ID", "ЭлектроннаяПочта");           
	ТекстВыгрузки.ЗаписатьАтрибут("Type", "String");
	ТекстВыгрузки.ЗаписатьАтрибут("Required", XMLСтрока(Источник.ПочтаОбязательно));
	ТекстВыгрузки.ЗаписатьКонецЭлемента();
	ТекстВыгрузки.ЗаписатьНачалоЭлемента("Field");
	ТекстВыгрузки.ЗаписатьАтрибут("Name", "UTM метка");
	ТекстВыгрузки.ЗаписатьАтрибут("ID", "UTMМетка");           
	ТекстВыгрузки.ЗаписатьАтрибут("Type", "String");
	ТекстВыгрузки.ЗаписатьАтрибут("Required", XMLСтрока(Ложь));
	ТекстВыгрузки.ЗаписатьКонецЭлемента();
	Для Каждого Строка Из ТаблицаРеквизитов Цикл
		ТекстВыгрузки.ЗаписатьНачалоЭлемента("Field");
		ТекстВыгрузки.ЗаписатьАтрибут("Name", XMLСтрока(Строка.Свойство.Заголовок));
		ТекстВыгрузки.ЗаписатьАтрибут("ID", XMLСтрока(Строка.Свойство.УникальныйИдентификатор()));           
		Если Строка.Свойство.ТипЗначения.СодержитТип(Тип("Строка")) Тогда
			ТекстВыгрузки.ЗаписатьАтрибут("Type", "String");
		ИначеЕсли Строка.Свойство.ТипЗначения.СодержитТип(Тип("Число")) Тогда
			ТекстВыгрузки.ЗаписатьАтрибут("Type", "Integer");
		ИначеЕсли Строка.Свойство.ТипЗначения.СодержитТип(Тип("Дата")) Тогда
			ТекстВыгрузки.ЗаписатьАтрибут("Type", "Date");	
		ИначеЕсли Строка.Свойство.ТипЗначения.СодержитТип(Тип("Булево")) Тогда	
			ТекстВыгрузки.ЗаписатьАтрибут("Type", "Boolean");	
		КонецЕсли;	
		ТекстВыгрузки.ЗаписатьАтрибут("Required", XMLСтрока(Строка.Обязательно));
		ТекстВыгрузки.ЗаписатьКонецЭлемента();
	КонецЦикла;	
	ТекстВыгрузки.ЗаписатьКонецЭлемента();
	ТекстВыгрузки.ЗаписатьКонецЭлемента();
	СтрокаВозврата = ТекстВыгрузки.Закрыть();
	Возврат СтрокаВозврата;
КонецФункции

Функция LoadLead(ServiceID, SourceID, LeadStructure)
	Источник = Справочники.CRM_ИсточникиПолученияЛидов.НайтиПоРеквизиту("ИдентификаторИсточника", SourceID); 
	Если Источник.Пустая() Тогда
		Возврат "Настройки источника не найдены";
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	CRM_ИсточникиПолученияЛидовДополнительныеРеквизиты.Свойство.Наименование КАК Наименование,
	|	CRM_ИсточникиПолученияЛидовДополнительныеРеквизиты.Свойство
	|ИЗ
	|	Справочник.CRM_ИсточникиПолученияЛидов.ДополнительныеРеквизиты КАК CRM_ИсточникиПолученияЛидовДополнительныеРеквизиты
	|ГДЕ
	|	CRM_ИсточникиПолученияЛидовДополнительныеРеквизиты.Ссылка.ИдентификаторИсточника = &ИДИсточника";
	Запрос.УстановитьПараметр("ИДИсточника", SourceID);
	ТаблицаРеквизитов = Запрос.Выполнить().Выгрузить();
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(LeadStructure);
	ПостроительDOM = Новый ПостроительDOM; 
	ДокументDOM = ПостроительDOM.Прочитать(ЧтениеXML);
	КорневойУзел = ДокументDOM.ПервыйДочерний;
	ИДСервиса = "";
	ИДИсточника = "";
	Заявка = Документы.CRM_Заявка.СоздатьДокумент();
	Заявка.Дата = CRM_ОбщегоНазначенияСервер.ПолучитьТекущуюДатуСеанса();
	Заявка.ИсточникПолучения = Источник;
	Заявка.Ответственный = Источник.ОтветственныйМенеджер;
	Заявка.КаналПервичногоИнтереса = Источник.КаналПервичногоИнтереса;
	Заявка.ИсточникПервичногоИнтереса = Источник.ИсточникПервичногоИнтереса;
	Для Каждого ДанныеВыгрузки из КорневойУзел.ДочерниеУзлы Цикл
		Если ДанныеВыгрузки.ИмяУзла = "Fields" Тогда
			Для Каждого Поле из ДанныеВыгрузки.ДочерниеУзлы Цикл
				Если Поле.ИмяУзла = "Field" Тогда
					ИмяРеквизита = "";
					ЗначениеРеквизита = "";
					Для Каждого Атрибут из Поле.Атрибуты Цикл
						Если Атрибут.ИмяУзла = "ID" Тогда
							ИмяРеквизита = Атрибут.ЗначениеУзла;
						ИначеЕсли Атрибут.ИмяУзла = "Type" Тогда	
							ЗначениеРеквизита = Атрибут.ЗначениеУзла;
						КонецЕсли;	
					КонецЦикла;
					Если ИмяРеквизита = "Наименование" Тогда
						Заявка.Наименование = ЗначениеРеквизита;
					ИначеЕсли ИмяРеквизита = "Телефон" Тогда
						Заявка.Телефон = ЗначениеРеквизита;	
					ИначеЕсли ИмяРеквизита = "ЭлектроннаяПочта" Тогда
						Заявка.ЭлектроннаяПочта = ЗначениеРеквизита;
					ИначеЕсли ИмяРеквизита = "IDСобытия" Тогда
						Заявка.ИДСобытия = ЗначениеРеквизита;	
					ИначеЕсли ИмяРеквизита = "UTMМетка" Тогда
						Заявка.UTMМетка = СокрЛП(ЗначениеРеквизита);	
					Иначе	
						Попытка
							ИДРеквизита = Новый УникальныйИдентификатор(ИмяРеквизита);
							Реквизит = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ПолучитьСсылку(ИДРеквизита);
							Строка = Заявка.ДополнительныеРеквизиты.Добавить();
							Строка.Свойство = Реквизит;
							Если Строка.Свойство.ТипЗначения.СодержитТип(Тип("Строка")) Тогда
								Строка.Значение = XMLЗначение(Тип("Строка"), ЗначениеРеквизита);
							ИначеЕсли Строка.Свойство.ТипЗначения.СодержитТип(Тип("Число")) Тогда
								Строка.Значение = XMLЗначение(Тип("Число"), ЗначениеРеквизита);
							ИначеЕсли Строка.Свойство.ТипЗначения.СодержитТип(Тип("Дата")) Тогда
								Строка.Значение = XMLЗначение(Тип("Дата"), ЗначениеРеквизита);
							ИначеЕсли Строка.Свойство.ТипЗначения.СодержитТип(Тип("Булево")) Тогда	
								Строка.Значение = XMLЗначение(Тип("Булево"), ЗначениеРеквизита);
							КонецЕсли;
						Исключение
						КонецПопытки;
					КонецЕсли;
				КонецЕсли;	
				
			КонецЦикла;	
		
		КонецЕсли;	
	КонецЦикла;
	Если Заявка.ИДСобытия <> "" Тогда
		НайденнаяЗаявка = Документы.CRM_Заявка.НайтиПоРеквизиту("ИДСобытия", Заявка.ИДСобытия);
		Если НЕ НайденнаяЗаявка.Пустая() Тогда
			Заявка = Неопределено;
			Возврат Строка(НайденнаяЗаявка.УникальныйИдентификатор());
		КонецЕсли;
	КонецЕсли;	
	Если ЗначениеЗаполнено(Заявка.UTMМетка) Тогда
		Если Заявка.КаналПервичногоИнтереса.ТипЗначения.СодержитТип(Тип("СправочникСсылка.МаркетинговыеМероприятия")) Тогда
			Заявка.ИсточникПервичногоИнтереса = Справочники.МаркетинговыеМероприятия.НайтиПоРеквизиту("CRM_UTMМетка", Заявка.UTMМетка);
		КонецЕсли;	
	КонецЕсли;	
	Заявка.Записать();
	РегистрыСведений.CRM_СостоянияЛидов.ЗаписатьСостояниеЛида(Заявка.Ссылка);
	Возврат Строка(Заявка.Ссылка.УникальныйИдентификатор());
КонецФункции
